<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="data:text/xsl;base64,"?>
<rss version="2.0">
  <channel>
    <title>GitHub C# Daily Trending</title>
    <description>Daily Trending of C# in GitHub</description>
    <pubDate>Sat, 29 Mar 2025 02:23:23 GMT</pubDate>
    <link>http://redreamality.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>microsoft/semantic-kernel</title>
      <link>https://github.com/microsoft/semantic-kernel</link>
      <description>&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python &lt;br&gt; &lt;a href=&quot;https://pypi.org/project/semantic-kernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/semantic-kernel&quot; alt=&quot;Python package&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.NET &lt;br&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.SemanticKernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.SemanticKernel&quot; alt=&quot;Nuget package&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/semantic-kernel&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1063152441819942922?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=d82679&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/overview/&quot;&gt;Semantic Kernel&lt;/a&gt; is an SDK that integrates Large Language Models (LLMs) like &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, and &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt; with conventional programming languages like C#, Python, and Java. Semantic Kernel achieves this by allowing you to define &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/plugins&quot;&gt;plugins&lt;/a&gt; that can be chained together in just a &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/chaining-functions?tabs=Csharp#using-the-runasync-method-to-simplify-your-code&quot;&gt;few lines of code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;What makes Semantic Kernel &lt;em&gt;special&lt;/em&gt;, however, is its ability to &lt;em&gt;automatically&lt;/em&gt; orchestrate plugins with AI. With Semantic Kernel &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/planner&quot;&gt;planners&lt;/a&gt;, you can ask an LLM to generate a plan that achieves a user&#39;s unique goal. Afterwards, Semantic Kernel will execute the plan for the user.&lt;/p&gt; 
&lt;p&gt;It provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;abstractions for AI services (such as chat, text to images, audio to text, etc.) and memory stores&lt;/li&gt; 
 &lt;li&gt;implementations of those abstractions for services from &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;, local models, and more, and for a multitude of vector databases, such as those from &lt;a href=&quot;https://docs.trychroma.com/getting-started&quot;&gt;Chroma&lt;/a&gt;, &lt;a href=&quot;https://qdrant.tech/&quot;&gt;Qdrant&lt;/a&gt;, &lt;a href=&quot;https://milvus.io/&quot;&gt;Milvus&lt;/a&gt;, and &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search&quot;&gt;Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;a common representation for &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/plugins&quot;&gt;plugins&lt;/a&gt;, which can then be orchestrated automatically by AI&lt;/li&gt; 
 &lt;li&gt;the ability to create such plugins from a multitude of sources, including from OpenAPI specifications, prompts, and arbitrary code written in the target language&lt;/li&gt; 
 &lt;li&gt;extensible support for prompt management and rendering, including built-in handling of common formats like Handlebars and Liquid&lt;/li&gt; 
 &lt;li&gt;and a wealth of functionality layered on top of these abstractions, such as filters for responsible AI, dependency injection integration, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Semantic Kernel is utilized by enterprises due to its flexibility, modularity and observability. Backed with security enhancing capabilities like telemetry support, and hooks and filters so you’ll feel confident you’re delivering responsible AI solutions at scale. Semantic Kernel was designed to be future proof, easily connecting your code to the latest AI models evolving with the technology as it advances. When new models are released, you’ll simply swap them out without needing to rewrite your entire codebase.&lt;/p&gt; 
&lt;h4&gt;Please star the repo to show your support for this project!&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/enterprise-ready.png&quot; alt=&quot;Enterprise-ready&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started with Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel SDK is available in C#, Python, and Java. To get started, choose your preferred language below. See the &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/supported-languages&quot;&gt;Feature Matrix&lt;/a&gt; for a breakdown of feature parity between our currently supported languages.&lt;/p&gt; 
&lt;table width=&quot;100%&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://user-images.githubusercontent.com/371009/230673036-fad1e8e6-5d48-49b1-a9c1-6f9834e0d165.png&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/README.md&quot;&gt;Using Semantic Kernel in C#&lt;/a&gt; &amp;nbsp;
     &lt;br&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg?sanitize=true&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/README.md&quot;&gt;Using Semantic Kernel in Python&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; height=&quot;52px&quot; src=&quot;https://upload.wikimedia.org/wikipedia/en/3/30/Java_programming_language_logo.svg?sanitize=true&quot; alt=&quot;Java logo&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/README.md&quot;&gt;Using Semantic Kernel in Java&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The quickest way to get started with the basics is to get an API key from either OpenAI or Azure OpenAI and to run one of the C#, Python, and Java console applications/scripts below.&lt;/p&gt; 
&lt;h3&gt;For C#:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-csharp&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;After installing the SDK, we advise you follow the steps and code detailed to write your first console app. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/dotnetmap.png&quot; alt=&quot;dotnetmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Python:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-python&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;You&#39;ll need to ensure that you toggle to Python in the Choose a programming language table at the top of the page. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/pythonmap.png&quot; alt=&quot;pythonmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Java:&lt;/h3&gt; 
&lt;p&gt;The Java code is in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository. See &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/BUILD.md&quot;&gt;semantic-kernel-java build&lt;/a&gt; for instructions on how to build and run the Java code.&lt;/p&gt; 
&lt;p&gt;Please file Java Semantic Kernel-specific issues in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Learning how to use Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The fastest way to learn how to use Semantic Kernel is with our C# and Python Jupyter notebooks. These notebooks demonstrate how to use Semantic Kernel with code snippets that you can run with a push of a button.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/notebooks/00-getting-started.ipynb&quot;&gt;Getting Started with C# notebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/samples/getting_started/00-getting-started.ipynb&quot;&gt;Getting Started with Python notebook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once you&#39;ve finished the getting started notebooks, you can then check out the main walkthroughs on our Learn site. Each sample comes with a completed C# and Python project that you can run locally.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;📖 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔌 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/detailed-samples&quot;&gt;Detailed Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/kernel&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Finally, refer to our API references for more details on the C# and Python APIs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/microsoft.semantickernel?view=semantic-kernel-dotnet&quot;&gt;C# API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/python/api/semantic-kernel/semantic_kernel?view=semantic-kernel-python&quot;&gt;Python API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Java API reference (coming soon)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Visual Studio Code extension: design semantic functions with ease&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel extension for Visual Studio Code makes it easy to design and test semantic functions. The extension provides an interface for designing semantic functions and allows you to test them with the push of a button with your existing models and data.&lt;/p&gt; 
&lt;h2&gt;Join the community&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions and suggestions to the SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; 
&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; 
&lt;p&gt;To learn more and get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Read the &lt;a href=&quot;https://aka.ms/sk/learn&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Learn how to &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/support/contributing&quot;&gt;contribute&lt;/a&gt; to the project&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/discussions&quot;&gt;GitHub discussions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Attend &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/COMMUNITY.md&quot;&gt;regular office hours and SK community events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the team on our &lt;a href=&quot;https://aka.ms/sk/blog&quot;&gt;blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Wall of Fame&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=microsoft/semantic-kernel&quot; alt=&quot;semantic-kernel contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goatcorp/Dalamud</title>
      <link>https://github.com/goatcorp/Dalamud</link>
      <description>&lt;p&gt;FFXIV plugin framework and API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dalamud &lt;a href=&quot;https://github.com/goatcorp/Dalamud/actions&quot;&gt;&lt;img src=&quot;https://github.com/goatcorp/Dalamud/workflows/Build%20Dalamud/badge.svg?sanitize=true&quot; alt=&quot;Actions Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/3NMcUV5&quot;&gt;&lt;img src=&quot;https://discordapp.com/api/guilds/581875019861328007/widget.png?style=shield&quot; alt=&quot;Discord Shield&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/goatcorp/DalamudAssets/master/UIRes/logo.png&quot; alt=&quot;Dalamud&quot; width=&quot;200&quot;&gt; &lt;/p&gt; 
&lt;p&gt;Dalamud is a plugin development framework for FFXIV that provides access to game data and native interoperability with the game itself to add functionality and quality-of-life.&lt;/p&gt; 
&lt;p&gt;It is meant to be used in conjunction with &lt;a href=&quot;https://github.com/goatcorp/FFXIVQuickLauncher&quot;&gt;XIVLauncher&lt;/a&gt;, which manages and launches Dalamud for you. &lt;strong&gt;It is generally not recommended for end users to try to run Dalamud manually as XIVLauncher manages multiple required dependencies.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hold Up!&lt;/h2&gt; 
&lt;p&gt;If you are just trying to &lt;strong&gt;use&lt;/strong&gt; Dalamud, you don&#39;t need to do anything on this page - please &lt;a href=&quot;https://goatcorp.github.io/&quot;&gt;download XIVLauncher&lt;/a&gt; from its official page and follow the setup instructions.&lt;/p&gt; 
&lt;h2&gt;Building and testing locally&lt;/h2&gt; 
&lt;p&gt;Please check the &lt;a href=&quot;https://dalamud.dev/building&quot;&gt;docs page on building Dalamud&lt;/a&gt; for more information and required dependencies.&lt;/p&gt; 
&lt;h2&gt;Plugin development&lt;/h2&gt; 
&lt;p&gt;Dalamud features a growing API for in-game plugin development with game data and chat access and overlays. Please see our &lt;a href=&quot;https://goatcorp.github.io/faq/development&quot;&gt;Developer FAQ&lt;/a&gt; and the &lt;a href=&quot;https://dalamud.dev&quot;&gt;API documentation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;If you need any support regarding the API or usage of Dalamud, please &lt;a href=&quot;https://discord.gg/3NMcUV5&quot;&gt;join our discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;Thanks to Mino, whose work has made this possible!&lt;/p&gt; 
&lt;h2&gt;Components &amp;amp; Pipeline&lt;/h2&gt; 
&lt;p&gt;These components are used in order to load Dalamud into a target process. Dalamud can be loaded via DLL injection, or by rewriting a process&#39; entrypoint.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Dalamud.Injector.Boot&lt;/em&gt; (C++)&lt;/td&gt; 
   &lt;td&gt;Loads the .NET Core runtime into a process via hostfxr and kicks off Dalamud.Injector&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Dalamud.Injector&lt;/em&gt; (C#)&lt;/td&gt; 
   &lt;td&gt;Performs DLL injection on the target process&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Dalamud.Boot&lt;/em&gt; (C++)&lt;/td&gt; 
   &lt;td&gt;Loads the .NET Core runtime into the active process and kicks off Dalamud, or rewrites a target process&#39; entrypoint to do so&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Dalamud&lt;/em&gt; (C#)&lt;/td&gt; 
   &lt;td&gt;Core API, game bindings, plugin framework&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Dalamud.CorePlugin&lt;/em&gt; (C#)&lt;/td&gt; 
   &lt;td&gt;Testbed plugin that can access Dalamud internals, to prototype new Dalamud features&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;h5&gt;Final Fantasy XIV © 2010-2021 SQUARE ENIX CO., LTD. All Rights Reserved. We are not affiliated with SQUARE ENIX CO., LTD. in any way.&lt;/h5&gt;</description>
    </item>
    
    <item>
      <title>dotnet/eShop</title>
      <link>https://github.com/dotnet/eShop</link>
      <description>&lt;p&gt;A reference .NET application implementing an eCommerce site&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eShop Reference Application - &quot;AdventureWorks&quot;&lt;/h1&gt; 
&lt;p&gt;A reference .NET application implementing an e-commerce website using a services-based architecture using &lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/&quot;&gt;.NET Aspire&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotnet/eShop/main/img/eshop_architecture.png&quot; alt=&quot;eShop Reference Application architecture diagram&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotnet/eShop/main/img/eshop_homepage.png&quot; alt=&quot;eShop homepage screenshot&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;This version of eShop is based on .NET 9.&lt;/p&gt; 
&lt;p&gt;Previous eShop versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/eShop/tree/release/8.0&quot;&gt;.NET 8&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the eShop repository: &lt;a href=&quot;https://github.com/dotnet/eshop&quot;&gt;https://github.com/dotnet/eshop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;Install &amp;amp; start Docker Desktop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Windows with Visual Studio&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://visualstudio.microsoft.com/vs/&quot;&gt;Visual Studio 2022 version 17.10 or newer&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Select the following workloads: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;ASP.NET and web development&lt;/code&gt; workload.&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;.NET Aspire SDK&lt;/code&gt; component in &lt;code&gt;Individual components&lt;/code&gt;.&lt;/li&gt; 
     &lt;li&gt;Optional: &lt;code&gt;.NET Multi-platform App UI development&lt;/code&gt; to run client apps&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the following commands in a Powershell &amp;amp; Terminal running as &lt;code&gt;Administrator&lt;/code&gt; to automatically configure your environment with the required tools to build and run this application. (Note: A restart is required and included in the script below.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;install-Module -Name Microsoft.WinGet.Configuration -AllowPrerelease -AcceptLicense -Force
$env:Path = [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;Machine&quot;) + &quot;;&quot; + [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;User&quot;)
get-WinGetConfiguration -file .\.configurations\vside.dsc.yaml | Invoke-WinGetConfiguration -AcceptConfigurationAgreements
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;From Dev Home go to &lt;code&gt;Machine Configuration -&amp;gt; Clone repositories&lt;/code&gt;. Enter the URL for this repository. In the confirmation screen look for the section &lt;code&gt;Configuration File Detected&lt;/code&gt; and click &lt;code&gt;Run File&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mac, Linux, &amp;amp; Windows without Visual Studio&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the latest &lt;a href=&quot;https://dot.net/download?cid=eshop&quot;&gt;.NET 9 SDK&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the following commands in a Powershell &amp;amp; Terminal running as &lt;code&gt;Administrator&lt;/code&gt; to automatically configuration your environment with the required tools to build and run this application. (Note: A restart is required after running the script below.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Install Visual Studio Code and related extensions&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;install-Module -Name Microsoft.WinGet.Configuration -AllowPrerelease -AcceptLicense  -Force
$env:Path = [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;Machine&quot;) + &quot;;&quot; + [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;User&quot;)
get-WinGetConfiguration -file .\.configurations\vscode.dsc.yaml | Invoke-WinGetConfiguration -AcceptConfigurationAgreements
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: These commands may require &lt;code&gt;sudo&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optional: Install &lt;a href=&quot;https://code.visualstudio.com/docs/csharp/get-started&quot;&gt;Visual Studio Code with C# Dev Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Optional: Install &lt;a href=&quot;https://learn.microsoft.com/dotnet/maui/get-started/installation?tabs=visual-studio-code&quot;&gt;.NET MAUI Workload&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When running on Mac with Apple Silicon (M series processor), Rosetta 2 for grpc-tools.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Running the solution&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Remember to ensure that Docker is started&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;(Windows only) Run the application from Visual Studio:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open the &lt;code&gt;eShop.Web.slnf&lt;/code&gt; file in Visual Studio&lt;/li&gt; 
 &lt;li&gt;Ensure that &lt;code&gt;eShop.AppHost.csproj&lt;/code&gt; is your startup project&lt;/li&gt; 
 &lt;li&gt;Hit Ctrl-F5 to launch Aspire&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or run the application from your terminal:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;dotnet run --project src/eShop.AppHost/eShop.AppHost.csproj
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then look for lines like this in the console output in order to find the URL to open the Aspire dashboard:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Login to the dashboard at: http://localhost:19888/login?t=uniquelogincodeforyou
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may need to install ASP.NET Core HTTPS development certificates first, and then close all browser tabs. Learn more at &lt;a href=&quot;https://aka.ms/aspnet/https-trust-dev-cert&quot;&gt;https://aka.ms/aspnet/https-trust-dev-cert&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Azure Open AI&lt;/h3&gt; 
&lt;p&gt;When using Azure OpenAI, inside &lt;em&gt;eShop.AppHost/appsettings.json&lt;/em&gt;, add the following section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;ConnectionStrings&quot;: {
    &quot;OpenAi&quot;: &quot;Endpoint=xxx;Key=xxx;&quot;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace the values with your own. Then, in the eShop.AppHost &lt;em&gt;Program.cs&lt;/em&gt;, set this value to &lt;strong&gt;true&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;bool useOpenAI = false;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here&#39;s additional guidance on the &lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/azureai/azureai-openai-component?tabs=dotnet-cli&quot;&gt;.NET Aspire OpenAI component&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Use Azure Developer CLI&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;a href=&quot;https://aka.ms/azd&quot;&gt;Azure Developer CLI&lt;/a&gt; to run this project on Azure with only a few commands. Follow the next instructions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the latest or update to the latest &lt;a href=&quot;https://aka.ms/azure-dev/install&quot;&gt;Azure Developer CLI (azd)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Log in &lt;code&gt;azd&lt;/code&gt; (if you haven&#39;t done it before) to your Azure account:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;azd auth login
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Initialize &lt;code&gt;azd&lt;/code&gt; from the root of the repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;azd init
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;During init:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Select &lt;code&gt;Use code in the current directory&lt;/code&gt;. Azd will automatically detect the .NET Aspire project.&lt;/li&gt; 
   &lt;li&gt;Confirm &lt;code&gt;.NET (Aspire)&lt;/code&gt; and continue.&lt;/li&gt; 
   &lt;li&gt;Select which services to expose to the Internet (exposing &lt;code&gt;webapp&lt;/code&gt; is enough to test the sample).&lt;/li&gt; 
   &lt;li&gt;Finalize the initialization by giving a name to your environment.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create Azure resources and deploy the sample by running:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;azd up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The operation takes a few minutes the first time it is ever run for an environment.&lt;/li&gt; 
 &lt;li&gt;At the end of the process, &lt;code&gt;azd&lt;/code&gt; will display the &lt;code&gt;url&lt;/code&gt; for the webapp. Follow that link to test the sample.&lt;/li&gt; 
 &lt;li&gt;You can run &lt;code&gt;azd up&lt;/code&gt; after saving changes to the sample to re-deploy and update the sample.&lt;/li&gt; 
 &lt;li&gt;Report any issues to &lt;a href=&quot;https://github.com/Azure/azure-dev/issues&quot;&gt;azure-dev&lt;/a&gt; repo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/azure/developer/azure-developer-cli/troubleshoot?tabs=Browser&quot;&gt;FAQ and troubleshoot&lt;/a&gt; for azd.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For more information on contributing to this repo, read &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/eShop/main/CONTRIBUTING.md&quot;&gt;the contribution documentation&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/eShop/main/CODE-OF-CONDUCT.md&quot;&gt;the Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sample data&lt;/h3&gt; 
&lt;p&gt;The sample catalog data is defined in &lt;a href=&quot;https://github.com/dotnet/eShop/raw/main/src/Catalog.API/Setup/catalog.json&quot;&gt;catalog.json&lt;/a&gt;. Those product names, descriptions, and brand names are fictional and were generated using &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/chatgpt&quot;&gt;GPT-35-Turbo&lt;/a&gt;, and the corresponding &lt;a href=&quot;https://github.com/dotnet/eShop/tree/main/src/Catalog.API/Pics&quot;&gt;product images&lt;/a&gt; were generated using &lt;a href=&quot;https://openai.com/dall-e-3&quot;&gt;DALL·E 3&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;eShop on Azure&lt;/h2&gt; 
&lt;p&gt;For a version of this app configured for deployment on Azure, please view &lt;a href=&quot;https://github.com/Azure-Samples/eShopOnAzure&quot;&gt;the eShop on Azure&lt;/a&gt; repo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/runtime</title>
      <link>https://github.com/dotnet/runtime</link>
      <description>&lt;p&gt;.NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Runtime&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=129&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/runtime/runtime?branchName=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/labels/help%20wanted&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/runtime/help%20wanted?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=help%20wanted&quot; alt=&quot;Help Wanted&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/labels/good%20first%20issue&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/runtime/good%20first%20issue?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=good%20first%20issue&quot; alt=&quot;Good First Issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/dotnet/runtime&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#what-is-net&quot;&gt;What is .NET?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#how-can-i-contribute&quot;&gt;How can I contribute?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#reporting-security-issues-and-security-bugs&quot;&gt;Reporting security issues and security bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#filing-issues&quot;&gt;Filing issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#useful-links&quot;&gt;Useful Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#net-foundation&quot;&gt;.NET Foundation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repo contains the code to build the .NET runtime, libraries and shared host (&lt;code&gt;dotnet&lt;/code&gt;) installers for all supported platforms, as well as the sources to .NET runtime and libraries.&lt;/p&gt; 
&lt;h2&gt;What is .NET?&lt;/h2&gt; 
&lt;p&gt;Official Starting Page: &lt;a href=&quot;https://dotnet.microsoft.com&quot;&gt;https://dotnet.microsoft.com&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/get-started&quot;&gt;How to use .NET&lt;/a&gt; (with VS, VS Code, command-line CLI) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download&quot;&gt;Install official releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core&quot;&gt;Documentation&lt;/a&gt; (Get Started, Tutorials, Porting from .NET Framework, API reference, ...) 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/deploying&quot;&gt;Deploying apps&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/support.md&quot;&gt;Support&lt;/a&gt; (Releases, OS Versions, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/roadmap.md&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How can I contribute?&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Many people all over the world have helped make this project better.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; explains what kinds of contributions we welcome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/docs/workflow/README.md&quot;&gt;Workflow Instructions&lt;/a&gt; explains how to build and test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/docs/project/dogfooding.md&quot;&gt;Dogfooding .NET&lt;/a&gt; explains how to get nightly builds of the runtime and its libraries to test them in your own projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting security issues and security bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;. You can also find these instructions in this repo&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/SECURITY.md&quot;&gt;Security doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see info about related &lt;a href=&quot;https://www.microsoft.com/msrc/bounty-dot-net-core&quot;&gt;Microsoft .NET Bounty Program&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Filing issues&lt;/h2&gt; 
&lt;p&gt;This repo should contain issues that are tied to the runtime, the class libraries and frameworks, the installation of the &lt;code&gt;dotnet&lt;/code&gt; binary (sometimes known as the &lt;code&gt;muxer&lt;/code&gt;) and the installation of the .NET runtime and libraries.&lt;/p&gt; 
&lt;p&gt;For other issues, please file them to their appropriate sibling repos. We have links to many of them on &lt;a href=&quot;https://github.com/dotnet/runtime/issues/new/choose&quot;&gt;our new issue page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://source.dot.net&quot;&gt;.NET source index&lt;/a&gt; / &lt;a href=&quot;https://referencesource.microsoft.com&quot;&gt;.NET Framework source index&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/api&quot;&gt;API Reference docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apisof.net&quot;&gt;.NET API Catalog&lt;/a&gt; (incl. APIs from daily builds and API usage info)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/dotnet-api-docs/wiki&quot;&gt;API docs writing guidelines&lt;/a&gt; - useful when writing /// comments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;.NET Discord Server&lt;/a&gt; - a place to discuss the development of .NET and its ecosystem&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;.NET Runtime is a &lt;a href=&quot;https://www.dotnetfoundation.org/projects&quot;&gt;.NET Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/dotnet&quot;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;- links to 100s of .NET projects, from Microsoft and the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/aspnet/core&quot;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&quot;https://contributor-covenant.org&quot;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&quot;https://www.dotnetfoundation.org/code-of-conduct&quot;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;General .NET OSS discussions: &lt;a href=&quot;https://github.com/dotnet-foundation/Home/discussions&quot;&gt;.NET Foundation Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;.NET (including the runtime repo) is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/LICENSE.TXT&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FastEndpoints/FastEndpoints</title>
      <link>https://github.com/FastEndpoints/FastEndpoints</link>
      <description>&lt;p&gt;A light-weight REST API development framework for ASP.NET 6 and newer.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/dj-nitehawk/FastEndpoints/raw/master/README.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dj-nitehawk/FastEndpoints?color=blue&amp;amp;label=license&amp;amp;logo=Github&amp;amp;style=flat-square&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/FastEndpoints&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/FastEndpoints?label=version&amp;amp;logo=NuGet&amp;amp;style=flat-square&quot; alt=&quot;nuget&quot;&gt;&lt;/a&gt; 
 &lt;!--[![tests](https://img.shields.io/azure-devops/tests/RyanGunner/FastEndpoints/7?color=blue&amp;label=tests&amp;logo=Azure%20DevOps&amp;style=flat-square)](https://dev.azure.com/RyanGunner/FastEndpoints/_build/latest?definitionId=7)--&gt; &lt;a href=&quot;https://www.nuget.org/packages/FastEndpoints&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/FastEndpoints?color=blue&amp;amp;label=downloads&amp;amp;logo=NuGet&amp;amp;style=flat-square&quot; alt=&quot;nuget&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/ARGPxTukpr&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/933662816458645504?color=blue&amp;amp;label=discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square&quot; alt=&quot;discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gurubase.io/g/fastendpoints&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/ask%20the%20ai%20guru-006BFF?color=blue&amp;amp;label=gurubase&amp;amp;style=flat-square&quot; alt=&quot;gurubase&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;em&gt;ASP.NET Minimal APIs Made Easy...&lt;/em&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;FastEndpoints&lt;/strong&gt; is a developer friendly alternative to Minimal APIs &amp;amp; MVC&lt;/h2&gt; 
&lt;p&gt;It nudges you towards the &lt;strong&gt;&lt;a href=&quot;https://deviq.com/design-patterns/repr-design-pattern&quot;&gt;REPR Design Pattern (Request-Endpoint-Response)&lt;/a&gt;&lt;/strong&gt; for convenient &amp;amp; maintainable endpoint creation with virtually no boilerplate.&lt;/p&gt; 
&lt;p&gt;Performance is on par with Minimal APIs and does noticeably better than MVC Controllers in synthetic &lt;a href=&quot;https://fast-endpoints.com/benchmarks&quot;&gt;benchmarks&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation: &lt;a href=&quot;https://fast-endpoints.com&quot;&gt;https://fast-endpoints.com&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please visit the official website for detailed documentation.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Meet Our Sponsors:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://veefriends.com/&quot;&gt;VeeFriends&lt;/a&gt; - VeeFriends is an innovative entertainment company that uses its unique art, compelling storytelling, and collectibles to enhance its intellectual property.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/FastEndpoints/FastEndpoints/main/#&quot;&gt;EKBY&#39;S&lt;/a&gt; - EKBY&#39;S provides digital sales &amp;amp; marketing solutions to the Food &amp;amp; Beverage industry.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/FastEndpoints/FastEndpoints/main/#&quot;&gt;Pique Events&lt;/a&gt; - Pique Events allows couples to search, compare and book their All Inclusive Wedding Package in one place.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/FastEndpoints/FastEndpoints/main/#&quot;&gt;Hungry Minds&lt;/a&gt; - Hungry Minds is an online platform for learning and sharing knowledge with an intricately woven community of like minded people.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Kyome22/RunCat_for_windows</title>
      <link>https://github.com/Kyome22/RunCat_for_windows</link>
      <description>&lt;p&gt;A cute running cat animation on your windows taskbar.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RunCat_for_windows&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;A cute running cat animation on your windows taskbar.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Kyome22/RunCat_for_windows/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/Kyome22/RunCat_for_windows&quot; alt=&quot;Github issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Kyome22/RunCat_for_windows/network/members&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/Kyome22/RunCat_for_windows&quot; alt=&quot;Github forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Kyome22/RunCat_for_windows/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/Kyome22/RunCat_for_windows&quot; alt=&quot;Github stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Kyome22/RunCat_for_windows/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/languages/top/Kyome22/RunCat_for_windows&quot; alt=&quot;Top language&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/Kyome22/RunCat_for_windows&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Kyome22/RunCat_for_windows/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/Kyome22/RunCat_for_windows&quot; alt=&quot;Github license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Tags&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;C#&lt;/code&gt; &lt;code&gt;.NET 6.0&lt;/code&gt; &lt;code&gt;Visual Studio&lt;/code&gt; &lt;code&gt;RunCat&lt;/code&gt;&lt;/p&gt; 
&lt;h1&gt;Demo&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Kyome22/RunCat_for_windows/main/RunCat/resources/runcat_demo.gif&quot; alt=&quot;Demo&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You only have to run the RunCat.exe.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Access to the &quot;Releases&quot; page and download the RunCat.exe.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or install via &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop&quot;&gt;Scoop&lt;/a&gt; (x64 version): &lt;code&gt;scoop bucket add extras&lt;/code&gt;, &lt;code&gt;scoop install runcat&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;a href=&quot;https://github.com/Kyome22/RunCat_for_windows/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=Kyome22/RunCat_for_windows&quot;&gt; &lt;/a&gt; 
&lt;!-- Please do not delete the below comment. --&gt; 
&lt;!-- CREATED_BY_LEADYOU_README_GENERATOR --&gt;</description>
    </item>
    
    <item>
      <title>b-editor/beutl</title>
      <link>https://github.com/b-editor/beutl</link>
      <description>&lt;p&gt;Cross-platform video editing (compositing) software.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🎬 Beutl&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; / &lt;a href=&quot;https://raw.githubusercontent.com/b-editor/beutl/main/README.ja.md&quot;&gt;Japanese&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/issues/b-editor/beutl&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/b-editor/beutl&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/b-editor/beutl&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/b-editor/beutl&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/b-editor/beutl/total&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/b-editor/beutl&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/b-editor/beutl&quot; alt=&quot;&quot;&gt; &lt;a href=&quot;https://github.com/b-editor/beutl/actions/workflows/daily-build.yml&quot;&gt;&lt;img src=&quot;https://github.com/b-editor/beutl/actions/workflows/daily-build.yml/badge.svg?sanitize=true&quot; alt=&quot;Daily build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/Bm3pnVc928&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/868076100511760385.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Beutl (pronounced /bjútəl/) is a cross-platform video editing (compositing) software.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/b-editor/beutl/tree/old/develop&quot;&gt;Source code of the old version (BEditor)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/b-editor/beutl/main/assets/screenshots/screenshot-light-dark.png&quot; alt=&quot;&quot;&gt; &lt;em&gt;The image is from a development version.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;📖 Features&lt;/h2&gt; 
&lt;h3&gt;💻 Cross-Platform&lt;/h3&gt; 
&lt;p&gt;Beutl uses the latest .NET, enabling it to run on various operating systems. It supports Windows, Linux, and macOS.&lt;/p&gt; 
&lt;h3&gt;⏳ Keyframes&lt;/h3&gt; 
&lt;p&gt;Using keyframes, you can create basic animations such as fade-ins and slide-ins, as well as animate various objects.&lt;/p&gt; 
&lt;h3&gt;🔌 Extensions&lt;/h3&gt; 
&lt;p&gt;Create a Beutl account to acquire extensions or publish your own developed extensions. Extensions can add effects, objects, codecs, UI, and more.&lt;/p&gt; 
&lt;h3&gt;🧰 Rich Effects&lt;/h3&gt; 
&lt;p&gt;From basic effects like color filters, blurs, shadows, and LUTs, to minor effects like outlines, inner shadows, and long shadows, Beutl offers a wide range of effects. These can be further expanded through extensions.&lt;/p&gt; 
&lt;h2&gt;📥 Installation&lt;/h2&gt; 
&lt;p&gt;Refer to the &lt;a href=&quot;https://docs.beutl.beditor.net/get-started/install&quot;&gt;documentation&lt;/a&gt; here.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/b-editor/beutl/raw/main/LICENSE&quot;&gt;GNU GENERAL PUBLIC LICENSE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Patrons&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/user/creators?u=89848438&quot;&gt;darthaunty1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calloc134&quot;&gt;calloc134&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BonyChops&quot;&gt;Bony_Chops&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/user/creators?u=62872137&quot;&gt;Hayashi Tomonari&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>WireMock-Net/WireMock.Net</title>
      <link>https://github.com/WireMock-Net/WireMock.Net</link>
      <description>&lt;p&gt;WireMock.Net is a flexible product for stubbing and mocking web HTTP responses using advanced request matching and response templating. Based on the functionality from http://WireMock.org, but extended with more functionality.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WireMock.Net&lt;/h1&gt; 
&lt;p&gt;A C# .NET version based on &lt;a href=&quot;https://github.com/alexvictoor/mock4net&quot;&gt;mock4net&lt;/a&gt; which mimics the functionality from the JAVA based &lt;a href=&quot;http://WireMock.org&quot;&gt;WireMock&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more info, see also this WIKI page: &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/What-Is-WireMock.Net&quot;&gt;What is WireMock.Net&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⭐&lt;/span&gt; Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;HTTP response stubbing, matchable on URL/Path, headers, cookies and body content patterns&lt;/li&gt; 
 &lt;li&gt;Library can be used in unit tests and integration tests&lt;/li&gt; 
 &lt;li&gt;Runs as a standalone process, as windows service, as Azure/IIS or as docker&lt;/li&gt; 
 &lt;li&gt;Configurable via a fluent C# .NET API, JSON files and JSON over HTTP&lt;/li&gt; 
 &lt;li&gt;Record/playback of stubs (proxying)&lt;/li&gt; 
 &lt;li&gt;Per-request conditional proxying&lt;/li&gt; 
 &lt;li&gt;Stateful behaviour simulation&lt;/li&gt; 
 &lt;li&gt;Response templating / transformation using Handlebars and extensions&lt;/li&gt; 
 &lt;li&gt;Can be used locally or in CI/CD scenarios&lt;/li&gt; 
 &lt;li&gt;Can be used for Aspire Distributed Application testing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;📝&lt;/span&gt; Blogs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mstack.nl/blog/20230201-wiremock.net-tocode&quot;&gt;mstack.nl : Generate C# Code from Mapping(s)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mstack.nl/blogs/wiremock-net-chaos-engineering-with-fault-injections&quot;&gt;mstack.nl : Chaos Engineering with Fault Injections&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mstack.nl/blogs/wiremock-net-grpc&quot;&gt;mstack.nl : gRPC / ProtoBuf Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mstack.nl/blogs/wiremock-net-aspire-component/&quot;&gt;mstack.nl : Build and test your own .NET Aspire component&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; Project Info&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;&lt;strong&gt;Project&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;Chat&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://slack.wiremock.org/&quot;&gt;&lt;img src=&quot;https://badgen.net/badge/icon/slack?icon=slack&amp;amp;label&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/wiremock_dotnet/Lobby&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/wiremock_dotnet/Lobby.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;Issues&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/WireMock-Net/WireMock.Net.svg?sanitize=true&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;&lt;strong&gt;Quality&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;Build Azure&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://stef.visualstudio.com/WireMock.Net/_build/latest?definitionId=7&quot;&gt;&lt;img src=&quot;https://stef.visualstudio.com/WireMock.Net/_apis/build/status/WireMock.Net&quot; alt=&quot;Build Status Azure&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;Quality&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://sonarcloud.io/project/issues?id=WireMock-Net_WireMock.Net&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=WireMock-Net_WireMock.Net&amp;amp;metric=alert_status&quot; alt=&quot;Sonar Quality Gate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/wiremock-net/wiremock.net&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/wiremock-net/wiremock.net/badge&quot; alt=&quot;CodeFactor&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;Sonar Bugs&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://sonarcloud.io/project/issues?id=WireMock-Net_WireMock.Net&amp;amp;resolved=false&amp;amp;types=BUG&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=WireMock-Net_WireMock.Net&amp;amp;metric=bugs&quot; alt=&quot;Sonar Bugs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/project/issues?id=WireMock-Net_WireMock.Net&amp;amp;resolved=false&amp;amp;types=CODE_SMELL&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=WireMock-Net_WireMock.Net&amp;amp;metric=code_smells&quot; alt=&quot;Sonar Code Smells&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;Coverage&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://sonarcloud.io/component_measures?id=WireMock-Net_WireMock.Net&amp;amp;metric=coverage&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=WireMock-Net_WireMock.Net&amp;amp;metric=coverage&quot; alt=&quot;Sonar Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/WireMock-Net/WireMock.Net&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/WireMock-Net/WireMock.Net/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;TIOBE&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ticsdemo.tiobe.com/tiobeweb/DEMO/TqiDashboard.html#axes=Project(WireMock.Net),Sub()&amp;amp;metric=tqi&quot;&gt;TIOBE Quality Indicator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;span&gt;📦&lt;/span&gt; NuGet packages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Official&lt;/th&gt; 
   &lt;th&gt;Preview &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/MyGet-preview-versions&quot;&gt;&lt;span&gt;ℹ&lt;/span&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net&quot; alt=&quot;NuGet Badge WireMock.Net&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.StandAlone&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.StandAlone&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.StandAlone&quot; alt=&quot;NuGet Badge WireMock.Net&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.StandAlone&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.StandAlone?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.StandAlone&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.Testcontainers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.Testcontainers&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.Testcontainers&quot; alt=&quot;NuGet Badge WireMock.Net.Testcontainers&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.Testcontainers&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.Testcontainers?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.Testcontainers&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.Aspire&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.Aspire&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.Aspire&quot; alt=&quot;NuGet Badge WireMock.Net.Aspire&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.Aspire&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.Aspire?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.Aspire&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.AspNetCore.Middleware&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.AspNetCore.Middleware&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.AspNetCore.Middleware&quot; alt=&quot;NuGet Badge WireMock.Net.AspNetCore.Middleware&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.AspNetCore.Middleware&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.AspNetCore.Middleware?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.AspNetCore.Middleware&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.FluentAssertions&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.FluentAssertions&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.FluentAssertions&quot; alt=&quot;NuGet Badge WireMock.Net.FluentAssertions&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.FluentAssertions&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.FluentAssertions?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.FluentAssertions&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.xUnit&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.xUnit&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.xUnit&quot; alt=&quot;NuGet Badge WireMock.Net.xUnit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.xUnit&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.xUnit?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.xUnit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.TUnit&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.TUnit&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.TUnit&quot; alt=&quot;NuGet Badge WireMock.Net.TUnit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.TUnit&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.TUnit?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.TUnit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.Matchers.CSharpCode&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.Matchers.CSharpCode&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.Matchers.CSharpCode&quot; alt=&quot;NuGet Badge WireMock.Net.Matchers.CSharpCode&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.Matchers.CSharpCode&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.Matchers.CSharpCode?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.Matchers.CSharpCode&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.OpenApiParser&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.OpenApiParser&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.OpenApiParser&quot; alt=&quot;NuGet Badge WireMock.Net.OpenApiParser&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.OpenApiParser&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.OpenApiParser?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.OpenApiParser&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Net.RestClient&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Net.RestClient&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Net.RestClient&quot; alt=&quot;NuGet Badge WireMock.Net.RestClient&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Net.RestClient&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Net.RestClient?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Net.RestClient&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;WireMock.Org.RestClient&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/WireMock.Org.RestClient&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WireMock.Org.RestClient&quot; alt=&quot;NuGet Badge WireMock.Org.RestClient&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.myget.org/feed/wiremock-net/package/nuget/WireMock.Org.RestClient&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/wiremock-net/vpre/WireMock.Org.RestClient?includePreReleases=true&amp;amp;label=MyGet&quot; alt=&quot;MyGet Badge WireMock.Org.RestClient&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span&gt;❗&lt;/span&gt; Breaking changes&lt;/h2&gt; 
&lt;h3&gt;1.7.0&lt;/h3&gt; 
&lt;p&gt;A breaking change is introduced which is related to System.Linq.Dynamic.Core DynamicLinq (&lt;a href=&quot;https://github.com/zzzprojects/System.Linq.Dynamic.Core/issues/867&quot;&gt;CVE&lt;/a&gt;).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;LinqMatcher&lt;/code&gt; is not allowed.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://www.nuget.org/packages/Handlebars.Net.Helpers.DynamicLinq&quot;&gt;Handlebars.Net.Helpers.DynamicLinq&lt;/a&gt; package is not included anymore.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span&gt;📝&lt;/span&gt; Development&lt;/h2&gt; 
&lt;p&gt;For the supported frameworks and build information, see &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/Development-Information&quot;&gt;this&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⭐&lt;/span&gt; Stubbing&lt;/h2&gt; 
&lt;p&gt;A core feature of WireMock.Net is the ability to return predefined HTTP responses for requests matching criteria. See &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/Stubbing&quot;&gt;Wiki : Stubbing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⭐&lt;/span&gt; Request Matching&lt;/h2&gt; 
&lt;p&gt;WireMock.Net support advanced request-matching logic, see &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/Request-Matching&quot;&gt;Wiki : Request Matching&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⭐&lt;/span&gt; Response Templating&lt;/h2&gt; 
&lt;p&gt;The response which is returned WireMock.Net can be changed using templating. This is described here &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/Response-Templating&quot;&gt;Wiki : Response Templating&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⭐&lt;/span&gt; Admin API Reference&lt;/h2&gt; 
&lt;p&gt;The WireMock admin API provides functionality to define the mappings via a http interface see &lt;a href=&quot;https://github.com/StefH/WireMock.Net/wiki/Admin-API-Reference&quot;&gt;Wiki : Admin API Reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⭐&lt;/span&gt; Using&lt;/h2&gt; 
&lt;p&gt;WireMock.Net can be used in several ways:&lt;/p&gt; 
&lt;h3&gt;UnitTesting&lt;/h3&gt; 
&lt;p&gt;You can use your favorite test framework and use WireMock within your tests, see &lt;a href=&quot;https://github.com/StefH/WireMock.Net/wiki/Using-WireMock-in-UnitTests&quot;&gt;Wiki : UnitTesting&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Unit/Integration Testing using Testcontainers.DotNet&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/Using-WireMock.Net.Testcontainers&quot;&gt;Wiki : WireMock.Net.Testcontainers&lt;/a&gt; on how to build a WireMock.Net Docker container which can be used in Unit/Integration testing.&lt;/p&gt; 
&lt;h3&gt;Unit/Integration Testing using an an Aspire Distributed Application&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/Using-WireMock.Net.Aspire&quot;&gt;Wiki : WireMock.Net.Aspire&lt;/a&gt; on how to use WireMock.Net as an Aspire Hosted application to do Unit/Integration testing.&lt;/p&gt; 
&lt;h3&gt;As a dotnet tool&lt;/h3&gt; 
&lt;p&gt;It&#39;s simple to install WireMock.Net as (global) dotnet tool, see &lt;a href=&quot;https://github.com/StefH/WireMock.Net/wiki/WireMock-as-dotnet-tool&quot;&gt;Wiki : dotnet tool&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;As standalone process / console application&lt;/h3&gt; 
&lt;p&gt;This is quite straight forward to launch a mock server within a console application, see &lt;a href=&quot;https://github.com/StefH/WireMock.Net/wiki/WireMock-as-a-standalone-process&quot;&gt;Wiki : Standalone Process&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;As a Windows Service&lt;/h3&gt; 
&lt;p&gt;You can also run WireMock.Net as a Windows Service, follow this &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/WireMock-as-a-Windows-Service&quot;&gt;WireMock-as-a-Windows-Service&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;As a Web Job in Azure or application in IIS&lt;/h3&gt; 
&lt;p&gt;See this link &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/WireMock-as-a-(Azure)-Web-App&quot;&gt;WireMock-as-a-(Azure)-Web-App&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;In a docker container&lt;/h3&gt; 
&lt;p&gt;There is also a Linux and Windows-Nano container available at &lt;a href=&quot;https://hub.docker.com/r/sheyenrath&quot;&gt;hub.docker.com&lt;/a&gt;. For more details see also &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net-docker&quot;&gt;Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;HTTPS / SSL&lt;/h4&gt; 
&lt;p&gt;More details on using HTTPS (SSL) can be found here &lt;a href=&quot;https://github.com/WireMock-Net/WireMock.Net/wiki/Using-HTTPS-(SSL)&quot;&gt;Wiki : HTTPS&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/efcore</title>
      <link>https://github.com/dotnet/efcore</link>
      <description>&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Repository&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build?definitionId=17&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/build/dnceng-public/public/17/main&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build?definitionId=17&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/tests/dnceng-public/public/17/main&quot; alt=&quot;test results&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository is home to the following &lt;a href=&quot;https://dotnetfoundation.org/&quot;&gt;.NET Foundation&lt;/a&gt; projects. These projects are maintained by &lt;a href=&quot;https://github.com/microsoft&quot;&gt;Microsoft&lt;/a&gt; and licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/LICENSE.txt&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/#entity-framework-core&quot;&gt;Entity Framework Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/#microsoftdatasqlite&quot;&gt;Microsoft.Data.Sqlite&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img alt=&quot;EF&quot; src=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/logo/ef-logo.png&quot; width=&quot;32&quot;&gt; Entity Framework Core&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Microsoft.EntityFrameworkCore&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.EntityFrameworkCore&quot; alt=&quot;preview version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Microsoft.EntityFrameworkCore&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations. EF Core works with SQL Server, Azure SQL Database, SQLite, Azure Cosmos DB, MariaDB, MySQL, PostgreSQL, and other databases through a provider plugin API.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;EF Core is available on &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;NuGet&lt;/a&gt;. Install the provider package corresponding to your target database. See the &lt;a href=&quot;https://docs.microsoft.com/ef/core/providers/&quot;&gt;list of providers&lt;/a&gt; in the docs for additional databases.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet add package Microsoft.EntityFrameworkCore.Cosmos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&quot;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; 
&lt;h3&gt;Daily builds&lt;/h3&gt; 
&lt;p&gt;We recommend using the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&quot;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on EF Core. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;p&gt;The following code demonstrates basic usage of EF Core. For a full tutorial configuring the &lt;code&gt;DbContext&lt;/code&gt;, defining the model, and creating the database, see &lt;a href=&quot;https://docs.microsoft.com/ef/core/get-started/&quot;&gt;getting started&lt;/a&gt; in the docs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;using var db = new BloggingContext();

// Inserting data into the database
db.Add(new Blog { Url = &quot;http://blogs.msdn.com/adonet&quot; });
db.SaveChanges();

// Querying
var blog = db.Blogs
    .OrderBy(b =&amp;gt; b.BlogId)
    .First();

// Updating
blog.Url = &quot;https://devblogs.microsoft.com/dotnet&quot;;
blog.Posts.Add(
    new Post
    {
        Title = &quot;Hello World&quot;,
        Content = &quot;I wrote an app using EF Core!&quot;
    });
db.SaveChanges();

// Deleting
db.Remove(blog);
db.SaveChanges();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;Most people use EF Core by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&quot;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&quot;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Getting support&lt;/h3&gt; 
&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&quot;https://stackoverflow.com/questions/tagged/entity-framework-core*?tab=Votes&quot;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&quot;https://github.com/dotnet/efcore/issues/new/choose&quot;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&quot;&gt;getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft.Data.Sqlite&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Microsoft.Data.Sqlite&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.Data.Sqlite&quot; alt=&quot;preview version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Microsoft.Data.Sqlite.Core&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Microsoft.Data.Sqlite is a lightweight ADO.NET provider for SQLite. The EF Core provider for SQLite is built on top of this library. However, it can also be used independently or with other data access libraries.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;The latest stable version is available on &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;dotnet add package Microsoft.Data.Sqlite
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&quot;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; 
&lt;h3&gt;Daily builds&lt;/h3&gt; 
&lt;p&gt;We recommend using the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&quot;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on Microsoft.Data.Sqlite. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;p&gt;This library implements the common &lt;a href=&quot;https://docs.microsoft.com/dotnet/framework/data/adonet/&quot;&gt;ADO.NET&lt;/a&gt; abstractions for connections, commands, data readers, and so on. For more information, see &lt;a href=&quot;https://docs.microsoft.com/dotnet/standard/data/sqlite/&quot;&gt;Microsoft.Data.Sqlite&lt;/a&gt; on Microsoft Docs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;using var connection = new SqliteConnection(&quot;Data Source=Blogs.db&quot;);
connection.Open();

using var command = connection.CreateCommand();
command.CommandText = &quot;SELECT Url FROM Blogs&quot;;

using var reader = command.ExecuteReader();
while (reader.Read())
{
    var url = reader.GetString(0);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;Most people use Microsoft.Data.Sqlite by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&quot;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&quot;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Getting support&lt;/h3&gt; 
&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&quot;https://stackoverflow.com/questions/tagged/microsoft.data.sqlite&quot;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&quot;https://github.com/dotnet/efcore/issues/new/choose&quot;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&quot;&gt;getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;See also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/what-is-new/roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/efcore/issues/23884&quot;&gt;Weekly status updates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/what-is-new/release-planning&quot;&gt;Release planning process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/providers/writing-a-provider&quot;&gt;How to write an EF Core provider&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/security.md&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CODE_OF_CONDUCT.md&quot;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>dexyfex/CodeWalker</title>
      <link>https://github.com/dexyfex/CodeWalker</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;CodeWalker by dexyfex&lt;/h1&gt; This program is for viewing the contents of GTAV RPF archives. 
&lt;/div&gt; 
&lt;h2&gt;Requirements:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;PC version of GTA:V;&lt;/li&gt; 
 &lt;li&gt;4GB RAM (8+ recommended);&lt;/li&gt; 
 &lt;li&gt;Windows 7 and above, x64 processor;&lt;/li&gt; 
 &lt;li&gt;.NET framework 4.5 or newer from &lt;a href=&quot;https://www.microsoft.com/net/download/thank-you/net471&quot;&gt;Microsoft&lt;/a&gt;;&lt;/li&gt; 
 &lt;li&gt;DirectX 11 and Shader Model 4.0 capable graphics.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;App Usage:&lt;/h1&gt; 
&lt;p&gt;On first startup, the app will prompt to browse for the GTA:V game folder. If you have the Steam version installed in the default location &lt;code&gt;(C:\Program Files (x86)\Steam\SteamApps\common\Grand Theft Auto V)&lt;/code&gt;, then this step will be skipped automatically.&lt;/p&gt; 
&lt;p&gt;The World View will load by default. It will take a while to load. Use the WASD keys to move the camera. Hold shift to move faster. Drag the left mouse button to rotate the view. Use the mouse wheel to zoom in/out, and change the base movement speed. (Zoom in = slower motion) Xbox controller input is also supported. The Toolbox can be shown by clicking the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; button in the top right-hand corner of the screen. &lt;code&gt;T&lt;/code&gt; opens the main toolbar.&lt;/p&gt; 
&lt;p&gt;First-person mode can be activated with the P key, or by pressing the Start button on the XBox controller. While in first-person mode, the left mouse button (or right trigger) will fire an egg.&lt;/p&gt; 
&lt;p&gt;Entities can be selected (with the right mouse button) by enabling the option on the Selection tab in the toolbox. The details of the selected entity, its archetype, and its drawable can be explored in the relevant sub-tabs. (This option can also be activated with the arrow button on the toolbar).&lt;/p&gt; 
&lt;p&gt;When an entity is selected, &lt;code&gt;E&lt;/code&gt; will switch to edit mode (or alternatively, edit mode can be activated by switching the Widget mode to anything other than Default). When in edit mode, &lt;code&gt;Q&lt;/code&gt; will exit edit mode, &lt;code&gt;W&lt;/code&gt; toggles the position widget, E toggles rotation, and R toggles scale. Also when in edit mode, movement is still WSAD, but only while you&#39;re holding the left mouse button down, and not interacting with the widget. &lt;code&gt;Ctrl-Z&lt;/code&gt; and &lt;code&gt;Ctrl-Y&lt;/code&gt; will Undo and Redo entity transformation (position/rotation/scale) actions.&lt;/p&gt; 
&lt;p&gt;The Project Window allows a CodeWalker project to be created (&lt;code&gt;.cwproj&lt;/code&gt;), and files added to it. Editing entities while the Project Window is open will add the entity&#39;s &lt;code&gt;.ymap&lt;/code&gt; to the current project. &lt;code&gt;Ymap&lt;/code&gt; files can then be saved to disk, for use in a map mod. New &lt;code&gt;ymap&lt;/code&gt; files can also be created, and entities can be added and removed. Also supported for editing are &lt;code&gt;.ynd&lt;/code&gt; files (traffic paths), trains &lt;code&gt;.dat files&lt;/code&gt; (train tracks), and scenarios (&lt;code&gt;.ymt&lt;/code&gt;). (A full tutorial on making map mods is out of the scope of this readme.)&lt;/p&gt; 
&lt;p&gt;A full explanation of all the tools in this application is still on the to-do list! The user is currently left to explore the options at their own peril. Note some options may cause CodeWalker to crash, or otherwise stop working properly. Restart the program if this happens! Also note that this program is a constant work in progress, so bugs and crashes are to be expected. Some parts of the world do not yet render correctly, but expect updates in the future to fix these issues.&lt;/p&gt; 
&lt;h1&gt;Menu Mode:&lt;/h1&gt; 
&lt;p&gt;The app can also be started with a main menu instead of loading the world view. This can be useful for situations where the world view is not needed, and the world loading can be avoided. To activate the menu mode, run CodeWalker with the &#39;menu&#39; command line argument, e.g: CodeWalker.exe menu.&lt;/p&gt; 
&lt;h1&gt;Explorer Mode:&lt;/h1&gt; 
&lt;p&gt;The app can be started with the &lt;code&gt;&#39;explorer&#39;&lt;/code&gt; command line argument. This displays an interface much like OpenIV, with a Windows-Explorer style interface for browsing the game&#39;s .rpf archives. Double-click on files to open them. Viewers for most file types are available, but hex view will be shown as a fallback. To activate the explorer mode, run the command: CodeWalker.exe explorer. Alternatively, run the CodeWalker Explorer batch file in the program&#39;s directory.&lt;/p&gt; 
&lt;h1&gt;Main Toolbar:&lt;/h1&gt; 
&lt;p&gt;The main toolbar is used to access most of the editing features in CodeWalker. Shortcuts for new, open and create files are provided. The selection mode can be changed with the &quot;pointer&quot; button. Move, rotate and scale buttons provide access to the different editing widget modes. Other shortcuts on the toolbar include buttons to open the Selection Info window, and the Project window. See the tooltips on the toolbar items for hints.&lt;/p&gt; 
&lt;h1&gt;Project Window:&lt;/h1&gt; 
&lt;p&gt;The project window is the starting point for editing files in CodeWalker. Project files can be created, and files can be added to them. It is recommended to create and save a project file before adding files to be edited and saved. The tree view displays the files in the current project, and their contents.&lt;/p&gt; 
&lt;h1&gt;YMAP Editing:&lt;/h1&gt; 
&lt;p&gt;New &lt;code&gt;YMAP&lt;/code&gt; files can be created via the project window, and existing &lt;code&gt;YMAP&lt;/code&gt; files can be edited. To edit an existing single player &lt;code&gt;YMAP&lt;/code&gt;, first change codewalker DLC level to &lt;code&gt;patchday2ng&lt;/code&gt;, and enable DLC. Open the toolbar, and enable Entity selection mode. Enable the Move widget with the toolbar Move button. Open the project window with the toolbar button. Changes made while the project window is open are automatically added to the project. Select an entity to edit by right clicking when the entity is moused over, and its bounding box shown in white. Move, rotate and/or scale the selected entity with the widget. When the first change is made, the entity&#39;s &lt;code&gt;YMAP&lt;/code&gt; will be added to the current project. If no project is open, a new one will be created. The edited &lt;code&gt;YMAP&lt;/code&gt; file can be saved to the drive using the File menu in the project window. After saving the file, it needs to be added into the mods folder. Using OpenIV, find the existing &lt;code&gt;YMAP&lt;/code&gt; file using the search function (note: the correct path for the edited &lt;code&gt;YMAP&lt;/code&gt; can be found in the selection info window in CodeWalker, when an entity is selected, look for &lt;code&gt;YMap&lt;/code&gt;&amp;gt;&lt;code&gt;RpfFileEntry&lt;/code&gt; in the selection info property grid). Replace the edited &lt;code&gt;YMAP&lt;/code&gt; into a copy of the correct archive in the /mods folder. Newly created YMAPs can be added to DLC archives in the same manner.&lt;/p&gt; 
&lt;h1&gt;Train Tracks Editing:&lt;/h1&gt; 
&lt;p&gt;[TODO - write this!]&lt;/p&gt; 
&lt;h1&gt;(YND) Traffic Paths Editing:&lt;/h1&gt; 
&lt;p&gt;[TODO - write this!]&lt;/p&gt; 
&lt;h1&gt;(YMT) Scenario Regions Editing:&lt;/h1&gt; 
&lt;p&gt;[TODO: write this!] &lt;br&gt; See &lt;a href=&quot;https://youtu.be/U0nrVL44Fb4&quot;&gt;https://youtu.be/U0nrVL44Fb4&lt;/a&gt; - Scenario Editing Tutorial&lt;/p&gt; 
&lt;h1&gt;Regarding game files: (FYI)&lt;/h1&gt; 
&lt;p&gt;The PC GTAV world is stored in the &lt;code&gt;RPF&lt;/code&gt; archives in many different file formats. As expected, some formats are used for storing rendering-related content, for example the textures and 3d models, while other formats are used for storing game and engine related data.&lt;/p&gt; 
&lt;p&gt;The main formats when it comes to rendering GTAV content are: &lt;code&gt;.ytd&lt;/code&gt; - Texture Dictionary - Stores texture data in a DirectX format convenient for loading to the GPU. &lt;code&gt;.ydr&lt;/code&gt; - Drawable - Contains a single asset&#39;s 3d model. Can contain a Texture Dictionary, and up to 4 LODs of a model. &lt;code&gt;.ydd&lt;/code&gt; - Drawable Dictionary - A collection of Drawables packed into a single file. &lt;code&gt;.yft&lt;/code&gt; - Fragment - Contains a Drawable, along with other metadata for example physics data.&lt;/p&gt; 
&lt;p&gt;The content Assets are pieced together to create the GTAV world via MapTypes (Archetypes) and MapData (Entity placements). At a high level, Archetypes define objects that are placeable, and Entities define where those objects are placed to make up the world. The collision mesh data for the world is stored in Bounds files.&lt;/p&gt; 
&lt;h3&gt;The formats for these are:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;.ytyp&lt;/code&gt; - MapTypes - Contains a group of MapTypes (Archetypes), each defining an object that could be placed. &lt;code&gt;.ymap&lt;/code&gt; - MapData - Contains placements of Archetypes, each defining an Entity in the world. &lt;code&gt;.ybn&lt;/code&gt; - Bounds - Contains collision mesh / bounding data for pieces of the world.&lt;/p&gt; 
&lt;p&gt;The EntityData contained within the MapData (&lt;code&gt;.ymap&lt;/code&gt;) files forms the LOD hierarchy. This hierarchy is arranged such that the lowest detail version of the world, at the root of the hierarchy, is represented by a small number of large models that can all be rendered simultaneously to draw the world at a great distance. The next branch in the hierarchy splits each of these large models into a group of smaller objects, each represented in a higher detail than the previous level. This pattern is continued for up to 6 levels of detail. When rendering the world, the correct level of detail for each branch in the hierarchy needs to be determined, as obviously the highest detail objects cannot all be rendered at once due to limited computing resources.&lt;/p&gt; 
&lt;p&gt;In CodeWalker, This is done by recursing the LOD tree from the roots, checking how far away from the camera the node&#39;s Entity is. If it is below a certain value, then the current level is used, otherwise it moves to the next higher level, depending on the LOD distance setting. (In the Ymap view, the highest LOD, ORPHANHD, is not rendered by default. The ORPHANHD entities can often be manually rendered by specifying the correct &lt;code&gt;strm ymap&lt;/code&gt; file for the area in question in the &lt;code&gt;ymap&lt;/code&gt; text box. The &lt;code&gt;strm ymap&lt;/code&gt; name can often be found by mouse-selecting a high detail object in the area and noting what &lt;code&gt;ymap&lt;/code&gt; the entity is contained in, in the selection details panel.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>umbraco/Umbraco-CMS</title>
      <link>https://github.com/umbraco/Umbraco-CMS</link>
      <description>&lt;p&gt;Umbraco is a free and open source .NET content management system helping you deliver delightful digital experiences.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://umbraco.com&quot;&gt;Umbraco CMS&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/LICENSE.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Umbraco.Cms&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Umbraco.Cms&quot; alt=&quot;NuGet Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://umbraco.visualstudio.com/Umbraco%20Cms/_build?definitionId=301&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/build/umbraco/Umbraco%2520Cms/301?logo=azurepipelines&amp;amp;label=Azure%20Pipelines&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/contrib/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/umbraco&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/869656431308189746?logo=discord&amp;amp;logoColor=fff&quot; alt=&quot;Chat about Umbraco on Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord-chats.umbraco.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/read-discord-blue&quot; alt=&quot;Read what&#39;s going on in the Umbraco Discord chat now&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/mastodon/follow/110661369750014952?domain=https%3A%2F%2Fumbracocommunity.social&quot; alt=&quot;Mastodon Follow&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Umbraco is a free and open source .NET content management system. Our mission is to help you deliver delightful digital experiences by making Umbraco friendly, simpler and social.&lt;/h3&gt; 
&lt;p&gt;Learn more at &lt;a href=&quot;https://umbraco.com&quot;&gt;umbraco.com&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/contrib/img/logo.png&quot; alt=&quot;Umbraco Logo&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;a name=&quot;install&quot;&gt;&lt;/a&gt;Looking to install Umbraco?&lt;/h2&gt; 
&lt;p&gt;You can get started using the following commands on Windows, Linux and MacOS (after installing the &lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/fundamentals/setup/requirements&quot;&gt;.NET Runtime and SDK&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet new install Umbraco.Templates
dotnet new umbraco --name MyProject
cd MyProject
dotnet run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://docs.umbraco.com/umbraco-cms&quot;&gt;comprehensive documentation&lt;/a&gt; takes you from the fundamentals on how to start with Umbraco to deploying it to production.&lt;/p&gt; 
&lt;p&gt;Some important documentation links to get you started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/fundamentals/setup/install&quot;&gt;Installing Umbraco CMS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/fundamentals/get-to-know-umbraco&quot;&gt;Getting to know Umbraco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/tutorials/overview&quot;&gt;Tutorials for creating a basic website and customizing the editing experience&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get help&lt;/h2&gt; 
&lt;p&gt;If you need a bit of feedback while building your Umbraco projects, we are &lt;a href=&quot;https://discord.umbraco.com&quot;&gt;chatty on Discord&lt;/a&gt;. Our Discord server serves both a social space but also has channels for questions and answers. Feel free to lurk or join in with your own questions. Or just post your daily Wordle score, up to you!&lt;/p&gt; 
&lt;h2&gt;Looking to contribute back to Umbraco?&lt;/h2&gt; 
&lt;p&gt;You came to the right place! Our GitHub repository is available for all kinds of contributions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/umbraco/Umbraco-CMS/issues&quot;&gt;Create a bug report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/umbraco/Umbraco-CMS/discussions&quot;&gt;Create a feature request&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Umbraco is contribution-focused and community-driven. If you want to contribute back to the Umbraco source code, please check out our &lt;a href=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/contrib/CONTRIBUTING.md&quot;&gt;guide to contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tip: You should not run Umbraco from source code found here. Umbraco is extremely extensible and can do whatever you need. Instead, &lt;a href=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/contrib/#looking-to-install-umbraco&quot;&gt;install Umbraco as noted above&lt;/a&gt; and then &lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/extending/&quot;&gt;extend it any way you want to&lt;/a&gt;.&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>microsoft/PowerToys</title>
      <link>https://github.com/microsoft/PowerToys</link>
      <description>&lt;p&gt;Windows system utilities to maximize productivity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft PowerToys&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/images/overview/PT_hero_image.png&quot; alt=&quot;Hero image for Microsoft PowerToys&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;How to use PowerToys&lt;/a&gt; | &lt;a href=&quot;https://aka.ms/installPowerToys&quot;&gt;Downloads &amp;amp; Release notes&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#contributing&quot;&gt;Contributing to PowerToys&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#whats-happening&quot;&gt;What&#39;s Happening&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#powertoys-roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Microsoft PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity. For more info on &lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;PowerToys overviews and how to use the utilities&lt;/a&gt;, or any other tools and resources for &lt;a href=&quot;https://learn.microsoft.com/windows/dev-environment/overview&quot;&gt;Windows development environments&lt;/a&gt;, head over to &lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;learn.microsoft.com&lt;/a&gt;!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Current utilities:&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_AdvancedPaste&quot;&gt;Advanced Paste&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_AoT&quot;&gt;Always on Top&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Awake&quot;&gt;PowerToys Awake&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CmdNotFound&quot;&gt;Command Not Found&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ColorPicker&quot;&gt;Color Picker&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CropAndLock&quot;&gt;Crop And Lock&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_EnvironmentVariables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FancyZones&quot;&gt;FancyZones&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FileExplorerAddOns&quot;&gt;File Explorer Add-ons&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FileLocksmith&quot;&gt;File Locksmith&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_HostsFileEditor&quot;&gt;Hosts File Editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ImageResizer&quot;&gt;Image Resizer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_KeyboardManager&quot;&gt;Keyboard Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_MouseUtilities&quot;&gt;Mouse utilities&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_MouseWithoutBorders&quot;&gt;Mouse Without Borders&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_NewPlus&quot;&gt;New+&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Peek&quot;&gt;Peek&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PastePlain&quot;&gt;Paste as Plain Text&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PowerRename&quot;&gt;PowerRename&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PowerToysRun&quot;&gt;PowerToys Run&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_QuickAccent&quot;&gt;Quick Accent&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_RegistryPreview&quot;&gt;Registry Preview&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ScreenRuler&quot;&gt;Screen Ruler&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ShortcutGuide&quot;&gt;Shortcut Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_TextExtractor&quot;&gt;Text Extractor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Workspaces&quot;&gt;Workspaces&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ZoomIt&quot;&gt;ZoomIt&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installing and running Microsoft PowerToys&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 11 or Windows 10 version 2004 (code name 20H1 / build number 19041) or newer.&lt;/li&gt; 
 &lt;li&gt;x64 or ARM64 processor&lt;/li&gt; 
 &lt;li&gt;Our installer will install the following items: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://go.microsoft.com/fwlink/p/?LinkId=2124703&quot;&gt;Microsoft Edge WebView2 Runtime&lt;/a&gt; bootstrapper. This will install the latest version.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Via GitHub with EXE [Recommended]&lt;/h3&gt; 
&lt;p&gt;Go to the &lt;a href=&quot;https://aka.ms/installPowerToys&quot;&gt;Microsoft PowerToys GitHub releases page&lt;/a&gt; and click on &lt;code&gt;Assets&lt;/code&gt; at the bottom to show the files available in the release. Please use the appropriate PowerToys installer that matches your machine&#39;s architecture and install scope. For most, it is &lt;code&gt;x64&lt;/code&gt; and per-user.&lt;/p&gt; 
&lt;!-- items that need to be updated release to release --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Filename&lt;/th&gt; 
   &lt;th&gt;sha256 hash&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysUserSetup-0.89.0-x64.exe&quot;&gt;PowerToysUserSetup-0.89.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;B4F130CC96F321024A257499247F6FF6DA56612215ED3882E868AAE26C689E33&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysUserSetup-0.89.0-arm64.exe&quot;&gt;PowerToysUserSetup-0.89.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;F69B00F4E520EB09FA0D1D1669E21910C5225FE7A2EEDC0FA7C283B201A5F9C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysSetup-0.89.0-x64.exe&quot;&gt;PowerToysSetup-0.89.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;E18AC8F9023E341CF7DAD35367FB9DDDB6565D83D8155DBCDDB40AE8A24AE731&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysSetup-0.89.0-arm64.exe&quot;&gt;PowerToysSetup-0.89.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;17DEADEC601D6061D7AF4F487595CC36D9191813003CC2ECE381017F0EC71FBB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;This is our preferred method.&lt;/p&gt; 
&lt;h3&gt;Via Microsoft Store&lt;/h3&gt; 
&lt;p&gt;Install from the &lt;a href=&quot;https://aka.ms/getPowertoys&quot;&gt;Microsoft Store&#39;s PowerToys page&lt;/a&gt;. You must be using the &lt;a href=&quot;https://blogs.windows.com/windowsExperience/2021/06/24/building-a-new-open-microsoft-store-on-windows-11/&quot;&gt;new Microsoft Store&lt;/a&gt; which is available for both Windows 11 and Windows 10.&lt;/p&gt; 
&lt;h3&gt;Via WinGet&lt;/h3&gt; 
&lt;p&gt;Download PowerToys from &lt;a href=&quot;https://github.com/microsoft/winget-cli#installing-the-client&quot;&gt;WinGet&lt;/a&gt;. Updating PowerToys via winget will respect current PowerToys installation scope. To install PowerToys, run the following command from the command line / PowerShell:&lt;/p&gt; 
&lt;h4&gt;User scope installer [default]&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Machine-wide scope installer&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install --scope machine Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other install methods&lt;/h3&gt; 
&lt;p&gt;There are &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/unofficialInstallMethods.md&quot;&gt;community driven install methods&lt;/a&gt; such as Chocolatey and Scoop. If these are your preferred install solutions, you can find the install instructions there.&lt;/p&gt; 
&lt;h2&gt;Third-Party Run Plugins&lt;/h2&gt; 
&lt;p&gt;There is a collection of &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/thirdPartyRunPlugins.md&quot;&gt;third-party plugins&lt;/a&gt; created by the community that aren&#39;t distributed with PowerToys.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions of all types. Besides coding features / bug fixes, other ways to assist include spec writing, design, documentation, and finding bugs. We are excited to work with the power user community to build a set of tools for helping you get the most out of Windows.&lt;/p&gt; 
&lt;p&gt;We ask that &lt;strong&gt;before you start work on a feature that you would like to contribute&lt;/strong&gt;, please read our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/CONTRIBUTING.md&quot;&gt;Contributor&#39;s Guide&lt;/a&gt;. We would be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort.&lt;/p&gt; 
&lt;p&gt;Most contributions require you to agree to a &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;Contributor License Agreement (CLA)&lt;/a&gt; declaring that you grant us the rights to use your contribution and that you have permission to do so.&lt;/p&gt; 
&lt;p&gt;For guidance on developing for PowerToys, please read the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/devdocs&quot;&gt;developer docs&lt;/a&gt; for a detailed breakdown. This includes how to setup your computer to compile.&lt;/p&gt; 
&lt;h2&gt;What&#39;s Happening&lt;/h2&gt; 
&lt;h3&gt;PowerToys Roadmap&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/microsoft/PowerToys/wiki/Roadmap&quot;&gt;prioritized roadmap&lt;/a&gt; of features and utilities that the core team is focusing on.&lt;/p&gt; 
&lt;h3&gt;0.89 - February 2025 Update&lt;/h3&gt; 
&lt;p&gt;In this release, we focused on new features, stability, accessibility and automation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✨Highlights&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enhanced Advanced Paste by adding media transcoding support to convert different video and audio file formats! Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for your help!&lt;/li&gt; 
 &lt;li&gt;Fixed crashes when loading thumbnails after the .NET 9 update and resolved PowerLauncher.exe blocking other MSI installers from creating shortcuts!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility issues across FancyZones, Image Resizer, and Settings to improve screen reader support and clarity!&lt;/li&gt; 
 &lt;li&gt;Enhanced UI automation framework across modules and added new tests to cover manual checks, with more improvements coming!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;General&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed an issue where updating PowerToys on Windows 11 did not properly update context menu entries, impacting New+, PowerRename, Image Resizer, and File Locksmith.&lt;/li&gt; 
 &lt;li&gt;Updated .NET Packages from 9.0.1 to 9.0.2. Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for this.&lt;/li&gt; 
 &lt;li&gt;Enabled compatibility with VS17.3 and later, for C++23. Thanks &lt;a href=&quot;https://github.com/LNKLEO&quot;&gt;@LNKLEO&lt;/a&gt; for this.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Paste&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added media transcoding support to convert different video and audio file formats, improved UI layouts, refined clipboard handling, and integrated Semantic Kernel for smarter pasting. Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for your help!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FancyZones&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed accessibility by improving the text for monitors, ensuring clearer naming and help text for screen readers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image Resizer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed issues with Width and Height fields in Image Resizer&#39;s Custom preset, ensuring empty values no longer cause errors, settings save correctly, and auto-scaling behaves as expected. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility by ensuring screen readers announce selected image dimensions in the combo-box for better navigation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monaco Preview&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed open link in default browser rather than Microsoft Edge. Thanks &lt;a href=&quot;https://github.com/OldUser101&quot;&gt;@OldUser101&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Highlighter&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed a highlight released on an Administrator window will start fading, instead of staying on the screen indefinitely until the mouse button is pressed again on an unelevated window.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Without Borders&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed an issue in service mode where copy-paste and drag-drop file transfers didn’t work, ensuring seamless file operations.&lt;/li&gt; 
 &lt;li&gt;Enabled GPO for enable/disable for Mouse Without Borders in Service Mode. Thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review and comments!&lt;/li&gt; 
 &lt;li&gt;Fixed code maintainability by refactoring the oversized &#39;Common&#39; class in Mouse Without Borders into smaller, focused classes for better structure and clarity. Thanks &lt;a href=&quot;https://github.com/mikeclayton&quot;&gt;@mikeclayton&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerRename&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported negative value as Start value in regular expression, e.g. ${start=-1314}&lt;/li&gt; 
 &lt;li&gt;Enhanced RegEx help by adding $, ^, quantifiers, and common patterns for better usability. Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerToys Run&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed crashes when loading thumbnails after the .NET 9 update by disabling CETCompat.&lt;/li&gt; 
 &lt;li&gt;Fixed PowerLauncher.exe blocking other MSI installers creating shortcuts. Thanks &lt;a href=&quot;https://github.com/OneBlue&quot;&gt;@OneBlue&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed Run’s dark mode detection to work reliably, preventing issues with incorrect theme detection and ensuring a smoother user experience. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed list separator handling in Calculator, allowing functions with multiple arguments to work correctly across different locales. For example pow(2;3) would be replaced with pow(2,3). Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review!&lt;/li&gt; 
 &lt;li&gt;Fixed angle unit conversions in the PowerToys Run calculator, allowing quick conversions between radians, degrees, and gradians. Thanks &lt;a href=&quot;https://github.com/OldUser101&quot;&gt;@OldUser101&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Accent&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added ǎ, ǒ and ǔ to the IPA character set. Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added ` (backtick) and ~ (tilde) to the VK_OEM_5 character set. Thanks &lt;a href=&quot;https://github.com/xanatos&quot;&gt;@xanatos&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added ς (final sigma) to the Greek character set. Thanks &lt;a href=&quot;https://github.com/IamSmeagol&quot;&gt;@IamSmeagol&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Settings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enabled GPO for the &quot;run at startup&quot; setting. Thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review and comments!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility issue by allowing screen readers to announce the group name for secondary links in Settings pages, instead of reading link descriptions without context.&lt;/li&gt; 
 &lt;li&gt;Fixed an issue where the Color Picker shortcut was not displaying correctly in the Dashboard.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Workspaces&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed if a window was last placed on a disconnected monitor, it launches minimized and repositions within the main monitor&#39;s visible area when restored, instead of remaining off-screen and invisible.&lt;/li&gt; 
 &lt;li&gt;Fixed on ARM64 to correctly display icons for packaged apps by resolving path mismatches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ZoomIt&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed warning C4706 and related error C2220 during build. Thanks &lt;a href=&quot;https://github.com/xanatos&quot;&gt;@xanatos&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed runner-ipc.md doc on the broken link. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed the new plugin checklist by updating the target framework, removing duplicates, and improving statement organization. Thanks &lt;a href=&quot;https://github.com/hlaueriksson&quot;&gt;@hlaueriksson&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Updated runner documentation to align with the latest code structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stabilized pipeline on ARM64 and forked build.&lt;/li&gt; 
 &lt;li&gt;Added fuzz testing for HostUILib, added as part of pipeline for OneFuzz.&lt;/li&gt; 
 &lt;li&gt;Fixed and improved UI-Test automation framework, and added new test cases for the FancyZones and Hosts module.&lt;/li&gt; 
 &lt;li&gt;Optimized Logger function as AOT compatible, improving performance by 18%.&lt;/li&gt; 
 &lt;li&gt;Made Common.UI and Setting.UI to be AOT compatible.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;What is being planned for version 0.90&lt;/h3&gt; 
&lt;p&gt;For &lt;a href=&quot;https://github.com/microsoft/PowerToys/issues?q=is%3Aissue+milestone%3A%22PowerToys+0.90%22&quot;&gt;v0.90&lt;/a&gt;, we&#39;ll work on the items below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;New module: PowerToys Run v2&lt;/li&gt; 
 &lt;li&gt;New module: File Actions Menu&lt;/li&gt; 
 &lt;li&gt;Working on installer upgrades&lt;/li&gt; 
 &lt;li&gt;Upgrading keyboard manager&#39;s editor UI&lt;/li&gt; 
 &lt;li&gt;Stability / bug fixes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;PowerToys Community&lt;/h2&gt; 
&lt;p&gt;The PowerToys team is extremely grateful to have the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/COMMUNITY.md&quot;&gt;support of an amazing active community&lt;/a&gt;. The work you do is incredibly important. PowerToys wouldn’t be nearly what it is today without your help filing bugs, updating documentation, guiding the design, or writing features. We want to say thank you and take time to recognize your work. Month by month, you directly help make PowerToys a better piece of software.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/CODE_OF_CONDUCT.md&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy Statement&lt;/h2&gt; 
&lt;p&gt;The application logs basic diagnostic data (telemetry). For more information on privacy and what we collect, see our &lt;a href=&quot;https://aka.ms/powertoys-data-and-privacy-documentation&quot;&gt;PowerToys Data and Privacy documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aras-p/UnityGaussianSplatting</title>
      <link>https://github.com/aras-p/UnityGaussianSplatting</link>
      <description>&lt;p&gt;Toy Gaussian Splatting visualization in Unity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gaussian Splatting playground in Unity&lt;/h1&gt; 
&lt;p&gt;SIGGRAPH 2023 had a paper &quot;&lt;a href=&quot;https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/&quot;&gt;&lt;strong&gt;3D Gaussian Splatting for Real-Time Radiance Field Rendering&lt;/strong&gt;&lt;/a&gt;&quot; by Kerbl, Kopanas, Leimkühler, Drettakis that is really cool! Check out their website, source code repository, data sets and so on. I&#39;ve decided to try to implement the realtime visualization part (i.e. the one that takes already-produced gaussian splat &quot;model&quot; file) in Unity.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/Images/shotOverview.jpg?raw=true&quot; alt=&quot;Screenshot&quot; title=&quot;Screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Everything in this repository is based on that &quot;OG&quot; gaussian splatting paper. Towards end of 2023, there&#39;s a ton of &lt;a href=&quot;https://github.com/MrNeRF/awesome-3D-gaussian-splatting&quot;&gt;new gaussian splatting research&lt;/a&gt; coming out; &lt;em&gt;none&lt;/em&gt; of that is in this project.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Status as of 2023 December: I&#39;m not planning any significant further developments.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; The only platforms where this is known to work are the ones that use D3D12, Metal or Vulkan graphics APIs. PC (Windows on D3D12 or Vulkan), Mac (Metal), Linux (Vulkan) should work. Anything else I have not actually tested; it might work or it might not.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Some virtual reality devices work (reportedly HTC Vive, Varjo Aero, Quest 3 and Quest Pro). Some others might not work, e.g. Apple Vision Pro. See &lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/17&quot;&gt;#17&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Anything using OpenGL or OpenGL ES: &lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/26&quot;&gt;#26&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WebGPU might work someday, but seems that today it does not quite have all the required graphics features yet: &lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/65&quot;&gt;#65&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mobile may or might not work. Some iOS devices definitely do not work (&lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/72&quot;&gt;#72&lt;/a&gt;), some Androids do not work either (&lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/112&quot;&gt;#112&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Download or clone this repository, open &lt;code&gt;projects/GaussianExample&lt;/code&gt; as a Unity project (I use Unity 2022.3, other versions might also work), and open &lt;code&gt;GSTestScene&lt;/code&gt; scene in there.&lt;/p&gt; 
&lt;p&gt;Note that the project requires DX12 or Vulkan on Windows, i.e. &lt;strong&gt;DX11 will not work&lt;/strong&gt;. This is &lt;strong&gt;not tested at all on mobile/web&lt;/strong&gt;, and probably does not work there.&lt;/p&gt; 
&lt;img align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/Images/shotAssetCreator.png&quot; width=&quot;250px&quot;&gt; 
&lt;p&gt;Next up, &lt;strong&gt;create some GaussianSplat assets&lt;/strong&gt;: open &lt;code&gt;Tools -&amp;gt; Gaussian Splats -&amp;gt; Create GaussianSplatAsset&lt;/code&gt; menu within Unity. In the dialog, point &lt;code&gt;Input PLY/SPZ File&lt;/code&gt; to your Gaussian Splat file. Currently two file formats are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;PLY format from the original 3DGS paper (in the official paper models, the correct files are under &lt;code&gt;point_cloud/iteration_*/point_cloud.ply&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scaniverse.com/spz&quot;&gt;Scaniverse SPZ&lt;/a&gt; format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optionally there can be &lt;code&gt;cameras.json&lt;/code&gt; next to it or somewhere in parent folders.&lt;/p&gt; 
&lt;p&gt;Pick desired compression options and output folder, and press &quot;Create Asset&quot; button. The compression even at &quot;very low&quot; quality setting is decently usable, e.g. this capture at Very Low preset is under 8MB of total size (click to see the video): &lt;br&gt; &lt;a href=&quot;https://youtu.be/iccfV0YlWVI&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/iccfV0YlWVI/0.jpg&quot; alt=&quot;Watch the video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If everything was fine, there should be a GaussianSplat asset that has several data files next to it.&lt;/p&gt; 
&lt;p&gt;Since the gaussian splat models are quite large, I have not included any in this Github repo. The original &lt;a href=&quot;https://github.com/graphdeco-inria/gaussian-splatting&quot;&gt;paper github page&lt;/a&gt; has a a link to &lt;a href=&quot;https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/datasets/pretrained/models.zip&quot;&gt;14GB zip&lt;/a&gt; of their models.&lt;/p&gt; 
&lt;p&gt;In the game object that has a &lt;code&gt;GaussianSplatRenderer&lt;/code&gt; script, &lt;strong&gt;point the Asset field to&lt;/strong&gt; one of your created assets. There are various controls on the script to debug/visualize the data, as well as a slider to move game camera into one of asset&#39;s camera locations.&lt;/p&gt; 
&lt;p&gt;The rendering takes game object transformation matrix into account; the official gaussian splat models seem to be all rotated by about -160 degrees around X axis, and mirrored around Z axis, so in the sample scene the object has such a transform set up.&lt;/p&gt; 
&lt;p&gt;Additional documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/render-pipeline-integration.md&quot;&gt;Render Pipeline Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/splat-editing.md&quot;&gt;Editing Splats&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;That&#39;s it!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Write-ups&lt;/h2&gt; 
&lt;p&gt;My own blog posts about all this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aras-p.info/blog/2023/09/05/Gaussian-Splatting-is-pretty-cool/&quot;&gt;Gaussian Splatting is pretty cool!&lt;/a&gt; (2023 Sep 5)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aras-p.info/blog/2023/09/13/Making-Gaussian-Splats-smaller/&quot;&gt;Making Gaussian Splats smaller&lt;/a&gt; (2023 Sep 13)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aras-p.info/blog/2023/09/27/Making-Gaussian-Splats-more-smaller/&quot;&gt;Making Gaussian Splats more smaller&lt;/a&gt; (2023 Sep 27)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aras-p.info/blog/2023/12/08/Gaussian-explosion/&quot;&gt;Gaussian Explosion&lt;/a&gt; (2023 Dec 8)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Performance numbers:&lt;/h2&gt; 
&lt;p&gt;&quot;bicycle&quot; scene from the paper, with 6.1M splats and first camera in there, rendering at 1200x797 resolution, at &quot;Medium&quot; asset quality level (282MB asset file):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows (NVIDIA RTX 3080 Ti): 
  &lt;ul&gt; 
   &lt;li&gt;Official SBIR viewer: 7.4ms (135FPS). 4.8GB VRAM usage.&lt;/li&gt; 
   &lt;li&gt;Unity, DX12 or Vulkan: 6.8ms (147FPS) - 4.5ms rendering, 1.1ms sorting, 0.8ms splat view calc. 1.3GB VRAM usage.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mac (Apple M1 Max): 
  &lt;ul&gt; 
   &lt;li&gt;Unity, Metal: 21.5ms (46FPS).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Besides the gaussian splat asset that is loaded into GPU memory, currently this also needs about 48 bytes of GPU memory per splat (for sorting, caching view dependent data etc.).&lt;/p&gt; 
&lt;h2&gt;License and External Code Used&lt;/h2&gt; 
&lt;p&gt;The code I wrote for this is under MIT license. The project also uses several 3rd party libraries:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zanders3/json&quot;&gt;zanders3/json&lt;/a&gt;, MIT license, (c) 2018 Alex Parker.&lt;/li&gt; 
 &lt;li&gt;&quot;DeviceRadixSort&quot; GPU sorting code contributed by Thomas Smith (&lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/pull/82&quot;&gt;#82&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Virtual Reality fixes contributed by &lt;a href=&quot;https://github.com/ninjamode&quot;&gt;@ninjamode&lt;/a&gt; based on &lt;a href=&quot;https://github.com/ninjamode/Unity-VR-Gaussian-Splatting&quot;&gt;Unity-VR-Gaussian-Splatting&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;However, keep in mind that the &lt;a href=&quot;https://github.com/graphdeco-inria/gaussian-splatting/raw/main/LICENSE.md&quot;&gt;license of the original paper implementation&lt;/a&gt; says that the official &lt;em&gt;training&lt;/em&gt; software for the Gaussian Splats is for educational / academic / non-commercial purpose; commercial usage requires getting license from INRIA. That is: even if this viewer / integration into Unity is just &quot;MIT license&quot;, you need to separately consider &lt;em&gt;how&lt;/em&gt; did you get your Gaussian Splat PLY files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mob-sakai/ParticleEffectForUGUI</title>
      <link>https://github.com/mob-sakai/ParticleEffectForUGUI</link>
      <description>&lt;p&gt;Render particle effect in UnityUI(uGUI). Maskable, sortable, and no extra Camera/RenderTexture/Canvas.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img alt=&quot;UIParticleIcon&quot; src=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/assets/12690315/d76e105e-a840-4f61-a1f6-8cf311c0812d&quot; width=&quot;26&quot;&gt; Particle Effect For UGUI (UI Particle) 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://openupm.com/packages/com.coffee.ui-particle/&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/com.coffee.ui-particle?label=openupm&amp;amp;registry_uri=https://package.openupm.com&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/mob-sakai/ParticleEffectForUGUI&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/raw/main/LICENSE.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/mob-sakai/ParticleEffectForUGUI.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;br&gt; &lt;img src=&quot;https://img.shields.io/badge/Unity-2018.2+-57b9d3.svg?style=flat&amp;amp;logo=unity&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/uGUI_2.0_Ready-57b9d3.svg?style=flat&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/UPR%2FHDPR_Ready-57b9d3.svg?style=flat&quot; alt=&quot;&quot;&gt;&lt;br&gt; &lt;img src=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/actions/workflows/test.yml/badge.svg?branch=develop&quot; alt=&quot;&quot;&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-orange.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/subscription&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/mob-sakai/ParticleEffectForUGUI.svg?style=social&amp;amp;label=Watch&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=mob_sakai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/mob_sakai.svg?label=Follow&amp;amp;style=social&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;lt;&amp;lt; &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-description-&quot;&gt;📝 Description&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-key-features&quot;&gt;📌 Key Features&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-demo&quot;&gt;🎮 Demo&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-installation&quot;&gt;⚙ Installation&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-usage&quot;&gt;🚀 Usage&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-development-note&quot;&gt;🛠 Development Note&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-contributing&quot;&gt;🤝 Contributing&lt;/a&gt; &amp;gt;&amp;gt;&lt;/p&gt; 
&lt;h2&gt;📝 Description 
 &lt;!-- omit in toc --&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41771577-8da4b968-7650-11e8-9524-cd162c422d9d.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;This package uses the new APIs &lt;code&gt;MeshBake/MeshTrailBake&lt;/code&gt; (introduced in Unity 2018.2) to render particles through &lt;code&gt;CanvasRenderer&lt;/code&gt;.&lt;br&gt; You can render, mask, and sort your &lt;code&gt;ParticleSystems&lt;/code&gt; for UI without the need for an additional &lt;code&gt;Camera&lt;/code&gt;, &lt;code&gt;RenderTexture&lt;/code&gt;, or &lt;code&gt;Canvas&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-key-features&quot;&gt;📌 Key Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-demo&quot;&gt;🎮 Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-installation&quot;&gt;⚙ Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#install-via-openupm&quot;&gt;Install via OpenUPM&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#install-via-upm-with-package-manager-ui&quot;&gt;Install via UPM (with Package Manager UI)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#install-via-upm-manually&quot;&gt;Install via UPM (Manually)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#install-as-embedded-package&quot;&gt;Install as Embedded Package&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-usage&quot;&gt;🚀 Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#component-uiparticle&quot;&gt;Component: UIParticle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#basic-usage&quot;&gt;Basic Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#usage-with-your-existing-particlesystem-prefab&quot;&gt;Usage with Your Existing ParticleSystem Prefab&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#usage-with-mask-or-rectmask2d-component&quot;&gt;Usage with &lt;code&gt;Mask&lt;/code&gt; or &lt;code&gt;RectMask2D&lt;/code&gt; Component&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#usage-with-script&quot;&gt;Usage with Script&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#component-uiparticleattractor&quot;&gt;Component: UIParticleAttractor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#project-settings&quot;&gt;Project Settings&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-development-note&quot;&gt;🛠 Development Note&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#compares-the-baking-mesh-approach-with-the-conventional-approach&quot;&gt;Compares the Baking mesh approach with the conventional approach&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#performance-test-results&quot;&gt;Performance test results&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-faq-why-are-my-uiparticles-not-displayed-correctly&quot;&gt;🔍 FAQ: Why Are My UIParticles Not Displayed Correctly?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#shader-limitation&quot;&gt;Shader Limitation&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#built-in-shaders-are-not-supported&quot;&gt;Built-in shaders are not supported&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#unity-2018-or-2019-uvzw-components-will-be-discarded&quot;&gt;(Unity 2018 or 2019) UV.zw components will be discarded&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#unity-2018-or-2019-custom-vertex-streams&quot;&gt;(Unity 2018 or 2019) Custom vertex streams&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#overheads&quot;&gt;Overheads&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#how-to-make-a-custom-shader-to-support-mask-and-rectmask2d-component&quot;&gt;How to Make a Custom Shader to Support &lt;code&gt;Mask&lt;/code&gt; and &lt;code&gt;RectMask2D&lt;/code&gt; Component&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-contributing&quot;&gt;🤝 Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#issues&quot;&gt;Issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#pull-requests&quot;&gt;Pull Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#author&quot;&gt;Author&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#see-also&quot;&gt;See Also&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;📌 Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to use:&lt;/strong&gt; The package is ready to use out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sortable:&lt;/strong&gt; Sort particle effects and other UI elements by sibling index.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Maskable:&lt;/strong&gt; Supports &lt;code&gt;Mask&lt;/code&gt; or &lt;code&gt;RectMask2D&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No extra components required:&lt;/strong&gt; No need for an additional &lt;code&gt;Camera&lt;/code&gt;, &lt;code&gt;RenderTexture&lt;/code&gt;, or &lt;code&gt;Canvas&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trail module support:&lt;/strong&gt; Fully supports the Trail module.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CanvasGroup alpha support:&lt;/strong&gt; Integrates with &lt;code&gt;CanvasGroup&lt;/code&gt; alpha.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No allocations:&lt;/strong&gt; Efficiently renders particles without allocations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Any canvas render mode support:&lt;/strong&gt; Works with overlay, camera space, and world space.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Any Render pipeline support:&lt;/strong&gt; Compatible with Universal Render Pipeline (URP) and High Definition Render Pipeline (HDRP).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disabling domain reload support:&lt;/strong&gt; Supports disabling &lt;code&gt;Enter Play Mode Options &amp;gt; Reload Domain&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Animatable material properties:&lt;/strong&gt; Supports changing material properties with AnimationClip (AnimatableProperty).&lt;br&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/53286323-2d94a980-37b0-11e9-8afb-c4a207805ff2.gif&quot; alt=&quot;AnimatableProperty.gif&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple materials:&lt;/strong&gt; Supports 8+ materials.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Correct positioning:&lt;/strong&gt; Adjusts world space particle positions correctly when changing window size for standalone platforms (Windows, MacOSX, and Linux).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive scaling:&lt;/strong&gt; Provides adaptive scaling for UI (AutoScalingMode).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance optimization:&lt;/strong&gt; Mesh sharing group to improve performance.&lt;br&gt; &lt;img alt=&quot;MeshSharing.gif&quot; src=&quot;https://user-images.githubusercontent.com/12690315/174311048-c882df81-6c34-4eba-b0aa-5645457692f1.gif&quot; width=&quot;450&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Particle attractor:&lt;/strong&gt; Includes a particle attractor component.&lt;br&gt; &lt;img alt=&quot;ParticleAttractor.gif&quot; src=&quot;https://user-images.githubusercontent.com/12690315/174311027-462929a4-13f0-4ec4-86ea-9c832f2eecf1.gif&quot; width=&quot;450&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Emission position mode:&lt;/strong&gt; Supports relative/absolute particle emission position modes.&lt;br&gt; &lt;img alt=&quot;AbsolutePosition.gif&quot; src=&quot;https://user-images.githubusercontent.com/12690315/175751579-5a2357e8-2ecf-4afd-83c8-66e9771bde39.gif&quot; width=&quot;450&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom view size:&lt;/strong&gt; Fixes min/max particle size mismatch.&lt;br&gt; &lt;img src=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/assets/12690315/dd929959-1a37-420b-b13d-e849022b9c9d&quot; alt=&quot;CustomViewSize.gif&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;🎮 Demo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mob-sakai.github.io/demos/UIParticle_Demo/index.html&quot;&gt;WebGL Demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/174311768-1843a5f2-f776-491b-aaa8-2a131a8b6a16.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mob-sakai.github.io/Demos/ParticleEffectForUGUI_CFX&quot;&gt;WebGL Demo (Cartoon FX &amp;amp; War FX)&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://assetstore.unity.com/packages/vfx/particles/cartoon-fx-free-109565&quot;&gt;Cartoon FX Free&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://assetstore.unity.com/packages/vfx/particles/war-fx-5669&quot;&gt;War FX&lt;/a&gt; (by &lt;a href=&quot;https://assetstore.unity.com/publishers/1669&quot;&gt;Jean Moreno (JMO)&lt;/a&gt;) with UIParticle&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/91664766-3e07ac00-eb2c-11ea-978b-ef723be80619.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚙ Installation&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;This package requires &lt;strong&gt;Unity 2018.3 or later&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Install via OpenUPM&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;This package is available on &lt;a href=&quot;https://openupm.com&quot;&gt;OpenUPM&lt;/a&gt; package registry.&lt;/li&gt; 
 &lt;li&gt;This is the preferred method of installation, as you can easily receive updates as they&#39;re released.&lt;/li&gt; 
 &lt;li&gt;If you have &lt;a href=&quot;https://github.com/openupm/openupm-cli&quot;&gt;openupm-cli&lt;/a&gt; installed, then run the following command in your project&#39;s directory: &lt;pre&gt;&lt;code&gt;openupm add com.coffee.ui-particle
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To update the package, use Package Manager UI (&lt;code&gt;Window &amp;gt; Package Manager&lt;/code&gt;) or run the following command with &lt;code&gt;@{version}&lt;/code&gt;: &lt;pre&gt;&lt;code&gt;openupm add com.coffee.ui-particle@4.9.0
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Install via UPM (with Package Manager UI)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click &lt;code&gt;Window &amp;gt; Package Manager&lt;/code&gt; to open Package Manager UI.&lt;/li&gt; 
 &lt;li&gt;Click &lt;code&gt;+ &amp;gt; Add package from git URL...&lt;/code&gt; and input the repository URL: &lt;code&gt;https://github.com/mob-sakai/ParticleEffectForUGUI.git&lt;/code&gt;&lt;br&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/f88f47ad-c606-44bd-9e86-ee3f72eac548&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;To update the package, change suffix &lt;code&gt;#{version}&lt;/code&gt; to the target version. 
  &lt;ul&gt; 
   &lt;li&gt;e.g. &lt;code&gt;https://github.com/mob-sakai/ParticleEffectForUGUI.git#4.9.0&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Install via UPM (Manually)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Open the &lt;code&gt;Packages/manifest.json&lt;/code&gt; file in your project. Then add this package somewhere in the &lt;code&gt;dependencies&lt;/code&gt; block:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;dependencies&quot;: {
    &quot;com.coffee.ui-particle&quot;: &quot;https://github.com/mob-sakai/ParticleEffectForUGUI.git&quot;,
    ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To update the package, change suffix &lt;code&gt;#{version}&lt;/code&gt; to the target version.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;e.g. &lt;code&gt;&quot;com.coffee.ui-particle&quot;: &quot;https://github.com/mob-sakai/ParticleEffectForUGUI.git#4.9.0&quot;,&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Install as Embedded Package&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download a source code zip file from &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI.git/releases&quot;&gt;Releases&lt;/a&gt; and extract it.&lt;/li&gt; 
 &lt;li&gt;Place it in your project&#39;s &lt;code&gt;Packages&lt;/code&gt; directory.&lt;br&gt; &lt;img src=&quot;https://github.com/mob-sakai/mob-sakai/assets/12690315/0b7484b4-5fca-43b0-a9ef-e5dbd99bcdb4&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to fix bugs or add features, install it as an embedded package.&lt;/li&gt; 
 &lt;li&gt;To update the package, you need to re-download it and replace the contents.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Usage&lt;/h2&gt; 
&lt;h3&gt;Component: UIParticle&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;UIParticle&lt;/code&gt; controls the ParticleSystems that are attached to its own game objects and child game objects.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/bc9eb783-afce-4102-ac61-aee9ea8d6f2f&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Maskable&lt;/strong&gt;: Does this graphic allow maskable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scale&lt;/strong&gt;: Scale the rendering particles. When the &lt;code&gt;3D&lt;/code&gt; toggle is enabled, 3D scale (x, y, z) is supported.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Animatable Properties&lt;/strong&gt;: If you want to update material properties (e.g., &lt;code&gt;_MainTex_ST&lt;/code&gt;, &lt;code&gt;_Color&lt;/code&gt;) in AnimationClip, use this to mark as animatable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mesh Sharing&lt;/strong&gt;: Particle simulation results are shared within the same group. A large number of the same effects can be displayed with a small load. When the &lt;code&gt;Random&lt;/code&gt; toggle is enabled, it will be grouped randomly. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;None:&lt;/strong&gt; Disable mesh sharing.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Auto:&lt;/strong&gt; Automatically select Primary/Replica.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Primary:&lt;/strong&gt; Provides particle simulation results to the same group.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Primary Simulator:&lt;/strong&gt; Primary, but do not render the particle (simulation only).&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Replica:&lt;/strong&gt; Render simulation results provided by the primary.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Position Mode&lt;/strong&gt;: Emission position mode. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Absolute:&lt;/strong&gt; The particles will be emitted from the world position.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Relative:&lt;/strong&gt; The particles will be emitted from the scaled position.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto Scaling Mode&lt;/strong&gt;: How to automatically adjust when the Canvas scale is changed by the screen size or reference resolution. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;None:&lt;/strong&gt; Do nothing.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Transform:&lt;/strong&gt; Transform.lossyScale (=world scale) will be set to (1, 1, 1).&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;UIParticle:&lt;/strong&gt; UIParticle.scale will be adjusted.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use Custom View:&lt;/strong&gt; Use this if the particles are not displayed correctly due to min/max particle size. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Custom view size:&lt;/strong&gt; Change the bake view size.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Time Scale Multiplier:&lt;/strong&gt; Time scale multiplier.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rendering Order&lt;/strong&gt;: The ParticleSystem list to be rendered. You can change the order and the materials.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Press the &lt;code&gt;Refresh&lt;/code&gt; button to reconstruct the rendering order based on children ParticleSystem&#39;s sorting order and z-position.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Select &lt;code&gt;GameObject/UI/ParticleSystem&lt;/code&gt; to create UIParticle with a ParticleSystem. &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95007361-cad0e880-0649-11eb-8835-f145d62c5977.png&quot; alt=&quot;particle&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Adjust the ParticleSystem as you like. &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95007359-ca385200-0649-11eb-8383-627c9750bda8.png&quot; alt=&quot;particle1&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br&gt; 
&lt;h3&gt;Usage with Your Existing ParticleSystem Prefab&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Select &lt;code&gt;GameObject/UI/ParticleSystem (Empty)&lt;/code&gt; to create UIParticle. &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95007362-cb697f00-0649-11eb-8a09-29b0a13791e4.png&quot; alt=&quot;empty&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Drag and drop your ParticleSystem prefab onto UIParticle. &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95007356-c6a4cb00-0649-11eb-9316-562f4bce3f31.png&quot; alt=&quot;particle3&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br&gt; 
&lt;h3&gt;Usage with &lt;code&gt;Mask&lt;/code&gt; or &lt;code&gt;RectMask2D&lt;/code&gt; Component&lt;/h3&gt; 
&lt;p&gt;If you want to mask particles, set a stencil-supported shader (such as &lt;code&gt;UI/UIAdditive&lt;/code&gt;) to the material for ParticleSystem. If you use some custom shaders, see the &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#how-to-make-a-custom-shader-to-support-mask-and-rectmask2d-component&quot;&gt;How to Make a Custom Shader to Support Mask/RectMask2D Component&lt;/a&gt; section.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95017591-3b512700-0695-11eb-864e-04166ea1809a.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h3&gt;Usage with Script&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;// Instantiate ParticleSystem prefab with UIParticle on runtime.
var go = GameObject.Instantiate(prefab);
var uiParticle = go.AddComponent&amp;lt;UIParticle&amp;gt;();
uiParticle.scale = 100;

// Control by ParticleSystem.
particleSystem.Play();
particleSystem.Emit(10);

// Control by UIParticle.
uiParticle.Play();
uiParticle.Stop();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h3&gt;Component: UIParticleAttractor&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;UIParticleAttractor&lt;/code&gt; attracts particles generated by the specified ParticleSystem.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/assets/12690315/5c20ad73-4b9a-4f38-9cdc-119df5cce077&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/174311027-462929a4-13f0-4ec4-86ea-9c832f2eecf1.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Particle Systems&lt;/strong&gt;: Attracts particles generated by the specified ParticleSystems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Destination Radius&lt;/strong&gt;: Once the particle is within the radius, the particle lifetime will become 0, and &lt;code&gt;OnAttracted&lt;/code&gt; will be called.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Delay Rate&lt;/strong&gt;: Delay to start attracting. It is a percentage of the particle&#39;s start lifetime.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Max Speed&lt;/strong&gt;: Maximum speed of attracting. If this value is too small, attracting may not be completed by the end of the lifetime, and &lt;code&gt;OnAttracted&lt;/code&gt; may not be called.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Movement&lt;/strong&gt;: Attracting movement type. (&lt;code&gt;Linear&lt;/code&gt;, &lt;code&gt;Smooth&lt;/code&gt;, &lt;code&gt;Sphere&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update Mode&lt;/strong&gt;: Update mode. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Normal:&lt;/strong&gt; Update with scaled delta time.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Unscaled Time:&lt;/strong&gt; Update with unscaled delta time.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OnAttracted&lt;/strong&gt;: An event called when attracting is complete (per particle).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h3&gt;Project Settings&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/befc7f34-fb47-4006-831a-eba79fda11ca&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click &lt;code&gt;Edit &amp;gt; Project Settings&lt;/code&gt; to open the Project Settings window and then select &lt;code&gt;UI &amp;gt; UI Particle&lt;/code&gt; category.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;🛠 Development Note&lt;/h2&gt; 
&lt;h3&gt;Compares the Baking mesh approach with the conventional approach&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Baking mesh approach (=UIParticle)&lt;/strong&gt;&lt;br&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765089-0302b9a2-763e-11e8-88b3-b6ffa306bbb0.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Rendered as is.&lt;/li&gt; 
   &lt;li&gt;✅ Maskable.&lt;/li&gt; 
   &lt;li&gt;✅ Sortable.&lt;/li&gt; 
   &lt;li&gt;✅ Less objects.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Do nothing (=Plain ParticleSystem)&lt;/strong&gt;&lt;br&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765090-0329828a-763e-11e8-8d8a-f1d269ea3bc7.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Rendered as is.&lt;/li&gt; 
   &lt;li&gt;❌ Looks like a glitch.&lt;/li&gt; 
   &lt;li&gt;❌ Not maskable.&lt;/li&gt; 
   &lt;li&gt;❌ Not sortable.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Convert particle to UIVertex (=&lt;a href=&quot;https://forum.unity.com/threads/free-script-particle-systems-in-ui-screen-space-overlay.406862/&quot;&gt;UIParticleSystem&lt;/a&gt;)&lt;/strong&gt;&lt;br&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765088-02deb9c6-763e-11e8-98d0-9e0c1766ef39.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Maskable.&lt;/li&gt; 
   &lt;li&gt;✅ Sortable.&lt;/li&gt; 
   &lt;li&gt;❌ Adjustment is difficult.&lt;/li&gt; 
   &lt;li&gt;❌ Requires UI shaders.&lt;/li&gt; 
   &lt;li&gt;❌ Difficult to adjust scale.&lt;/li&gt; 
   &lt;li&gt;❌ Force hierarchy scalling.&lt;/li&gt; 
   &lt;li&gt;❌ Simulation results are incorrect.&lt;/li&gt; 
   &lt;li&gt;❌ Trail, rotation of transform, time scaling are not supported.&lt;/li&gt; 
   &lt;li&gt;❌ Generate heavy GC every frame.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use Canvas to sort (Sorting By Canvas )&lt;/strong&gt;&lt;br&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765087-02b866ea-763e-11e8-8c33-081c9ad852f8.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Rendered as is.&lt;/li&gt; 
   &lt;li&gt;✅ Sortable.&lt;/li&gt; 
   &lt;li&gt;❌ You must to manage sorting orders.&lt;/li&gt; 
   &lt;li&gt;❌ Not maskable.&lt;/li&gt; 
   &lt;li&gt;❌ More batches.&lt;/li&gt; 
   &lt;li&gt;❌ Requires Canvas.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use RenderTexture&lt;/strong&gt;&lt;br&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765085-0291b3e2-763e-11e8-827b-72e5ee9bc556.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Maskable.&lt;/li&gt; 
   &lt;li&gt;✅ Sortable.&lt;/li&gt; 
   &lt;li&gt;❌ Requires Camera and RenderTexture.&lt;/li&gt; 
   &lt;li&gt;❌ Difficult to adjust position and size.&lt;/li&gt; 
   &lt;li&gt;❌ Quality depends on the RenderTexture&#39;s setting.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/issues/193#issuecomment-1160028374&quot;&gt;Performance test results&lt;/a&gt;&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Approach&lt;/th&gt; 
   &lt;th&gt;FPS on Editor&lt;/th&gt; 
   &lt;th&gt;FPS on iPhone6&lt;/th&gt; 
   &lt;th&gt;FPS on Xperia XZ&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Particle System&lt;/td&gt; 
   &lt;td&gt;43&lt;/td&gt; 
   &lt;td&gt;57&lt;/td&gt; 
   &lt;td&gt;22&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIParticleSystem&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;0 (unmeasurable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sorting By Canvas&lt;/td&gt; 
   &lt;td&gt;43&lt;/td&gt; 
   &lt;td&gt;44&lt;/td&gt; 
   &lt;td&gt;18&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIParticle&lt;/td&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIParticle with MeshSharing&lt;/td&gt; 
   &lt;td&gt;44&lt;/td&gt; 
   &lt;td&gt;45&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🔍 FAQ: Why Are My UIParticles Not Displayed Correctly?&lt;/h3&gt; 
&lt;p&gt;If &lt;code&gt;ParticleSystem&lt;/code&gt; alone displays particles correctly but &lt;code&gt;UIParticle&lt;/code&gt; does not, please check the following points:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#shader-limitation&quot;&gt;Shader Limitation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;UIParticle&lt;/code&gt; does not support all built-in shaders except for &lt;code&gt;UI/Default&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Most cases can be solved by using &lt;code&gt;UI/Additive&lt;/code&gt; or &lt;code&gt;UI/Default&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Particles are not masked 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;UIParticle&lt;/code&gt; is maskable.&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;Mask&lt;/code&gt; or &lt;code&gt;RectMask2D&lt;/code&gt; component properly.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#how-to-make-a-custom-shader-to-support-maskrectmask2d-component&quot;&gt;Use maskable/clipable shader&lt;/a&gt; (such as &lt;code&gt;UI/Additive&lt;/code&gt; or &lt;code&gt;UI/Default&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Particles are too small 
  &lt;ul&gt; 
   &lt;li&gt;If particles are small enough, they will not appear on the screen.&lt;/li&gt; 
   &lt;li&gt;Increase the &lt;code&gt;Scale&lt;/code&gt; value.&lt;/li&gt; 
   &lt;li&gt;If you don&#39;t want to change the apparent size depending on the resolution, try the &lt;code&gt;Auto Scaling&lt;/code&gt; option.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Particles are too many 
  &lt;ul&gt; 
   &lt;li&gt;No more than 65535 vertices can be displayed (for mesh combination limitations).&lt;/li&gt; 
   &lt;li&gt;Please set &lt;code&gt;Emission&lt;/code&gt; module and &lt;code&gt;Max Particles&lt;/code&gt; of ParticleSystem properly.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Particles are emitted off-screen. 
  &lt;ul&gt; 
   &lt;li&gt;When &lt;code&gt;Position Mode = Relative&lt;/code&gt;, particles are emitted from the scaled position of the ParticleSystem, not from the screen point of the ParticleSystem.&lt;/li&gt; 
   &lt;li&gt;Place the ParticleSystem in the proper position or try &lt;code&gt;Position Mode = Absolute&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Attaching &lt;code&gt;UIParticle&lt;/code&gt; to the same object as &lt;code&gt;ParticleSystem&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Transform.localScale&lt;/code&gt; will be overridden by the &lt;code&gt;Auto Scaling&lt;/code&gt; option.&lt;/li&gt; 
   &lt;li&gt;It is recommended to place &lt;code&gt;ParticleSystem&lt;/code&gt; under &lt;code&gt;UIParticle&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;Transform.localScale&lt;/code&gt; contains 0, rendering will be skipped.&lt;/li&gt; 
 &lt;li&gt;Displayed particles are in the correct position but too large/too small 
  &lt;ul&gt; 
   &lt;li&gt;Adjust &lt;code&gt;ParticleSystem.renderer.Min/MaxParticleSize&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h3&gt;Shader Limitation&lt;/h3&gt; 
&lt;p&gt;The use of UI shaders is recommended.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you need a simple Additive shader, use the &lt;code&gt;UI/Additive&lt;/code&gt; shader instead.&lt;/li&gt; 
 &lt;li&gt;If you need a simple alpha-blend shader, use the &lt;code&gt;UI/Default&lt;/code&gt; shader instead.&lt;/li&gt; 
 &lt;li&gt;If your custom shader does not work properly with UIParticle, consider creating a custom UI shader.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Built-in shaders are not supported&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;UIParticle&lt;/code&gt; does not support all built-in shaders except for &lt;code&gt;UI/Default&lt;/code&gt;.&lt;br&gt; If their use is detected, an error is displayed in the inspector.&lt;br&gt; Use UI shaders instead.&lt;/p&gt; 
&lt;h4&gt;(Unity 2018 or 2019) UV.zw components will be discarded&lt;/h4&gt; 
&lt;p&gt;UIParticleRenderer renders the particles based on UIVertex.&lt;br&gt; Therefore, only the xy components are available for each UV in the shader. (zw components will be discarded).&lt;br&gt; So unfortunately, UIParticles will not work well with some shaders.&lt;/p&gt; 
&lt;h4&gt;(Unity 2018 or 2019) Custom vertex streams&lt;/h4&gt; 
&lt;p&gt;When using custom vertex streams, you can fill zw components with &quot;unnecessary&quot; data.&lt;br&gt; Refer to &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/issues/191&quot;&gt;this issue&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Overheads&lt;/h3&gt; 
&lt;p&gt;UIParticle has some overheads, and the batching depends on uGUI.&lt;br&gt; When improving performance, keep the following in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are displaying a large number of the same effect, consider the &lt;code&gt;Mesh Sharing&lt;/code&gt; feature in the &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#uiparticle-component&quot;&gt;UIParticle Component&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;If you don&#39;t like the uniform output, consider the &lt;code&gt;Random Group&lt;/code&gt; feature.&lt;br&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/174311048-c882df81-6c34-4eba-b0aa-5645457692f1.gif&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If you are using multiple materials, you will have more draw calls. 
  &lt;ul&gt; 
   &lt;li&gt;Consider a single material, atlasing the sprites, and using &lt;code&gt;Sprite&lt;/code&gt; mode in the &lt;code&gt;Texture Sheet Animation&lt;/code&gt; module in the ParticleSystem.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How to Make a Custom Shader to Support &lt;code&gt;Mask&lt;/code&gt; and &lt;code&gt;RectMask2D&lt;/code&gt; Component&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Shader tips&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ShaderLab&quot;&gt;Shader &quot;Your/Custom/Shader&quot;
{
    Properties
    {
        // ...
        // #### required for Mask ####
        _StencilComp (&quot;Stencil Comparison&quot;, Float) = 8
        _Stencil (&quot;Stencil ID&quot;, Float) = 0
        _StencilOp (&quot;Stencil Operation&quot;, Float) = 0
        _StencilWriteMask (&quot;Stencil Write Mask&quot;, Float) = 255
        _StencilReadMask (&quot;Stencil Read Mask&quot;, Float) = 255
        _ColorMask (&quot;Color Mask&quot;, Float) = 15
        [Toggle(UNITY_UI_ALPHACLIP)] _UseUIAlphaClip (&quot;Use Alpha Clip&quot;, Float) = 0
    }

    SubShader
    {
        Tags
        {
            // ...
        }

        // #### required for Mask ####
        Stencil
        {
            Ref [_Stencil]
            Comp [_StencilComp]
            Pass [_StencilOp]
            ReadMask [_StencilReadMask]
            WriteMask [_StencilWriteMask]
        }
        ColorMask [_ColorMask]
        // ...

        Pass
        {
            // ...
            // #### required for RectMask2D ####
            #include &quot;UnityUI.cginc&quot;
            #pragma multi_compile __ UNITY_UI_CLIP_RECT
            float4 _ClipRect;

            // #### required for Mask ####
            #pragma multi_compile __ UNITY_UI_ALPHACLIP

            struct appdata_t
            {
                // ...
            };

            struct v2f
            {
                // ...
                // #### required for RectMask2D ####
                float4 worldPosition    : TEXCOORD1;
            };
            
            v2f vert(appdata_t v)
            {
                v2f OUT;
                // ...
                // #### required for RectMask2D ####
                OUT.worldPosition = v.vertex;
                return OUT;
            }

            fixed4 frag(v2f IN) : SV_Target
            {
                // ...
                // #### required for RectMask2D ####
                #ifdef UNITY_UI_CLIP_RECT
                    color.a *= UnityGet2DClipping(IN.worldPosition.xy, _ClipRect);
                #endif

                // #### required for Mask ####
                #ifdef UNITY_UI_ALPHACLIP
                    clip (color.a - 0.001);
                #endif

                return color;
            }
            ENDCG
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;h3&gt;Issues&lt;/h3&gt; 
&lt;p&gt;Issues are incredibly valuable to this project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ideas provide a valuable source of contributions that others can make.&lt;/li&gt; 
 &lt;li&gt;Problems help identify areas where this project needs improvement.&lt;/li&gt; 
 &lt;li&gt;Questions indicate where contributors can enhance the user experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Pull Requests&lt;/h3&gt; 
&lt;p&gt;Pull requests offer a fantastic way to contribute your ideas to this repository.&lt;br&gt; Please refer to &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/raw/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/tree/develop&quot;&gt;develop branch&lt;/a&gt; for guidelines.&lt;/p&gt; 
&lt;h3&gt;Support&lt;/h3&gt; 
&lt;p&gt;This is an open-source project developed during my spare time.&lt;br&gt; If you appreciate it, consider supporting me.&lt;br&gt; Your support allows me to dedicate more time to development. 😊&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.patreon.com/join/2343451?&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/50731629-3b18b480-11ad-11e9-8fad-4b13f27969c1.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/users/mob-sakai/sponsorship&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/66942881-03686280-f085-11e9-9586-fc0b6011029f.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/96986908-434a0b80-155d-11eb-8275-85138ab90afa.png&quot; alt=&quot;&quot;&gt; &lt;a href=&quot;https://github.com/mob-sakai&quot;&gt;mob-sakai&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=mob_sakai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/mob_sakai.svg?label=Follow&amp;amp;style=social&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/followers/mob-sakai?style=social&quot; alt=&quot;GitHub followers&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub page : &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI&quot;&gt;https://github.com/mob-sakai/ParticleEffectForUGUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Releases : &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/releases&quot;&gt;https://github.com/mob-sakai/ParticleEffectForUGUI/releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Issue tracker : &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/issues&quot;&gt;https://github.com/mob-sakai/ParticleEffectForUGUI/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Change log : &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/raw/main/CHANGELOG.md&quot;&gt;https://github.com/mob-sakai/ParticleEffectForUGUI/blob/main/CHANGELOG.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>PowerShell/PowerShell</title>
      <link>https://github.com/PowerShell/PowerShell</link>
      <description>&lt;p&gt;PowerShell for every system!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/assets/ps_black_64.svg?sanitize=true&quot; alt=&quot;logo&quot;&gt; PowerShell&lt;/h1&gt; 
&lt;p&gt;Welcome to the PowerShell GitHub Community! &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/overview&quot;&gt;PowerShell&lt;/a&gt; is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models. It includes a command-line shell, an associated scripting language, and a framework for processing cmdlets.&lt;/p&gt; 
&lt;h2&gt;Windows PowerShell vs. PowerShell 7+&lt;/h2&gt; 
&lt;p&gt;Although this repository started as a fork of the Windows PowerShell codebase, changes made in this repository are not ported back to Windows PowerShell 5.1. This also means that &lt;a href=&quot;https://github.com/PowerShell/PowerShell/issues&quot;&gt;issues tracked here&lt;/a&gt; are only for PowerShell 7.x and higher. Windows PowerShell specific issues should be reported with the &lt;a href=&quot;https://support.microsoft.com/windows/send-feedback-to-microsoft-with-the-feedback-hub-app-f59187f8-8739-22d6-ba93-f66612949332&quot;&gt;Feedback Hub app&lt;/a&gt;, by choosing &quot;Apps &amp;gt; PowerShell&quot; in the category.&lt;/p&gt; 
&lt;h2&gt;New to PowerShell?&lt;/h2&gt; 
&lt;p&gt;If you are new to PowerShell and want to learn more, we recommend reviewing the &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/learn/more-powershell-learning&quot;&gt;getting started&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Get PowerShell&lt;/h2&gt; 
&lt;p&gt;PowerShell is supported on Windows, macOS, and a variety of Linux platforms. For more information, see &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/install/installing-powershell&quot;&gt;Installing PowerShell&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading PowerShell&lt;/h2&gt; 
&lt;p&gt;For best results when upgrading, you should use the same install method you used when you first installed PowerShell. The update method is different for each platform and install method.&lt;/p&gt; 
&lt;h2&gt;Community Dashboard&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/PSPublicDashboard&quot;&gt;Dashboard&lt;/a&gt; with visualizations for community contributions and project status using PowerShell, Azure, and PowerBI.&lt;/p&gt; 
&lt;p&gt;For more information on how and why we built this dashboard, check out this &lt;a href=&quot;https://devblogs.microsoft.com/powershell/powershell-open-source-community-dashboard/&quot;&gt;blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discussions&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/discussions/quickstart&quot;&gt;GitHub Discussions&lt;/a&gt; is a feature to enable free and open discussions within the community for topics that are not related to code, unlike issues.&lt;/p&gt; 
&lt;p&gt;This is an experiment we are trying in our repositories, to see if it helps move discussions out of issues so that issues remain actionable by the team or members of the community. There should be no expectation that PowerShell team members are regular participants in these discussions. Individual PowerShell team members may choose to participate in discussions, but the expectation is that community members help drive discussions so that team members can focus on issues.&lt;/p&gt; 
&lt;p&gt;Create or join a &lt;a href=&quot;https://github.com/PowerShell/PowerShell/discussions&quot;&gt;discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Chat&lt;/h2&gt; 
&lt;p&gt;Want to chat with other members of the PowerShell community?&lt;/p&gt; 
&lt;p&gt;There are dozens of topic-specific channels on our community-driven PowerShell Virtual User Group, which you can join on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/PowerShell/PowerShell&quot;&gt;Gitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/PowerShell&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.libera.chat/#powershell&quot;&gt;IRC&lt;/a&gt; on Libera.Chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/psslack&quot;&gt;Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building the Repository&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/building/linux.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/building/windows-core.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/building/macos.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you have any problems building, consult the developer &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/FAQ.md&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Build status of nightly builds&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (Windows)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (Linux)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (macOS)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;CodeFactor Grade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=32&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-Windows-daily&quot; alt=&quot;windows-nightly-image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=23&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-linux-daily?branchName=master&quot; alt=&quot;linux-nightly-image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=24&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-macos-daily?branchName=master&quot; alt=&quot;macOS-nightly-image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.codefactor.io/repository/github/powershell/powershell&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/powershell/powershell/badge&quot; alt=&quot;cf-image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Downloading the Source Code&lt;/h2&gt; 
&lt;p&gt;You can clone the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/PowerShell/PowerShell.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/git&quot;&gt;working with the PowerShell repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Developing and Contributing&lt;/h2&gt; 
&lt;p&gt;Please look into the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/raw/master/.github/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; to know how to develop and contribute. If you are developing .NET Core C# applications targeting PowerShell Core, &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/FAQ.md#where-do-i-get-the-powershell-core-sdk-package&quot;&gt;check out our FAQ&lt;/a&gt; to learn more about the PowerShell SDK NuGet package.&lt;/p&gt; 
&lt;p&gt;Also, make sure to check out our &lt;a href=&quot;https://github.com/powershell/powershell-rfc&quot;&gt;PowerShell-RFC repository&lt;/a&gt; for request-for-comments (RFC) documents to submit and give comments on proposed and future designs.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;For support, see the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/.github/SUPPORT.md&quot;&gt;Support Section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Legal and Licensing&lt;/h2&gt; 
&lt;p&gt;PowerShell is licensed under the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Windows Docker Files and Images&lt;/h3&gt; 
&lt;p&gt;License: By requesting and using the Container OS Image for Windows containers, you acknowledge, understand, and consent to the Supplemental License Terms available on &lt;a href=&quot;https://mcr.microsoft.com/en-us/product/powershell/tags&quot;&gt;Microsoft Artifact Registry&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Telemetry&lt;/h3&gt; 
&lt;p&gt;Please visit our &lt;a href=&quot;https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_telemetry&quot;&gt;about_Telemetry&lt;/a&gt; topic to read details about telemetry gathered by PowerShell.&lt;/p&gt; 
&lt;h2&gt;Governance&lt;/h2&gt; 
&lt;p&gt;The governance policy for the PowerShell project is described the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/raw/master/docs/community/governance.md&quot;&gt;PowerShell Governance&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; before participating in this project.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For any security issues, please see our &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RayWangQvQ/BiliBiliToolPro</title>
      <link>https://github.com/RayWangQvQ/BiliBiliToolPro</link>
      <description>&lt;p&gt;B 站（bilibili）自动任务工具，支持docker、青龙、k8s等多种部署方式。敏感肌也能用。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/docs/imgs/2233.png&quot; alt=&quot;2233&quot;&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1 align=&quot;center&quot;&gt; &lt;p&gt;BiliBiliTool&lt;/p&gt; &lt;/h1&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/RayWangQvQ/BiliBiliToolPro?style=flat-square&quot; alt=&quot;GitHub Stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/network&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/RayWangQvQ/BiliBiliToolPro?style=flat-square&quot; alt=&quot;GitHub Forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/RayWangQvQ/BiliBiliToolPro?style=flat-square&quot; alt=&quot;GitHub Issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/RayWangQvQ/BiliBiliToolPro?style=flat-square&quot; alt=&quot;GitHub Contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/RayWangQvQ/BiliBiliToolPro/total?style=flat-square&quot; alt=&quot;GitHub All Releases&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/RayWangQvQ/BiliBiliToolPro?style=flat-square&quot; alt=&quot;GitHub Release (latest SemVer)&quot;&gt; &lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/RayWangQvQ/BiliBiliToolPro?style=flat-square&quot; alt=&quot;GitHub License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;BiliBiliTool 是一个自动执行任务的工具，当我们忘记做某项任务时，它会像一个贴心小助手，按照我们预先吩咐它的命令，在指定频率、时间范围内帮助我们完成计划的任务。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;详细功能如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;扫码登录，自动更新cookie&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每日获取满额升级经验（登录、投币、点赞、分享视频）（支持指定支持up主）&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;直播间挂机&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每天漫画签到&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每天直播签到&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;直播中心银瓜子兑换为硬币&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每月领取大会员赠送的 5 张 B 币券和福利（忘记或者不领就浪费了哦）&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每月领取大会员漫画福利&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;月底在 B 币券过期前进行充电（支持指定想要支持的up主，如果没有喜欢的up，也可以为自己充个电啊，做个用爱为自己发电的人~）&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;直播中心天选时刻自动参与抽奖&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;批量取关&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;大会员大积分任务&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持多账号&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;理论上支持所有远端的日志推送（默认支持推送到Telegram、企业微信、钉钉、PushPlus、Server酱、钉钉、酷推，另外也支持自定义推送到任意api）&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;[目录]&lt;/p&gt; 
&lt;!-- TOC depthFrom:2 --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#1-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8&quot;&gt;1. 如何使用&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#11-%E9%83%A8%E7%BD%B2-bilibilitool&quot;&gt;1.1. 部署 BiliBiliTool&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#111-%E6%96%B9%E5%BC%8F%E4%B8%80%E9%9D%92%E9%BE%99%E6%8E%A8%E8%8D%90&quot;&gt;1.1.1. 方式一：青龙（推荐）&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#112-%E6%96%B9%E5%BC%8F%E4%BA%8Cdocker%E6%88%96podman%E5%AE%B9%E5%99%A8%E5%8C%96%E8%BF%90%E8%A1%8C&quot;&gt;1.1.2. 方式二：Docker或Podman容器化运行&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#113-%E6%96%B9%E5%BC%8F%E4%B8%89%E4%B8%8B%E8%BD%BD%E7%A8%8B%E5%BA%8F%E5%8C%85%E5%88%B0%E6%9C%AC%E5%9C%B0%E6%88%96%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E8%A1%8C&quot;&gt;1.1.3. 方式三：下载程序包到本地或服务器运行&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#114-%E6%96%B9%E5%BC%8F%E5%9B%9B%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0scf&quot;&gt;1.1.4. 方式四：腾讯云函数SCF&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#115-%E6%96%B9%E5%BC%8F%E4%BA%94github-actions&quot;&gt;1.1.5. 方式五：&lt;del&gt;GitHub Actions&lt;/del&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#116-%E6%96%B9%E5%BC%8F%E5%85%ADchart%E9%83%A8%E7%BD%B2&quot;&gt;1.1.6. 方式六：Chart部署&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#12-%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E5%8F%AF%E9%80%89&quot;&gt;1.2. 消息推送（可选）&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#2-%E5%8A%9F%E8%83%BD%E4%BB%BB%E5%8A%A1%E8%AF%B4%E6%98%8E&quot;&gt;2. 功能任务说明&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#3-%E4%B8%AA%E6%80%A7%E5%8C%96%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE&quot;&gt;3. 个性化自定义配置&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#4-%E5%A4%9A%E8%B4%A6%E5%8F%B7%E6%94%AF%E6%8C%81&quot;&gt;4. 多账号支持&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#5-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&quot;&gt;5. 常见问题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#6-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83%E5%8F%8A%E6%9B%B4%E6%96%B0&quot;&gt;6. 版本发布及更新&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#7-%E6%88%90%E4%B8%BA%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E6%88%90%E5%91%98&quot;&gt;7. 成为开源贡献成员&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#71-%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81&quot;&gt;7.1. 贡献代码&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#72-%E8%B4%A1%E7%8C%AE%E6%96%87%E6%A1%A3&quot;&gt;7.2. 贡献文档&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#8-%E6%8D%90%E8%B5%A0%E6%94%AF%E6%8C%81&quot;&gt;8. 捐赠支持&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/#9-%E5%85%B6%E4%BB%96&quot;&gt;9. 其他&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Github 仓库地址：&lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro&quot;&gt;RayWangQvQ/BiliBiliToolPro&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;本应用仅用于学习和测试，作者本人并不对其负责，请于运行测试完成后自行删除，请勿滥用！&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;所有代码都是开源且透明的，任何人均可查看，程序不会保存或滥用任何用户的个人信息&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;应用内几乎所有功能都开放为了配置（如任务开关、日期、id等），详细信息可阅读配置文档，请对自己配置负责&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本地运行图示：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/docs/imgs/run-exe.png&quot; alt=&quot;运行图示&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;（如果图片挂了，请自己架梯子，没有的也可以先参考 &lt;a href=&quot;https://www.cnblogs.com/RayWang/p/13909784.html&quot;&gt;我的博客&lt;/a&gt;，但内容不保证最新)&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;1. 如何使用&lt;/h2&gt; 
&lt;p&gt;BiliBiliTool 实现自动完成任务的原理，是通过调用一系列开放的api实现的。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;要使用 BiliBiliTool，很简单，按照下面教程部署完成，运行后扫码登录即可。&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;1.1. 部署 BiliBiliTool&lt;/h3&gt; 
&lt;p&gt;支持多种部署方式，以下选择任一适合自己的方式即可。&lt;/p&gt; 
&lt;h4&gt;1.1.1. 方式一：青龙（推荐）&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/qinglong/README.md&quot;&gt;&amp;gt;&amp;gt;青龙部署教程&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;1.1.2. 方式二：Docker或Podman容器化运行&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/docker/README.md&quot;&gt;&amp;gt;&amp;gt;Docker部署说明&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/podman/README.md&quot;&gt;&amp;gt;&amp;gt;Podman部署说明&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;1.1.3. 方式三：下载程序包到本地或服务器运行&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/docs/runInLocal.md&quot;&gt;&amp;gt;&amp;gt;本地部署说明&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;1.1.4. 方式四：腾讯云函数SCF&lt;/h4&gt; 
&lt;p&gt;当前腾讯云函数已改为收费模式，不推荐。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/tencentScf/README.md&quot;&gt;&amp;gt;&amp;gt;腾讯云函数部署说明&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;1.1.5. 方式五：&lt;del&gt;GitHub Actions&lt;/del&gt;&lt;/h4&gt; 
&lt;p&gt;GitHub官方反对并抵制对Actions的滥用，建议所有使用该方式运行的朋友，暂时先替换其他运行方式，避免封号。&lt;/p&gt; 
&lt;h4&gt;1.1.6. 方式六：Chart部署&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/helm/README.md&quot;&gt;&amp;gt;&amp;gt;Chart部署说明&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;1.2. 消息推送（可选）&lt;/h3&gt; 
&lt;p&gt;如果配置了推送，执行成功后，指定的接收端会收到推送消息，推送效果如下所示：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/docs/imgs/wechat-push.png&quot; alt=&quot;微信推送图示&quot;&gt;&lt;/p&gt; 
&lt;p&gt;目前默认支持&lt;strong&gt;PushPlus推送、企业微信应用推送、企业微信推送、钉钉推送、Microsoft Teams推送、Telegram推送、Server酱推送和酷推QQ推送&lt;/strong&gt;（以上顺序即为个人推荐的排序），如果需要推送到其他端，也可以配置为任意的可以接受消息的Api地址，关于如何配置推送请详见下面的&lt;strong&gt;个性化自定义配置&lt;/strong&gt;章节。&lt;/p&gt; 
&lt;h2&gt;2. 功能任务说明&lt;/h2&gt; 
&lt;p&gt;这里的&lt;strong&gt;任务&lt;/strong&gt;是指一组功能的集合，是工具每次运行的最小单位。工具启动后会根据我们输入的任务编码，运行相应的任务，如：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet Ray.BiliBiliTool.Console.dll --runTasks=Daily
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;程序启动后，会执行任务Code为 &lt;code&gt;Daily&lt;/code&gt; 的&lt;code&gt;每日经验任务&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;可以通过使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 符拼接多个任务，程序启动后会按顺序依次执行指定的任务集合，如&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet Ray.BiliBiliTool.Console.dll --runTasks=Daily&amp;amp;LiveLottery
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;会依次运行&lt;code&gt;每日任务&lt;/code&gt;和&lt;code&gt;天选抽奖任务&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;任务列表如下：&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;任务名&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Code&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;功能&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;推荐运行频率&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;备注&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;扫码登录&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Login&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;试用bili app扫码登录，用于第一次运行时初始化cookie，或cookie过期时的更新。不同平台会将cookie存储到不同地方，青龙存储到环境变量中，其他会存储到cookies.json中&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;手动&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;每日任务&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Daily&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;完成每日任务获取满额65点经验（登录、观看视频、分享视频、投币），以及签到、领福利和充电等附属功能&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;每天一次&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;天选时刻抽奖&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;LiveLottery&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;直播中心天选时刻抽奖&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;建议每天运行0-4次&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;对应Actions工作流默认是关闭的，需要添加key为&lt;code&gt;ISOPENLIVELOTTERYTASK&lt;/code&gt;、值为&lt;code&gt;true&lt;/code&gt;的secret来手动开启；大部分抽奖都需要关注主播，介意的不要开启&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;批量取关&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;UnfollowBatched&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;批量取关指定分组下的所有关注（主要用于清理天选抽奖而产生的关注）&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;需要时手动运行&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;需要通过配置指定2个参数：&lt;code&gt;GroupName&lt;/code&gt;（分组名称，如&lt;code&gt;天选时刻&lt;/code&gt;）和&lt;code&gt;Count&lt;/code&gt;（目标取关个数，-1表示全部），应用会倒序从后往前取关指定个数&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;大会员大积分&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;VipBigPoint&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;大会员大积分任务（签到、浏览、观看）&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;每天凌晨一点运行&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;直播间挂机&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;LiveFansMedal&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;直播间挂机&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;每天一次&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;测试Cookie&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Test&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;测试Cookie是否正常&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;需要时手动运行&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;主要用于调试&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;3. 个性化自定义配置&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/docs/configuration.md&quot;&gt;&amp;gt;&amp;gt;点击查看配置说明文档&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;4. 多账号支持&lt;/h2&gt; 
&lt;p&gt;部署成功后，直接去运行扫码登录任务，扫码成功后，应用会自动更新或添加cookie。&lt;/p&gt; 
&lt;p&gt;青龙平台会添加环境变量里，Key 为 &lt;code&gt;Ray_BiliBiliCookies__0&lt;/code&gt;、&lt;code&gt;Ray_BiliBiliCookies__1&lt;/code&gt;、&lt;code&gt;Ray_BiliBiliCookies__2&lt;/code&gt;...&lt;/p&gt; 
&lt;p&gt;其他平台默认会添加到名为cookies.json的账号配置文件中：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
  &quot;BiliBiliCookies&quot;: [
    &quot;cookie1&quot;,
    &quot;cookie2&quot;,
    &quot;...&quot;,
  ],
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;5. 常见问题&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/docs/questions.md&quot;&gt;&amp;gt;&amp;gt;点击查看常见问题文档&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/issues&quot;&gt;Issues（议题）&lt;/a&gt;板块可以用来提交&lt;strong&gt;Bug&lt;/strong&gt;和&lt;strong&gt;建议&lt;/strong&gt;；&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/discussions&quot;&gt;Discussions（讨论）&lt;/a&gt;板块可以用来&lt;strong&gt;提问&lt;/strong&gt;和&lt;strong&gt;讨论&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;大部分问题其实都可以在文档、议题和讨论中找到答案。&lt;/p&gt; 
&lt;p&gt;所以如果你有疑问，&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;请先确认是否可以通过升级到最新版本解决&lt;/li&gt; 
 &lt;li&gt;然后搜索文档（特别是配置说明文档和常见问题文档）、议题和讨论，查看是否已有其他人遇到相同问题、是否已有解决方案&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;如果确认还未解决，可以自己提交 Issue，或发布 Discussions 与大家一起探讨，我会尽快确认并解决。&lt;/p&gt; 
&lt;p&gt;（关于如何正确的提交Issue，请详见&lt;strong&gt;常见问题文档&lt;/strong&gt;）。&lt;/p&gt; 
&lt;h2&gt;6. 版本发布及更新&lt;/h2&gt; 
&lt;p&gt;当前正处于稳定的迭代开发中，详细待更新和计划内容可参见 &lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/projects&quot;&gt;Projects&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliToolPro/issues&quot;&gt;Issues&lt;/a&gt; 。&lt;/p&gt; 
&lt;p&gt;想要有重要更新时收到通知的话，可以把仓库右上角的&lt;code&gt;Star&lt;/code&gt;或&lt;code&gt;Watch&lt;/code&gt;按钮点亮。&lt;/p&gt; 
&lt;h2&gt;7. 成为开源贡献成员&lt;/h2&gt; 
&lt;h3&gt;7.1. 贡献代码&lt;/h3&gt; 
&lt;p&gt;如果你有好的想法，欢迎向仓库贡献你的代码，贡献步骤：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;搜索查看 Issue，确定是否已有人提过同类问题&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;对于不确定的主题，为避免code结束后PR不被接受，可以先新建 Issue，描述问题或建议，讨论清楚后再动手编码&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果确认自己可以解决，请 Fork 仓库后，在&lt;strong&gt;develop 分支&lt;/strong&gt;进行编码开发，完成后&lt;strong&gt;提交 PR 到 develop 分支&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我会尽快进行代码审核，测试成功后会合并入 main 主分支，提前感谢您的贡献。&lt;/p&gt; 
&lt;h3&gt;7.2. 贡献文档&lt;/h3&gt; 
&lt;p&gt;文档部分由于我个人精力有限（写文档比写代码累多了），所以有些地方写的很简略，甚至有遗漏和错别字，不能贡献代码的朋友也欢迎来一起维护文档，欢迎 PR 来纠正我，一样都算是对开源做贡献了。&lt;/p&gt; 
&lt;h2&gt;8. 捐赠支持&lt;/h2&gt; 
&lt;p&gt;个人维护开源不易&lt;/p&gt; 
&lt;p&gt;如果觉得我写的程序对你小有帮助&lt;/p&gt; 
&lt;p&gt;或者，就是单纯的想集资给我买瓶霸王增发液&lt;/p&gt; 
&lt;p&gt;那么下面的赞赏码可以扫一扫啦&lt;/p&gt; 
&lt;p&gt;（赞赏时记得留下【昵称】和【留言】~ 另外我发现很多留言想要进群或者加好友的，一定一定要记得留下微信号哈，微信赞赏页面是看不到微信号的）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;☟☟☟ 扫码自动赞赏 1 元：☟☟☟&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/docs/imgs/donate.jpg&quot; alt=&quot;赞赏码&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;项目中的优先支持的UP主的配置项，默认是作者的 UpId （只是作为了 JSON 配置文件的默认值，代码是干净的），需要更改的话，直接修改相应配置即可（secrets或环境变量等各种方式都行）。 当然，不改的话，也算是另一种捐赠支持作者的方式啦。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;感谢支持~&lt;/p&gt; 
&lt;h2&gt;9. 其他&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;API&lt;/code&gt;参考：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/&quot;&gt;www.bilibili.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/SocialSisterYi/bilibili-API-collect&quot;&gt;SocialSisterYi/bilibili-API-collect&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/JunzhouLiu/BILIBILI-HELPER&quot;&gt;JunzhouLiu/BILIBILI-HELPER&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;感谢&lt;code&gt;JetBrain&lt;/code&gt;提供的免费证书支持：&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;code&gt;JetBrain&lt;/code&gt; for the free certificate support:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://resources.jetbrains.com/storage/products/company/brand/logos/ReSharper.svg?sanitize=true&quot; alt=&quot;ReSharper logo&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/kiota</title>
      <link>https://github.com/microsoft/kiota</link>
      <description>&lt;p&gt;OpenAPI based HTTP Client code generator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/actions/workflows/dotnet.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/kiota/actions/workflows/dotnet.yml/badge.svg?sanitize=true&quot; alt=&quot;Dotnet&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/kiota/actions/workflows/codeql-analysis.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/kiota/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&quot; alt=&quot;CodeQL&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=microsoft_kiota&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=microsoft_kiota&amp;amp;metric=coverage&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=microsoft_kiota&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=microsoft_kiota&amp;amp;metric=alert_status&quot; alt=&quot;Sonarcloud Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Kiota is a command line tool for generating an API client to call any OpenAPI described API you are interested in. The goal is to eliminate the need to take a dependency on a different API SDK for every API that you need to call. Kiota API clients provide a strongly typed experience with all the features you expect from a high quality API SDK, but without having to learn a new library for every HTTP API.&lt;/p&gt; 
&lt;p&gt;This library builds on top of the &lt;a href=&quot;https://github.com/microsoft/openapi.net&quot;&gt;Microsoft.OpenAPI.NET&lt;/a&gt; library to ensure comprehensive support for APIs that use OpenAPI descriptions. One of the goals of the project is to provide the best code generator support possible for OpenAPI and JSON Schema features. The &lt;a href=&quot;https://learn.microsoft.com/openapi/kiota&quot;&gt;conceptual documentation&lt;/a&gt; describes how kiota works and the high level concepts, this readme documents how to get started with Kiota.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Generating SDKs&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install required tools and dependencies. (refer to the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/kiota/main/#supported-languages&quot;&gt;Supported Languages&lt;/a&gt; table under the &lt;strong&gt;Required tools &amp;amp; dependencies&lt;/strong&gt; column)&lt;/li&gt; 
 &lt;li&gt;Get Kiota using one of the &lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/install&quot;&gt;available options&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Generate your API client, checkout the &lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/using&quot;&gt;Parameters reference&lt;/a&gt; for the different options.&lt;/li&gt; 
 &lt;li&gt;Start calling your API using your fluent API Client.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Supported languages&lt;/h3&gt; 
&lt;p&gt;The following table provides an overview of the languages supported by Kiota and the progress in the implementation of the different components.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Generation&lt;/th&gt; 
   &lt;th&gt;Abstractions&lt;/th&gt; 
   &lt;th&gt;Serialization&lt;/th&gt; 
   &lt;th&gt;Authentication&lt;/th&gt; 
   &lt;th&gt;HTTP&lt;/th&gt; 
   &lt;th&gt;Required tools &amp;amp; dependencies&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CLI&lt;/td&gt; 
   &lt;td&gt;🛠️&lt;/td&gt; 
   &lt;td&gt;(see CSharp) + &lt;a href=&quot;https://github.com/microsoft/kiota-cli-commons&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;(see CSharp)&lt;/td&gt; 
   &lt;td&gt;(see CSharp)&lt;/td&gt; 
   &lt;td&gt;(see CSharp)&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/cli&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CSharp&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/abstractions&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/serialization/form&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/serialization/json&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/serialization/multipart&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/serialization/text&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/raw/main/src/abstractions/authentication/AnonymousAuthenticationProvider.cs&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/raw/main/src/abstractions/authentication/ApiKeyAuthenticationProvider.cs&quot;&gt;API Key&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/authentication/azure&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/http/httpClient&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/dotnet&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dart&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_abstractions&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_serialization_form&quot;&gt;🛠️ FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_serialization_json&quot;&gt;🛠️ JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_serialization_multipart&quot;&gt;🛠️ MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_serialization_text&quot;&gt;🛠️ TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart/raw/main/packages/microsoft_kiota_abstractions/lib/src/authentication/anonymous_authentication_provider.dart&quot;&gt;🛠️ Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dart/raw/main/packages/microsoft_kiota_abstractions/lib/src/authentication/api_key_authentication_provider.dart&quot;&gt;🛠️ API Key&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_http&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/openapi/kiota/quickstarts/dart&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-go&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-serialization-form-go&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-json-go&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-multipart-go&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-text-go&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-go/raw/main/authentication/anonymous_authentication_provider.go&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-go/raw/main/authentication/api_key_authentication_provider.go&quot;&gt;API Key&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-authentication-azure-go/&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-http-go/&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/go&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/abstractions&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/serialization/form&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/serialization/json&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/serialization/multipart&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/serialization/text&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-java/raw/main/components/abstractions/src/main/java/com/microsoft/kiota/authentication/AnonymousAuthenticationProvider.java&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/raw/main/components/abstractions/src/main/java/com/microsoft/kiota/authentication/ApiKeyAuthenticationProvider.java&quot;&gt;API Key&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/authentication/azure&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/http/okHttp&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/java&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PHP&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-php&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-serialization-json-php&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-form-php&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-multipart-php&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-text-php&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-php/raw/main/src/Authentication/AnonymousAuthenticationProvider.php&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-authentication-phpleague-php&quot;&gt;✔️ PHP League&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-http-guzzle-php&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/php&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-python&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-serialization-form-python&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-json-python&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-multipart-python&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-text-python&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-python/raw/main/kiota_abstractions/authentication/anonymous_authentication_provider.py&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-authentication-azure-python&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-http-python&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/python&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ruby&lt;/td&gt; 
   &lt;td&gt;🛠️&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-ruby&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/issues/2077&quot;&gt;❌ FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-json-ruby&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/3032&quot;&gt;❌ MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/1049&quot;&gt;❌ TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-ruby/raw/main/lib/microsoft_kiota_abstractions/authentication/anonymous_authentication_provider.rb&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-authentication-oauth-ruby&quot;&gt;OAuth2&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-http-ruby&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/issues/1449&quot;&gt;❌&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/kiota/main/abstractions/swift&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/issues/2076&quot;&gt;❌ FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/1451&quot;&gt;❌ JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/3033&quot;&gt;❌ FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/1452&quot;&gt;❌ TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/kiota/main/abstractions/swift/Source/MicrosoftKiotaAbstractions/Authentication/AnonymousAuthenticationProvider.swift&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/1453&quot;&gt;❌ Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/issues/1454&quot;&gt;❌&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TypeScript/JavaScript&lt;/td&gt; 
   &lt;td&gt;🛠️&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/abstractions&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/serialization/form&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/serialization/json&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/serialization/multipart&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/serialization/text&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-typescript/raw/main/packages/abstractions/src/authentication/anonymousAuthenticationProvider.ts&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/raw/main/packages/abstractions/src/authentication/apiKeyAuthenticationProvider.ts&quot;&gt;API Key&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/authentication/azure&quot;&gt;Azure&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/authentication/spfx&quot;&gt;SPFx&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/http/fetch&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/typescript&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Legend: ✔ -&amp;gt; stable, 🛠️ -&amp;gt; in preview, ❌ -&amp;gt; not started, ▶ -&amp;gt; in progress.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Parameters reference&lt;/h3&gt; 
&lt;p&gt;Parameters are documented &lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/using&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;p&gt;Make sure you &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/kiota/main/CONTRIBUTING.md&quot;&gt;install the pre-requisites first&lt;/a&gt;. If you are using Visual Studio Code as your IDE, the &lt;strong&gt;launch.json&lt;/strong&gt; file already contains the configuration to run Kiota. By default this configuration will use the &lt;code&gt;openApiDocs/v1.0/Mail.yml&lt;/code&gt; under the &lt;a href=&quot;https://github.com/microsoftgraph/msgraph-sdk-powershell&quot;&gt;PowerShell repository&lt;/a&gt; as the OpenAPI to generate an SDK for. By default this configuration will output the generated files in a graphdotnetv4|graphjavav4|graphtypescriptv4 folder located in the parent folder this repository is cloned in.&lt;/p&gt; 
&lt;p&gt;Selecting the language you want to generate an API client for in the Visual Studio Debug tab and hitting &lt;strong&gt;F5&lt;/strong&gt; will automatically build, start, and attach the debugging process to Kiota.&lt;/p&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;You can find samples of clients generated with Kiota in the &lt;a href=&quot;https://github.com/microsoft/kiota-samples&quot;&gt;Kiota samples&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;An example of an application that is calling multiple API can be found in the &lt;a href=&quot;https://github.com/darrelmiller/KiotaApp&quot;&gt;KiotaApp&lt;/a&gt; repo&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Azure-Samples/cognitive-services-speech-sdk</title>
      <link>https://github.com/Azure-Samples/cognitive-services-speech-sdk</link>
      <description>&lt;p&gt;Sample code for the Microsoft Cognitive Services Speech SDK&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p&gt;page_type: sample languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cpp&lt;/li&gt; 
 &lt;li&gt;csharp&lt;/li&gt; 
 &lt;li&gt;java&lt;/li&gt; 
 &lt;li&gt;javascript&lt;/li&gt; 
 &lt;li&gt;nodejs&lt;/li&gt; 
 &lt;li&gt;objc&lt;/li&gt; 
 &lt;li&gt;python&lt;/li&gt; 
 &lt;li&gt;swift name: &quot;Microsoft Cognitive Services Speech SDK Samples&quot; description: &quot;Learn how to use the Microsoft Cognitive Services Speech SDK to add speech-enabled features to your apps.&quot; products:&lt;/li&gt; 
 &lt;li&gt;azure&lt;/li&gt; 
 &lt;li&gt;azure-cognitive-services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Sample Repository for the Microsoft Cognitive Services Speech SDK&lt;/h1&gt; 
&lt;p&gt;This project hosts the &lt;strong&gt;samples&lt;/strong&gt; for the Microsoft Cognitive Services Speech SDK. To find out more about the Microsoft Cognitive Services Speech SDK itself, please visit the &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;SDK documentation site&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;p&gt;Please check &lt;a href=&quot;https://aka.ms/csspeech/whatsnew&quot;&gt;here&lt;/a&gt; for release notes and older releases.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;This repository hosts samples that help you to get started with several features of the SDK. In addition more complex scenarios are included to give you a head-start on using speech technology in your application.&lt;/p&gt; 
&lt;p&gt;We tested the samples with the latest released version of the SDK on Windows 10, Linux (on &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/speech-sdk?tabs=linux&quot;&gt;supported Linux distributions and target architectures&lt;/a&gt;), Android devices (API 23: Android 6.0 Marshmallow or higher), Mac x64 (OS version 10.14 or higher) and Mac M1 arm64 (OS version 11.0 or higher) and iOS 11.4 devices.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;SDK documentation&lt;/a&gt; has extensive sections about getting started, setting up the SDK, as well as the process to acquire the required subscription keys. You will need subscription keys to run the samples on your machines, you therefore should follow the instructions on these pages before continuing.&lt;/p&gt; 
&lt;h2&gt;Get the samples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The easiest way to use these samples without using Git is to download the current version as a &lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/archive/master.zip&quot;&gt;ZIP file&lt;/a&gt;.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;On Windows, before you unzip the archive, right-click it, select &lt;strong&gt;Properties&lt;/strong&gt;, and then select &lt;strong&gt;Unblock&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Be sure to unzip the entire archive, and not just individual samples.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone this sample repository using a Git client.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build and run the samples&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note: the samples make use of the Microsoft Cognitive Services Speech SDK. By downloading the Microsoft Cognitive Services Speech SDK, you acknowledge its license, see &lt;a href=&quot;https://aka.ms/csspeech/license&quot;&gt;Speech SDK license agreement&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Please see the description of each individual sample for instructions on how to build and run it.&lt;/p&gt; 
&lt;h2&gt;Related GitHub repositories&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; - Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&quot;https://dev.botframework.com/&quot;&gt;Bot-Framework bot&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&quot;&gt;Custom Command&lt;/a&gt; web application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/cognitive-services-speech-sdk-js&quot;&gt;microsoft/cognitive-services-speech-sdk-js&lt;/a&gt; - JavaScript implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/cognitive-services-speech-sdk-go&quot;&gt;Microsoft/cognitive-services-speech-sdk-go&lt;/a&gt; - Go implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Speech-Service-Actions-Template&quot;&gt;Azure-Samples/Speech-Service-Actions-Template&lt;/a&gt; - Template to create a repository to develop Azure Custom Speech models with built-in support for DevOps and common software engineering practices&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Speech recognition quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech recognition using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/from-microphone&quot;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/from-microphone&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/from-microphone&quot;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/from-microphone&quot;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/from-microphone&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/from-microphone&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/from-microphone&quot;&gt;Quickstart C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/from-microphone&quot;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/from-microphone&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/browser&quot;&gt;Quickstart JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Web&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/node&quot;&gt;Quickstart Node.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a file.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/from-microphone&quot;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/from-microphone&quot;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a file with recorded speech.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/from-microphone&quot;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/from-microphone&quot;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/from-microphone&quot;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Speech translation quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech translation using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/translate-speech-to-text&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/translate-speech-to-text&quot;&gt;Quickstart C# .NET Framework for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/translate-speech-to-text&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/translate-speech-to-text&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/translate-speech-to-text&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Speech synthesis quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech synthesis to a speaker. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/text-to-speech&quot;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/text-to-speech&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/text-to-speech&quot;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/text-to-speech&quot;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/text-to-speech&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/text-to-speech&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/text-to-speech&quot;&gt;Quickstart for C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/text-to-speech&quot;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/text-to-speech&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/text-to-speech&quot;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/text-to-speech&quot;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/text-to-speech&quot;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/text-to-speech&quot;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/text-to-speech&quot;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Voice Assistant quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to create a custom Voice Assistant. The applications will connect to a previously authored bot configured to use the Direct Line Speech channel, send a voice request, and return a voice response activity (if configured). If you want to build these quickstarts from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/index-voice-assistants&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; for full Voice Assistant samples and tools.&lt;/p&gt; 
&lt;br&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/virtual-assistant&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/virtual-assistant&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;The following samples demonstrate additional capabilities of the Speech SDK, such as additional modes of speech recognition as well as intent recognition and translation. Voice Assistant samples can be found in a &lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;separate GitHub repo&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sample&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/windows/console&quot;&gt;C++ Console app for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, conversation transcription and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/linux/compressed-audio-input&quot;&gt;C++ Speech Recognition from MP3/Opus file (Linux only)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition from an MP3/Opus file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnet-windows/console&quot;&gt;C# Console app for .NET Framework on Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnetcore/console&quot;&gt;C# Console app for .NET Core (Windows or Linux)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/jre/console&quot;&gt;Java Console app for JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/python/console&quot;&gt;Python Console app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/speechtotext-uwp&quot;&gt;Speech-to-text UWP sample&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/texttospeech-uwp&quot;&gt;Text-to-speech UWP sample&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech synthesis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/android/sdkdemo/&quot;&gt;Speech recognition sample for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech and intent recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/browser/&quot;&gt;Speech recognition, synthesis, and translation sample for the browser, using JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Web&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/node&quot;&gt;Speech recognition and translation sample using JavaScript and Node.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Speech recognition sample for iOS using a connection object&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Extended speech recognition sample for iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition using streams etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Speech synthesis sample for iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech synthesis using streams etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/virtualassistant-uwp/&quot;&gt;C# UWP DialogServiceConnector sample for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/unity/speechrecognizer/&quot;&gt;C# Unity sample for Windows or Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation for Unity&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/unity/VirtualAssistantPreview/&quot;&gt;C# Unity SpeechBotConnector sample for Windows or Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the SpeechBotConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;C#, C++ and Java DialogServiceConnector samples&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, Android&lt;/td&gt; 
   &lt;td&gt;Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&quot;https://dev.botframework.com/&quot;&gt;Bot-Framework Bot&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&quot;&gt;Custom Command&lt;/a&gt; web application.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Samples for using the Speech Service REST API (no Speech SDK installation required):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sample&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch/&quot;&gt;Batch transcription&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Demonstrates usage of batch transcription from different programming languages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch-synthesis/&quot;&gt;Batch synthesis&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Demonstrates usage of batch synthesis from different programming languages&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Enumerate audio devices&lt;/td&gt; 
   &lt;td&gt;C++, Windows&lt;/td&gt; 
   &lt;td&gt;Shows how to get the Device ID of all connected microphones and loudspeakers. Device ID is required if you want to listen via non-default microphone (Speech Recognition), or play to a non-default loudspeaker (Text-To-Speech) using Speech SDK&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Enumerate audio devices&lt;/td&gt; 
   &lt;td&gt;C# .NET Framework, Windows&lt;/td&gt; 
   &lt;td&gt;-&quot;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Sample data for Custom Speech&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/sampledata/customspeech&quot;&gt;Sample data for Custom Speech&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;Microsoft Cognitive Services Speech Service and SDK Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>microsoft/sbom-tool</title>
      <link>https://github.com/microsoft/sbom-tool</link>
      <description>&lt;p&gt;The SBOM tool is a highly scalable and enterprise ready tool to create SPDX 2.2 compatible SBOMs for any variety of artifacts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SBOM Tool&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/sbom-tool/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/sbom-tool/actions/workflows/build.yml/badge.svg?branch=main&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/microsoft/sbom-tool/total&quot; alt=&quot;GitHub all releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/microsoft/sbom-tool?include_prereleases&quot; alt=&quot;GitHub release (latest by date including pre-releases)&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The SBOM tool is a highly scalable and enterprise ready tool to create SPDX 2.2 compatible SBOMs for any variety of artifacts. The tool uses the &lt;a href=&quot;https://github.com/microsoft/component-detection&quot;&gt;Component Detection&lt;/a&gt; libraries to detect components and the &lt;a href=&quot;https://github.com/clearlydefined/clearlydefined&quot;&gt;ClearlyDefined&lt;/a&gt; API to populate license information for these components.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/#download-and-installation&quot;&gt;Download and Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/#run-the-tool&quot;&gt;Run the tool&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/#integrating-sbom-tool-to-your-cicd-pipelines&quot;&gt;Integrating SBOM tool to your CI/CD pipelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/#telemetry&quot;&gt;Telemetry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/#trademarks&quot;&gt;Trademarks&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Download and Installation&lt;/h2&gt; 
&lt;h3&gt;Executables for Windows, Linux, macOS&lt;/h3&gt; 
&lt;p&gt;We distribute executables and SBOM files of the tool in &lt;a href=&quot;https://github.com/microsoft/sbom-tool/releases&quot;&gt;GitHub Releases&lt;/a&gt; page. You can go and download binaries manually or use commands below to get the latest version of the tool for your platform.&lt;/p&gt; 
&lt;p&gt;Please check the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/docs/sbom-tool-cli-reference.md&quot;&gt;CLI Reference&lt;/a&gt; document for additional help regarding the CLI tool.&lt;/p&gt; 
&lt;h4&gt;Package managers&lt;/h4&gt; 
&lt;h5&gt;WinGet&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;winget install Microsoft.SbomTool
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Homebrew&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;brew install sbom-tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Manual download&lt;/h4&gt; 
&lt;h5&gt;Windows (PowerShell)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;Invoke-WebRequest -Uri &quot;https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-win-x64.exe&quot; -OutFile &quot;sbom-tool.exe&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Linux (curl)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -Lo sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
chmod +x sbom-tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;macOS (curl)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -Lo sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-osx-x64
chmod +x sbom-tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Building SBOM tool as docker image&lt;/h4&gt; 
&lt;p&gt;Clone this repo and build the docker image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/microsoft/sbom-tool
cd sbom-tool
docker build . -t ms_sbom_tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then use the tool normally, by mounting the directories to be scanned using docker bind mounts.&lt;/p&gt; 
&lt;h3&gt;SBOM .NET Tool&lt;/h3&gt; 
&lt;p&gt;The sbom-tool can also be installed as a .NET tool using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;dotnet tool install --global Microsoft.Sbom.DotNetTool
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SBOM API NuGet package&lt;/h3&gt; 
&lt;p&gt;Please add and authenticate the Microsoft GitHub NuGet package &lt;a href=&quot;https://github.com/orgs/microsoft/packages?repo_name=sbom-tool&quot;&gt;registry&lt;/a&gt; to your nuget.config. Then install the &lt;code&gt;Microsoft.Sbom.Api&lt;/code&gt; package to your project using these &lt;a href=&quot;https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-nuget-registry#installing-a-package&quot;&gt;instructions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please check the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/docs/sbom-tool-api-reference.md&quot;&gt;API Reference&lt;/a&gt; document for additional help regarding the SBOM tool C# Api.&lt;/p&gt; 
&lt;h2&gt;Run the tool&lt;/h2&gt; 
&lt;h3&gt;SBOM Generation&lt;/h3&gt; 
&lt;p&gt;Once you have installed the command line tool for your OS, run the tool using this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sbom-tool generate -b &amp;lt;drop path&amp;gt; -bc &amp;lt;build components path&amp;gt; -pn &amp;lt;package name&amp;gt; -pv &amp;lt;package version&amp;gt; -ps &amp;lt;package supplier&amp;gt; -nsb &amp;lt;namespace uri base&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The drop path is the folder where all the files to be shipped are located. All these files will be hashed and added to the files section of the SBOM. The build components path is usually your source folder, tool will scan this folder to search for project files like *.csproj or package.json to see what components were used to build the package. Tool uses &lt;a href=&quot;https://github.com/microsoft/component-detection&quot;&gt;component-detection&lt;/a&gt; to scan for components and dependencies, visit its Github page to get more information about supported components. The package name and version represent the package the SBOM is describing.&lt;/p&gt; 
&lt;p&gt;Each SBOM has a unique namespace that uniquely identifies the SBOM, we generate a unique identifier for the namespace field inside the SBOM, however we need a base URI that would be common for your entire organization. For example, a sample value for the &lt;code&gt;-nsb&lt;/code&gt; parameter could be &lt;code&gt;https://companyName.com/teamName&lt;/code&gt;, then the generator will create the namespace that would look like &lt;code&gt;https://companyName.com/teamName/&amp;lt;packageName&amp;gt;/&amp;lt;packageVersion&amp;gt;/&amp;lt;new-guid&amp;gt;&lt;/code&gt;. Read more about the document namespace field &lt;a href=&quot;https://spdx.github.io/spdx-spec/v2.2.2/document-creation-information/#65-spdx-document-namespace-field&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A more detailed list of available CLI arguments for the tool can be found &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/docs/sbom-tool-arguments.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;SBOM Validation&lt;/h3&gt; 
&lt;p&gt;With an SBOM file in hand, use the tool to validate the output file with the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sbom-tool validate -b &amp;lt;drop path&amp;gt; -o &amp;lt;output path&amp;gt; -mi SPDX:2.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This sample command provides the minimum mandatory arguments required to validate an SBOM: &lt;code&gt;-b&lt;/code&gt; should be the path same path used to generate the SBOM file. In this scenario, the tool will default to searching for an SBOM at the &lt;code&gt;&amp;lt;drop path&amp;gt;\_manifest\spdx_2.2\manifest.spdx.json&lt;/code&gt; path. &lt;code&gt;-o&lt;/code&gt; is the output path, including file name, where the tool should write the results to. &lt;code&gt;-mi&lt;/code&gt; is the ManifestInfo, which provides the user&#39;s desired name and version of the manifest format.&lt;/p&gt; 
&lt;p&gt;Currently only SPDX2.2 is supported.&lt;/p&gt; 
&lt;h3&gt;SBOM Redact&lt;/h3&gt; 
&lt;p&gt;Use the tool to redact any references to files from a given SBOM or set of SBOMs with either of the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sbom-tool redact -sd &amp;lt;directory containing SBOMs to redact&amp;gt; -o &amp;lt;output path&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;sbom-tool redact -sp &amp;lt;path to the SBOM to redact&amp;gt; -o &amp;lt;output path&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command will generate a mirrored set of SBOMs in the output directory, but with the file references removed. Note that the SBOM directory and output path arguments can not reference the same directory and the output path should point to an existing, empty directory.&lt;/p&gt; 
&lt;h2&gt;Integrating SBOM tool to your CI/CD pipelines&lt;/h2&gt; 
&lt;p&gt;You can follow these guides to integrate the SBOM tool into your CI/CD pipelines&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/docs/setting-up-github-actions.md&quot;&gt;Setting up GitHub Actions to use the SBOM tool&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/docs/setting-up-ado-pipelines.md&quot;&gt;Setting up Azure DevOps Pipelines to use the SBOM tool&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Telemetry&lt;/h2&gt; 
&lt;p&gt;By default, telemetry will output to your output file path and will be a JSON blob. No data is submitted to Microsoft.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please follow the steps &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/sbom-tool/main/docs/building-from-source.md&quot;&gt;here&lt;/a&gt; to clone and build this repository from source.&lt;/p&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Microsoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include &lt;a href=&quot;https://github.com/Microsoft&quot;&gt;Microsoft&lt;/a&gt;, &lt;a href=&quot;https://github.com/Azure&quot;&gt;Azure&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet&quot;&gt;DotNet&lt;/a&gt;, &lt;a href=&quot;https://github.com/aspnet&quot;&gt;AspNet&lt;/a&gt;, &lt;a href=&quot;https://github.com/xamarin&quot;&gt;Xamarin&lt;/a&gt;, and &lt;a href=&quot;https://opensource.microsoft.com/&quot;&gt;our GitHub organizations&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in any Microsoft-owned repository that meets &lt;a href=&quot;https://aka.ms/opensource/security/definition&quot;&gt;Microsoft&#39;s definition of a security vulnerability&lt;/a&gt;, please report it to us as described in the &lt;a href=&quot;https://github.com/microsoft/sbom-tool/raw/main/SECURITY.md&quot;&gt;Security.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-dotnet</title>
      <link>https://github.com/openai/openai-dotnet</link>
      <description>&lt;p&gt;The official .NET library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI .NET API library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/OpenAI&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/openai.svg?sanitize=true&quot; alt=&quot;NuGet stable version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/OpenAI/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/openai.svg?sanitize=true&quot; alt=&quot;NuGet preview version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAI .NET library provides convenient access to the OpenAI REST API from .NET applications.&lt;/p&gt; 
&lt;p&gt;It is generated from our &lt;a href=&quot;https://github.com/openai/openai-openapi&quot;&gt;OpenAPI specification&lt;/a&gt; in collaboration with Microsoft.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#getting-started&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#install-the-nuget-package&quot;&gt;Install the NuGet package&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-client-library&quot;&gt;Using the client library&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#namespace-organization&quot;&gt;Namespace organization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-async-api&quot;&gt;Using the async API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-openaiclient-class&quot;&gt;Using the &lt;code&gt;OpenAIClient&lt;/code&gt; class&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-streaming&quot;&gt;How to use chat completions with streaming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-tools-and-function-calling&quot;&gt;How to use chat completions with tools and function calling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-structured-outputs&quot;&gt;How to use chat completions with structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-audio&quot;&gt;How to use chat completions with audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-streaming-and-reasoning&quot;&gt;How to use responses with streaming and reasoning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-file-search&quot;&gt;How to use responses with file search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-web-search&quot;&gt;How to use responses with web search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-generate-text-embeddings&quot;&gt;How to generate text embeddings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-generate-images&quot;&gt;How to generate images&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-transcribe-audio&quot;&gt;How to transcribe audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-assistants-with-retrieval-augmented-generation-rag&quot;&gt;How to use assistants with retrieval augmented generation (RAG)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-assistants-with-streaming-and-vision&quot;&gt;How to use assistants with streaming and vision&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-work-with-azure-openai&quot;&gt;How to work with Azure OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#advanced-scenarios&quot;&gt;Advanced scenarios&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-protocol-methods&quot;&gt;Using protocol methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#mock-a-client-for-testing&quot;&gt;Mock a client for testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#automatically-retrying-errors&quot;&gt;Automatically retrying errors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#observability&quot;&gt;Observability&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;To call the OpenAI REST API, you will need an API key. To obtain one, first &lt;a href=&quot;https://platform.openai.com/signup&quot;&gt;create a new OpenAI account&lt;/a&gt; or &lt;a href=&quot;https://platform.openai.com/login&quot;&gt;log in&lt;/a&gt;. Next, navigate to the &lt;a href=&quot;https://platform.openai.com/account/api-keys&quot;&gt;API key page&lt;/a&gt; and select &quot;Create new secret key&quot;, optionally naming the key. Make sure to save your API key somewhere safe and do not share it with anyone.&lt;/p&gt; 
&lt;h3&gt;Install the NuGet package&lt;/h3&gt; 
&lt;p&gt;Add the client library to your .NET project by installing the &lt;a href=&quot;https://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt; package via your IDE or by running the following command in the .NET CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cli&quot;&gt;dotnet add package OpenAI
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you would like to try the latest preview version, remember to append the &lt;code&gt;--prerelease&lt;/code&gt; command option.&lt;/p&gt; 
&lt;p&gt;Note that the code examples included below were written using &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;.NET 8&lt;/a&gt;. The OpenAI .NET library is compatible with all .NET Standard 2.0 applications, but the syntax used in some of the code examples in this document may depend on newer language features.&lt;/p&gt; 
&lt;h2&gt;Using the client library&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in the &lt;a href=&quot;https://github.com/openai/openai-dotnet/raw/main/api/OpenAI.netstandard2.0.cs&quot;&gt;OpenAI.netstandard2.0.cs&lt;/a&gt; file, and there are many &lt;a href=&quot;https://github.com/openai/openai-dotnet/tree/main/examples&quot;&gt;code examples&lt;/a&gt; to help. For instance, the following snippet illustrates the basic use of the chat completions API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Chat;

ChatClient client = new(model: &quot;gpt-4o&quot;, apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

ChatCompletion completion = client.CompleteChat(&quot;Say &#39;this is a test.&#39;&quot;);

Console.WriteLine($&quot;[ASSISTANT]: {completion.Content[0].Text}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While you can pass your API key directly as a string, it is highly recommended that you keep it in a secure location and instead access it via an environment variable or configuration file as shown above to avoid storing it in source control.&lt;/p&gt; 
&lt;h3&gt;Namespace organization&lt;/h3&gt; 
&lt;p&gt;The library is organized into namespaces by feature areas in the OpenAI REST API. Each namespace contains a corresponding client class.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Namespace&lt;/th&gt; 
   &lt;th&gt;Client class&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Assistants&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AssistantClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/experimental-purple&quot; alt=&quot;Experimental&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Audio&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AudioClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Batch&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;BatchClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/experimental-purple&quot; alt=&quot;Experimental&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Chat&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ChatClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Embeddings&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;EmbeddingClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.FineTuning&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;FineTuningClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/experimental-purple&quot; alt=&quot;Experimental&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Files&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIFileClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Images&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ImageClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Models&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIModelClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Moderations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ModerationClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Responses&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIResponseClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.VectorStores&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;VectorStoreClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/experimental-purple&quot; alt=&quot;Experimental&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Using the async API&lt;/h3&gt; 
&lt;p&gt;Every client method that performs a synchronous API call has an asynchronous variant in the same client class. For instance, the asynchronous variant of the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method is &lt;code&gt;CompleteChatAsync&lt;/code&gt;. To rewrite the call above using the asynchronous counterpart, simply &lt;code&gt;await&lt;/code&gt; the call to the corresponding async variant:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ChatCompletion completion = await client.CompleteChatAsync(&quot;Say &#39;this is a test.&#39;&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using the &lt;code&gt;OpenAIClient&lt;/code&gt; class&lt;/h3&gt; 
&lt;p&gt;In addition to the namespaces mentioned above, there is also the parent &lt;code&gt;OpenAI&lt;/code&gt; namespace itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This namespace contains the &lt;code&gt;OpenAIClient&lt;/code&gt; class, which offers certain conveniences when you need to work with multiple feature area clients. Specifically, you can use an instance of this class to create instances of the other clients and have them share the same implementation details, which might be more efficient.&lt;/p&gt; 
&lt;p&gt;You can create an &lt;code&gt;OpenAIClient&lt;/code&gt; by specifying the API key that all clients will use for authentication:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIClient client = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, to create an instance of an &lt;code&gt;AudioClient&lt;/code&gt;, for example, you can call the &lt;code&gt;OpenAIClient&lt;/code&gt;&#39;s &lt;code&gt;GetAudioClient&lt;/code&gt; method by passing the OpenAI model that the &lt;code&gt;AudioClient&lt;/code&gt; will use, just as if you were using the &lt;code&gt;AudioClient&lt;/code&gt; constructor directly. If necessary, you can create additional clients of the same type to target different models.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AudioClient ttsClient = client.GetAudioClient(&quot;tts-1&quot;);
AudioClient whisperClient = client.GetAudioClient(&quot;whisper-1&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with streaming&lt;/h2&gt; 
&lt;p&gt;When you request a chat completion, the default behavior is for the server to generate it in its entirety before sending it back in a single response. Consequently, long chat completions can require waiting for several seconds before hearing back from the server. To mitigate this, the OpenAI REST API supports the ability to stream partial results back as they are being generated, allowing you to start processing the beginning of the completion before it is finished.&lt;/p&gt; 
&lt;p&gt;The client library offers a convenient approach to working with streaming chat completions. If you wanted to re-write the example from the previous section using streaming, rather than calling the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method, you would call its &lt;code&gt;CompleteChatStreaming&lt;/code&gt; method instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt; completionUpdates = client.CompleteChatStreaming(&quot;Say &#39;this is a test.&#39;&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice that the returned value is a &lt;code&gt;CollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt;&lt;/code&gt; instance, which can be enumerated to process the streaming response chunks as they arrive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Console.Write($&quot;[ASSISTANT]: &quot;);
foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)
{
    if (completionUpdate.ContentUpdate.Count &amp;gt; 0)
    {
        Console.Write(completionUpdate.ContentUpdate[0].Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can do this asynchronously by calling the &lt;code&gt;CompleteChatStreamingAsync&lt;/code&gt; method to get an &lt;code&gt;AsyncCollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt;&lt;/code&gt; and enumerate it using &lt;code&gt;await foreach&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AsyncCollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt; completionUpdates = client.CompleteChatStreamingAsync(&quot;Say &#39;this is a test.&#39;&quot;);

Console.Write($&quot;[ASSISTANT]: &quot;);
await foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)
{
    if (completionUpdate.ContentUpdate.Count &amp;gt; 0)
    {
        Console.Write(completionUpdate.ContentUpdate[0].Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with tools and function calling&lt;/h2&gt; 
&lt;p&gt;In this example, you have two functions. The first function can retrieve a user&#39;s current geographic location (e.g., by polling the location service APIs of the user&#39;s device), while the second function can query the weather in a given location (e.g., by making an API call to some third-party weather service). You want the model to be able to call these functions if it deems it necessary to have this information in order to respond to a user request as part of generating a chat completion. For illustrative purposes, consider the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;private static string GetCurrentLocation()
{
    // Call the location API here.
    return &quot;San Francisco&quot;;
}

private static string GetCurrentWeather(string location, string unit = &quot;celsius&quot;)
{
    // Call the weather API here.
    return $&quot;31 {unit}&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start by creating two &lt;code&gt;ChatTool&lt;/code&gt; instances using the static &lt;code&gt;CreateFunctionTool&lt;/code&gt; method to describe each function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;private static readonly ChatTool getCurrentLocationTool = ChatTool.CreateFunctionTool(
    functionName: nameof(GetCurrentLocation),
    functionDescription: &quot;Get the user&#39;s current location&quot;
);

private static readonly ChatTool getCurrentWeatherTool = ChatTool.CreateFunctionTool(
    functionName: nameof(GetCurrentWeather),
    functionDescription: &quot;Get the current weather in a given location&quot;,
    functionParameters: BinaryData.FromBytes(&quot;&quot;&quot;
        {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
                &quot;location&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;The city and state, e.g. Boston, MA&quot;
                },
                &quot;unit&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;enum&quot;: [ &quot;celsius&quot;, &quot;fahrenheit&quot; ],
                    &quot;description&quot;: &quot;The temperature unit to use. Infer this from the specified location.&quot;
                }
            },
            &quot;required&quot;: [ &quot;location&quot; ]
        }
        &quot;&quot;&quot;u8.ToArray())
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a &lt;code&gt;ChatCompletionOptions&lt;/code&gt; instance and add both to its &lt;code&gt;Tools&lt;/code&gt; property. You will pass the &lt;code&gt;ChatCompletionOptions&lt;/code&gt; as an argument in your calls to the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;List&amp;lt;ChatMessage&amp;gt; messages = 
[
    new UserChatMessage(&quot;What&#39;s the weather like today?&quot;),
];

ChatCompletionOptions options = new()
{
    Tools = { getCurrentLocationTool, getCurrentWeatherTool },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When the resulting &lt;code&gt;ChatCompletion&lt;/code&gt; has a &lt;code&gt;FinishReason&lt;/code&gt; property equal to &lt;code&gt;ChatFinishReason.ToolCalls&lt;/code&gt;, it means that the model has determined that one or more tools must be called before the assistant can respond appropriately. In those cases, you must first call the function specified in the &lt;code&gt;ChatCompletion&lt;/code&gt;&#39;s &lt;code&gt;ToolCalls&lt;/code&gt; and then call the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method again while passing the function&#39;s result as an additional &lt;code&gt;ChatRequestToolMessage&lt;/code&gt;. Repeat this process as needed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;bool requiresAction;

do
{
    requiresAction = false;
    ChatCompletion completion = client.CompleteChat(messages, options);

    switch (completion.FinishReason)
    {
        case ChatFinishReason.Stop:
            {
                // Add the assistant message to the conversation history.
                messages.Add(new AssistantChatMessage(completion));
                break;
            }

        case ChatFinishReason.ToolCalls:
            {
                // First, add the assistant message with tool calls to the conversation history.
                messages.Add(new AssistantChatMessage(completion));

                // Then, add a new tool message for each tool call that is resolved.
                foreach (ChatToolCall toolCall in completion.ToolCalls)
                {
                    switch (toolCall.FunctionName)
                    {
                        case nameof(GetCurrentLocation):
                            {
                                string toolResult = GetCurrentLocation();
                                messages.Add(new ToolChatMessage(toolCall.Id, toolResult));
                                break;
                            }

                        case nameof(GetCurrentWeather):
                            {
                                // The arguments that the model wants to use to call the function are specified as a
                                // stringified JSON object based on the schema defined in the tool definition. Note that
                                // the model may hallucinate arguments too. Consequently, it is important to do the
                                // appropriate parsing and validation before calling the function.
                                using JsonDocument argumentsJson = JsonDocument.Parse(toolCall.FunctionArguments);
                                bool hasLocation = argumentsJson.RootElement.TryGetProperty(&quot;location&quot;, out JsonElement location);
                                bool hasUnit = argumentsJson.RootElement.TryGetProperty(&quot;unit&quot;, out JsonElement unit);

                                if (!hasLocation)
                                {
                                    throw new ArgumentNullException(nameof(location), &quot;The location argument is required.&quot;);
                                }

                                string toolResult = hasUnit
                                    ? GetCurrentWeather(location.GetString(), unit.GetString())
                                    : GetCurrentWeather(location.GetString());
                                messages.Add(new ToolChatMessage(toolCall.Id, toolResult));
                                break;
                            }

                        default:
                            {
                                // Handle other unexpected calls.
                                throw new NotImplementedException();
                            }
                    }
                }

                requiresAction = true;
                break;
            }

        case ChatFinishReason.Length:
            throw new NotImplementedException(&quot;Incomplete model output due to MaxTokens parameter or token limit exceeded.&quot;);

        case ChatFinishReason.ContentFilter:
            throw new NotImplementedException(&quot;Omitted content due to a content filter flag.&quot;);

        case ChatFinishReason.FunctionCall:
            throw new NotImplementedException(&quot;Deprecated in favor of tool calls.&quot;);

        default:
            throw new NotImplementedException(completion.FinishReason.ToString());
    }
} while (requiresAction);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with structured outputs&lt;/h2&gt; 
&lt;p&gt;Beginning with the &lt;code&gt;gpt-4o-mini&lt;/code&gt;, &lt;code&gt;gpt-4o-mini-2024-07-18&lt;/code&gt;, and &lt;code&gt;gpt-4o-2024-08-06&lt;/code&gt; model snapshots, structured outputs are available for both top-level response content and tool calls in the chat completion and assistants APIs. For information about the feature, see &lt;a href=&quot;https://platform.openai.com/docs/guides/structured-outputs/introduction&quot;&gt;the Structured Outputs guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use structured outputs to constrain chat completion content, set an appropriate &lt;code&gt;ChatResponseFormat&lt;/code&gt; as in the following example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;List&amp;lt;ChatMessage&amp;gt; messages =
[
    new UserChatMessage(&quot;How can I solve 8x + 7 = -23?&quot;),
];

ChatCompletionOptions options = new()
{
    ResponseFormat = ChatResponseFormat.CreateJsonSchemaFormat(
        jsonSchemaFormatName: &quot;math_reasoning&quot;,
        jsonSchema: BinaryData.FromBytes(&quot;&quot;&quot;
            {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                &quot;steps&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;explanation&quot;: { &quot;type&quot;: &quot;string&quot; },
                        &quot;output&quot;: { &quot;type&quot;: &quot;string&quot; }
                    },
                    &quot;required&quot;: [&quot;explanation&quot;, &quot;output&quot;],
                    &quot;additionalProperties&quot;: false
                    }
                },
                &quot;final_answer&quot;: { &quot;type&quot;: &quot;string&quot; }
                },
                &quot;required&quot;: [&quot;steps&quot;, &quot;final_answer&quot;],
                &quot;additionalProperties&quot;: false
            }
            &quot;&quot;&quot;u8.ToArray()),
        jsonSchemaIsStrict: true)
};

ChatCompletion completion = client.CompleteChat(messages, options);

using JsonDocument structuredJson = JsonDocument.Parse(completion.Content[0].Text);

Console.WriteLine($&quot;Final answer: {structuredJson.RootElement.GetProperty(&quot;final_answer&quot;)}&quot;);
Console.WriteLine(&quot;Reasoning steps:&quot;);

foreach (JsonElement stepElement in structuredJson.RootElement.GetProperty(&quot;steps&quot;).EnumerateArray())
{
    Console.WriteLine($&quot;  - Explanation: {stepElement.GetProperty(&quot;explanation&quot;)}&quot;);
    Console.WriteLine($&quot;    Output: {stepElement.GetProperty(&quot;output&quot;)}&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with audio&lt;/h2&gt; 
&lt;p&gt;Starting with the &lt;code&gt;gpt-4o-audio-preview&lt;/code&gt; model, chat completions can process audio input and output.&lt;/p&gt; 
&lt;p&gt;This example demonstrates:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Configuring the client with the supported &lt;code&gt;gpt-4o-audio-preview&lt;/code&gt; model&lt;/li&gt; 
 &lt;li&gt;Supplying user audio input on a chat completion request&lt;/li&gt; 
 &lt;li&gt;Requesting model audio output from the chat completion operation&lt;/li&gt; 
 &lt;li&gt;Retrieving audio output from a &lt;code&gt;ChatCompletion&lt;/code&gt; instance&lt;/li&gt; 
 &lt;li&gt;Using past audio output as &lt;code&gt;ChatMessage&lt;/code&gt; conversation history&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Chat audio input and output is only supported on specific models, beginning with gpt-4o-audio-preview
ChatClient client = new(&quot;gpt-4o-audio-preview&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

// Input audio is provided to a request by adding an audio content part to a user message
string audioFilePath = Path.Combine(&quot;Assets&quot;, &quot;realtime_whats_the_weather_pcm16_24khz_mono.wav&quot;);
byte[] audioFileRawBytes = File.ReadAllBytes(audioFilePath);
BinaryData audioData = BinaryData.FromBytes(audioFileRawBytes);
List&amp;lt;ChatMessage&amp;gt; messages =
    [
        new UserChatMessage(ChatMessageContentPart.CreateInputAudioPart(audioData, ChatInputAudioFormat.Wav)),
    ];

// Output audio is requested by configuring ChatCompletionOptions to include the appropriate
// ResponseModalities values and corresponding AudioOptions.
ChatCompletionOptions options = new()
{
    ResponseModalities = ChatResponseModalities.Text | ChatResponseModalities.Audio,
    AudioOptions = new(ChatOutputAudioVoice.Alloy, ChatOutputAudioFormat.Mp3),
};

ChatCompletion completion = client.CompleteChat(messages, options);

void PrintAudioContent()
{
    if (completion.OutputAudio is ChatOutputAudio outputAudio)
    {
        Console.WriteLine($&quot;Response audio transcript: {outputAudio.Transcript}&quot;);
        string outputFilePath = $&quot;{outputAudio.Id}.mp3&quot;;
        using (FileStream outputFileStream = File.OpenWrite(outputFilePath))
        {
            outputFileStream.Write(outputAudio.AudioBytes);
        }
        Console.WriteLine($&quot;Response audio written to file: {outputFilePath}&quot;);
        Console.WriteLine($&quot;Valid on followup requests until: {outputAudio.ExpiresAt}&quot;);
    }
}

PrintAudioContent();

// To refer to past audio output, create an assistant message from the earlier ChatCompletion, use the earlier
// response content part, or use ChatMessageContentPart.CreateAudioPart(string) to manually instantiate a part.

messages.Add(new AssistantChatMessage(completion));
messages.Add(&quot;Can you say that like a pirate?&quot;);

completion = client.CompleteChat(messages, options);

PrintAudioContent();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Streaming is highly parallel: &lt;code&gt;StreamingChatCompletionUpdate&lt;/code&gt; instances can include a &lt;code&gt;OutputAudioUpdate&lt;/code&gt; that may contain any of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;Id&lt;/code&gt; of the streamed audio content, which can be referenced by subsequent &lt;code&gt;AssistantChatMessage&lt;/code&gt; instances via &lt;code&gt;ChatAudioReference&lt;/code&gt; once the streaming response is complete; this may appear across multiple &lt;code&gt;StreamingChatCompletionUpdate&lt;/code&gt; instances but will always be the same value when present&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;ExpiresAt&lt;/code&gt; value that describes when the &lt;code&gt;Id&lt;/code&gt; will no longer be valid for use with &lt;code&gt;ChatAudioReference&lt;/code&gt; in subsequent requests; this typically appears once and only once, in the final &lt;code&gt;StreamingOutputAudioUpdate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Incremental &lt;code&gt;TranscriptUpdate&lt;/code&gt; and/or &lt;code&gt;AudioBytesUpdate&lt;/code&gt; values, which can incrementally consumed and, when concatenated, form the complete audio transcript and audio output for the overall response; many of these typically appear&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use responses with streaming and reasoning&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;o3-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;What&#39;s the optimal strategy to win at poker?&quot;,
    new ResponseCreationOptions()
    {
        ReasoningOptions = new ResponseReasoningOptions()
        {
            ReasoningEffortLevel = ResponseReasoningEffortLevel.High,
        },
    });

await foreach (StreamingResponseUpdate update
    in client.CreateResponseStreamingAsync(
        userInputText: &quot;What&#39;s the optimal strategy to win at poker?&quot;,
        new ResponseCreationOptions()
        {
            ReasoningOptions = new ResponseReasoningOptions()
            {
                ReasoningEffortLevel = ResponseReasoningEffortLevel.High,
            },
        }))
{
    if (update is StreamingResponseItemUpdate itemUpdate
        &amp;amp;&amp;amp; itemUpdate.Item is ReasoningResponseItem reasoningItem)
    {
        Console.WriteLine($&quot;[Reasoning] ({reasoningItem.Status})&quot;);
    }
    else if (update is StreamingResponseContentPartDeltaUpdate deltaUpdate)
    {
        Console.Write(deltaUpdate.Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use responses with file search&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;gpt-4o-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

ResponseTool fileSearchTool
    = ResponseTool.CreateFileSearchTool(
        vectorStoreIds: [ExistingVectorStoreForTest.Id]);
OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;According to available files, what&#39;s the secret number?&quot;,
    new ResponseCreationOptions()
    {
        Tools = { fileSearchTool }
    });

foreach (ResponseItem outputItem in response.OutputItems)
{
    if (outputItem is FileSearchCallResponseItem fileSearchCall)
    {
        Console.WriteLine($&quot;[file_search] ({fileSearchCall.Status}): {fileSearchCall.Id}&quot;);
        foreach (string query in fileSearchCall.Queries)
        {
            Console.WriteLine($&quot;  - {query}&quot;);
        }
    }
    else if (outputItem is MessageResponseItem message)
    {
        Console.WriteLine($&quot;[{message.Role}] {message.Content.FirstOrDefault()?.Text}&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use responses with web search&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;gpt-4o-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;What&#39;s a happy news headline from today?&quot;,
    new ResponseCreationOptions()
    {
        Tools = { ResponseTool.CreateWebSearchTool() },
    });

foreach (ResponseItem item in response.OutputItems)
{
    if (item is WebSearchCallResponseItem webSearchCall)
    {
        Console.WriteLine($&quot;[Web search invoked]({webSearchCall.Status}) {webSearchCall.Id}&quot;);
    }
    else if (item is MessageResponseItem message)
    {
        Console.WriteLine($&quot;[{message.Role}] {message.Content?.FirstOrDefault()?.Text}&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to generate text embeddings&lt;/h2&gt; 
&lt;p&gt;In this example, you want to create a trip-planning website that allows customers to write a prompt describing the kind of hotel that they are looking for and then offers hotel recommendations that closely match this description. To achieve this, it is possible to use text embeddings to measure the relatedness of text strings. In summary, you can get embeddings of the hotel descriptions, store them in a vector database, and use them to build a search index that you can query using the embedding of a given customer&#39;s prompt.&lt;/p&gt; 
&lt;p&gt;To generate a text embedding, use &lt;code&gt;EmbeddingClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Embeddings&lt;/code&gt; namespace:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Embeddings;

EmbeddingClient client = new(&quot;text-embedding-3-small&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

string description = &quot;Best hotel in town if you like luxury hotels. They have an amazing infinity pool, a spa,&quot;
    + &quot; and a really helpful concierge. The location is perfect -- right downtown, close to all the tourist&quot;
    + &quot; attractions. We highly recommend this hotel.&quot;;

OpenAIEmbedding embedding = client.GenerateEmbedding(description);
ReadOnlyMemory&amp;lt;float&amp;gt; vector = embedding.ToFloats();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice that the resulting embedding is a list (also called a vector) of floating point numbers represented as an instance of &lt;code&gt;ReadOnlyMemory&amp;lt;float&amp;gt;&lt;/code&gt;. By default, the length of the embedding vector will be 1536 when using the &lt;code&gt;text-embedding-3-small&lt;/code&gt; model or 3072 when using the &lt;code&gt;text-embedding-3-large&lt;/code&gt; model. Generally, larger embeddings perform better, but using them also tends to cost more in terms of compute, memory, and storage. You can reduce the dimensions of the embedding by creating an instance of the &lt;code&gt;EmbeddingGenerationOptions&lt;/code&gt; class, setting the &lt;code&gt;Dimensions&lt;/code&gt; property, and passing it as an argument in your call to the &lt;code&gt;GenerateEmbedding&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;EmbeddingGenerationOptions options = new() { Dimensions = 512 };

OpenAIEmbedding embedding = client.GenerateEmbedding(description, options);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to generate images&lt;/h2&gt; 
&lt;p&gt;In this example, you want to build an app to help interior designers prototype new ideas based on the latest design trends. As part of the creative process, an interior designer can use this app to generate images for inspiration simply by describing the scene in their head as a prompt. As expected, high-quality, strikingly dramatic images with finer details deliver the best results for this application.&lt;/p&gt; 
&lt;p&gt;To generate an image, use &lt;code&gt;ImageClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Images&lt;/code&gt; namespace:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Images;

ImageClient client = new(&quot;dall-e-3&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generating an image always requires a &lt;code&gt;prompt&lt;/code&gt; that describes what should be generated. To further tailor the image generation to your specific needs, you can create an instance of the &lt;code&gt;ImageGenerationOptions&lt;/code&gt; class and set the &lt;code&gt;Quality&lt;/code&gt;, &lt;code&gt;Size&lt;/code&gt;, and &lt;code&gt;Style&lt;/code&gt; properties accordingly. Note that you can also set the &lt;code&gt;ResponseFormat&lt;/code&gt; property of &lt;code&gt;ImageGenerationOptions&lt;/code&gt; to &lt;code&gt;GeneratedImageFormat.Bytes&lt;/code&gt; in order to receive the resulting PNG as &lt;code&gt;BinaryData&lt;/code&gt; (instead of the default remote &lt;code&gt;Uri&lt;/code&gt;) if this is convenient for your use case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;string prompt = &quot;The concept for a living room that blends Scandinavian simplicity with Japanese minimalism for&quot;
    + &quot; a serene and cozy atmosphere. It&#39;s a space that invites relaxation and mindfulness, with natural light&quot;
    + &quot; and fresh air. Using neutral tones, including colors like white, beige, gray, and black, that create a&quot;
    + &quot; sense of harmony. Featuring sleek wood furniture with clean lines and subtle curves to add warmth and&quot;
    + &quot; elegance. Plants and flowers in ceramic pots adding color and life to a space. They can serve as focal&quot;
    + &quot; points, creating a connection with nature. Soft textiles and cushions in organic fabrics adding comfort&quot;
    + &quot; and softness to a space. They can serve as accents, adding contrast and texture.&quot;;

ImageGenerationOptions options = new()
{
    Quality = GeneratedImageQuality.High,
    Size = GeneratedImageSize.W1792xH1024,
    Style = GeneratedImageStyle.Vivid,
    ResponseFormat = GeneratedImageFormat.Bytes
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, call the &lt;code&gt;ImageClient&lt;/code&gt;&#39;s &lt;code&gt;GenerateImage&lt;/code&gt; method by passing the prompt and the &lt;code&gt;ImageGenerationOptions&lt;/code&gt; instance as arguments:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;GeneratedImage image = client.GenerateImage(prompt, options);
BinaryData bytes = image.ImageBytes;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For illustrative purposes, you could then save the generated image to local storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using FileStream stream = File.OpenWrite($&quot;{Guid.NewGuid()}.png&quot;);
bytes.ToStream().CopyTo(stream);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to transcribe audio&lt;/h2&gt; 
&lt;p&gt;In this example, an audio file is transcribed using the Whisper speech-to-text model, including both word- and audio-segment-level timestamp information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Audio;

AudioClient client = new(&quot;whisper-1&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

string audioFilePath = Path.Combine(&quot;Assets&quot;, &quot;audio_houseplant_care.mp3&quot;);

AudioTranscriptionOptions options = new()
{
    ResponseFormat = AudioTranscriptionFormat.Verbose,
    TimestampGranularities = AudioTimestampGranularities.Word | AudioTimestampGranularities.Segment,
};

AudioTranscription transcription = client.TranscribeAudio(audioFilePath, options);

Console.WriteLine(&quot;Transcription:&quot;);
Console.WriteLine($&quot;{transcription.Text}&quot;);

Console.WriteLine();
Console.WriteLine($&quot;Words:&quot;);
foreach (TranscribedWord word in transcription.Words)
{
    Console.WriteLine($&quot;  {word.Word,15} : {word.StartTime.TotalMilliseconds,5:0} - {word.EndTime.TotalMilliseconds,5:0}&quot;);
}

Console.WriteLine();
Console.WriteLine($&quot;Segments:&quot;);
foreach (TranscribedSegment segment in transcription.Segments)
{
    Console.WriteLine($&quot;  {segment.Text,90} : {segment.StartTime.TotalMilliseconds,5:0} - {segment.EndTime.TotalMilliseconds,5:0}&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use assistants with retrieval augmented generation (RAG)&lt;/h2&gt; 
&lt;p&gt;In this example, you have a JSON document with the monthly sales information of different products, and you want to build an assistant capable of analyzing it and answering questions about it.&lt;/p&gt; 
&lt;p&gt;To achieve this, use both &lt;code&gt;OpenAIFileClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Files&lt;/code&gt; namespace and &lt;code&gt;AssistantClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Assistants&lt;/code&gt; namespace.&lt;/p&gt; 
&lt;p&gt;Important: The Assistants REST API is currently in beta. As such, the details are subject to change, and correspondingly the &lt;code&gt;AssistantClient&lt;/code&gt; is attributed as &lt;code&gt;[Experimental]&lt;/code&gt;. To use it, you must suppress the &lt;code&gt;OPENAI001&lt;/code&gt; warning first.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Assistants;
using OpenAI.Files;

OpenAIClient openAIClient = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
OpenAIFileClient fileClient = openAIClient.GetOpenAIFileClient();
AssistantClient assistantClient = openAIClient.GetAssistantClient();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is an example of what the JSON document might look like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Stream document = BinaryData.FromBytes(&quot;&quot;&quot;
    {
        &quot;description&quot;: &quot;This document contains the sale history data for Contoso products.&quot;,
        &quot;sales&quot;: [
            {
                &quot;month&quot;: &quot;January&quot;,
                &quot;by_product&quot;: {
                    &quot;113043&quot;: 15,
                    &quot;113045&quot;: 12,
                    &quot;113049&quot;: 2
                }
            },
            {
                &quot;month&quot;: &quot;February&quot;,
                &quot;by_product&quot;: {
                    &quot;113045&quot;: 22
                }
            },
            {
                &quot;month&quot;: &quot;March&quot;,
                &quot;by_product&quot;: {
                    &quot;113045&quot;: 16,
                    &quot;113055&quot;: 5
                }
            }
        ]
    }
    &quot;&quot;&quot;u8.ToArray()).ToStream();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Upload this document to OpenAI using the &lt;code&gt;OpenAIFileClient&lt;/code&gt;&#39;s &lt;code&gt;UploadFile&lt;/code&gt; method, ensuring that you use &lt;code&gt;FileUploadPurpose.Assistants&lt;/code&gt; to allow your assistant to access it later:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIFile salesFile = fileClient.UploadFile(
    document,
    &quot;monthly_sales.json&quot;,
    FileUploadPurpose.Assistants);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a new assistant using an instance of the &lt;code&gt;AssistantCreationOptions&lt;/code&gt; class to customize it. Here, we use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A friendly &lt;code&gt;Name&lt;/code&gt; for the assistant, as will display in the Playground&lt;/li&gt; 
 &lt;li&gt;Tool definition instances for the tools that the assistant should have access to; here, we use &lt;code&gt;FileSearchToolDefinition&lt;/code&gt; to process the sales document we just uploaded and &lt;code&gt;CodeInterpreterToolDefinition&lt;/code&gt; so we can analyze and visualize the numeric data&lt;/li&gt; 
 &lt;li&gt;Resources for the assistant to use with its tools, here using the &lt;code&gt;VectorStoreCreationHelper&lt;/code&gt; type to automatically make a new vector store that indexes the sales file; alternatively, you could use &lt;code&gt;VectorStoreClient&lt;/code&gt; to manage the vector store separately&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AssistantCreationOptions assistantOptions = new()
{
    Name = &quot;Example: Contoso sales RAG&quot;,
    Instructions =
        &quot;You are an assistant that looks up sales data and helps visualize the information based&quot;
        + &quot; on user queries. When asked to generate a graph, chart, or other visualization, use&quot;
        + &quot; the code interpreter tool to do so.&quot;,
    Tools =
    {
        new FileSearchToolDefinition(),
        new CodeInterpreterToolDefinition(),
    },
    ToolResources = new()
    {
        FileSearch = new()
        {
            NewVectorStores =
            {
                new VectorStoreCreationHelper([salesFile.Id]),
            }
        }
    },
};

Assistant assistant = assistantClient.CreateAssistant(&quot;gpt-4o&quot;, assistantOptions);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a new thread. For illustrative purposes, you could include an initial user message asking about the sales information of a given product and then use the &lt;code&gt;AssistantClient&lt;/code&gt;&#39;s &lt;code&gt;CreateThreadAndRun&lt;/code&gt; method to get it started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ThreadCreationOptions threadOptions = new()
{
    InitialMessages = { &quot;How well did product 113045 sell in February? Graph its trend over time.&quot; }
};

ThreadRun threadRun = assistantClient.CreateThreadAndRun(assistant.Id, threadOptions);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Poll the status of the run until it is no longer queued or in progress:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;do
{
    Thread.Sleep(TimeSpan.FromSeconds(1));
    threadRun = assistantClient.GetRun(threadRun.ThreadId, threadRun.Id);
} while (!threadRun.Status.IsTerminal);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, the terminal status of the run will be &lt;code&gt;RunStatus.Completed&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you can use the &lt;code&gt;AssistantClient&lt;/code&gt;&#39;s &lt;code&gt;GetMessages&lt;/code&gt; method to retrieve the messages associated with this thread, which now include the responses from the assistant to the initial user message.&lt;/p&gt; 
&lt;p&gt;For illustrative purposes, you could print the messages to the console and also save any images produced by the assistant to local storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;ThreadMessage&amp;gt; messages
    = assistantClient.GetMessages(threadRun.ThreadId, new MessageCollectionOptions() { Order = MessageCollectionOrder.Ascending });

foreach (ThreadMessage message in messages)
{
    Console.Write($&quot;[{message.Role.ToString().ToUpper()}]: &quot;);
    foreach (MessageContent contentItem in message.Content)
    {
        if (!string.IsNullOrEmpty(contentItem.Text))
        {
            Console.WriteLine($&quot;{contentItem.Text}&quot;);

            if (contentItem.TextAnnotations.Count &amp;gt; 0)
            {
                Console.WriteLine();
            }

            // Include annotations, if any.
            foreach (TextAnnotation annotation in contentItem.TextAnnotations)
            {
                if (!string.IsNullOrEmpty(annotation.InputFileId))
                {
                    Console.WriteLine($&quot;* File citation, file ID: {annotation.InputFileId}&quot;);
                }
                if (!string.IsNullOrEmpty(annotation.OutputFileId))
                {
                    Console.WriteLine($&quot;* File output, new file ID: {annotation.OutputFileId}&quot;);
                }
            }
        }
        if (!string.IsNullOrEmpty(contentItem.ImageFileId))
        {
            OpenAIFile imageInfo = fileClient.GetFile(contentItem.ImageFileId);
            BinaryData imageBytes = fileClient.DownloadFile(contentItem.ImageFileId);
            using FileStream stream = File.OpenWrite($&quot;{imageInfo.Filename}.png&quot;);
            imageBytes.ToStream().CopyTo(stream);

            Console.WriteLine($&quot;&amp;lt;image: {imageInfo.Filename}.png&amp;gt;&quot;);
        }
    }
    Console.WriteLine();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And it would yield something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[USER]: How well did product 113045 sell in February? Graph its trend over time.

[ASSISTANT]: Product 113045 sold 22 units in February【4:0†monthly_sales.json】.

Now, I will generate a graph to show its sales trend over time.

* File citation, file ID: file-hGOiwGNftMgOsjbynBpMCPFn

[ASSISTANT]: &amp;lt;image: 015d8e43-17fe-47de-af40-280f25452280.png&amp;gt;
The sales trend for Product 113045 over the past three months shows that:

- In January, 12 units were sold.
- In February, 22 units were sold, indicating significant growth.
- In March, sales dropped slightly to 16 units.

The graph above visualizes this trend, showing a peak in sales during February.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use assistants with streaming and vision&lt;/h2&gt; 
&lt;p&gt;This example shows how to use the v2 Assistants API to provide image data to an assistant and then stream the run&#39;s response.&lt;/p&gt; 
&lt;p&gt;As before, you will use a &lt;code&gt;OpenAIFileClient&lt;/code&gt; and an &lt;code&gt;AssistantClient&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIClient openAIClient = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
OpenAIFileClient fileClient = openAIClient.GetOpenAIFileClient();
AssistantClient assistantClient = openAIClient.GetAssistantClient();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For this example, we will use both image data from a local file as well as an image located at a URL. For the local data, we upload the file with the &lt;code&gt;Vision&lt;/code&gt; upload purpose, which would also allow it to be downloaded and retrieved later.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIFile pictureOfAppleFile = fileClient.UploadFile(
    Path.Combine(&quot;Assets&quot;, &quot;images_apple.png&quot;),
    FileUploadPurpose.Vision);

Uri linkToPictureOfOrange = new(&quot;https://raw.githubusercontent.com/openai/openai-dotnet/refs/heads/main/examples/Assets/images_orange.png&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a new assistant with a vision-capable model like &lt;code&gt;gpt-4o&lt;/code&gt; and a thread with the image information referenced:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Assistant assistant = assistantClient.CreateAssistant(
    &quot;gpt-4o&quot;,
    new AssistantCreationOptions()
    {
        Instructions = &quot;When asked a question, attempt to answer very concisely. &quot;
            + &quot;Prefer one-sentence answers whenever feasible.&quot;
    });

AssistantThread thread = assistantClient.CreateThread(new ThreadCreationOptions()
{
    InitialMessages =
        {
            new ThreadInitializationMessage(
                MessageRole.User,
                [
                    &quot;Hello, assistant! Please compare these two images for me:&quot;,
                    MessageContent.FromImageFileId(pictureOfAppleFile.Id),
                    MessageContent.FromImageUri(linkToPictureOfOrange),
                ]),
        }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the assistant and thread prepared, use the &lt;code&gt;CreateRunStreaming&lt;/code&gt; method to get an enumerable &lt;code&gt;CollectionResult&amp;lt;StreamingUpdate&amp;gt;&lt;/code&gt;. You can then iterate over this collection with &lt;code&gt;foreach&lt;/code&gt;. For async calling patterns, use &lt;code&gt;CreateRunStreamingAsync&lt;/code&gt; and iterate over the &lt;code&gt;AsyncCollectionResult&amp;lt;StreamingUpdate&amp;gt;&lt;/code&gt; with &lt;code&gt;await foreach&lt;/code&gt;, instead. Note that streaming variants also exist for &lt;code&gt;CreateThreadAndRunStreaming&lt;/code&gt; and &lt;code&gt;SubmitToolOutputsToRunStreaming&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;StreamingUpdate&amp;gt; streamingUpdates = assistantClient.CreateRunStreaming(
    thread.Id,
    assistant.Id,
    new RunCreationOptions()
    {
        AdditionalInstructions = &quot;When possible, try to sneak in puns if you&#39;re asked to compare things.&quot;,
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, to handle the &lt;code&gt;StreamingUpdates&lt;/code&gt; as they arrive, you can use the &lt;code&gt;UpdateKind&lt;/code&gt; property on the base &lt;code&gt;StreamingUpdate&lt;/code&gt; and/or downcast to a specifically desired update type, like &lt;code&gt;MessageContentUpdate&lt;/code&gt; for &lt;code&gt;thread.message.delta&lt;/code&gt; events or &lt;code&gt;RequiredActionUpdate&lt;/code&gt; for streaming tool calls.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;foreach (StreamingUpdate streamingUpdate in streamingUpdates)
{
    if (streamingUpdate.UpdateKind == StreamingUpdateReason.RunCreated)
    {
        Console.WriteLine($&quot;--- Run started! ---&quot;);
    }
    if (streamingUpdate is MessageContentUpdate contentUpdate)
    {
        Console.Write(contentUpdate.Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will yield streamed output from the run like the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;--- Run started! ---
The first image depicts a multicolored apple with a blend of red and green hues, while the second image shows an orange with a bright, textured orange peel; one might say it’s comparing apples to oranges!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to work with Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;For Azure OpenAI scenarios use the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net&quot;&gt;Azure SDK&lt;/a&gt; and more specifically the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/sdk/openai/Azure.AI.OpenAI/README.md&quot;&gt;Azure OpenAI client library for .NET&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Azure OpenAI client library for .NET is a companion to this library and all common capabilities between OpenAI and Azure OpenAI share the same scenario clients, methods, and request/response types. It is designed to make Azure specific scenarios straightforward, with extensions for Azure-specific concepts like Responsible AI content filter results and On Your Data integration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;AzureOpenAIClient azureClient = new(
    new Uri(&quot;https://your-azure-openai-resource.com&quot;),
    new DefaultAzureCredential());
ChatClient chatClient = azureClient.GetChatClient(&quot;my-gpt-35-turbo-deployment&quot;);

ChatCompletion completion = chatClient.CompleteChat(
    [
        // System messages represent instructions or other guidance about how the assistant should behave
        new SystemChatMessage(&quot;You are a helpful assistant that talks like a pirate.&quot;),
        // User messages represent user input, whether historical or the most recen tinput
        new UserChatMessage(&quot;Hi, can you help me?&quot;),
        // Assistant messages in a request represent conversation history for responses
        new AssistantChatMessage(&quot;Arrr! Of course, me hearty! What can I do for ye?&quot;),
        new UserChatMessage(&quot;What&#39;s the best way to train a parrot?&quot;),
    ]);

Console.WriteLine($&quot;{completion.Role}: {completion.Content[0].Text}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced scenarios&lt;/h2&gt; 
&lt;h3&gt;Using protocol methods&lt;/h3&gt; 
&lt;p&gt;In addition to the client methods that use strongly-typed request and response objects, the .NET library also provides &lt;em&gt;protocol methods&lt;/em&gt; that enable more direct access to the REST API. Protocol methods are &quot;binary in, binary out&quot; accepting &lt;code&gt;BinaryContent&lt;/code&gt; as request bodies and providing &lt;code&gt;BinaryData&lt;/code&gt; as response bodies.&lt;/p&gt; 
&lt;p&gt;For example, to use the protocol method variant of the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method, pass the request body as &lt;code&gt;BinaryContent&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ChatClient client = new(&quot;gpt-4o&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

BinaryData input = BinaryData.FromBytes(&quot;&quot;&quot;
    {
       &quot;model&quot;: &quot;gpt-4o&quot;,
       &quot;messages&quot;: [
           {
               &quot;role&quot;: &quot;user&quot;,
               &quot;content&quot;: &quot;Say &#39;this is a test.&#39;&quot;
           }
       ]
    }
    &quot;&quot;&quot;u8.ToArray());

using BinaryContent content = BinaryContent.Create(input);
ClientResult result = client.CompleteChat(content);
BinaryData output = result.GetRawResponse().Content;

using JsonDocument outputAsJson = JsonDocument.Parse(output.ToString());
string message = outputAsJson.RootElement
    .GetProperty(&quot;choices&quot;u8)[0]
    .GetProperty(&quot;message&quot;u8)
    .GetProperty(&quot;content&quot;u8)
    .GetString();

Console.WriteLine($&quot;[ASSISTANT]: {message}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice how you can then call the resulting &lt;code&gt;ClientResult&lt;/code&gt;&#39;s &lt;code&gt;GetRawResponse&lt;/code&gt; method and retrieve the response body as &lt;code&gt;BinaryData&lt;/code&gt; via the &lt;code&gt;PipelineResponse&lt;/code&gt;&#39;s &lt;code&gt;Content&lt;/code&gt; property.&lt;/p&gt; 
&lt;h3&gt;Mock a client for testing&lt;/h3&gt; 
&lt;p&gt;The OpenAI .NET library has been designed to support mocking, providing key features such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client methods made virtual to allow overriding.&lt;/li&gt; 
 &lt;li&gt;Model factories to assist in instantiating API output models that lack public constructors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To illustrate how mocking works, suppose you want to validate the behavior of the following method using the &lt;a href=&quot;https://github.com/devlooped/moq&quot;&gt;Moq&lt;/a&gt; library. Given the path to an audio file, it determines whether it contains a specified secret word:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public bool ContainsSecretWord(AudioClient client, string audioFilePath, string secretWord)
{
    AudioTranscription transcription = client.TranscribeAudio(audioFilePath);
    return transcription.Text.Contains(secretWord);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create mocks of &lt;code&gt;AudioClient&lt;/code&gt; and &lt;code&gt;ClientResult&amp;lt;AudioTranscription&amp;gt;&lt;/code&gt;, set up methods and properties that will be invoked, then test the behavior of the &lt;code&gt;ContainsSecretWord&lt;/code&gt; method. Since the &lt;code&gt;AudioTranscription&lt;/code&gt; class does not provide public constructors, it must be instantiated by the &lt;code&gt;OpenAIAudioModelFactory&lt;/code&gt; static class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Instantiate mocks and the AudioTranscription object.

Mock&amp;lt;AudioClient&amp;gt; mockClient = new();
Mock&amp;lt;ClientResult&amp;lt;AudioTranscription&amp;gt;&amp;gt; mockResult = new(null, Mock.Of&amp;lt;PipelineResponse&amp;gt;());
AudioTranscription transcription = OpenAIAudioModelFactory.AudioTranscription(text: &quot;I swear I saw an apple flying yesterday!&quot;);

// Set up mocks&#39; properties and methods.

mockResult
    .SetupGet(result =&amp;gt; result.Value)
    .Returns(transcription);

mockClient.Setup(client =&amp;gt; client.TranscribeAudio(
        It.IsAny&amp;lt;string&amp;gt;(),
        It.IsAny&amp;lt;AudioTranscriptionOptions&amp;gt;()))
    .Returns(mockResult.Object);

// Perform validation.

AudioClient client = mockClient.Object;
bool containsSecretWord = ContainsSecretWord(client, &quot;&amp;lt;audioFilePath&amp;gt;&quot;, &quot;apple&quot;);

Assert.That(containsSecretWord, Is.True);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All namespaces have their corresponding model factory to support mocking with the exception of the &lt;code&gt;OpenAI.Assistants&lt;/code&gt; and &lt;code&gt;OpenAI.VectorStores&lt;/code&gt; namespaces, for which model factories are coming soon.&lt;/p&gt; 
&lt;h3&gt;Automatically retrying errors&lt;/h3&gt; 
&lt;p&gt;By default, the client classes will automatically retry the following errors up to three additional times using exponential backoff:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;408 Request Timeout&lt;/li&gt; 
 &lt;li&gt;429 Too Many Requests&lt;/li&gt; 
 &lt;li&gt;500 Internal Server Error&lt;/li&gt; 
 &lt;li&gt;502 Bad Gateway&lt;/li&gt; 
 &lt;li&gt;503 Service Unavailable&lt;/li&gt; 
 &lt;li&gt;504 Gateway Timeout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;p&gt;OpenAI .NET library supports experimental distributed tracing and metrics with OpenTelemetry. Check out &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/docs/observability.md&quot;&gt;Observability with OpenTelemetry&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
