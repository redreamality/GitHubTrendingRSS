<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="data:text/xsl;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz48eHNsOnN0eWxlc2hlZXQgdmVyc2lvbj0iMy4wIiB4bWxuczp4c2w9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvWFNML1RyYW5zZm9ybSIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIj48eHNsOm91dHB1dCBtZXRob2Q9Imh0bWwiIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBpbmRlbnQ9InllcyIvPjx4c2w6dGVtcGxhdGUgbWF0Y2g9Ii8iPjx4c2w6dmFyaWFibGUgbmFtZT0idGl0bGUiPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIvcnNzL2NoYW5uZWwvdGl0bGUiLz48L3hzbDp2YXJpYWJsZT48eHNsOnZhcmlhYmxlIG5hbWU9ImRlc2NyaXB0aW9uIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iL3Jzcy9jaGFubmVsL2Rlc2NyaXB0aW9uIi8+PC94c2w6dmFyaWFibGU+PHhzbDp2YXJpYWJsZSBuYW1lPSJsaW5rIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iL3Jzcy9jaGFubmVsL2xpbmsiLz48L3hzbDp2YXJpYWJsZT48aHRtbCBjbGFzcz0iZGFyayBzY3JvbGwtc21vb3RoIj48aGVhZD48bWV0YSBjaGFyc2V0PSJ1dGYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSIvPjxtZXRhIG5hbWU9InJlZmVycmVyIiBjb250ZW50PSJ1bnNhZmUtdXJsIi8+PHRpdGxlPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkdGl0bGUiLz48L3RpdGxlPjxzdHlsZT4qLDphZnRlciw6YmVmb3Jley0tdHctYm9yZGVyLXNwYWNpbmcteDowOy0tdHctYm9yZGVyLXNwYWNpbmcteTowOy0tdHctdHJhbnNsYXRlLXg6MDstLXR3LXRyYW5zbGF0ZS15OjA7LS10dy1yb3RhdGU6MDstLXR3LXNrZXcteDowOy0tdHctc2tldy15OjA7LS10dy1zY2FsZS14OjE7LS10dy1zY2FsZS15OjE7LS10dy1wYW4teDogOy0tdHctcGFuLXk6IDstLXR3LXBpbmNoLXpvb206IDstLXR3LXNjcm9sbC1zbmFwLXN0cmljdG5lc3M6cHJveGltaXR5Oy0tdHctZ3JhZGllbnQtZnJvbS1wb3NpdGlvbjogOy0tdHctZ3JhZGllbnQtdmlhLXBvc2l0aW9uOiA7LS10dy1ncmFkaWVudC10by1wb3NpdGlvbjogOy0tdHctb3JkaW5hbDogOy0tdHctc2xhc2hlZC16ZXJvOiA7LS10dy1udW1lcmljLWZpZ3VyZTogOy0tdHctbnVtZXJpYy1zcGFjaW5nOiA7LS10dy1udW1lcmljLWZyYWN0aW9uOiA7LS10dy1yaW5nLWluc2V0OiA7LS10dy1yaW5nLW9mZnNldC13aWR0aDowcHg7LS10dy1yaW5nLW9mZnNldC1jb2xvcjojZmZmOy0tdHctcmluZy1jb2xvcjpyZ2JhKDU5LDEzMCwyNDYsLjUpOy0tdHctcmluZy1vZmZzZXQtc2hhZG93OjAgMCAjMDAwMDstLXR3LXJpbmctc2hhZG93OjAgMCAjMDAwMDstLXR3LXNoYWRvdzowIDAgIzAwMDA7LS10dy1zaGFkb3ctY29sb3JlZDowIDAgIzAwMDA7LS10dy1ibHVyOiA7LS10dy1icmlnaHRuZXNzOiA7LS10dy1jb250cmFzdDogOy0tdHctZ3JheXNjYWxlOiA7LS10dy1odWUtcm90YXRlOiA7LS10dy1pbnZlcnQ6IDstLXR3LXNhdHVyYXRlOiA7LS10dy1zZXBpYTogOy0tdHctZHJvcC1zaGFkb3c6IDstLXR3LWJhY2tkcm9wLWJsdXI6IDstLXR3LWJhY2tkcm9wLWJyaWdodG5lc3M6IDstLXR3LWJhY2tkcm9wLWNvbnRyYXN0OiA7LS10dy1iYWNrZHJvcC1ncmF5c2NhbGU6IDstLXR3LWJhY2tkcm9wLWh1ZS1yb3RhdGU6IDstLXR3LWJhY2tkcm9wLWludmVydDogOy0tdHctYmFja2Ryb3Atb3BhY2l0eTogOy0tdHctYmFja2Ryb3Atc2F0dXJhdGU6IDstLXR3LWJhY2tkcm9wLXNlcGlhOiA7LS10dy1jb250YWluLXNpemU6IDstLXR3LWNvbnRhaW4tbGF5b3V0OiA7LS10dy1jb250YWluLXBhaW50OiA7LS10dy1jb250YWluLXN0eWxlOiB9OjpiYWNrZHJvcHstLXR3LWJvcmRlci1zcGFjaW5nLXg6MDstLXR3LWJvcmRlci1zcGFjaW5nLXk6MDstLXR3LXRyYW5zbGF0ZS14OjA7LS10dy10cmFuc2xhdGUteTowOy0tdHctcm90YXRlOjA7LS10dy1za2V3LXg6MDstLXR3LXNrZXcteTowOy0tdHctc2NhbGUteDoxOy0tdHctc2NhbGUteToxOy0tdHctcGFuLXg6IDstLXR3LXBhbi15OiA7LS10dy1waW5jaC16b29tOiA7LS10dy1zY3JvbGwtc25hcC1zdHJpY3RuZXNzOnByb3hpbWl0eTstLXR3LWdyYWRpZW50LWZyb20tcG9zaXRpb246IDstLXR3LWdyYWRpZW50LXZpYS1wb3NpdGlvbjogOy0tdHctZ3JhZGllbnQtdG8tcG9zaXRpb246IDstLXR3LW9yZGluYWw6IDstLXR3LXNsYXNoZWQtemVybzogOy0tdHctbnVtZXJpYy1maWd1cmU6IDstLXR3LW51bWVyaWMtc3BhY2luZzogOy0tdHctbnVtZXJpYy1mcmFjdGlvbjogOy0tdHctcmluZy1pbnNldDogOy0tdHctcmluZy1vZmZzZXQtd2lkdGg6MHB4Oy0tdHctcmluZy1vZmZzZXQtY29sb3I6I2ZmZjstLXR3LXJpbmctY29sb3I6cmdiYSg1OSwxMzAsMjQ2LC41KTstLXR3LXJpbmctb2Zmc2V0LXNoYWRvdzowIDAgIzAwMDA7LS10dy1yaW5nLXNoYWRvdzowIDAgIzAwMDA7LS10dy1zaGFkb3c6MCAwICMwMDAwOy0tdHctc2hhZG93LWNvbG9yZWQ6MCAwICMwMDAwOy0tdHctYmx1cjogOy0tdHctYnJpZ2h0bmVzczogOy0tdHctY29udHJhc3Q6IDstLXR3LWdyYXlzY2FsZTogOy0tdHctaHVlLXJvdGF0ZTogOy0tdHctaW52ZXJ0OiA7LS10dy1zYXR1cmF0ZTogOy0tdHctc2VwaWE6IDstLXR3LWRyb3Atc2hhZG93OiA7LS10dy1iYWNrZHJvcC1ibHVyOiA7LS10dy1iYWNrZHJvcC1icmlnaHRuZXNzOiA7LS10dy1iYWNrZHJvcC1jb250cmFzdDogOy0tdHctYmFja2Ryb3AtZ3JheXNjYWxlOiA7LS10dy1iYWNrZHJvcC1odWUtcm90YXRlOiA7LS10dy1iYWNrZHJvcC1pbnZlcnQ6IDstLXR3LWJhY2tkcm9wLW9wYWNpdHk6IDstLXR3LWJhY2tkcm9wLXNhdHVyYXRlOiA7LS10dy1iYWNrZHJvcC1zZXBpYTogOy0tdHctY29udGFpbi1zaXplOiA7LS10dy1jb250YWluLWxheW91dDogOy0tdHctY29udGFpbi1wYWludDogOy0tdHctY29udGFpbi1zdHlsZTogfQ0KICAgICAgICANCiAgICAgICAgLyohIHRhaWx3aW5kY3NzIHYzLjQuMTcgfCBNSVQgTGljZW5zZSB8IGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tKi8qLDphZnRlciw6YmVmb3Jle2JveC1zaXppbmc6Ym9yZGVyLWJveDtib3JkZXI6MCBzb2xpZCAjZTdlN2YwfTphZnRlciw6YmVmb3Jley0tdHctY29udGVudDoiIn06aG9zdCxodG1se2xpbmUtaGVpZ2h0OjEuNTstd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6MTAwJTstbW96LXRhYi1zaXplOjQ7LW8tdGFiLXNpemU6NDt0YWItc2l6ZTo0O2ZvbnQtZmFtaWx5OnVpLXNhbnMtc2VyaWYsc3lzdGVtLXVpLHNhbnMtc2VyaWYsQXBwbGUgQ29sb3IgRW1vamksU2Vnb2UgVUkgRW1vamksU2Vnb2UgVUkgU3ltYm9sLE5vdG8gQ29sb3IgRW1vamk7Zm9udC1mZWF0dXJlLXNldHRpbmdzOm5vcm1hbDtmb250LXZhcmlhdGlvbi1zZXR0aW5nczpub3JtYWw7LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOnRyYW5zcGFyZW50fWJvZHl7bWFyZ2luOjA7bGluZS1oZWlnaHQ6aW5oZXJpdH1ocntoZWlnaHQ6MDtjb2xvcjppbmhlcml0O2JvcmRlci10b3Atd2lkdGg6MXB4fWFiYnI6d2hlcmUoW3RpdGxlXSl7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZDt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZH1oMSxoMixoMyxoNCxoNSxoNntmb250LXNpemU6aW5oZXJpdDtmb250LXdlaWdodDppbmhlcml0fWF7Y29sb3I6aW5oZXJpdDt0ZXh0LWRlY29yYXRpb246aW5oZXJpdH1iLHN0cm9uZ3tmb250LXdlaWdodDpib2xkZXJ9Y29kZSxrYmQscHJlLHNhbXB7Zm9udC1mYW1pbHk6dWktbW9ub3NwYWNlLFNGTW9uby1SZWd1bGFyLE1lbmxvLE1vbmFjbyxDb25zb2xhcyxMaWJlcmF0aW9uIE1vbm8sQ291cmllciBOZXcsbW9ub3NwYWNlO2ZvbnQtZmVhdHVyZS1zZXR0aW5nczpub3JtYWw7Zm9udC12YXJpYXRpb24tc2V0dGluZ3M6bm9ybWFsO2ZvbnQtc2l6ZToxZW19c21hbGx7Zm9udC1zaXplOjgwJX1zdWIsc3Vwe2ZvbnQtc2l6ZTo3NSU7bGluZS1oZWlnaHQ6MDtwb3NpdGlvbjpyZWxhdGl2ZTt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1zdWJ7Ym90dG9tOi0uMjVlbX1zdXB7dG9wOi0uNWVtfXRhYmxle3RleHQtaW5kZW50OjA7Ym9yZGVyLWNvbG9yOmluaGVyaXQ7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlfWJ1dHRvbixpbnB1dCxvcHRncm91cCxzZWxlY3QsdGV4dGFyZWF7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LWZlYXR1cmUtc2V0dGluZ3M6aW5oZXJpdDtmb250LXZhcmlhdGlvbi1zZXR0aW5nczppbmhlcml0O2ZvbnQtc2l6ZToxMDAlO2ZvbnQtd2VpZ2h0OmluaGVyaXQ7bGluZS1oZWlnaHQ6aW5oZXJpdDtsZXR0ZXItc3BhY2luZzppbmhlcml0O2NvbG9yOmluaGVyaXQ7bWFyZ2luOjA7cGFkZGluZzowfWJ1dHRvbixzZWxlY3R7dGV4dC10cmFuc2Zvcm06bm9uZX1idXR0b24saW5wdXQ6d2hlcmUoW3R5cGU9YnV0dG9uXSksaW5wdXQ6d2hlcmUoW3R5cGU9cmVzZXRdKSxpbnB1dDp3aGVyZShbdHlwZT1zdWJtaXRdKXstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9uO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7YmFja2dyb3VuZC1pbWFnZTpub25lfTotbW96LWZvY3VzcmluZ3tvdXRsaW5lOmF1dG99Oi1tb3otdWktaW52YWxpZHtib3gtc2hhZG93Om5vbmV9cHJvZ3Jlc3N7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbntoZWlnaHQ6YXV0b31bdHlwZT1zZWFyY2hdey13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7b3V0bGluZS1vZmZzZXQ6LTJweH06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9Ojotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbnstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9uO2ZvbnQ6aW5oZXJpdH1zdW1tYXJ5e2Rpc3BsYXk6bGlzdC1pdGVtfWJsb2NrcXVvdGUsZGQsZGwsZmlndXJlLGgxLGgyLGgzLGg0LGg1LGg2LGhyLHAscHJle21hcmdpbjowfWZpZWxkc2V0e21hcmdpbjowfWZpZWxkc2V0LGxlZ2VuZHtwYWRkaW5nOjB9bWVudSxvbCx1bHtsaXN0LXN0eWxlOm5vbmU7bWFyZ2luOjA7cGFkZGluZzowfWRpYWxvZ3twYWRkaW5nOjB9dGV4dGFyZWF7cmVzaXplOnZlcnRpY2FsfWlucHV0OjotbW96LXBsYWNlaG9sZGVyLHRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVye29wYWNpdHk6MTtjb2xvcjojYThhOGI4fWlucHV0OjpwbGFjZWhvbGRlcix0ZXh0YXJlYTo6cGxhY2Vob2xkZXJ7b3BhY2l0eToxO2NvbG9yOiNhOGE4Yjh9W3JvbGU9YnV0dG9uXSxidXR0b257Y3Vyc29yOnBvaW50ZXJ9OmRpc2FibGVke2N1cnNvcjpkZWZhdWx0fWF1ZGlvLGNhbnZhcyxlbWJlZCxpZnJhbWUsaW1nLG9iamVjdCxzdmcsdmlkZW97ZGlzcGxheTpibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9aW1nLHZpZGVve21heC13aWR0aDoxMDAlO2hlaWdodDphdXRvfVtoaWRkZW5dOndoZXJlKDpub3QoW2hpZGRlbj11bnRpbC1mb3VuZF0pKXtkaXNwbGF5Om5vbmV9OnJvb3R7LS1jYXJkLXJhZGl1czowLjc1cmVtOy0tYnRuLXJhZGl1czp2YXIoLS1jYXJkLXJhZGl1cyk7LS1iYWRnZS1yYWRpdXM6dmFyKC0tYnRuLXJhZGl1cyk7LS1pbnB1dC1yYWRpdXM6dmFyKC0tYnRuLXJhZGl1cyk7LS1hdmF0YXItcmFkaXVzOjk5OTlweDstLWFubm9uY2UtcmFkaXVzOnZhcigtLWF2YXRhci1yYWRpdXMpOy0tdWktYm9yZGVyLWNvbG9yOiMxZjFmMzE7LS1idG4tYm9yZGVyOiMxZjFmMzE7LS1iYWRnZS1ib3JkZXI6dmFyKC0tYnRuLWJvcmRlcik7LS1pbnB1dC1ib3JkZXI6dmFyKC0tdWktYm9yZGVyLWNvbG9yKTstLXVpLWRpc2FibGVkLWJvcmRlcjojMTIxMjIwOy0tdWktZXJyb3ItYm9yZGVyOiNlMTFkNDg7LS11aS1zdWNjZXNzLWJvcmRlcjojNjVhMzBkOy0taW5wdXQtb3V0bGluZTojNGY0NmU1Oy0tdWktYmc6cmdiKDE4IDE4IDMyL3ZhcigtLXVpLWJnLW9wYWNpdHkpKTstLXVpLXNvZnQtYmc6IzFmMWYzMTstLW92ZXJsYXktYmc6cmdiYSgyLDIsMTMsLjI1KTstLWlucHV0LWJnOnZhcigtLXVpLXNvZnQtYmcpOy0tdWktZGlzYWJsZWQtYmc6IzEyMTIyMDstLWNhcmQtcGFkZGluZzoxLjVyZW07LS1kaXNwbGF5LXRleHQtY29sb3I6I2ZmZjstLXRpdGxlLXRleHQtY29sb3I6dmFyKC0tZGlzcGxheS10ZXh0LWNvbG9yKTstLWJvZHktdGV4dC1jb2xvcjojZDZkNmUxOy0tY2FwdGlvbi10ZXh0LWNvbG9yOiM2ZTZlODE7LS1wbGFjZWhvbGRlci10ZXh0LWNvbG9yOiM0ZDRkNWY7LS11aS1iZy1vcGFjaXR5OjE7Y29sb3I6dmFyKC0tYm9keS10ZXh0LWNvbG9yKX0qLC5ib3JkZXJ7Ym9yZGVyLWNvbG9yOnZhcigtLXVpLWJvcmRlci1jb2xvcil9YnV0dG9uOmRpc2FibGVke2JvcmRlcjpub25lIWltcG9ydGFudDtiYWNrZ3JvdW5kOnZhcigtLXVpLWRpc2FibGVkLWJnKSFpbXBvcnRhbnQ7YmFja2dyb3VuZC1pbWFnZTpub25lIWltcG9ydGFudDtib3gtc2hhZG93Om5vbmUhaW1wb3J0YW50O2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLXRleHQtY29sb3IpIWltcG9ydGFudDtwb2ludGVyLWV2ZW50czpub25lIWltcG9ydGFudH1idXR0b246ZGlzYWJsZWQ6YmVmb3Jle2NvbnRlbnQ6dmFyKC0tdHctY29udGVudCk7ZGlzcGxheTpub25lfWE6Zm9jdXMtdmlzaWJsZSxidXR0b246Zm9jdXMtdmlzaWJsZXtvdXRsaW5lLXdpZHRoOjJweDtvdXRsaW5lLW9mZnNldDoycHg7b3V0bGluZS1jb2xvcjojNGY0NmU1fWE6Zm9jdXMtdmlzaWJsZTpmb2N1cy12aXNpYmxlLGJ1dHRvbjpmb2N1cy12aXNpYmxlOmZvY3VzLXZpc2libGV7b3V0bGluZS1zdHlsZTpzb2xpZH1pbnB1dDp1c2VyLWludmFsaWQsc2VsZWN0OnVzZXItaW52YWxpZCx0ZXh0YXJlYTp1c2VyLWludmFsaWR7LS1pbnB1dC1ib3JkZXI6dmFyKC0tdWktZXJyb3ItYm9yZGVyKTstLXVpLWJvcmRlci1jb2xvcjp2YXIoLS11aS1lcnJvci1ib3JkZXIpOy0taW5wdXQtb3V0bGluZTp2YXIoLS11aS1lcnJvci1ib3JkZXIpOy0tdGl0bGUtdGV4dC1jb2xvcjojZmI3MTg1fVtkYXRhLXJvdW5kZWQ9bm9uZV17LS1jYXJkLXJhZGl1czowcHg7LS1hdmF0YXItcmFkaXVzOjBweH1bZGF0YS1yb3VuZGVkPWRlZmF1bHRdey0tY2FyZC1yYWRpdXM6MC4yNXJlbX1bZGF0YS1yb3VuZGVkPXNtYWxsXXstLWNhcmQtcmFkaXVzOjAuMTI1cmVtfVtkYXRhLXJvdW5kZWQ9bWVkaXVtXXstLWNhcmQtcmFkaXVzOjAuMzc1cmVtfVtkYXRhLXJvdW5kZWQ9bGFyZ2Vdey0tY2FyZC1yYWRpdXM6MC41cmVtfVtkYXRhLXJvdW5kZWQ9eGxhcmdlXXstLWNhcmQtcmFkaXVzOjAuNzVyZW19W2RhdGEtcm91bmRlZD0iMnhsYXJnZSJdey0tY2FyZC1yYWRpdXM6MXJlbTstLWlucHV0LXJhZGl1czowLjc1cmVtfVtkYXRhLXJvdW5kZWQ9IjN4bGFyZ2UiXXstLWNhcmQtcmFkaXVzOjEuNXJlbTstLWlucHV0LXJhZGl1czowLjc1cmVtfVtkYXRhLXJvdW5kZWQ9ZnVsbF17LS1jYXJkLXJhZGl1czoxLjVyZW07LS1idG4tcmFkaXVzOjk5OTlweDstLWlucHV0LXJhZGl1czoxcmVtfVtkYXRhLXNoYWRlPWdsYXNzeV17LS11aS1iZC1ibHVyOjQwcHg7LS11aS1iZy1vcGFjaXR5OjAuNzU7LS11aS1iZzpyZ2IoNTggNTggNzUvdmFyKC0tdWktYmctb3BhY2l0eSkpOy0tdWktYm9yZGVyLWNvbG9yOnJnYmEoMjUwLDI1MCwyNTQsLjEpOy0tdWktc29mdC1iZzpyZ2JhKDc3LDc3LDk1LC41KX1bZGF0YS1zaGFkZT0iODAwIl17LS11aS1ib3JkZXItY29sb3I6IzNhM2E0YjstLXVpLWJnOiMxZjFmMzE7LS11aS1zb2Z0LWJnOiMxMjEyMjB9W2RhdGEtc2hhZGU9IjkwMCJdey0tdWktYm9yZGVyLWNvbG9yOiMxZjFmMzE7LS11aS1iZzojMTIxMjIwOy0tdWktc29mdC1iZzojMWYxZjMxfVtkYXRhLXNoYWRlPSI5NTAiXXstLXVpLWJvcmRlci1jb2xvcjojMWYxZjMxOy0tdWktYmc6IzAyMDIwZDstLXVpLXNvZnQtYmc6IzFmMWYzMX0uY29udGFpbmVye3dpZHRoOjEwMCV9QG1lZGlhIChtaW4td2lkdGg6NjQwcHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjY0MHB4fX1AbWVkaWEgKG1pbi13aWR0aDo3NjhweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6NzY4cHh9fUBtZWRpYSAobWluLXdpZHRoOjEwMjRweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6MTAyNHB4fX1AbWVkaWEgKG1pbi13aWR0aDoxMjgwcHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjEyODBweH19QG1lZGlhIChtaW4td2lkdGg6MTUzNnB4KXsuY29udGFpbmVye21heC13aWR0aDoxNTM2cHh9fS5pY29uLVxbdGFibGVyLS1yc3NcXXtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxZW07aGVpZ2h0OjFlbTtiYWNrZ3JvdW5kLWNvbG9yOmN1cnJlbnRDb2xvcjstd2Via2l0LW1hc2staW1hZ2U6dmFyKC0tc3ZnKTttYXNrLWltYWdlOnZhcigtLXN2Zyk7LXdlYmtpdC1tYXNrLXJlcGVhdDpuby1yZXBlYXQ7bWFzay1yZXBlYXQ6bm8tcmVwZWF0Oy13ZWJraXQtbWFzay1zaXplOjEwMCUgMTAwJTttYXNrLXNpemU6MTAwJSAxMDAlOy0tc3ZnOnVybCgiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmLTgsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzI0JyBoZWlnaHQ9JzI0JyUzRSUzQ3BhdGggZmlsbD0nbm9uZScgc3Ryb2tlPSclMjMwMDAnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNCAxOWExIDEgMCAxIDAgMiAwIDEgMSAwIDEgMC0yIDBNNCA0YTE2IDE2IDAgMCAxIDE2IDE2TTQgMTFhOSA5IDAgMCAxIDkgOScvJTNFJTNDL3N2ZyUzRSIpfS5saW5rey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiKDEyOSAxNDAgMjQ4L3ZhcigtLXR3LXRleHQtb3BhY2l0eSwxKSk7dHJhbnNpdGlvbi1wcm9wZXJ0eTpjb2xvcixiYWNrZ3JvdW5kLWNvbG9yLGJvcmRlci1jb2xvcix0ZXh0LWRlY29yYXRpb24tY29sb3IsZmlsbCxzdHJva2Usb3BhY2l0eSxib3gtc2hhZG93LHRyYW5zZm9ybSxmaWx0ZXIsLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI7dHJhbnNpdGlvbi1wcm9wZXJ0eTpjb2xvcixiYWNrZ3JvdW5kLWNvbG9yLGJvcmRlci1jb2xvcix0ZXh0LWRlY29yYXRpb24tY29sb3IsZmlsbCxzdHJva2Usb3BhY2l0eSxib3gtc2hhZG93LHRyYW5zZm9ybSxmaWx0ZXIsYmFja2Ryb3AtZmlsdGVyO3RyYW5zaXRpb24tcHJvcGVydHk6Y29sb3IsYmFja2dyb3VuZC1jb2xvcixib3JkZXItY29sb3IsdGV4dC1kZWNvcmF0aW9uLWNvbG9yLGZpbGwsc3Ryb2tlLG9wYWNpdHksYm94LXNoYWRvdyx0cmFuc2Zvcm0sZmlsdGVyLGJhY2tkcm9wLWZpbHRlciwtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjt0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQsMCwuMiwxKTt0cmFuc2l0aW9uLWR1cmF0aW9uOi4xNXN9LmxpbmsudmFyaWFudC1naG9zdDpob3ZlciwubGluay52YXJpYW50LXVuZGVybGluZWR7dGV4dC1kZWNvcmF0aW9uLWxpbmU6dW5kZXJsaW5lfS5saW5rLnZhcmlhbnQtYW5pbWF0ZWR7cG9zaXRpb246cmVsYXRpdmV9LmxpbmsudmFyaWFudC1hbmltYXRlZDpiZWZvcmV7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3JpZ2h0OjA7Ym90dG9tOjA7aGVpZ2h0OjFweDt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0Oy0tdHctc2NhbGUteDowO3RyYW5zZm9ybTp0cmFuc2xhdGUodmFyKC0tdHctdHJhbnNsYXRlLXgpLHZhcigtLXR3LXRyYW5zbGF0ZS15KSkgcm90YXRlKHZhcigtLXR3LXJvdGF0ZSkpIHNrZXdYKHZhcigtLXR3LXNrZXcteCkpIHNrZXdZKHZhcigtLXR3LXNrZXcteSkpIHNjYWxlWCh2YXIoLS10dy1zY2FsZS14KSkgc2NhbGVZKHZhcigtLXR3LXNjYWxlLXkpKTt0cmFuc2l0aW9uLXByb3BlcnR5OmNvbG9yLGJhY2tncm91bmQtY29sb3IsYm9yZGVyLWNvbG9yLHRleHQtZGVjb3JhdGlvbi1jb2xvcixmaWxsLHN0cm9rZSxvcGFjaXR5LGJveC1zaGFkb3csdHJhbnNmb3JtLGZpbHRlciwtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjt0cmFuc2l0aW9uLXByb3BlcnR5OmNvbG9yLGJhY2tncm91bmQtY29sb3IsYm9yZGVyLWNvbG9yLHRleHQtZGVjb3JhdGlvbi1jb2xvcixmaWxsLHN0cm9rZSxvcGFjaXR5LGJveC1zaGFkb3csdHJhbnNmb3JtLGZpbHRlcixiYWNrZHJvcC1maWx0ZXI7dHJhbnNpdGlvbi1wcm9wZXJ0eTpjb2xvcixiYWNrZ3JvdW5kLWNvbG9yLGJvcmRlci1jb2xvcix0ZXh0LWRlY29yYXRpb24tY29sb3IsZmlsbCxzdHJva2Usb3BhY2l0eSxib3gtc2hhZG93LHRyYW5zZm9ybSxmaWx0ZXIsYmFja2Ryb3AtZmlsdGVyLC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyO3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNCwwLC4yLDEpO2NvbnRlbnQ6dmFyKC0tdHctY29udGVudCk7dHJhbnNpdGlvbi1kdXJhdGlvbjouMnN9LmxpbmsudmFyaWFudC1hbmltYXRlZDpob3ZlcjpiZWZvcmV7dHJhbnNmb3JtLW9yaWdpbjpsZWZ0O2NvbnRlbnQ6dmFyKC0tdHctY29udGVudCk7LS10dy1zY2FsZS14OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZSh2YXIoLS10dy10cmFuc2xhdGUteCksdmFyKC0tdHctdHJhbnNsYXRlLXkpKSByb3RhdGUodmFyKC0tdHctcm90YXRlKSkgc2tld1godmFyKC0tdHctc2tldy14KSkgc2tld1kodmFyKC0tdHctc2tldy15KSkgc2NhbGVYKHZhcigtLXR3LXNjYWxlLXgpKSBzY2FsZVkodmFyKC0tdHctc2NhbGUteSkpfS5saW5rLmludGVudC1pbmZvey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiKDk2IDE2NSAyNTAvdmFyKC0tdHctdGV4dC1vcGFjaXR5LDEpKX0ubGluay5pbnRlbnQtbmV1dHJhbHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYigyNTUgMjU1IDI1NS92YXIoLS10dy10ZXh0LW9wYWNpdHksMSkpfS5saW5rLnZhcmlhbnQtYW5pbWF0ZWQuaW50ZW50LW5ldXRyYWw6YmVmb3Jle2NvbnRlbnQ6dmFyKC0tdHctY29udGVudCk7YmFja2dyb3VuZC1jb2xvcjpoc2xhKDAsMCUsMTAwJSwuNSl9LmxpbmsudmFyaWFudC1hbmltYXRlZC5pbnRlbnQtaW5mbzpiZWZvcmV7Y29udGVudDp2YXIoLS10dy1jb250ZW50KTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYigzNyA5OSAyMzUvdmFyKC0tdHctYmctb3BhY2l0eSwxKSl9LmxpbmsudmFyaWFudC1hbmltYXRlZC5pbnRlbnQtcHJpbWFyeTpiZWZvcmV7Y29udGVudDp2YXIoLS10dy1jb250ZW50KTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYig3OSA3MCAyMjkvdmFyKC0tdHctYmctb3BhY2l0eSwxKSl9LmxpbmsudmFyaWFudC1naG9zdC5pbnRlbnQtbmV1dHJhbCwubGluay52YXJpYW50LXVuZGVybGluZWQuaW50ZW50LW5ldXRyYWx7dGV4dC1kZWNvcmF0aW9uLWNvbG9yOmhzbGEoMCwwJSwxMDAlLC41KX0ubXgtYXV0b3ttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfS5teS0ye21hcmdpbi10b3A6LjVyZW07bWFyZ2luLWJvdHRvbTouNXJlbX0ubXktNnttYXJnaW4tdG9wOjEuNXJlbTttYXJnaW4tYm90dG9tOjEuNXJlbX0ubWItMnttYXJnaW4tYm90dG9tOi41cmVtfS5tYi02e21hcmdpbi1ib3R0b206MS41cmVtfS5tYi04e21hcmdpbi1ib3R0b206MnJlbX0ubWwtMXttYXJnaW4tbGVmdDouMjVyZW19Lm1sLTR7bWFyZ2luLWxlZnQ6MXJlbX0ubXItMnttYXJnaW4tcmlnaHQ6LjVyZW19Lm10LTF7bWFyZ2luLXRvcDouMjVyZW19Lm10LTJ7bWFyZ2luLXRvcDouNXJlbX0ubXQtM3ttYXJnaW4tdG9wOi43NXJlbX0uYmxvY2t7ZGlzcGxheTpibG9ja30uaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5pbmxpbmV7ZGlzcGxheTppbmxpbmV9LmZsZXh7ZGlzcGxheTpmbGV4fS5ncmlke2Rpc3BsYXk6Z3JpZH0uaGlkZGVue2Rpc3BsYXk6bm9uZX0uaC00e2hlaWdodDoxcmVtfS5oLTh7aGVpZ2h0OjJyZW19Lm1pbi1oLXNjcmVlbnttaW4taGVpZ2h0OjEwMHZofS5taW4taC1zdmh7bWluLWhlaWdodDoxMDBzdmh9LnctNHt3aWR0aDoxcmVtfS53LTh7d2lkdGg6MnJlbX0ubWF4LXctZnVsbHttYXgtd2lkdGg6MTAwJX0ubWF4LXctc2NyZWVuLWxne21heC13aWR0aDoxMDI0cHh9LmZsZXgtMXtmbGV4OjEgMSAwJX0uY3Vyc29yLXBvaW50ZXJ7Y3Vyc29yOnBvaW50ZXJ9Lmxpc3QtZGlzY3tsaXN0LXN0eWxlLXR5cGU6ZGlzY30uZ3JpZC1jb2xzLTF7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdCgxLG1pbm1heCgwLDFmcikpfS5mbGV4LWNvbHtmbGV4LWRpcmVjdGlvbjpjb2x1bW59Lml0ZW1zLWNlbnRlcnthbGlnbi1pdGVtczpjZW50ZXJ9Lmp1c3RpZnktYmV0d2VlbntqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0uZ2FwLTR7Z2FwOjFyZW19LmdhcC02e2dhcDoxLjVyZW19LmdhcC04e2dhcDoycmVtfS5zcGFjZS15LTI+Om5vdChbaGlkZGVuXSl+Om5vdChbaGlkZGVuXSl7LS10dy1zcGFjZS15LXJldmVyc2U6MDttYXJnaW4tdG9wOmNhbGMoLjVyZW0qKDEgLSB2YXIoLS10dy1zcGFjZS15LXJldmVyc2UpKSk7bWFyZ2luLWJvdHRvbTpjYWxjKC41cmVtKnZhcigtLXR3LXNwYWNlLXktcmV2ZXJzZSkpfS5zcGFjZS15LTM+Om5vdChbaGlkZGVuXSl+Om5vdChbaGlkZGVuXSl7LS10dy1zcGFjZS15LXJldmVyc2U6MDttYXJnaW4tdG9wOmNhbGMoLjc1cmVtKigxIC0gdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSkpO21hcmdpbi1ib3R0b206Y2FsYyguNzVyZW0qdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSl9LnNwYWNlLXktND46bm90KFtoaWRkZW5dKX46bm90KFtoaWRkZW5dKXstLXR3LXNwYWNlLXktcmV2ZXJzZTowO21hcmdpbi10b3A6Y2FsYygxcmVtKigxIC0gdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSkpO21hcmdpbi1ib3R0b206Y2FsYygxcmVtKnZhcigtLXR3LXNwYWNlLXktcmV2ZXJzZSkpfS5zcGFjZS15LTY+Om5vdChbaGlkZGVuXSl+Om5vdChbaGlkZGVuXSl7LS10dy1zcGFjZS15LXJldmVyc2U6MDttYXJnaW4tdG9wOmNhbGMoMS41cmVtKigxIC0gdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSkpO21hcmdpbi1ib3R0b206Y2FsYygxLjVyZW0qdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSl9LnNjcm9sbC1zbW9vdGh7c2Nyb2xsLWJlaGF2aW9yOnNtb290aH0udHJ1bmNhdGV7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwfS5iZy1ncmF5LTkyNXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYig5IDkgMjEvdmFyKC0tdHctYmctb3BhY2l0eSwxKSl9LmJnLWdyYWRpZW50LXRvLXJ7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsdmFyKC0tdHctZ3JhZGllbnQtc3RvcHMpKX0uZnJvbS1wcmltYXJ5LTYwMHstLXR3LWdyYWRpZW50LWZyb206IzRmNDZlNSB2YXIoLS10dy1ncmFkaWVudC1mcm9tLXBvc2l0aW9uKTstLXR3LWdyYWRpZW50LXRvOnJnYmEoNzksNzAsMjI5LDApIHZhcigtLXR3LWdyYWRpZW50LXRvLXBvc2l0aW9uKTstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLHZhcigtLXR3LWdyYWRpZW50LXRvKX0udG8tYWNjZW50LTQwMHstLXR3LWdyYWRpZW50LXRvOiNlODc5ZjkgdmFyKC0tdHctZ3JhZGllbnQtdG8tcG9zaXRpb24pfS5iZy1jbGlwLXRleHR7LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6dGV4dDtiYWNrZ3JvdW5kLWNsaXA6dGV4dH0ucC0xe3BhZGRpbmc6LjI1cmVtfS5weC00e3BhZGRpbmctbGVmdDoxcmVtO3BhZGRpbmctcmlnaHQ6MXJlbX0ucHktMntwYWRkaW5nLXRvcDouNXJlbTtwYWRkaW5nLWJvdHRvbTouNXJlbX0ucHktNHtwYWRkaW5nLXRvcDoxcmVtO3BhZGRpbmctYm90dG9tOjFyZW19LnB5LTZ7cGFkZGluZy10b3A6MS41cmVtO3BhZGRpbmctYm90dG9tOjEuNXJlbX0ucGwtNXtwYWRkaW5nLWxlZnQ6MS4yNXJlbX0ucHQtMntwYWRkaW5nLXRvcDouNXJlbX0udGV4dC1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXJ9LmZvbnQtc2Fuc3tmb250LWZhbWlseTp1aS1zYW5zLXNlcmlmLHN5c3RlbS11aSxzYW5zLXNlcmlmLEFwcGxlIENvbG9yIEVtb2ppLFNlZ29lIFVJIEVtb2ppLFNlZ29lIFVJIFN5bWJvbCxOb3RvIENvbG9yIEVtb2ppfS50ZXh0LTJ4bHtmb250LXNpemU6MS41cmVtO2xpbmUtaGVpZ2h0OjJyZW19LnRleHQtbGd7Zm9udC1zaXplOjEuMTI1cmVtO2xpbmUtaGVpZ2h0OjEuNzVyZW19LnRleHQtc217Zm9udC1zaXplOi44NzVyZW07bGluZS1oZWlnaHQ6MS4yNXJlbX0udGV4dC14c3tmb250LXNpemU6Ljc1cmVtO2xpbmUtaGVpZ2h0OjFyZW19LmZvbnQtYm9sZHtmb250LXdlaWdodDo3MDB9LmZvbnQtbWVkaXVte2ZvbnQtd2VpZ2h0OjUwMH0uZm9udC1zZW1pYm9sZHtmb250LXdlaWdodDo2MDB9LmxlYWRpbmctbm9ybWFse2xpbmUtaGVpZ2h0OjEuNX0udGV4dC1ncmF5LTQwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYigxNjggMTY4IDE4NC92YXIoLS10dy10ZXh0LW9wYWNpdHksMSkpfS50ZXh0LWdyYXktNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiKDExMCAxMTAgMTI5L3ZhcigtLXR3LXRleHQtb3BhY2l0eSwxKSl9LnRleHQtdHJhbnNwYXJlbnR7Y29sb3I6dHJhbnNwYXJlbnR9LmFudGlhbGlhc2Vkey13ZWJraXQtZm9udC1zbW9vdGhpbmc6YW50aWFsaWFzZWQ7LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlfS50cmFuc2l0aW9ue3RyYW5zaXRpb24tcHJvcGVydHk6Y29sb3IsYmFja2dyb3VuZC1jb2xvcixib3JkZXItY29sb3IsdGV4dC1kZWNvcmF0aW9uLWNvbG9yLGZpbGwsc3Ryb2tlLG9wYWNpdHksYm94LXNoYWRvdyx0cmFuc2Zvcm0sZmlsdGVyLC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyO3RyYW5zaXRpb24tcHJvcGVydHk6Y29sb3IsYmFja2dyb3VuZC1jb2xvcixib3JkZXItY29sb3IsdGV4dC1kZWNvcmF0aW9uLWNvbG9yLGZpbGwsc3Ryb2tlLG9wYWNpdHksYm94LXNoYWRvdyx0cmFuc2Zvcm0sZmlsdGVyLGJhY2tkcm9wLWZpbHRlcjt0cmFuc2l0aW9uLXByb3BlcnR5OmNvbG9yLGJhY2tncm91bmQtY29sb3IsYm9yZGVyLWNvbG9yLHRleHQtZGVjb3JhdGlvbi1jb2xvcixmaWxsLHN0cm9rZSxvcGFjaXR5LGJveC1zaGFkb3csdHJhbnNmb3JtLGZpbHRlcixiYWNrZHJvcC1maWx0ZXIsLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI7dHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40LDAsLjIsMSk7dHJhbnNpdGlvbi1kdXJhdGlvbjouMTVzfS50ZXh0LXRpdGxle2NvbG9yOnZhcigtLXRpdGxlLXRleHQtY29sb3IpfS50ZXh0LWJvZHl7Y29sb3I6dmFyKC0tYm9keS10ZXh0LWNvbG9yKX0uXCF0ZXh0LWNhcHRpb257Y29sb3I6dmFyKC0tY2FwdGlvbi10ZXh0LWNvbG9yKSFpbXBvcnRhbnR9LnRleHQtY2FwdGlvbntjb2xvcjp2YXIoLS1jYXB0aW9uLXRleHQtY29sb3IpfS5kYXJrey0tZGlzcGxheS10ZXh0LWNvbG9yOiNmZmY7LS10aXRsZS10ZXh0LWNvbG9yOnZhcigtLWRpc3BsYXktdGV4dC1jb2xvcik7LS1jYXB0aW9uLXRleHQtY29sb3I6IzZlNmU4MTstLWJvZHktdGV4dC1jb2xvcjojZDZkNmUxOy0tcGxhY2Vob2xkZXItdGV4dC1jb2xvcjojNGQ0ZDVmOy0tdWktYm9yZGVyLWNvbG9yOiMyMzIzMjN9W2RhdGEtc2hhZGU9IjkwMCJdOndoZXJlKC5kYXJrLC5kYXJrICopLFtkYXRhLXNoYWRlPSI5MjUiXTp3aGVyZSguZGFyaywuZGFyayAqKSxbZGF0YS1zaGFkZT0iOTUwIl06d2hlcmUoLmRhcmssLmRhcmsgKil7LS11aS1ib3JkZXItY29sb3I6IzM4MzgzOH0uaG92ZXJcOnRleHQtZ3JheS0zMDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2IoMjE0IDIxNCAyMjUvdmFyKC0tdHctdGV4dC1vcGFjaXR5LDEpKX0uZ3JvdXBbb3Blbl0gLmdyb3VwLW9wZW5cOnJvdGF0ZS0xODB7LS10dy1yb3RhdGU6MTgwZGVnO3RyYW5zZm9ybTp0cmFuc2xhdGUodmFyKC0tdHctdHJhbnNsYXRlLXgpLHZhcigtLXR3LXRyYW5zbGF0ZS15KSkgcm90YXRlKHZhcigtLXR3LXJvdGF0ZSkpIHNrZXdYKHZhcigtLXR3LXNrZXcteCkpIHNrZXdZKHZhcigtLXR3LXNrZXcteSkpIHNjYWxlWCh2YXIoLS10dy1zY2FsZS14KSkgc2NhbGVZKHZhcigtLXR3LXNjYWxlLXkpKX1AbWVkaWEgKG1pbi13aWR0aDo3NjhweCl7Lm1kXDpncmlkLWNvbHMtMntncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDIsbWlubWF4KDAsMWZyKSl9Lm1kXDpwLTR7cGFkZGluZzoxcmVtfS5tZFw6cHgtNntwYWRkaW5nLWxlZnQ6MS41cmVtO3BhZGRpbmctcmlnaHQ6MS41cmVtfS5tZFw6cHQtNntwYWRkaW5nLXRvcDoxLjVyZW19fUBtZWRpYSAobWluLXdpZHRoOjEwMjRweCl7LmxnXDpncmlkLWNvbHMtM3tncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDMsbWlubWF4KDAsMWZyKSl9LmxnXDpkYXJrXDpiZy1ncmF5LTkwMDppcyguZGFyayAqKXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYigxOCAxOCAzMi92YXIoLS10dy1iZy1vcGFjaXR5LDEpKX19PC9zdHlsZT48L2hlYWQ+PGJvZHkgY2xhc3M9ImJnLWdyYXktOTI1IG1pbi1oLXNjcmVlbiBtaW4taC1zdmggZm9udC1zYW5zIGxlYWRpbmctbm9ybWFsIGFudGlhbGlhc2VkIGxnOmRhcms6YmctZ3JheS05MDAiPjxtYWluIGNsYXNzPSJtaW4tdy1zY3JlZW4gY29udGFpbmVyIG14LWF1dG8gZmxleCBtaW4taC1zY3JlZW4gbWF4LXctc2NyZWVuLWxnIGZsZXgtY29sIHB4LTQgcHktNiBtZDpweC02Ij48aGVhZGVyIGNsYXNzPSJzcGFjZS15LTIgcHQtMiBtZDpwdC02Ij48YSB0aXRsZT0ieyR0aXRsZX0iIGhyZWY9InskbGlua30iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPjxoMSBjbGFzcz0iZmxleCB0ZXh0LTJ4bCI+PHNwYW4gY2xhc3M9Imljb24tW3RhYmxlci0tcnNzXSBtci0yIGgtOCB3LTgiLz48c3BhbiBjbGFzcz0ibGcyOnRleHQtM3hsIGZyb20tcHJpbWFyeS02MDAgdG8tYWNjZW50LTQwMCBpbmxpbmUtYmxvY2sgYmctZ3JhZGllbnQtdG8tciBiZy1jbGlwLXRleHQgZm9udC1ib2xkIHRleHQtdHJhbnNwYXJlbnQiPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkdGl0bGUiIGRpc2FibGUtb3V0cHV0LWVzY2FwaW5nPSJ5ZXMiLz48L3NwYW4+PC9oMT48L2E+PHAgY2xhc3M9InRleHQtYm9keSBwdC0yIHRleHQtbGcgcHktNCI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9IiRkZXNjcmlwdGlvbiIgZGlzYWJsZS1vdXRwdXQtZXNjYXBpbmc9InllcyIvPjwvcD48cCBjbGFzcz0idGV4dC1jYXB0aW9uIHRleHQtc20iPg0KICAgICAgICAgICAgICBUaGlzIFJTUyBmZWVkIGZvciB0aGUNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCAhdGV4dC1jYXB0aW9uIGZvbnQtYm9sZCIgdGl0bGU9InskdGl0bGV9IiBocmVmPSJ7JGxpbmt9IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iJHRpdGxlIi8+PC9hPg0KICAgICAgICAgICAgICB3ZWJzaXRlLg0KICAgICAgICAgICAgPC9wPjxwIGNsYXNzPSJ0ZXh0LWJvZHkgdGV4dC1zbSBoaWRkZW4iIGlkPSJzdWJzY3JpYmUtbGlua3MiPg0KICAgICAgICAgICAgICBZb3UgY2FuIHN1YnNjcmliZSB0aGlzIFJTUyBmZWVkIGJ5DQogICAgICAgICAgICAgIDxhIGNsYXNzPSJsaW5rIGludGVudC1uZXV0cmFsIHZhcmlhbnQtYW5pbWF0ZWQgZm9udC1ib2xkIiB0aXRsZT0iRmVlZGx5IiBkYXRhLWhyZWY9Imh0dHBzOi8vZmVlZGx5LmNvbS9pL3N1YnNjcmlwdGlvbi9mZWVkLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RmVlZGx5PC9hPiwNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCBmb250LWJvbGQiIHRpdGxlPSJJbm9yZWFkZXIiIGRhdGEtaHJlZj0iaHR0cHM6Ly93d3cuaW5vcmVhZGVyLmNvbS9mZWVkLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+SW5vcmVhZGVyPC9hPiwNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCBmb250LWJvbGQiIHRpdGxlPSJOZXdzYmx1ciIgZGF0YS1ocmVmPSJodHRwczovL3d3dy5uZXdzYmx1ci5jb20vP3VybD0iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPk5ld3NibHVyPC9hPiwNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCBmb250LWJvbGQiIHRpdGxlPSJGb2xsb3ciIGRhdGEtaHJlZj0iZm9sbG93Oi8vYWRkP3VybD0iIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+Rm9sbG93PC9hPiwNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCBmb250LWJvbGQiIHRpdGxlPSJSU1MgUmVhZGVyIiBkYXRhLWhyZWY9ImZlZWQ6IiBkYXRhLXJhdz0idHJ1ZSIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5SU1MgUmVhZGVyPC9hPg0KICAgICAgICAgICAgICBvcg0KICAgICAgICAgICAgICA8YSBjbGFzcz0ibGluayBpbnRlbnQtbmV1dHJhbCB2YXJpYW50LWFuaW1hdGVkIGZvbnQtYm9sZCIgdGl0bGU9InskdGl0bGV9ICdzIGZlZWQgc291cmNlIiBkYXRhLWhyZWY9IiIgZGF0YS1yYXc9InRydWUiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+VmlldyBTb3VyY2U8L2E+Lg0KICAgICAgICAgICAgPC9wPjxzY3JpcHQ+DQogICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYVtkYXRhLWhyZWZdJykuZm9yRWFjaChmdW5jdGlvbiAoYSkgew0KICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChsb2NhdGlvbi5ocmVmKQ0KICAgICAgICAgICAgICAgICAgY29uc3QgZmVlZCA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KCd1cmwnKSB8fCBsb2NhdGlvbi5ocmVmDQogICAgICAgICAgICAgICAgICBjb25zdCByYXcgPSBhLmdldEF0dHJpYnV0ZSgnZGF0YS1yYXcnKQ0KICAgICAgICAgICAgICAgICAgaWYgKHJhdykgew0KICAgICAgICAgICAgICAgICAgICBhLmhyZWYgPSBhLmdldEF0dHJpYnV0ZSgnZGF0YS1ocmVmJykgKyBmZWVkDQogICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBhLmhyZWYgPSBhLmdldEF0dHJpYnV0ZSgnZGF0YS1ocmVmJykgKyBlbmNvZGVVUklDb21wb25lbnQoZmVlZCkNCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJzY3JpYmUtbGlua3MnKS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKQ0KICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgPC9zY3JpcHQ+PC9oZWFkZXI+PGhyIGNsYXNzPSJteS02Ii8+PHNlY3Rpb24gY2xhc3M9ImZsZXgtMSBzcGFjZS15LTYgcC0xIG1kOnAtNCI+PHhzbDpjaG9vc2U+PHhzbDp3aGVuIHRlc3Q9Ii9yc3MvY2hhbm5lbC9pdGVtIj48eHNsOmZvci1lYWNoIHNlbGVjdD0iL3Jzcy9jaGFubmVsL2l0ZW0iPjxhcnRpY2xlIGNsYXNzPSJzcGFjZS15LTIiPjxkZXRhaWxzPjxzdW1tYXJ5IGNsYXNzPSJtYXgtdy1mdWxsIHRydW5jYXRlIj48eHNsOmlmIHRlc3Q9InRpdGxlIj48aDIgY2xhc3M9InRleHQtdGl0bGUgaW5saW5lIGN1cnNvci1wb2ludGVyIHRleHQtbGcgZm9udC1zZW1pYm9sZCI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9InRpdGxlIiBkaXNhYmxlLW91dHB1dC1lc2NhcGluZz0ieWVzIi8+PC9oMj48L3hzbDppZj48eHNsOmlmIHRlc3Q9InB1YkRhdGUiPjx0aW1lIGNsYXNzPSJ0ZXh0LWNhcHRpb24gbWwtNCBtdC0xIGJsb2NrIHRleHQtc20iPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJwdWJEYXRlIi8+PC90aW1lPjwveHNsOmlmPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LWJvZHkgcHgtNCBweS0yIj48cCBjbGFzcz0ibXktMiI+PHhzbDpjaG9vc2U+PHhzbDp3aGVuIHRlc3Q9ImRlc2NyaXB0aW9uIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iZGVzY3JpcHRpb24iIGRpc2FibGUtb3V0cHV0LWVzY2FwaW5nPSJ5ZXMiLz48L3hzbDp3aGVuPjwveHNsOmNob29zZT48L3A+PHhzbDppZiB0ZXN0PSJsaW5rIj48YSBjbGFzcz0ibGluayB2YXJpYW50LWFuaW1hdGVkIGludGVudC1uZXV0cmFsIGZvbnQtYm9sZCIgaHJlZj0ie2xpbmt9IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFkIE1vcmUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjwveHNsOmlmPjwvZGl2PjwvZGV0YWlscz48L2FydGljbGU+PC94c2w6Zm9yLWVhY2g+PC94c2w6d2hlbj48eHNsOndoZW4gdGVzdD0iL2F0b206ZmVlZC9hdG9tOmVudHJ5Ij48eHNsOmZvci1lYWNoIHNlbGVjdD0iL2F0b206ZmVlZC9hdG9tOmVudHJ5Ij48YXJ0aWNsZSBjbGFzcz0ic3BhY2UteS0yIj48ZGV0YWlscz48c3VtbWFyeSBjbGFzcz0ibWF4LXctZnVsbCB0cnVuY2F0ZSI+PHhzbDppZiB0ZXN0PSJhdG9tOnRpdGxlIj48aDIgY2xhc3M9InRleHQtdGl0bGUgaW5saW5lIGN1cnNvci1wb2ludGVyIHRleHQtbGcgZm9udC1zZW1pYm9sZCI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImF0b206dGl0bGUiIGRpc2FibGUtb3V0cHV0LWVzY2FwaW5nPSJ5ZXMiLz48L2gyPjwveHNsOmlmPjx4c2w6aWYgdGVzdD0iYXRvbTp1cGRhdGVkIj48dGltZSBjbGFzcz0idGV4dC1jYXB0aW9uIG1sLTQgbXQtMSBibG9jayB0ZXh0LXNtIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iYXRvbTp1cGRhdGVkIi8+PC90aW1lPjwveHNsOmlmPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LWJvZHkgcHgtNCBweS0yIj48cCBjbGFzcz0ibXktMiI+PHhzbDpjaG9vc2U+PHhzbDp3aGVuIHRlc3Q9ImF0b206c3VtbWFyeSI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImF0b206c3VtbWFyeSIgZGlzYWJsZS1vdXRwdXQtZXNjYXBpbmc9InllcyIvPjwveHNsOndoZW4+PHhzbDp3aGVuIHRlc3Q9ImF0b206Y29udGVudCI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImF0b206Y29udGVudCIgZGlzYWJsZS1vdXRwdXQtZXNjYXBpbmc9InllcyIvPjwveHNsOndoZW4+PC94c2w6Y2hvb3NlPjwvcD48eHNsOmlmIHRlc3Q9ImF0b206bGluay9AaHJlZiI+PGEgY2xhc3M9ImxpbmsgdmFyaWFudC1hbmltYXRlZCBpbnRlbnQtbmV1dHJhbCBmb250LWJvbGQiIGhyZWY9InthdG9tOmxpbmsvQGhyZWZ9IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFkIE1vcmUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjwveHNsOmlmPjwvZGl2PjwvZGV0YWlscz48L2FydGljbGU+PC94c2w6Zm9yLWVhY2g+PC94c2w6d2hlbj48L3hzbDpjaG9vc2U+PC9zZWN0aW9uPjxociBjbGFzcz0ibXktNiIvPjxmb290ZXIgY2xhc3M9InRleHQtZ3JheS00MDAiPjxkaXYgY2xhc3M9ImNvbnRhaW5lciBteC1hdXRvIHB4LTQiPjxkaXYgY2xhc3M9Im1iLTgiPjxoMyBjbGFzcz0idGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtdGl0bGUgbWItNiI+UG9wdWxhciBGZWVkIENvbGxlY3Rpb25zPC9oMz48ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGxnOmdyaWQtY29scy0zIGdhcC02Ij48ZGl2IGNsYXNzPSJzcGFjZS15LTMiPjxhIGhyZWY9Imh0dHBzOi8vcmVkcmVhbWFsaXR5LmNvbS9HaXRIdWJUcmVuZGluZ1JTUy93ZWVrbHkvcHl0aG9uLnhtbCIgY2xhc3M9ImJsb2NrIGhvdmVyOnRleHQtZ3JheS0zMDAiPjxkaXYgY2xhc3M9ImZvbnQtbWVkaXVtIj7wn5CNIFB5dGhvbiBUcmVuZFdhdGNoPC9kaXY+PGRpdiBjbGFzcz0idGV4dC14cyB0ZXh0LWdyYXktNTAwIj5BSSwgTUwgJmFtcDsgRGF0YSBTY2llbmNlIElubm92YXRpb24gRmVlZDwvZGl2PjwvYT48YSBocmVmPSJodHRwczovL3JlZHJlYW1hbGl0eS5jb20vR2l0SHViVHJlbmRpbmdSU1Mvd2Vla2x5L2N1ZGEueG1sIiBjbGFzcz0iYmxvY2sgaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGRpdiBjbGFzcz0iZm9udC1tZWRpdW0iPuKaoSBDVURBIEFjY2VsZXJhdG9yPC9kaXY+PGRpdiBjbGFzcz0idGV4dC14cyB0ZXh0LWdyYXktNTAwIj5HUFUgQ29tcHV0aW5nICZhbXA7IERlZXAgTGVhcm5pbmcgVXBkYXRlczwvZGl2PjwvYT48YSBocmVmPSJodHRwczovL3JlZHJlYW1hbGl0eS5jb20vR2l0SHViVHJlbmRpbmdSU1Mvd2Vla2x5L21hdGxhYi54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+noCBNQVRMQUIgVHJlbmRQdWxzZTwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+TUVHLCBFRUcgYW5kIGlFRUcgUmVzZWFyY2ggRmVlZDwvZGl2PjwvYT48L2Rpdj48ZGl2IGNsYXNzPSJzcGFjZS15LTMiPjxhIGhyZWY9Imh0dHBzOi8vcmVkcmVhbWFsaXR5LmNvbS9HaXRIdWJUcmVuZGluZ1JTUy93ZWVrbHkvcnVzdC54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+mgCBSdXN0IFN5c3RlbXMgRmVlZDwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+SGlnaC1QZXJmb3JtYW5jZSAmYW1wOyBTYWZlIFN5c3RlbXMgUHJvZ3JhbW1pbmc8L2Rpdj48L2E+PGEgaHJlZj0iaHR0cHM6Ly9yZWRyZWFtYWxpdHkuY29tL0dpdEh1YlRyZW5kaW5nUlNTL3dlZWtseS9nby54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+agCBHbyBJbmZyYXN0cnVjdHVyZTwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+Q2xvdWQgTmF0aXZlICZhbXA7IERldk9wcyBFeGNlbGxlbmNlPC9kaXY+PC9hPjxhIGhyZWY9Imh0dHBzOi8vcmVkcmVhbWFsaXR5LmNvbS9HaXRIdWJUcmVuZGluZ1JTUy93ZWVrbHkvdHlwZXNjcmlwdC54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+TsSBUeXBlU2NyaXB0IEVjb3N5c3RlbTwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+TW9kZXJuIFdlYiAmYW1wOyBBcHAgRGV2ZWxvcG1lbnQ8L2Rpdj48L2E+PC9kaXY+PGRpdiBjbGFzcz0ic3BhY2UteS0zIj48YSBocmVmPSJodHRwczovL3JlZHJlYW1hbGl0eS5jb20vR2l0SHViVHJlbmRpbmdSU1MvZGFpbHkvYWRibG9jay1maWx0ZXItbGlzdC54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+boe+4jyBQcml2YWN5IFNoaWVsZDwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+QWRCbG9jayAmYW1wOyBTZWN1cml0eSBVcGRhdGVzPC9kaXY+PC9hPjxhIGhyZWY9Imh0dHBzOi8vcmVkcmVhbWFsaXR5LmNvbS9HaXRIdWJUcmVuZGluZ1JTUy9kYWlseS9hbGwueG1sIiBjbGFzcz0iYmxvY2sgaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGRpdiBjbGFzcz0iZm9udC1tZWRpdW0iPvCfjJ8gR2xvYmFsIFRlY2hSYWRhcjwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+Q3Jvc3MtTGFuZ3VhZ2UgSW5ub3ZhdGlvbiBQdWxzZSwgYWRkIGl0IHRvIHlvdXIgUlNTIHJlYWRlciByc3NodWI6Ly9naXRodWIvdHJlbmRpbmcvbW9udGhseS9hbnkvemg8L2Rpdj48L2E+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtOCBtYi04Ij48ZGl2IGNsYXNzPSJzcGFjZS15LTQiPjxoMyBjbGFzcz0idGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtdGl0bGUiPkdldHRpbmcgU3RhcnRlZDwvaDM+PGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtMSBnYXAtNCI+PGRldGFpbHMgY2xhc3M9Imdyb3VwIj48c3VtbWFyeSBjbGFzcz0iZmxleCBjdXJzb3ItcG9pbnRlciBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIGhvdmVyOnRleHQtZ3JheS0zMDAiPjxoNCBjbGFzcz0iZm9udC1tZWRpdW0iPvCfk5YgRmVlZCBJbnRlZ3JhdGlvbiBHdWlkZTwvaDQ+PHNwYW4gY2xhc3M9InRyYW5zaXRpb24gZ3JvdXAtb3Blbjpyb3RhdGUtMTgwIj48c3ZnIGZpbGw9Im5vbmUiIGhlaWdodD0iMjQiIHNoYXBlLXJlbmRlcmluZz0iZ2VvbWV0cmljUHJlY2lzaW9uIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjEuNSIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPjxwYXRoIGQ9Ik02IDlsNiA2IDYtNiIvPjwvc3ZnPjwvc3Bhbj48L3N1bW1hcnk+PGRpdiBjbGFzcz0idGV4dC1zbSB0ZXh0LWdyYXktNTAwIG10LTMgZ3JvdXAtb3BlbjphbmltYXRlLWZhZGVJbiI+PHAgY2xhc3M9Im1iLTIiPjEuIENob29zZSBZb3VyIFJTUyBSZWFkZXI6PC9wPjx1bCBjbGFzcz0ibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0yIj48bGk+RmVlZGx5OiBQcm9mZXNzaW9uYWwgY2hvaWNlIGZvciBjcm9zcy1wbGF0Zm9ybSBzeW5jPC9saT48bGk+SW5vcmVhZGVyOiBBZHZhbmNlZCBmaWx0ZXJpbmcgY2FwYWJpbGl0aWVzPC9saT48bGk+TmV0TmV3c1dpcmU6IFBlcmZlY3QgZm9yIG1hY09TL2lPUyB1c2VyczwvbGk+PGxpPkZyZXNoUlNTOiBTZWxmLWhvc3RlZCBvcHRpb24gd2l0aCBmdWxsIGNvbnRyb2w8L2xpPjwvdWw+PHAgY2xhc3M9Im10LTMgbWItMiI+Mi4gQWRkIE91ciBGZWVkczo8L3A+PHVsIGNsYXNzPSJsaXN0LWRpc2MgcGwtNSBzcGFjZS15LTIiPjxsaT5Db3B5IHRoZSBmZWVkIFVSTCAoZS5nLiwgcnNzaHViOi8vZ2l0aHViL3RyZW5kaW5nL21vbnRobHkvYW55L3poKTwvbGk+PGxpPkluIHlvdXIgUlNTIHJlYWRlciwgbG9vayBmb3IgIkFkZCBGZWVkIiBvciAiU3Vic2NyaWJlIjwvbGk+PGxpPlBhc3RlIHRoZSBVUkwgYW5kIGN1c3RvbWl6ZSB1cGRhdGUgZnJlcXVlbmN5PC9saT48L3VsPjwvZGl2PjwvZGV0YWlscz48ZGV0YWlscyBjbGFzcz0iZ3JvdXAiPjxzdW1tYXJ5IGNsYXNzPSJmbGV4IGN1cnNvci1wb2ludGVyIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGg0IGNsYXNzPSJmb250LW1lZGl1bSI+8J+OryBDdXN0b20gRmVlZCBDcmVhdGlvbjwvaDQ+PHNwYW4gY2xhc3M9InRyYW5zaXRpb24gZ3JvdXAtb3Blbjpyb3RhdGUtMTgwIj48c3ZnIGZpbGw9Im5vbmUiIGhlaWdodD0iMjQiIHNoYXBlLXJlbmRlcmluZz0iZ2VvbWV0cmljUHJlY2lzaW9uIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjEuNSIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPjxwYXRoIGQ9Ik02IDlsNiA2IDYtNiIvPjwvc3ZnPjwvc3Bhbj48L3N1bW1hcnk+PGRpdiBjbGFzcz0idGV4dC1zbSB0ZXh0LWdyYXktNTAwIG10LTMgZ3JvdXAtb3BlbjphbmltYXRlLWZhZGVJbiI+PHAgY2xhc3M9Im1iLTIiPkNyZWF0ZSBZb3VyIFBlcmZlY3QgRmVlZDo8L3A+PHVsIGNsYXNzPSJsaXN0LWRpc2MgcGwtNSBzcGFjZS15LTIiPjxsaT5MYW5ndWFnZS1zcGVjaWZpYzogL0dpdEh1YlRyZW5kaW5nUlNTL1tmcmVxdWVuY3ldL1tsYW5ndWFnZV0ueG1sPC9saT48bGk+VG9waWMtZm9jdXNlZDogQ29tYmluZSBtdWx0aXBsZSBsYW5ndWFnZSBmZWVkczwvbGk+PGxpPkN1c3RvbSB0aW1lIHJhbmdlczogZGFpbHksIHdlZWtseSwgb3IgbW9udGhseSB1cGRhdGVzPC9saT48bGk+UmVnaW9uYWwgZmVlZHM6IEZvY3VzIG9uIHNwZWNpZmljIGRldmVsb3BlciBjb21tdW5pdGllczwvbGk+PC91bD48cCBjbGFzcz0ibXQtMyI+UHJvIHRpcDogVXNlIHRhZ3MgaW4geW91ciBSU1MgcmVhZGVyIHRvIG9yZ2FuaXplIGZlZWRzIGJ5IHRvcGljLCBsYW5ndWFnZSwgb3IgcHJpb3JpdHkuPC9wPjwvZGl2PjwvZGV0YWlscz48ZGV0YWlscyBjbGFzcz0iZ3JvdXAiPjxzdW1tYXJ5IGNsYXNzPSJmbGV4IGN1cnNvci1wb2ludGVyIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGg0IGNsYXNzPSJmb250LW1lZGl1bSI+4pqhIEZlZWQgTWFuYWdlbWVudCBUaXBzPC9oND48c3BhbiBjbGFzcz0idHJhbnNpdGlvbiBncm91cC1vcGVuOnJvdGF0ZS0xODAiPjxzdmcgZmlsbD0ibm9uZSIgaGVpZ2h0PSIyNCIgc2hhcGUtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNCI+PHBhdGggZD0iTTYgOWw2IDYgNi02Ii8+PC9zdmc+PC9zcGFuPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgbXQtMyBncm91cC1vcGVuOmFuaW1hdGUtZmFkZUluIj48cCBjbGFzcz0ibWItMiI+T3B0aW1pemUgWW91ciBGZWVkIFJlYWRpbmc6PC9wPjx1bCBjbGFzcz0ibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0yIj48bGk+U2V0IHVwZGF0ZSBmcmVxdWVuY2llcyBiYXNlZCBvbiBmZWVkIGltcG9ydGFuY2U8L2xpPjxsaT5Vc2UgZm9sZGVycyB0byBncm91cCByZWxhdGVkIGZlZWRzIChlLmcuLCBBSS9NTCwgV2ViIERldik8L2xpPjxsaT5FbmFibGUgbm90aWZpY2F0aW9ucyBvbmx5IGZvciBoaWdoLXByaW9yaXR5IGZlZWRzPC9saT48bGk+QXJjaGl2ZSB2YWx1YWJsZSByZXNvdXJjZXMgZm9yIGZ1dHVyZSByZWZlcmVuY2U8L2xpPjwvdWw+PHAgY2xhc3M9Im10LTMiPkFkdmFuY2VkIEZlYXR1cmVzOjwvcD48dWwgY2xhc3M9Imxpc3QtZGlzYyBwbC01IHNwYWNlLXktMiI+PGxpPkZpbHRlciBmZWVkcyB1c2luZyBrZXl3b3JkcyB0byBmb2N1cyBvbiBzcGVjaWZpYyB0b3BpY3M8L2xpPjxsaT5TZXQgdXAgSUZUVFQgaW50ZWdyYXRpb25zIGZvciBhdXRvbWF0ZWQgd29ya2Zsb3dzPC9saT48bGk+RXhwb3J0L2JhY2t1cCB5b3VyIGZlZWQgY29sbGVjdGlvbiByZWd1bGFybHk8L2xpPjwvdWw+PC9kaXY+PC9kZXRhaWxzPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InNwYWNlLXktNCI+PGgzIGNsYXNzPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC10aXRsZSI+Q29tbW9uIFF1ZXN0aW9uczwvaDM+PGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtMSBnYXAtNCI+PGRldGFpbHMgY2xhc3M9Imdyb3VwIj48c3VtbWFyeSBjbGFzcz0iZmxleCBjdXJzb3ItcG9pbnRlciBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIGhvdmVyOnRleHQtZ3JheS0zMDAiPjxoNCBjbGFzcz0iZm9udC1tZWRpdW0iPvCfpJQgQWJvdXQgR2l0aHViIFJhZGFyPC9oND48c3BhbiBjbGFzcz0idHJhbnNpdGlvbiBncm91cC1vcGVuOnJvdGF0ZS0xODAiPjxzdmcgZmlsbD0ibm9uZSIgaGVpZ2h0PSIyNCIgc2hhcGUtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNCI+PHBhdGggZD0iTTYgOWw2IDYgNi02Ii8+PC9zdmc+PC9zcGFuPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgbXQtMyBncm91cC1vcGVuOmFuaW1hdGUtZmFkZUluIj48cCBjbGFzcz0ibWItMiI+R2l0aHViIFJhZGFyIGlzIHlvdXIgaW50ZWxsaWdlbnQgY3VyYXRvciBmb3I6PC9wPjx1bCBjbGFzcz0ibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0yIj48bGk+VHJlbmRpbmcgcmVwb3NpdG9yaWVzIGFjcm9zcyBhbGwgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzPC9saT48bGk+TGFuZ3VhZ2Utc3BlY2lmaWMgaW5ub3ZhdGlvbiBhbmQgdXBkYXRlczwvbGk+PGxpPlJlZ2lvbmFsIGRldmVsb3BtZW50IHRyZW5kcyBhbmQgcGF0dGVybnM8L2xpPjxsaT5PcGVuIHNvdXJjZSBjb21tdW5pdHkgbW92ZW1lbnRzPC9saT48L3VsPjxwIGNsYXNzPSJtdC0zIj5PdXIgbWlzc2lvbiBpcyB0byBoZWxwIGRldmVsb3BlcnMgc3RheSB1cGRhdGVkIHdpdGggbWluaW1hbCBlZmZvcnQgdGhyb3VnaCBzbWFydCBmZWVkIGN1cmF0aW9uIGFuZCBvcmdhbml6YXRpb24uPC9wPjwvZGl2PjwvZGV0YWlscz48ZGV0YWlscyBjbGFzcz0iZ3JvdXAiPjxzdW1tYXJ5IGNsYXNzPSJmbGV4IGN1cnNvci1wb2ludGVyIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGg0IGNsYXNzPSJmb250LW1lZGl1bSI+8J+TiiBGZWVkIEZyZXF1ZW5jeSBPcHRpb25zPC9oND48c3BhbiBjbGFzcz0idHJhbnNpdGlvbiBncm91cC1vcGVuOnJvdGF0ZS0xODAiPjxzdmcgZmlsbD0ibm9uZSIgaGVpZ2h0PSIyNCIgc2hhcGUtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNCI+PHBhdGggZD0iTTYgOWw2IDYgNi02Ii8+PC9zdmc+PC9zcGFuPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgbXQtMyBncm91cC1vcGVuOmFuaW1hdGUtZmFkZUluIj48cCBjbGFzcz0ibWItMiI+Q2hvb3NlIFlvdXIgVXBkYXRlIFJoeXRobTo8L3A+PHVsIGNsYXNzPSJsaXN0LWRpc2MgcGwtNSBzcGFjZS15LTIiPjxsaT5EYWlseTogUGVyZmVjdCBmb3IgZmFzdC1tb3ZpbmcgdGVjaG5vbG9naWVzIGFuZCBzZWN1cml0eSB1cGRhdGVzPC9saT48bGk+V2Vla2x5OiBJZGVhbCBmb3IgbWFpbnRhaW5pbmcgYXdhcmVuZXNzIHdpdGhvdXQgb3ZlcndoZWxtPC9saT48bGk+TW9udGhseTogQmVzdCBmb3IgbG9uZy10ZXJtIHRyZW5kIGFuYWx5c2lzIGFuZCBzdHJhdGVnaWMgcGxhbm5pbmc8L2xpPjwvdWw+PHAgY2xhc3M9Im10LTMiPkN1c3RvbWl6ZSBieSBjb21iaW5pbmcgZGlmZmVyZW50IGZyZXF1ZW5jaWVzIGZvciBkaWZmZXJlbnQgdG9waWNzIGJhc2VkIG9uIHlvdXIgbmVlZHMuPC9wPjwvZGl2PjwvZGV0YWlscz48ZGV0YWlscyBjbGFzcz0iZ3JvdXAiPjxzdW1tYXJ5IGNsYXNzPSJmbGV4IGN1cnNvci1wb2ludGVyIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGg0IGNsYXNzPSJmb250LW1lZGl1bSI+8J+UpyBUZWNobmljYWwgU3VwcG9ydDwvaDQ+PHNwYW4gY2xhc3M9InRyYW5zaXRpb24gZ3JvdXAtb3Blbjpyb3RhdGUtMTgwIj48c3ZnIGZpbGw9Im5vbmUiIGhlaWdodD0iMjQiIHNoYXBlLXJlbmRlcmluZz0iZ2VvbWV0cmljUHJlY2lzaW9uIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjEuNSIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPjxwYXRoIGQ9Ik02IDlsNiA2IDYtNiIvPjwvc3ZnPjwvc3Bhbj48L3N1bW1hcnk+PGRpdiBjbGFzcz0idGV4dC1zbSB0ZXh0LWdyYXktNTAwIG10LTMgZ3JvdXAtb3BlbjphbmltYXRlLWZhZGVJbiI+PHAgY2xhc3M9Im1iLTIiPlN1cHBvcnRlZCBSU1MgUmVhZGVyczo8L3A+PHVsIGNsYXNzPSJsaXN0LWRpc2MgcGwtNSBzcGFjZS15LTIiPjxsaT5EZXNrdG9wOiBOZXROZXdzV2lyZSwgUmVlZGVyLCBGZWVkUmVhZGVyPC9saT48bGk+TW9iaWxlOiBGZWVkbHksIElub3JlYWRlciwgTmV3c0JsdXI8L2xpPjxsaT5TZWxmLWhvc3RlZDogRnJlc2hSU1MsIFRpbnkgVGlueSBSU1M8L2xpPjxsaT5Ccm93c2VyLWJhc2VkOiBGZWVkYnJvLCBSU1MgRmVlZCBSZWFkZXI8L2xpPjwvdWw+PHAgY2xhc3M9Im10LTMiPkNvbW1vbiBJc3N1ZXM6PC9wPjx1bCBjbGFzcz0ibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0yIj48bGk+RmVlZCBub3QgdXBkYXRpbmc/IENoZWNrIHlvdXIgcmVhZGVyJ3MgcmVmcmVzaCBzZXR0aW5nczwvbGk+PGxpPk1pc3NpbmcgY29udGVudD8gVmVyaWZ5IHlvdXIgaW50ZXJuZXQgY29ubmVjdGlvbjwvbGk+PGxpPkZvcm1hdCBpc3N1ZXM/IFRyeSByZS1zdWJzY3JpYmluZyB0byB0aGUgZmVlZDwvbGk+PC91bD48L2Rpdj48L2RldGFpbHM+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgdGV4dC1zbSI+PHAgY2xhc3M9Im10LTIiPkFja25vd2xlZGdlbWVudDogUGFnZSBkZWNvcmF0ZWQgYnkgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2NjYmlrYWkvUlNTLkJlYXV0eSI+PHN2ZyBjbGFzcz0iaW5saW5lLWJsb2NrIHctNCBoLTQgbWwtMSIgdmlld0JveD0iMCAwIDE2IDE2IiBmaWxsPSJjdXJyZW50Q29sb3IiPjxwYXRoIGQ9Ik04IDBDMy41OCAwIDAgMy41OCAwIDhjMCAzLjU0IDIuMjkgNi41MyA1LjQ3IDcuNTkuNC4wNy41NS0uMTcuNTUtLjM4IDAtLjE5LS4wMS0uODItLjAxLTEuNDktMi4wMS4zNy0yLjUzLS40OS0yLjY5LS45NC0uMDktLjIzLS40OC0uOTQtLjgyLTEuMTMtLjI4LS4xNS0uNjgtLjUyLS4wMS0uNTMuNjMtLjAxIDEuMDguNTggMS4yMy44Mi43MiAxLjIxIDEuODcuODcgMi4zMy42Ni4wNy0uNTIuMjgtLjg3LjUxLTEuMDctMS43OC0uMi0zLjY0LS44OS0zLjY0LTMuOTUgMC0uODcuMzEtMS41OS44Mi0yLjE1LS4wOC0uMi0uMzYtMS4wMi4wOC0yLjEyIDAgMCAuNjctLjIxIDIuMi44Mi42NC0uMTggMS4zMi0uMjcgMi0uMjcuNjggMCAxLjM2LjA5IDIgLjI3IDEuNTMtMS4wNCAyLjItLjgyIDIuMi0uODIuNDQgMS4xLjE2IDEuOTIuMDggMi4xMi41MS41Ni44MiAxLjI3LjgyIDIuMTUgMCAzLjA3LTEuODcgMy43NS0zLjY1IDMuOTUuMjkuMjUuNTQuNzMuNTQgMS40OCAwIDEuMDctLjAxIDEuOTMtLjAxIDIuMiAwIC4yMS4xNS40Ni41NS4zOEE4LjAxMyA4LjAxMyAwIDAwMTYgOGMwLTQuNDItMy41OC04LTgtOHoiLz48L3N2Zz48L2E+IFJTUy5CZWF1dHk8L3A+PC9kaXY+PC9kaXY+PC9mb290ZXI+PC9tYWluPjwvYm9keT48L2h0bWw+PC94c2w6dGVtcGxhdGU+PC94c2w6c3R5bGVzaGVldD4="?>
<rss version="2.0">
  <channel>
    <title>GitHub All Languages Daily Trending</title>
    <description>Daily Trending of All Languages in GitHub</description>
    <pubDate>Sat, 29 Mar 2025 02:22:31 GMT</pubDate>
    <link>http://redreamality.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>cline/cline</title>
      <link>https://github.com/cline/cline</link>
      <description>&lt;p&gt;Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt;
 &lt;sub&gt; English | &lt;a href=&quot;https://github.com/cline/cline/raw/main/locales/es/README.md&quot; target=&quot;_blank&quot;&gt;Español&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/raw/main/locales/de/README.md&quot; target=&quot;_blank&quot;&gt;Deutsch&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/raw/main/locales/ja/README.md&quot; target=&quot;_blank&quot;&gt;日本語&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/raw/main/locales/zh-cn/README.md&quot; target=&quot;_blank&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/raw/main/locales/zh-tw/README.md&quot; target=&quot;_blank&quot;&gt;繁體中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/raw/main/locales/ko/README.md&quot; target=&quot;_blank&quot;&gt;한국어&lt;/a&gt; &lt;/sub&gt;
&lt;/div&gt; 
&lt;h1&gt;Cline – #1 on OpenRouter&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://media.githubusercontent.com/media/cline/cline/main/assets/docs/demo.gif&quot; width=&quot;100%&quot;&gt; &lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt; &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Download on VS Marketplace&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;a href=&quot;https://discord.gg/cline&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.reddit.com/r/cline/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;r/cline&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/cline/cline/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Feature Requests&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;a href=&quot;https://docs.cline.bot/getting-started/getting-started-new-coders&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt;
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;Meet Cline, an AI assistant that can use your &lt;strong&gt;CLI&lt;/strong&gt; a&lt;strong&gt;N&lt;/strong&gt;d &lt;strong&gt;E&lt;/strong&gt;ditor.&lt;/p&gt; 
&lt;p&gt;Thanks to&amp;nbsp;&lt;a href=&quot;https://www.anthropic.com/claude/sonnet&quot;&gt;Claude 3.7 Sonnet&#39;s agentic coding capabilities&lt;/a&gt;,&amp;nbsp;Cline can handle complex software development tasks step-by-step. With tools that let him create &amp;amp; edit files, explore large projects, use the browser, and execute terminal commands (after you grant permission), he can assist you in ways that go beyond code completion or tech support. Cline can even use the Model Context Protocol (MCP) to create new tools and extend his own capabilities. While autonomous AI scripts traditionally run in sandboxed environments, this extension provides a human-in-the-loop GUI to approve every file change and terminal command, providing a safe and accessible way to explore the potential of agentic AI.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enter your task and add images to convert mockups into functional apps or fix bugs with screenshots.&lt;/li&gt; 
 &lt;li&gt;Cline starts by analyzing your file structure &amp;amp; source code ASTs, running regex searches, and reading relevant files to get up to speed in existing projects. By carefully managing what information is added to context, Cline can provide valuable assistance even for large, complex projects without overwhelming the context window.&lt;/li&gt; 
 &lt;li&gt;Once Cline has the information he needs, he can: 
  &lt;ul&gt; 
   &lt;li&gt;Create and edit files + monitor linter/compiler errors along the way, letting him proactively fix issues like missing imports and syntax errors on his own.&lt;/li&gt; 
   &lt;li&gt;Execute commands directly in your terminal and monitor their output as he works, letting him e.g., react to dev server issues after editing a file.&lt;/li&gt; 
   &lt;li&gt;For web development tasks, Cline can launch the site in a headless browser, click, type, scroll, and capture screenshots + console logs, allowing him to fix runtime errors and visual bugs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;When a task is completed, Cline will present the result to you with a terminal command like&amp;nbsp;&lt;code&gt;open -a &quot;Google Chrome&quot; index.html&lt;/code&gt;, which you run with a click of a button.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Use the&amp;nbsp;&lt;code&gt;CMD/CTRL + Shift + P&lt;/code&gt;&amp;nbsp;shortcut to open the command palette and type&amp;nbsp;&quot;Cline: Open In New Tab&quot;&amp;nbsp;to open the extension as a tab in your editor. This lets you use Cline side-by-side with your file explorer, and see how he changes your workspace more clearly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;img align=&quot;right&quot; width=&quot;340&quot; src=&quot;https://github.com/user-attachments/assets/3cf21e04-7ce9-4d22-a7b9-ba2c595e88a4&quot;&gt; 
&lt;h3&gt;Use any API and Model&lt;/h3&gt; 
&lt;p&gt;Cline supports API providers like OpenRouter, Anthropic, OpenAI, Google Gemini, AWS Bedrock, Azure, and GCP Vertex. You can also configure any OpenAI compatible API, or use a local model through LM Studio/Ollama. If you&#39;re using OpenRouter, the extension fetches their latest model list, allowing you to use the newest models as soon as they&#39;re available.&lt;/p&gt; 
&lt;p&gt;The extension also keeps track of total tokens and API usage cost for the entire task loop and individual requests, keeping you informed of spend every step of the way.&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;img align=&quot;left&quot; width=&quot;370&quot; src=&quot;https://github.com/user-attachments/assets/81be79a8-1fdb-4028-9129-5fe055e01e76&quot;&gt; 
&lt;h3&gt;Run Commands in Terminal&lt;/h3&gt; 
&lt;p&gt;Thanks to the new &lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_terminal-shell-integration-api&quot;&gt;shell integration updates in VSCode v1.93&lt;/a&gt;, Cline can execute commands directly in your terminal and receive the output. This allows him to perform a wide range of tasks, from installing packages and running build scripts to deploying applications, managing databases, and executing tests, all while adapting to your dev environment &amp;amp; toolchain to get the job done right.&lt;/p&gt; 
&lt;p&gt;For long running processes like dev servers, use the &quot;Proceed While Running&quot; button to let Cline continue in the task while the command runs in the background. As Cline works he’ll be notified of any new terminal output along the way, letting him react to issues that may come up, such as compile-time errors when editing files.&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;img align=&quot;right&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/c5977833-d9b8-491e-90f9-05f9cd38c588&quot;&gt; 
&lt;h3&gt;Create and Edit Files&lt;/h3&gt; 
&lt;p&gt;Cline can create and edit files directly in your editor, presenting you a diff view of the changes. You can edit or revert Cline&#39;s changes directly in the diff view editor, or provide feedback in chat until you&#39;re satisfied with the result. Cline also monitors linter/compiler errors (missing imports, syntax errors, etc.) so he can fix issues that come up along the way on his own.&lt;/p&gt; 
&lt;p&gt;All changes made by Cline are recorded in your file&#39;s Timeline, providing an easy way to track and revert modifications if needed.&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;img align=&quot;left&quot; width=&quot;370&quot; src=&quot;https://github.com/user-attachments/assets/bc2e85ba-dfeb-4fe6-9942-7cfc4703cbe5&quot;&gt; 
&lt;h3&gt;Use the Browser&lt;/h3&gt; 
&lt;p&gt;With Claude 3.5 Sonnet&#39;s new &lt;a href=&quot;https://www.anthropic.com/news/3-5-models-and-computer-use&quot;&gt;Computer Use&lt;/a&gt; capability, Cline can launch a browser, click elements, type text, and scroll, capturing screenshots and console logs at each step. This allows for interactive debugging, end-to-end testing, and even general web use! This gives him autonomy to fixing visual bugs and runtime issues without you needing to handhold and copy-pasting error logs yourself.&lt;/p&gt; 
&lt;p&gt;Try asking Cline to &quot;test the app&quot;, and watch as he runs a command like &lt;code&gt;npm run dev&lt;/code&gt;, launches your locally running dev server in a browser, and performs a series of tests to confirm that everything works. &lt;a href=&quot;https://x.com/sdrzn/status/1850880547825823989&quot;&gt;See a demo here.&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;img align=&quot;right&quot; width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/ac0efa14-5c1f-4c26-a42d-9d7c56f5fadd&quot;&gt; 
&lt;h3&gt;&quot;add a tool that...&quot;&lt;/h3&gt; 
&lt;p&gt;Thanks to the &lt;a href=&quot;https://github.com/modelcontextprotocol&quot;&gt;Model Context Protocol&lt;/a&gt;, Cline can extend his capabilities through custom tools. While you can use &lt;a href=&quot;https://github.com/modelcontextprotocol/servers&quot;&gt;community-made servers&lt;/a&gt;, Cline can instead create and install tools tailored to your specific workflow. Just ask Cline to &quot;add a tool&quot; and he will handle everything, from creating a new MCP server to installing it into the extension. These custom tools then become part of Cline&#39;s toolkit, ready to use in future tasks.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&quot;add a tool that fetches Jira tickets&quot;: Retrieve ticket ACs and put Cline to work&lt;/li&gt; 
 &lt;li&gt;&quot;add a tool that manages AWS EC2s&quot;: Check server metrics and scale instances up or down&lt;/li&gt; 
 &lt;li&gt;&quot;add a tool that pulls the latest PagerDuty incidents&quot;: Fetch details and ask Cline to fix bugs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;img align=&quot;left&quot; width=&quot;360&quot; src=&quot;https://github.com/user-attachments/assets/7fdf41e6-281a-4b4b-ac19-020b838b6970&quot;&gt; 
&lt;h3&gt;Add Context&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@url&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Paste in a URL for the extension to fetch and convert to markdown, useful when you want to give Cline the latest docs&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@problems&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Add workspace errors and warnings (&#39;Problems&#39; panel) for Cline to fix&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@file&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Adds a file&#39;s contents so you don&#39;t have to waste API requests approving read file (+ type to search files)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@folder&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Adds folder&#39;s files all at once to speed up your workflow even more&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;img align=&quot;right&quot; width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/140c8606-d3bf-41b9-9a1f-4dbf0d4c90cb&quot;&gt; 
&lt;h3&gt;Checkpoints: Compare and Restore&lt;/h3&gt; 
&lt;p&gt;As Cline works through a task, the extension takes a snapshot of your workspace at each step. You can use the &#39;Compare&#39; button to see a diff between the snapshot and your current workspace, and the &#39;Restore&#39; button to roll back to that point.&lt;/p&gt; 
&lt;p&gt;For example, when working with a local web server, you can use &#39;Restore Workspace Only&#39; to quickly test different versions of your app, then use &#39;Restore Task and Workspace&#39; when you find the version you want to continue building from. This lets you safely explore different approaches without losing progress.&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;To contribute to the project, start with our &lt;a href=&quot;https://raw.githubusercontent.com/cline/cline/main/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; to learn the basics. You can also join our &lt;a href=&quot;https://discord.gg/cline&quot;&gt;Discord&lt;/a&gt; to chat with other contributors in the &lt;code&gt;#contributors&lt;/code&gt; channel. If you&#39;re looking for full-time work, check out our open positions on our &lt;a href=&quot;https://cline.bot/join-us&quot;&gt;careers page&lt;/a&gt;!&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Local Development Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Clone the repository &lt;em&gt;(Requires &lt;a href=&quot;https://git-lfs.com/&quot;&gt;git-lfs&lt;/a&gt;)&lt;/em&gt;: &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/cline/cline.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt;Open the project in VSCode: &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;code cline
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt;Install the necessary dependencies for the extension and webview-gui: &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run install:all
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt;Launch by pressing &lt;code&gt;F5&lt;/code&gt; (or &lt;code&gt;Run&lt;/code&gt;-&amp;gt;&lt;code&gt;Start Debugging&lt;/code&gt;) to open a new VSCode window with the extension loaded. (You may need to install the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=connor4312.esbuild-problem-matchers&quot;&gt;esbuild problem matchers extension&lt;/a&gt; if you run into issues building the project.)&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Creating a Pull Request&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Before creating a PR, generate a changeset entry:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run changeset
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will prompt you for:&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Type of change (major, minor, patch) 
     &lt;ul&gt; 
      &lt;li&gt;&lt;code&gt;major&lt;/code&gt; → breaking changes (1.0.0 → 2.0.0)&lt;/li&gt; 
      &lt;li&gt;&lt;code&gt;minor&lt;/code&gt; → new features (1.0.0 → 1.1.0)&lt;/li&gt; 
      &lt;li&gt;&lt;code&gt;patch&lt;/code&gt; → bug fixes (1.0.0 → 1.0.1)&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;Description of your changes&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Commit your changes and the generated &lt;code&gt;.changeset&lt;/code&gt; file&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Push your branch and create a PR on GitHub. Our CI will:&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Run tests and checks&lt;/li&gt; 
    &lt;li&gt;Changesetbot will create a comment showing the version impact&lt;/li&gt; 
    &lt;li&gt;When merged to main, changesetbot will create a Version Packages PR&lt;/li&gt; 
    &lt;li&gt;When the Version Packages PR is merged, a new release will be published&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cline/cline/main/LICENSE&quot;&gt;Apache 2.0 © 2025 Cline Bot Inc.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>langgenius/dify</title>
      <link>https://github.com/langgenius/dify</link>
      <description>&lt;p&gt;Dify is an open-source LLM app development platform. Dify&#39;s intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/langgenius/dify/assets/13230914/f9e19af5-61ba-4119-b926-d10c4c06ebab&quot; alt=&quot;cover-v5-optimized&quot;&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; 📌 &lt;a href=&quot;https://dify.ai/blog/introducing-dify-workflow-file-upload-a-demo-on-ai-podcast&quot;&gt;Introducing Dify Workflow File Upload: Recreate Google NotebookLM Podcast&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://cloud.dify.ai&quot;&gt;Dify Cloud&lt;/a&gt; · &lt;a href=&quot;https://docs.dify.ai/getting-started/install-self-hosted&quot;&gt;Self-hosting&lt;/a&gt; · &lt;a href=&quot;https://docs.dify.ai&quot;&gt;Documentation&lt;/a&gt; · &lt;a href=&quot;https://udify.app/chat/22L1zSxg6yW1cWQg&quot;&gt;Enterprise inquiry&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://dify.ai&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/Product-F04438&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dify.ai/pricing&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/free-pricing?logo=free&amp;amp;color=%20%23155EEF&amp;amp;label=pricing&amp;amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/FngNHpbcY7&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/1082486657678311454?logo=discord&amp;amp;labelColor=%20%235462eb&amp;amp;logoColor=%20%23f5f5f5&amp;amp;color=%20%235462eb&quot; alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reddit.com/r/difyai&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/difyai?style=plastic&amp;amp;logo=reddit&amp;amp;label=r%2Fdifyai&amp;amp;labelColor=white&quot; alt=&quot;join Reddit&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=dify_ai&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/dify_ai?logo=X&amp;amp;color=%20%23f5f5f5&quot; alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/company/langgenius/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;amp;logoColor=fff&quot; alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/u/langgenius&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langgenius/dify-web?labelColor=%20%23FDB062&amp;amp;color=%20%23f79009&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/langgenius/dify/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langgenius/dify?labelColor=%20%2332b583&amp;amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/langgenius/dify/&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alanggenius%2Fdify%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=%20%237d89b0&amp;amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/langgenius/dify/discussions/&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langgenius/dify?labelColor=%20%239b8afb&amp;amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_TW.md&quot;&gt;&lt;img alt=&quot;繁體中文文件&quot; src=&quot;https://img.shields.io/badge/%E7%B9%81%E9%AB%94%E4%B8%AD%E6%96%87-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_CN.md&quot;&gt;&lt;img alt=&quot;简体中文版自述文件&quot; src=&quot;https://img.shields.io/badge/%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_JA.md&quot;&gt;&lt;img alt=&quot;日本語のREADME&quot; src=&quot;https://img.shields.io/badge/%E6%97%A5%E6%9C%AC%E8%AA%9E-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_ES.md&quot;&gt;&lt;img alt=&quot;README en Español&quot; src=&quot;https://img.shields.io/badge/Espa%C3%B1ol-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_FR.md&quot;&gt;&lt;img alt=&quot;README en Français&quot; src=&quot;https://img.shields.io/badge/Fran%C3%A7ais-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_KL.md&quot;&gt;&lt;img alt=&quot;README tlhIngan Hol&quot; src=&quot;https://img.shields.io/badge/Klingon-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_KR.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/%ED%95%9C%EA%B5%AD%EC%96%B4-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_AR.md&quot;&gt;&lt;img alt=&quot;README بالعربية&quot; src=&quot;https://img.shields.io/badge/%D8%A7%D9%84%D8%B9%D8%B1%D8%A8%D9%8A%D8%A9-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_TR.md&quot;&gt;&lt;img alt=&quot;Türkçe README&quot; src=&quot;https://img.shields.io/badge/T%C3%BCrk%C3%A7e-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_VI.md&quot;&gt;&lt;img alt=&quot;README Tiếng Việt&quot; src=&quot;https://img.shields.io/badge/Ti%E1%BA%BFng%20Vi%E1%BB%87t-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_DE.md&quot;&gt;&lt;img alt=&quot;README in Deutsch&quot; src=&quot;https://img.shields.io/badge/German-d9d9d9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/README_BN.md&quot;&gt;&lt;img alt=&quot;README in বাংলা&quot; src=&quot;https://img.shields.io/badge/%E0%A6%AC%E0%A6%BE%E0%A6%82%E0%A6%B2%E0%A6%BE-d9d9d9&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Dify is an open-source LLM app development platform. Its intuitive interface combines agentic AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Before installing Dify, make sure your machine meets the following minimum system requirements:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;CPU &amp;gt;= 2 Core&lt;/li&gt; 
  &lt;li&gt;RAM &amp;gt;= 4 GiB&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;br&gt; 
&lt;p&gt;The easiest way to start the Dify server is through &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/docker/docker-compose.yaml&quot;&gt;docker compose&lt;/a&gt;. Before running Dify with the following commands, make sure that &lt;a href=&quot;https://docs.docker.com/get-docker/&quot;&gt;Docker&lt;/a&gt; and &lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;Docker Compose&lt;/a&gt; are installed on your machine:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd dify
cd docker
cp .env.example .env
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After running, you can access the Dify dashboard in your browser at &lt;a href=&quot;http://localhost/install&quot;&gt;http://localhost/install&lt;/a&gt; and start the initialization process.&lt;/p&gt; 
&lt;h4&gt;Seeking help&lt;/h4&gt; 
&lt;p&gt;Please refer to our &lt;a href=&quot;https://docs.dify.ai/getting-started/install-self-hosted/faqs&quot;&gt;FAQ&lt;/a&gt; if you encounter problems setting up Dify. Reach out to &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/#community--contact&quot;&gt;the community and us&lt;/a&gt; if you are still having issues.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you&#39;d like to contribute to Dify or do additional development, refer to our &lt;a href=&quot;https://docs.dify.ai/getting-started/install-self-hosted/local-source-code&quot;&gt;guide to deploying from source code&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Key features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. Workflow&lt;/strong&gt;: Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/langgenius/dify/assets/13230914/356df23e-1604-483d-80a6-9517ece318aa&quot;&gt;https://github.com/langgenius/dify/assets/13230914/356df23e-1604-483d-80a6-9517ece318aa&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Comprehensive model support&lt;/strong&gt;: Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found &lt;a href=&quot;https://docs.dify.ai/getting-started/readme/model-providers&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/langgenius/dify/assets/13230914/5a17bdbe-097a-4100-8363-40255b70f6e3&quot; alt=&quot;providers-v5&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Prompt IDE&lt;/strong&gt;: Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4. RAG Pipeline&lt;/strong&gt;: Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5. Agent capabilities&lt;/strong&gt;: You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DALL·E, Stable Diffusion and WolframAlpha.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;6. LLMOps&lt;/strong&gt;: Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;7. Backend-as-a-Service&lt;/strong&gt;: All of Dify&#39;s offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.&lt;/p&gt; 
&lt;h2&gt;Feature Comparison&lt;/h2&gt; 
&lt;table style=&quot;width: 100%;&quot;&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Feature&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Dify.AI&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;LangChain&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Flowise&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;OpenAI Assistants API&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Programming Approach&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;API + App-oriented&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Python Code&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;App-oriented&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;API-oriented&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Supported LLMs&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;OpenAI-only&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;RAG Engine&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Agent&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Workflow&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Observability&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Enterprise Feature (SSO/Access control)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Local Deployment&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Using Dify&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cloud &lt;br&gt;&lt;/strong&gt; We host a &lt;a href=&quot;https://dify.ai&quot;&gt;Dify Cloud&lt;/a&gt; service for anyone to try with zero setup. It provides all the capabilities of the self-deployed version, and includes 200 free GPT-4 calls in the sandbox plan.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Self-hosting Dify Community Edition&lt;br&gt;&lt;/strong&gt; Quickly get Dify running in your environment with this &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/#quick-start&quot;&gt;starter guide&lt;/a&gt;. Use our &lt;a href=&quot;https://docs.dify.ai&quot;&gt;documentation&lt;/a&gt; for further references and more in-depth instructions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dify for enterprise / organizations&lt;br&gt;&lt;/strong&gt; We provide additional enterprise-centric features. &lt;a href=&quot;https://udify.app/chat/22L1zSxg6yW1cWQg&quot;&gt;Log your questions for us through this chatbot&lt;/a&gt; or &lt;a href=&quot;mailto:business@dify.ai?subject=%5BGitHub%5DBusiness%20License%20Inquiry&quot;&gt;send us an email&lt;/a&gt; to discuss enterprise needs. &lt;br&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;For startups and small businesses using AWS, check out &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/prodview-t22mebxzwjhu6&quot;&gt;Dify Premium on AWS Marketplace&lt;/a&gt; and deploy it to your own AWS VPC with one-click. It&#39;s an affordable AMI offering with the option to create apps with custom logo and branding.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Staying ahead&lt;/h2&gt; 
&lt;p&gt;Star Dify on GitHub and be instantly notified of new releases.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/langgenius/dify/assets/13230914/b823edc1-6388-4e25-ad45-2f6b187adbb4&quot; alt=&quot;star-us&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Advanced Setup&lt;/h2&gt; 
&lt;p&gt;If you need to customize the configuration, please refer to the comments in our &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/docker/.env.example&quot;&gt;.env.example&lt;/a&gt; file and update the corresponding values in your &lt;code&gt;.env&lt;/code&gt; file. Additionally, you might need to make adjustments to the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file itself, such as changing image versions, port mappings, or volume mounts, based on your specific deployment environment and requirements. After making any changes, please re-run &lt;code&gt;docker-compose up -d&lt;/code&gt;. You can find the full list of available environment variables &lt;a href=&quot;https://docs.dify.ai/getting-started/install-self-hosted/environments&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to configure a highly-available setup, there are community-contributed &lt;a href=&quot;https://helm.sh/&quot;&gt;Helm Charts&lt;/a&gt; and YAML files which allow Dify to be deployed on Kubernetes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/douban/charts/tree/master/charts/dify&quot;&gt;Helm Chart by @LeoQuote&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BorisPolonsky/dify-helm&quot;&gt;Helm Chart by @BorisPolonsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/magicsong/ai-charts&quot;&gt;Helm Chart by @magicsong&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Winson-030/dify-kubernetes&quot;&gt;YAML file by @Winson-030&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wyy-holding/dify-k8s&quot;&gt;YAML file by @wyy-holding&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using Terraform for Deployment&lt;/h4&gt; 
&lt;p&gt;Deploy Dify to Cloud Platform with a single click using &lt;a href=&quot;https://www.terraform.io/&quot;&gt;terraform&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Azure Global&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikawang/dify-azure-terraform&quot;&gt;Azure Terraform by @nikawang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Google Cloud&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DeNA/dify-google-cloud-terraform&quot;&gt;Google Cloud Terraform by @sotazum&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using AWS CDK for Deployment&lt;/h4&gt; 
&lt;p&gt;Deploy Dify to AWS with &lt;a href=&quot;https://aws.amazon.com/cdk/&quot;&gt;CDK&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;AWS&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws-samples/solution-for-deploying-dify-on-aws&quot;&gt;AWS CDK by @KevinZhao&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For those who&#39;d like to contribute code, see our &lt;a href=&quot;https://github.com/langgenius/dify/raw/main/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt;. At the same time, please consider supporting Dify by sharing it on social media and at events and conferences.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We are looking for contributors to help with translating Dify to languages other than Mandarin or English. If you are interested in helping, please see the &lt;a href=&quot;https://github.com/langgenius/dify/raw/main/web/i18n/README.md&quot;&gt;i18n README&lt;/a&gt; for more information, and leave us a comment in the &lt;code&gt;global-users&lt;/code&gt; channel of our &lt;a href=&quot;https://discord.gg/8Tpq4AcN9c&quot;&gt;Discord Community Server&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Community &amp;amp; contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/langgenius/dify/discussions&quot;&gt;Github Discussion&lt;/a&gt;. Best for: sharing feedback and asking questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/langgenius/dify/issues&quot;&gt;GitHub Issues&lt;/a&gt;. Best for: bugs you encounter using Dify.AI, and feature proposals. See our &lt;a href=&quot;https://github.com/langgenius/dify/raw/main/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/FngNHpbcY7&quot;&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/dify_ai&quot;&gt;X(Twitter)&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://github.com/langgenius/dify/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=langgenius/dify&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#langgenius/dify&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=langgenius/dify&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Security disclosure&lt;/h2&gt; 
&lt;p&gt;To protect your privacy, please avoid posting security issues on GitHub. Instead, send your questions to &lt;a href=&quot;mailto:security@dify.ai&quot;&gt;security@dify.ai&lt;/a&gt; and we will provide you with a more detailed answer.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is available under the &lt;a href=&quot;https://raw.githubusercontent.com/langgenius/dify/main/LICENSE&quot;&gt;Dify Open Source License&lt;/a&gt;, which is essentially Apache 2.0 with a few additional restrictions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EFForg/rayhunter</title>
      <link>https://github.com/EFForg/rayhunter</link>
      <description>&lt;p&gt;Rust tool to detect cell site simulators on an orbic mobile hotspot&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://www.eff.org/files/styles/media_browser_preview/public/banner_library/rayhunter-banner.png&quot; alt=&quot;Rayhunter Logo - An Orca taking a bite out of a cellular signal bar&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Rayhunter&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/EFForg/rayhunter/actions/workflows/check-and-test.yml/badge.svg?sanitize=true&quot; alt=&quot;Tests&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Rayhunter is an IMSI Catcher Catcher for the Orbic mobile hotspot.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;THIS CODE IS A PROOF OF CONCEPT AND SHOULD NOT BE RELIED UPON IN HIGH RISK SITUATIONS!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;The Hardware&lt;/h2&gt; 
&lt;p&gt;Rayhunter has been built and tested for the Orbic RC400L mobile hotspot. It may work on other orbics and other linux/qualcom devices, but this is the only one we have tested on. Buy the orbic &lt;a href=&quot;https://www.amazon.com/Orbic-Verizon-Hotspot-Connect-Enabled/dp/B08N3CHC4Y&quot;&gt;using bezos bucks&lt;/a&gt;, or on &lt;a href=&quot;https://www.ebay.com/sch/i.html?_nkw=orbic+rc400l&quot;&gt;Ebay&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the latest &lt;a href=&quot;https://github.com/EFForg/rayhunter/releases&quot;&gt;Rayhunter release bundle&lt;/a&gt; and extract it. &lt;strong&gt;If you are installing from the cloned github repository please see the development instructions below, running &lt;code&gt;install.sh&lt;/code&gt; from the git tree will not work.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Turn on the Orbic device and plug it into your computer using a USB-C Cable.&lt;/li&gt; 
 &lt;li&gt;On MacOS or Linux run the install script &lt;code&gt;install.sh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Once finished, Rayhunter should be running! You can verify this by visiting the web UI as described below.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;The install script has only been tested for Linux on the latest version of Ubuntu. If it fails you will need to follow the install steps outlined in &lt;strong&gt;Development&lt;/strong&gt; below.&lt;/li&gt; 
 &lt;li&gt;The install script also won&#39;t work on older macs with intel chips, for those macs you will need to follow the instructions at &lt;a href=&quot;https://github.com/EFForg/rayhunter/wiki/Install-Rayhunter-on-Mac-Intel-devices&quot;&gt;https://github.com/EFForg/rayhunter/wiki/Install-Rayhunter-on-Mac-Intel-devices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We don&#39;t currently support automated installs on windows, you will have to follow the manual install instructions below*&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Updating&lt;/h2&gt; 
&lt;p&gt;Great news: if you&#39;ve successfully installed rayhunter, you already know how to update it! Our update process is identical to the setup process: simply download the latest release and follow the steps in the &lt;a href=&quot;https://raw.githubusercontent.com/EFForg/rayhunter/main/#Setup&quot;&gt;setup section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once installed, Rayhunter will run automatically whenever your Orbic device is running. It serves a web UI that provides some basic controls, such as being able to start/stop recordings, download captures, and view heuristic analyses of captures. You can access this UI in one of two ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Over wifi: Connect your phone/laptop to the Orbic&#39;s wifi network and visit &lt;code&gt;http://192.168.1.1:8080&lt;/code&gt; (click past your browser warning you about the connection not being secure, Rayhunter doesn&#39;t have HTTPS yet!). 
  &lt;ul&gt; 
   &lt;li&gt;Note that you&#39;ll need the Orbic&#39;s wifi password for this, which can be retrieved by pressing the &quot;MENU&quot; button on the device and opening the 2.4 GHz menu.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Over usb: Connect the Orbic device to your laptop via usb. Run &lt;code&gt;adb forward tcp:8080 tcp:8080&lt;/code&gt;, then visit &lt;code&gt;http://localhost:8080&lt;/code&gt;. For this you will need to install the Android Debug Bridge (ADB) on your computer, you can copy the version that was downloaded inside the releases/platform-tools/` folder to somewhere else in your path or you can install it manually. You can find instructions for doing so on your platform &lt;a href=&quot;https://www.xda-developers.com/install-adb-windows-macos-linux/#how-to-set-up-adb-on-your-computer&quot;&gt;here&lt;/a&gt;, (don&#39;t worry about instructions for installing it on a phone/device yet).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;h3&gt;Do I need an active SIM card to use Rayhunter?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;It Depends&lt;/strong&gt;. Operation of Rayhunter does require the insertion of a SIM card into the device, but whether that SIM card has to be currently active for our tests to work is still under investigation. If you want to use the device as a hotspot in addition to a research device an active plan would of course be necessary, however we have not done enough testing yet to know whether an active subscription is required for detection. If you want to test the device with an inactive SIM card, we would certainly be interested in seeing any data you collect, and especially any runs that trigger an alert!&lt;/p&gt; 
&lt;h3&gt;Help, Rayhunter&#39;s line is red! What should I do?&lt;/h3&gt; 
&lt;p&gt;Unfortunately, the circumstances that might lead to a positive CSS signal are quite varied, so we don&#39;t have a universal recommendation for how to deal with the a positive signal. Depending on your circumstances and threat model, you may want to turn off your phone until you are out of the area (or put it on airplane mode) and tell your friends to do the same!&lt;/p&gt; 
&lt;p&gt;If you&#39;ve received a Rayhunter warning and would like to help us with our research, please send your Rayhunter data captures (QMDL and PCAP logs) to us at our &lt;a href=&quot;https://signal.org/&quot;&gt;Signal&lt;/a&gt; username &lt;a href=&quot;https://signal.me/#eu/HZbPPED5LyMkbTxJsG2PtWc2TXxPUR1OxBMcJGLOPeeCDGPuaTpOi5cfGRY6RrGf&quot;&gt;&lt;strong&gt;ElectronicFrontierFoundation.90&lt;/strong&gt;&lt;/a&gt; with the following information: capture date, capture location, device, device model, and Rayhunter version. If you&#39;re unfamiliar with Signal, feel free to check out our &lt;a href=&quot;https://ssd.eff.org/module/how-to-use-signal&quot;&gt;Security Self Defense guide on it&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this file may contain sensitive information such as your IMSI and the unique IDs of cell towers you were near which could be used to ascertain your location at the time.&lt;/p&gt; 
&lt;h3&gt;Does Rayhunter work outside of the US?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Probably&lt;/strong&gt;. Some Rayhunter users have reported successfully using it in other countries with unlocked devices and SIM cards from local telcos. We can&#39;t guarantee whether or not it will work for you though.&lt;/p&gt; 
&lt;h3&gt;Should I get a locked or unlocked orbic device? What is the difference?&lt;/h3&gt; 
&lt;p&gt;If you want to use a non verizon SIM card you will probably need an unlocked device. But it&#39;s not clear how locked the locked devices are nor how to unlock them, we welcome any experimentation and information regarding the use of unlocked devices.&lt;/p&gt; 
&lt;h3&gt;Does Rayhunter work on any other devices besides the Orbic RC400L?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Maybe&lt;/strong&gt;. We have not tested Rayhunter on any other hardware but we would love to expand the supported platforms. We will consider giving official support to any hardware platform that can be bought for around $20-30USD. The Rayhunter daemon should theoretically work on any linux/android device that has a qualcomm chip with a /dev/diag interface and root access, though our installer script has only been tested with an Orbic. If you get it working on another device, please let us know!&lt;/p&gt; 
&lt;h3&gt;How do I delete capture files from the Rayhunter device?&lt;/h3&gt; 
&lt;p&gt;You can get a shell on the device by inputting &lt;code&gt;adb shell&lt;/code&gt; to a terminal with the device connected, you can check if it is detected with &lt;code&gt;adb devices&lt;/code&gt;. The capture files are located at &lt;em&gt;/data/rayhunter/qmdl&lt;/em&gt; but you will need root access to modify or delete them. From the adb shell run &lt;code&gt;/bin/rootshell&lt;/code&gt; and you can now use commands like &#39;rm&#39; as root to modify and delete entries in the &lt;em&gt;/data/rayhunter/qmdl&lt;/em&gt; directory. &lt;strong&gt;Be careful not to delete important files in other directories as you may seriously damage the device&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install ADB on your computer using the instructions above, and make sure it&#39;s in your terminal&#39;s PATH 
  &lt;ul&gt; 
   &lt;li&gt;You can verify if ADB is in your PATH by running &lt;code&gt;which adb&lt;/code&gt; in a terminal. If it prints the filepath to where ADB is installed, you&#39;re set! Otherwise, try following one of these guides: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/652936/adding-android-sdk-platform-tools-to-path-downloaded-from-umake&quot;&gt;linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.repeato.app/setting-up-adb-on-macos-a-step-by-step-guide/&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://medium.com/@yadav-ajay/a-step-by-step-guide-to-setting-up-adb-path-on-windows-0b833faebf18&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;If you&#39;re on x86 linux&lt;/h3&gt; 
&lt;p&gt;Install rust the usual way and then install cross compiling dependences:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt install curl build-essential libc6-armhf-cross libc6-dev-armhf-cross gcc-arm-linux-gnueabihf
rustup target add x86_64-unknown-linux-gnu
rustup target add armv7-unknown-linux-gnueabihf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can root your device and install Rayhunter by running &lt;code&gt;./tools/install-dev.sh&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;If you&#39;re on windows or can&#39;t run the install scripts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Root your device on windows using the instructions here: &lt;a href=&quot;https://xdaforums.com/t/resetting-verizon-orbic-speed-rc400l-firmware-flash-kajeet.4334899/#post-87855183&quot;&gt;https://xdaforums.com/t/resetting-verizon-orbic-speed-rc400l-firmware-flash-kajeet.4334899/#post-87855183&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build for arm using &lt;code&gt;cargo build&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run tests using &lt;code&gt;cargo test_pc&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Push the scripts in &lt;code&gt;scripts/&lt;/code&gt; to &lt;code&gt;/etc/init.d&lt;/code&gt; on device and make a directory called &lt;code&gt;/data/rayhunter&lt;/code&gt; using &lt;code&gt;adb shell&lt;/code&gt; (and sshell for your root shell if you followed the steps above)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;you also need to copy &lt;code&gt;config.toml.example&lt;/code&gt; to &lt;code&gt;/data/rayhunter/config.toml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Then run &lt;code&gt;./make.sh&lt;/code&gt; this will build the binary and push it over adb. Restart your device or run &lt;code&gt;/etc/init.d/rayhunter_daemon start&lt;/code&gt; on the device and you are good to go.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write your code and write tests&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build for arm using &lt;code&gt;cargo build&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run tests using &lt;code&gt;cargo test_pc&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;push to the device with &lt;code&gt;./make.sh&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support and Discussion&lt;/h2&gt; 
&lt;p&gt;If you&#39;re having issues installing or using Rayhunter, please open an issue in this repo. Join us in the &lt;code&gt;#rayhunter&lt;/code&gt; channel of &lt;a href=&quot;https://opensource.eff.org/signup_user_complete/?id=6iqur37ucfrctfswrs14iscobw&amp;amp;md=link&amp;amp;sbr=su&quot;&gt;EFF&#39;s Mattermost&lt;/a&gt; instance to chat!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build docs locally using &lt;code&gt;RUSTDOCFLAGS=&quot;--cfg docsrs&quot; cargo doc --no-deps --all-features --open&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;LEGAL DISCLAIMER:&lt;/strong&gt; Use this program at your own risk. We believe running this program does not currently violate any laws or regulations in the United States. However, we are not responsible for civil or criminal liability resulting from the use of this software. If you are located outside of the US please consult with an attorney in your country to help you assess the legal risks of running this program.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Good Hunting!&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kern/filepizza</title>
      <link>https://github.com/kern/filepizza</link>
      <description>&lt;p&gt;🍕 Peer-to-peer file transfers in your browser&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://xkcd.com/949/&quot;&gt;&lt;img src=&quot;http://imgs.xkcd.com/comics/file_transfer.png&quot; alt=&quot;XKCD 949&quot; width=&quot;30%&quot; align=&quot;right&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kern/filepizza/main/public/images/wordmark.png&quot; alt=&quot;FilePizza wordmark&quot; width=&quot;50%&quot;&gt; &lt;/p&gt;
&lt;h3&gt;Peer-to-peer file transfers in your browser&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Cooked up by &lt;a href=&quot;https://kern.io&quot;&gt;Alex Kern&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/neerajbaid&quot;&gt;Neeraj Baid&lt;/a&gt; while eating Sliver @ UC Berkeley.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Using &lt;a href=&quot;http://www.webrtc.org&quot;&gt;WebRTC&lt;/a&gt;, FilePizza eliminates the initial upload step required by other web-based file sharing services. Because data is never stored in an intermediary server, the transfer is fast, private, and secure.&lt;/p&gt; 
&lt;p&gt;A hosted instance of FilePizza is available at &lt;a href=&quot;https://file.pizza&quot;&gt;file.pizza&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What&#39;s new with FilePizza v2&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A new UI with dark mode support, now built on modern browser technologies.&lt;/li&gt; 
 &lt;li&gt;Works on most mobile browsers, including Mobile Safari.&lt;/li&gt; 
 &lt;li&gt;Transfers are now directly from the uploader to the downloader&#39;s browser (WebRTC without WebTorrent) with faster handshakes.&lt;/li&gt; 
 &lt;li&gt;Uploaders can monitor the progress of the transfer and stop it if they want.&lt;/li&gt; 
 &lt;li&gt;Better security and safety measures with password protection and reporting.&lt;/li&gt; 
 &lt;li&gt;Support for uploading multiple files at once, which downloaders receive as a zip file.&lt;/li&gt; 
 &lt;li&gt;Streaming downloads with a Service Worker.&lt;/li&gt; 
 &lt;li&gt;Out-of-process storage of server state using Redis.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/kern/filepizza.git
$ pnpm install
$ pnpm dev
$ pnpm build
$ pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running with Docker&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ pnpm docker:build
$ pnpm docker:up
$ pnpm docker:down
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Next.js&lt;/li&gt; 
 &lt;li&gt;Tailwind&lt;/li&gt; 
 &lt;li&gt;TypeScript&lt;/li&gt; 
 &lt;li&gt;React&lt;/li&gt; 
 &lt;li&gt;PeerJS for WebRTC&lt;/li&gt; 
 &lt;li&gt;View Transitions&lt;/li&gt; 
 &lt;li&gt;Redis (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;How are my files sent?&lt;/strong&gt; Your files are sent directly from your browser to the downloader&#39;s browser. They never pass through our servers. FilePizza uses WebRTC to send files. This requires that the uploader leave their browser window open until the transfer is complete.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Can multiple people download my file at once?&lt;/strong&gt; Yes! Just send them your short or long URL.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;How big can my files be?&lt;/strong&gt; As big as your browser can handle.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;What happens when I close my browser?&lt;/strong&gt; The URLs for your files will no longer work. If a downloader has completed the transfer, that downloader will continue to seed to incomplete downloaders, but no new downloads may be initiated.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Are my files encrypted?&lt;/strong&gt; Yes, all WebRTC communications are automatically encrypted using public-key cryptography because of DTLS. You can add an optional password to your upload for an extra layer of security.&lt;/p&gt; 
&lt;h2&gt;License &amp;amp; Acknowledgements&lt;/h2&gt; 
&lt;p&gt;FilePizza is released under the &lt;a href=&quot;https://github.com/kern/filepizza/raw/main/LICENSE&quot;&gt;BSD 3-Clause license&lt;/a&gt;. A huge thanks to &lt;a href=&quot;https://dribbble.com/iblowyourdesign&quot;&gt;iblowyourdesign&lt;/a&gt; for the pizza illustration.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>juspay/hyperswitch</title>
      <link>https://github.com/juspay/hyperswitch</link>
      <description>&lt;p&gt;An open source payments switch written in Rust to make payments fast, reliable and affordable&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-logo-dark.svg#gh-dark-mode-only&quot; alt=&quot;Hyperswitch-Logo&quot; width=&quot;40%&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-logo-light.svg#gh-light-mode-only&quot; alt=&quot;Hyperswitch-Logo&quot; width=&quot;40%&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Open-Source Payments Orchestration&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt;
  Single API to access the payments ecosystem and its features 
&lt;/div&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/juspay/hyperswitch/actions?query=workflow%3ACI+branch%3Amain&quot;&gt; &lt;img src=&quot;https://github.com/juspay/hyperswitch/workflows/CI-push/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/juspay/hyperswitch/raw/main/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/juspay/hyperswitch&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/juspay/hyperswitch/raw/main/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Made_in-Rust-orange&quot;&gt; &lt;/a&gt; 
 &lt;!-- Uncomment when we reach &gt;50% coverage --&gt; 
 &lt;!-- &lt;a href=&quot;https://codecov.io/github/juspay/hyperswitch&quot; &gt;
    &lt;img src=&quot;https://codecov.io/github/juspay/hyperswitch/graph/badge.svg&quot;/&gt;
  &lt;/a&gt; --&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.linkedin.com/company/hyperswitch/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/follow-hyperswitch-blue?logo=linkedin&amp;amp;labelColor=grey&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://x.com/hyperswitchio&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/follow-%40hyperswitchio-white?logo=x&amp;amp;labelColor=grey&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://join.slack.com/t/hyperswitch-io/shared_invite/zt-2jqxmpsbm-WXUENx022HjNEy~Ark7Orw&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/chat-on_slack-blue?logo=slack&amp;amp;labelColor=grey&amp;amp;color=%233f0e40&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#architectural-overview&quot;&gt;Architectural Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#try-hyperswitch&quot;&gt;Try Hyperswitch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#support-feature-requests&quot;&gt;Support, Feature requests &amp;amp; Bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#our-vision&quot;&gt;Our Vision&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#versioning&quot;&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#copyright-and-license&quot;&gt;Copyright and License&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#introduction&quot;&gt; &lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt; &lt;/a&gt; Juspay, founded in 2012, is a global leader in payment orchestration and checkout solutions, trusted by 400+ leading enterprises and brands worldwide. Hyperswitch is Juspay&#39;s new generation of composable, commercial open-source payments platform for merchant and brands. It is an enterprise-grade, transparent and modular payments platform designed to provide digital businesses access to the best payments infrastructure. 
&lt;p&gt;Here are the key components of Hyperswitch that deliver the whole solution:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/juspay/hyperswitch&quot;&gt;Hyperswitch Backend&lt;/a&gt;: Hyperswitch backend enables seamless payment processing with comprehensive support for various payment flows - authorization, authentication, void and capture workflows along with robust management of post-payment processes like refunds and chargeback handling. Additionally, Hyperswitch supports non-payment use cases by enabling connections with external FRM or authentication providers as part of the payment flow. The backend optimizes payment routing with customizable workflows, including success rate-based routing, rule-based routing, volume distribution, fallback handling, and intelligent retry mechanisms for failed payments based on specific error codes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/juspay/hyperswitch-web&quot;&gt;SDK (Frontend)&lt;/a&gt;: The SDK, available for web, &lt;a href=&quot;https://github.com/juspay/hyperswitch-client-core&quot;&gt;Android, and iOS&lt;/a&gt;, unifies the payment experience across various methods such as cards, wallets, BNPL, bank transfers, and more, while supporting the diverse payment flows of underlying PSPs. When paired with the locker, it surfaces the user&#39;s saved payment methods.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/juspay/hyperswitch-control-center&quot;&gt;Control Center&lt;/a&gt;: The Control Center enables users to manage the entire payments stack without any coding. It allows the creation of workflows for routing, payment retries, and defining conditions to invoke 3DS, fraud risk management (FRM), and surcharge modules. The Control Center provides access to transaction, refund, and chargeback operations across all integrated PSPs, transaction-level logs for initial debugging, and detailed analytics and insights into payment performance.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read more at &lt;a href=&quot;https://docs.hyperswitch.io/&quot;&gt;Hyperswitch docs&lt;/a&gt;.&lt;/p&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#architectural-overview&quot;&gt; &lt;h2 id=&quot;architectural-overview&quot;&gt;Architectural Overview&lt;/h2&gt; &lt;/a&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/features.png&quot;&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/non-functional-features.png&quot;&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-architecture-v1.png&quot;&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#try-hyperswitch&quot;&gt; &lt;h2 id=&quot;try-hyperswitch&quot;&gt;Try Hyperswitch&lt;/h2&gt; &lt;/a&gt; 
&lt;h3&gt;1. Local Setup&lt;/h3&gt; 
&lt;p&gt;You can run Hyperswitch on your system using Docker compose after cloning this repository.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone --depth 1 --branch latest https://github.com/juspay/hyperswitch
cd hyperswitch
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/try_local_system.md&quot;&gt;local setup guide&lt;/a&gt; for a more details on setting up the entire stack or component wise. This takes 15-mins and gives the following output&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;[+] Running 2/2
✔ hyperswitch-control-center Pulled 2.9s
✔ hyperswitch-server Pulled 3.0s
[+] Running 6/0

✔ Container hyperswitch-pg-1 Created 0.0s
✔ Container hyperswitch-redis-standalone-1 Created 0.0s
✔ Container hyperswitch-migration_runner-1 Created 0.0s
✔ Container hyperswitch-hyperswitch-server-1 Created 0.0s
✔ Container hyperswitch-hyperswitch-web-1 Created 0.0s
✔ Container hyperswitch-hyperswitch-control-center-1 Created 0.0s

Attaching to hyperswitch-control-center-1, hyperswitch-server-1, hyperswitch-web-1, migration_runner-1, pg-1, redis-standalone-1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Deployment on cloud&lt;/h3&gt; 
&lt;p&gt;The fastest and easiest way to try Hyperswitch on AWS is via our CDK scripts&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Click on the following button for a quick standalone deployment on AWS, suitable for prototyping. No code or setup is required in your system and the deployment is covered within the AWS free-tier setup.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/new?stackName=HyperswitchBootstarp&amp;amp;templateURL=https://hyperswitch-synth.s3.eu-central-1.amazonaws.com/hs-starter-config.yaml&quot;&gt;&lt;img src=&quot;https://github.com/juspay/hyperswitch/raw/main/docs/imgs/aws_button.png?raw=true&quot; height=&quot;35&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Sign-in to your AWS console.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the instructions provided on the console to successfully deploy Hyperswitch. This takes 30-45mins and gives the following output&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Host&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;App server running on&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://hyperswitch-&amp;lt;host-id.region&amp;gt;.elb.amazonaws.com&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HyperloaderJS Hosted at&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://&amp;lt;cloudfront.host-id&amp;gt;/0.103.1/v0/HyperLoader.js&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Control center server running on&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://hyperswitch-control-center-&amp;lt;host-id.region&amp;gt;.elb.amazonaws.com&lt;/code&gt;, Login with Email: &lt;code&gt;test@gmail.com&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hyperswitch Demo Store running on&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://hyperswitch-sdk-demo-&amp;lt;host-id.region&amp;gt;.elb.amazonaws.com&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Logs server running on&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://hyperswitch-logs-&amp;lt;host-id.region&amp;gt;.elb.amazonaws.com&lt;/code&gt;, Login with username: &lt;code&gt;admin&lt;/code&gt;, password: &lt;code&gt;admin&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;We support deployment on GCP and Azure via Helm charts which takes 30-45mins. You can read more at &lt;a href=&quot;https://docs.hyperswitch.io/hyperswitch-open-source/deploy-on-kubernetes-using-helm&quot;&gt;Hyperswitch docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;3. Hosted Sandbox&lt;/h3&gt; 
&lt;p&gt;You can experience the product by signing up for our &lt;a href=&quot;https://app.hyperswitch.io/&quot;&gt;hosted sandbox&lt;/a&gt;. The signup process accepts any email ID and provides access to the entire Control Center. You can set up connectors, define workflows for routing and retries, and even try payments from the dashboard.&lt;/p&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/support-feature-requests&quot;&gt; &lt;h2 id=&quot;support-feature-requests&quot;&gt;Support, Feature requests &amp;amp; Bugs&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;For any support, join the conversation in &lt;a href=&quot;https://join.slack.com/t/hyperswitch-io/shared_invite/zt-2jqxmpsbm-WXUENx022HjNEy~Ark7Orw&quot;&gt;Slack&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For new product features, enhancements, roadmap discussions, or to share queries and ideas, visit our &lt;a href=&quot;https://github.com/juspay/hyperswitch/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For reporting a bug, please read the issue guidelines and search for &lt;a href=&quot;https://github.com/juspay/hyperswitch/issues&quot;&gt;existing and closed issues&lt;/a&gt;. If your problem or idea is not addressed yet, please &lt;a href=&quot;https://github.com/juspay/hyperswitch/issues/new/choose&quot;&gt;open a new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/our-vision&quot;&gt; &lt;h2 id=&quot;our-vision&quot;&gt;Our Vision&lt;/h2&gt; &lt;/a&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Linux for Payments&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Payments are evolving rapidly worldwide, with hundreds of processors, fraud detection systems, authentication modules, and new payment methods and flows emerging. Businesses building or managing their own payment stacks often face similar challenges, struggle with comparable issues, and find it hard to innovate at the desired pace.&lt;/p&gt; 
&lt;p&gt;Hyperswitch serves as a well-architected designed reference platform, built on best-in-class design principles, empowering businesses to own and customize their payment stack. It provides a reusable core payments stack that can be tailored to specific requirements while relying on the Hyperswitch team for enhancements, support, and continuous innovation.&lt;/p&gt; 
&lt;h3&gt;Our Values&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Embrace Payments Diversity: It will drive innovation in the ecosystem in multiple ways.&lt;/li&gt; 
 &lt;li&gt;Make it Open Source: Increases trust; Improves the quality and reusability of software.&lt;/li&gt; 
 &lt;li&gt;Be community driven: It enables participatory design and development.&lt;/li&gt; 
 &lt;li&gt;Build it like Systems Software: This sets a high bar for Reliability, Security and Performance SLAs.&lt;/li&gt; 
 &lt;li&gt;Maximise Value Creation: For developers, customers &amp;amp; partners.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This project is being created and maintained by &lt;a href=&quot;https://juspay.io&quot;&gt;Juspay&lt;/a&gt;&lt;/p&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#versioning&quot;&gt; &lt;h2 id=&quot;versioning&quot;&gt;Versioning&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/#copyright-and-license&quot;&gt; &lt;h2 id=&quot;copyright-and-license&quot;&gt;Copyright and License&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;This product is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/LICENSE&quot;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/juspay/hyperswitch/main/team-behind-hyperswitch&quot;&gt; &lt;h2 id=&quot;team-behind-hyperswitch&quot;&gt;Team behind Hyperswitch&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;The core team of 150+ engineers building Hyperswitch. Keep up the great work! 🥂&lt;/p&gt; 
&lt;a href=&quot;https://github.com/juspay/hyperswitch/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contributors-img.web.app/image?repo=juspay/hyperswitch&quot; alt=&quot;Contributors&quot;&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>Shubhamsaboo/awesome-llm-apps</title>
      <link>https://github.com/Shubhamsaboo/awesome-llm-apps</link>
      <description>&lt;p&gt;Collection of awesome LLM apps with AI Agents and RAG using OpenAI, Anthropic, Gemini and opensource models.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;http://www.theunwindai.com&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Shubhamsaboo/awesome-llm-apps/main/docs/banner/unwind_black.png&quot; width=&quot;900px&quot; alt=&quot;Unwind AI&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.linkedin.com/in/shubhamsaboo/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/-Follow%20Shubham%20Saboo-blue?logo=linkedin&amp;amp;style=flat-square&quot; alt=&quot;LinkedIn&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/Saboo_Shubham_&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/Shubham_Saboo&quot; alt=&quot;Twitter&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;🌟 Awesome LLM Apps&lt;/h1&gt; 
&lt;p&gt;A curated collection of awesome LLM apps built with RAG and AI agents. This repository features LLM apps that use models from OpenAI, Anthropic, Google, and open-source models like DeepSeek, Qwen or Llama that you can run locally on your computer.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://trendshift.io/repositories/9876&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://trendshift.io/api/badge/repositories/9876&quot; alt=&quot;Shubhamsaboo%2Fawesome-llm-apps | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;🤔 Why Awesome LLM Apps?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;💡 Discover practical and creative ways LLMs can be applied across different domains, from code repositories to email inboxes and more.&lt;/li&gt; 
 &lt;li&gt;🔥 Explore apps that combine LLMs from OpenAI, Anthropic, Gemini, and open-source alternatives with RAG and AI Agents.&lt;/li&gt; 
 &lt;li&gt;🎓 Learn from well-documented projects and contribute to the growing open-source ecosystem of LLM-powered applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚨 Open Source AI Agent Hackathon! 🚨&lt;/h2&gt; 
&lt;p&gt;We&#39;re launching a Global AI Agent Hackathon in collaboration with AI Agent ecosystem partners — open to all developers, builders, and startups working on agents, RAG, tool use, or multi-agent systems.&lt;/p&gt; 
&lt;h3&gt;💰 Win up to $20,000 in cash by building Agents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🏅 10 winners: $300 each&lt;/li&gt; 
 &lt;li&gt;🥉 10 winners: $500 each&lt;/li&gt; 
 &lt;li&gt;🥈 5 winners: $1,000 each&lt;/li&gt; 
 &lt;li&gt;🥇 1 winner: $2,000&lt;/li&gt; 
 &lt;li&gt;🏆 GRAND PRIZE: $5,000 🏆&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎁 Bonus&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top 5 projects will be featured in the top trending &lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps&quot;&gt;Awesome LLM Apps&lt;/a&gt; repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🤝 Partners&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.theunwindai.com&quot;&gt;Unwind AI&lt;/a&gt;, &lt;a href=&quot;https://www.agno.com&quot;&gt;Agno&lt;/a&gt; and more Agent ecosystem companies joining soon.&lt;/p&gt; 
&lt;h3&gt;📅 Here&#39;s the timeline:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;April 3rd - Final dates revealed&lt;/li&gt; 
 &lt;li&gt;April 10th - Prize and success criteria announced&lt;/li&gt; 
 &lt;li&gt;April 15th (tentative) - Hackathon starts&lt;/li&gt; 
 &lt;li&gt;May 30th (tentative) - Hackathon ends&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Join us for a month of building Agents!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Prizes will be distributed on an ongoing basis and continue till all prizes are awarded.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;⭐ Star this repo and follow along to stay updated.&lt;/p&gt; 
&lt;h3&gt;🤝 Want to join us as a partner or judge?&lt;/h3&gt; 
&lt;p&gt;If you&#39;re a company in the AI agent ecosystem or would like to judge the hackathon, reach out to &lt;a href=&quot;https://x.com/Saboo_Shubham_&quot;&gt;Shubham Saboo&lt;/a&gt; or &lt;a href=&quot;https://x.com/ashpreetbedi&quot;&gt;Ashpreet Bedi&lt;/a&gt; on X to partner. Let’s make this the biggest open source AI Agent hackathon.&lt;/p&gt; 
&lt;h2&gt;📂 Featured AI Projects&lt;/h2&gt; 
&lt;h3&gt;AI Agents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_customer_support_agent&quot;&gt;💼 AI Customer Support Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_investment_agent&quot;&gt;📈 AI Investment Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_legal_agent_team&quot;&gt;👨‍⚖️ AI Legal Agent Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_recruitment_agent_team&quot;&gt;💼 AI Recruitment Agent Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_services_agency&quot;&gt;👨‍💼 AI Services Agency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_competitor_intelligence_agent_team&quot;&gt;🧲 AI Competitor Intelligence Agent Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_health_fitness_agent&quot;&gt;🏋️‍♂️ AI Health &amp;amp; Fitness Planner Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_startup_trend_analysis_agent&quot;&gt;📈 AI Startup Trend Analysis Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_journalist_agent&quot;&gt;🗞️ AI Journalist Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_finance_agent_team&quot;&gt;💲 AI Finance Agent Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_competitor_intelligence_agent_team&quot;&gt;🧲 AI Competitor Intelligence Agent Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_lead_generation_agent&quot;&gt;🎯 AI Lead Generation Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_personal_finance_agent&quot;&gt;💰 AI Personal Finance Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_medical_imaging_agent&quot;&gt;🩻 AI Medical Scan Diagnosis Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_teaching_agent_team&quot;&gt;👨‍🏫 AI Teaching Agent Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_travel_agent&quot;&gt;🛫 AI Travel Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_movie_production_agent&quot;&gt;🎬 AI Movie Production Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/multi_agent_researcher&quot;&gt;📰 Multi-Agent AI Researcher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_coding_agent_o3-mini&quot;&gt;💻 Multimodal AI Coding Agent Team with o3-mini and Gemini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_meeting_agent&quot;&gt;📑 AI Meeting Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_chess_agent&quot;&gt;♜ AI Chess Agent Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_real_estate_agent&quot;&gt;🏠 AI Real Estate Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/local_news_agent_openai_swarm&quot;&gt;🌐 Local News Agent OpenAI Swarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/xai_finance_agent&quot;&gt;📊 AI Finance Agent with xAI Grok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_3dpygame_r1&quot;&gt;🎮 AI 3D PyGame Visualizer with DeepSeek R1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/ai_reasoning_agent&quot;&gt;🧠 AI Reasoning Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/ai_agent_tutorials/multimodal_ai_agent&quot;&gt;🧬 Multimodal AI Agent&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;RAG (Retrieval Augmented Generation)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/autonomous_rag&quot;&gt;🔍 Autonomous RAG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/agentic_rag&quot;&gt;🔗 Agentic RAG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/gemini_agentic_rag&quot;&gt;🤔 Agentic RAG with Gemini Flash Thinking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/deepseek_local_rag_agent&quot;&gt;🐋 Deepseek Local RAG Reasoning Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/llama3.1_local_rag&quot;&gt;🔄 Llama3.1 Local RAG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/rag-as-a-service&quot;&gt;🧩 RAG-as-a-Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/local_rag_agent&quot;&gt;🦙 Local RAG Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/hybrid_search_rag&quot;&gt;👀 RAG App with Hybrid Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/local_hybrid_search_rag&quot;&gt;🖥️ Local RAG App with Hybrid Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/rag_database_routing&quot;&gt;📠 RAG Agent with Database Routing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/rag_tutorials/corrective_rag&quot;&gt;🔄 Corrective RAG Agent&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MCP AI Agents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/mcp_ai_agents/github_mcp_agent&quot;&gt;🐙 MCP GitHub Agent&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;LLM Apps with Memory&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/llm_apps_with_memory_tutorials/ai_arxiv_agent_memory&quot;&gt;💾 AI Arxiv Agent with Memory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/llm_apps_with_memory_tutorials/llm_app_personalized_memory&quot;&gt;📝 LLM App with Personalized Memory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/llm_apps_with_memory_tutorials/ai_travel_agent_memory&quot;&gt;🛩️ AI Travel Agent with Memory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/llm_apps_with_memory_tutorials/local_chatgpt_with_memory&quot;&gt;🗄️ Local ChatGPT with Memory&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chat with X&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/chat_with_X_tutorials/chat_with_github&quot;&gt;💬 Chat with GitHub Repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/chat_with_X_tutorials/chat_with_gmail&quot;&gt;📨 Chat with Gmail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/chat_with_X_tutorials/chat_with_pdf&quot;&gt;📄 Chat with PDF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/chat_with_X_tutorials/chat_with_research_papers&quot;&gt;📚 Chat with Research Papers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/chat_with_X_tutorials/chat_with_substack&quot;&gt;📝 Chat with Substack Newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/chat_with_X_tutorials/chat_with_youtube_videos&quot;&gt;📽️ Chat with YouTube Videos&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;LLM Finetuning&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/llm_finetuning_tutorials/llama3.2_finetuning&quot;&gt;🌐 Llama3.2 Finetuning&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Tools and Frameworks&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/advanced_tools_frameworks/gemini_multimodal_chatbot&quot;&gt;🧪 Gemini Multimodal Chatbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/advanced_tools_frameworks/mixture_of_agents&quot;&gt;🔄 Mixture of Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/advanced_tools_frameworks/multillm_chat_playground&quot;&gt;🌐 MultiLLM Chat Playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/advanced_tools_frameworks/llm_router_app&quot;&gt;🔗 LLM Router App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/advanced_tools_frameworks/local_chatgpt_clone&quot;&gt;💬 Local ChatGPT Clone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/advanced_tools_frameworks/web_scrapping_ai_agent&quot;&gt;🌍 Web Scraping AI Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/advanced_tools_frameworks/web_search_ai_assistant&quot;&gt;🔍 Web Search AI Assistant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/tree/main/advanced_tools_frameworks/cursor_ai_experiments&quot;&gt;🧪 Cursor AI Experiments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/Shubhamsaboo/awesome-llm-apps.git 
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Navigate to the desired project directory&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd awesome-llm-apps/chat_with_X_tutorials/chat_with_gmail
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install the required dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Follow the project-specific instructions&lt;/strong&gt; in each project&#39;s &lt;code&gt;README.md&lt;/code&gt; file to set up and run the app.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🤝 Contributing to Open Source&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! If you have any ideas, improvements, or new apps to add, please create a new &lt;a href=&quot;https://github.com/Shubhamsaboo/awesome-llm-apps/issues&quot;&gt;GitHub Issue&lt;/a&gt; or submit a pull request. Make sure to follow the existing project structure and include a detailed &lt;code&gt;README.md&lt;/code&gt; for each new app.&lt;/p&gt; 
&lt;h3&gt;Thank You, Community, for the Support! 🙏&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#Shubhamsaboo/awesome-llm-apps&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=Shubhamsaboo/awesome-llm-apps&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🌟 &lt;strong&gt;Don’t miss out on future updates! Star the repo now and be the first to know about new and exciting LLM apps with RAG and AI Agents.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ourongxing/newsnow</title>
      <link>https://github.com/ourongxing/newsnow</link>
      <description>&lt;p&gt;Elegant reading of real-time and hottest news&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NewsNow&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ourongxing/newsnow/main/screenshots/preview-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ourongxing/newsnow/main/screenshots/preview-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/ourongxing/newsnow/main/README.zh-CN.md&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/ourongxing/newsnow/main/README.ja-JP.md&quot;&gt;日本語&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This is a demo version currently supporting Chinese only. A full-featured version with better customization and English content support will be released later.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Elegant reading of real-time and hottest news&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clean and elegant UI design for optimal reading experience&lt;/li&gt; 
 &lt;li&gt;Real-time updates on trending news&lt;/li&gt; 
 &lt;li&gt;GitHub OAuth login with data synchronization&lt;/li&gt; 
 &lt;li&gt;30-minute default cache duration (logged-in users can force refresh)&lt;/li&gt; 
 &lt;li&gt;Adaptive scraping interval (minimum 2 minutes) based on source update frequency to optimize resource usage and prevent IP bans&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Basic Deployment&lt;/h3&gt; 
&lt;p&gt;For deployments without login and caching:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork this repository&lt;/li&gt; 
 &lt;li&gt;Import to platforms like Cloudflare Page or Vercel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Cloudflare Page Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build command: &lt;code&gt;pnpm run build&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Output directory: &lt;code&gt;dist/output/public&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GitHub OAuth Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;Create a GitHub App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;No special permissions required&lt;/li&gt; 
 &lt;li&gt;Set callback URL to: &lt;code&gt;https://your-domain.com/api/oauth/github&lt;/code&gt; (replace &lt;code&gt;your-domain&lt;/code&gt; with your actual domain)&lt;/li&gt; 
 &lt;li&gt;Obtain Client ID and Client Secret&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Environment Variables&lt;/h3&gt; 
&lt;p&gt;Refer to &lt;code&gt;example.env.server&lt;/code&gt;. For local development, rename it to &lt;code&gt;.env.server&lt;/code&gt; and configure:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;# Github Client ID
G_CLIENT_ID=
# Github Client Secret
G_CLIENT_SECRET=
# JWT Secret, usually the same as Client Secret
JWT_SECRET=
# Initialize database, must be set to true on first run, can be turned off afterward
INIT_TABLE=true
# Whether to enable cache
ENABLE_CACHE=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Database Support&lt;/h3&gt; 
&lt;p&gt;Supported database connectors: &lt;a href=&quot;https://db0.unjs.io/connectors&quot;&gt;https://db0.unjs.io/connectors&lt;/a&gt; &lt;strong&gt;Cloudflare D1 Database&lt;/strong&gt; is recommended.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create D1 database in Cloudflare Worker dashboard&lt;/li&gt; 
 &lt;li&gt;Configure database_id and database_name in wrangler.toml&lt;/li&gt; 
 &lt;li&gt;If wrangler.toml doesn&#39;t exist, rename example.wrangler.toml and modify configurations&lt;/li&gt; 
 &lt;li&gt;Changes will take effect on next deployment&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker Deployment&lt;/h3&gt; 
&lt;p&gt;In project root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also set Environment Variables in &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] Requires Node.js &amp;gt;= 20&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;corepack enable
pnpm i
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding Data Sources&lt;/h3&gt; 
&lt;p&gt;Refer to &lt;code&gt;shared/sources&lt;/code&gt; and &lt;code&gt;server/source&lt;/code&gt;s directories. The project provides complete type definitions and a clean architecture.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add &lt;strong&gt;multi-language support&lt;/strong&gt; (English, Chinese, more to come).&lt;/li&gt; 
 &lt;li&gt;Improve &lt;strong&gt;personalization options&lt;/strong&gt; (category-based news, saved preferences).&lt;/li&gt; 
 &lt;li&gt;Expand &lt;strong&gt;data sources&lt;/strong&gt; to cover global news in multiple languages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;release when ready&lt;/strong&gt;&lt;/em&gt; &lt;img src=&quot;https://testmnbbs.oss-cn-zhangjiakou.aliyuncs.com/pic/20250328172146_rec_.gif?x-oss-process=base_webp&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Feel free to submit pull requests or create issues for feature requests and bug reports.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ourongxing/newsnow/main/LICENSE&quot;&gt;MIT&lt;/a&gt; © ourongxing&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shadps4-emu/shadPS4</title>
      <link>https://github.com/shadps4-emu/shadPS4</link>
      <description>&lt;p&gt;PlayStation 4 emulator for Windows, Linux and macOS written in C++&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;br&gt; &lt;a href=&quot;https://shadps4.net/&quot;&gt;&lt;img src=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/.github/shadps4.png&quot; width=&quot;220&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;b&gt;shadPS4&lt;/b&gt; &lt;br&gt; &lt;/h1&gt; 
&lt;h1 align=&quot;center&quot;&gt; &lt;a href=&quot;https://discord.gg/bFJxfftGW6&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/1080089157554155590?color=5865F2&amp;amp;label=shadPS4%20Discord&amp;amp;logo=Discord&amp;amp;logoColor=white&quot; width=&quot;240&quot;&gt; &lt;/a&gt;&lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/releases/latest&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/shadps4-emu/shadPS4/total.svg?sanitize=true&quot; width=&quot;140&quot;&gt; &lt;/a&gt;&lt;a href=&quot;https://shadps4.net/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/shadPS4-website-8A2BE2&quot; width=&quot;150&quot;&gt; &lt;/a&gt;&lt;a href=&quot;https://x.com/shadps4&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/-Join%20us-black?logo=X&amp;amp;logoColor=white&quot; width=&quot;100&quot;&gt; &lt;/a&gt;&lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/stargazers&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/shadps4-emu/shadPS4&quot; width=&quot;120&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/stargazers&quot;&gt; &lt;/a&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/stargazers&quot;&gt; &lt;/a&gt;&lt;a href=&quot;https://shadps4.net/&quot;&gt; &lt;img src=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/Screenshots/1.png&quot; width=&quot;400&quot;&gt; &lt;img src=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/Screenshots/2.png&quot; width=&quot;400&quot;&gt; &lt;img src=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/Screenshots/3.png&quot; width=&quot;400&quot;&gt; &lt;img src=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/Screenshots/4.png&quot; width=&quot;400&quot;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;https://shadps4.net/&quot;&gt; &lt;h1&gt;General information&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;shadPS4&lt;/strong&gt; is an early &lt;strong&gt;PlayStation 4&lt;/strong&gt; emulator for &lt;strong&gt;Windows&lt;/strong&gt;, &lt;strong&gt;Linux&lt;/strong&gt; and &lt;strong&gt;macOS&lt;/strong&gt; written in C++.&lt;/p&gt; &lt;/a&gt;
&lt;p&gt;&lt;a href=&quot;https://shadps4.net/&quot;&gt;If you encounter problems or have doubts, do not hesitate to look at the &lt;/a&gt;&lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/Quickstart/Quickstart.md&quot;&gt;&lt;strong&gt;Quickstart&lt;/strong&gt;&lt;/a&gt;.&lt;br&gt; To verify that a game works, you can look at &lt;a href=&quot;https://github.com/shadps4-emu/shadps4-game-compatibility&quot;&gt;&lt;strong&gt;shadPS4 Game Compatibility&lt;/strong&gt;&lt;/a&gt;.&lt;br&gt; To discuss shadPS4 development, suggest ideas or to ask for help, join our &lt;a href=&quot;https://discord.gg/bFJxfftGW6&quot;&gt;&lt;strong&gt;Discord server&lt;/strong&gt;&lt;/a&gt;.&lt;br&gt; To get the latest news, go to our &lt;a href=&quot;https://x.com/shadps4&quot;&gt;&lt;strong&gt;X (Twitter)&lt;/strong&gt;&lt;/a&gt; or our &lt;a href=&quot;https://shadps4.net/&quot;&gt;&lt;strong&gt;website&lt;/strong&gt;&lt;/a&gt;.&lt;br&gt; For those who&#39;d like to donate to the project, we now have a &lt;a href=&quot;https://ko-fi.com/shadps4&quot;&gt;&lt;strong&gt;Kofi page&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt; 
&lt;h1&gt;Status&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] shadPS4 is early in development, don&#39;t expect a flawless experience.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Currently, the emulator can successfully run games like &lt;a href=&quot;https://www.youtube.com/watch?v=wC6s0avpQRE&quot;&gt;&lt;strong&gt;Bloodborne&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=-3PA-Xwszts&quot;&gt;&lt;strong&gt;Dark Souls Remastered&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=Al7yz_5nLag&quot;&gt;&lt;strong&gt;Red Dead Redemption&lt;/strong&gt;&lt;/a&gt; and many other games.&lt;/p&gt; 
&lt;h1&gt;Why&lt;/h1&gt; 
&lt;p&gt;This project began as a fun project. Given our limited free time, it may take some time before shadPS4 can run more complex games, but we&#39;re committed to making small, regular updates.&lt;/p&gt; 
&lt;h1&gt;Building&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you want to use shadPS4 to play your games, you don&#39;t have to follow the build instructions, you can simply download the emulator from either the &lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/releases&quot;&gt;&lt;strong&gt;release tab&lt;/strong&gt;&lt;/a&gt; or the &lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/actions&quot;&gt;&lt;strong&gt;action tab&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Windows&lt;/h2&gt; 
&lt;p&gt;Check the build instructions for &lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/building-windows.md&quot;&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Linux&lt;/h2&gt; 
&lt;p&gt;Check the build instructions for &lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/building-linux.md&quot;&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;macOS&lt;/h2&gt; 
&lt;p&gt;Check the build instructions for &lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/building-macos.md&quot;&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] macOS users need at least macOS 15 on Apple Silicon-based Mac devices and at least macOS 14 on Intel-based Mac devices.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Debugging and reporting issues&lt;/h1&gt; 
&lt;p&gt;For more information on how to test, debug and report issues with the emulator or games, read the &lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/documents/Debugging/Debugging.md&quot;&gt;&lt;strong&gt;Debugging documentation&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Keyboard and Mouse Mappings&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Some keyboards may also require you to hold the Fn key to use the F* keys. Mac users should use the Command key instead of Control, and need to use Command+F11 for full screen to avoid conflicting with system key bindings.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Button&lt;/th&gt; 
   &lt;th&gt;Function&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;F10&lt;/td&gt; 
   &lt;td&gt;FPS Counter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ctrl+F10&lt;/td&gt; 
   &lt;td&gt;Video Debug Info&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;F11&lt;/td&gt; 
   &lt;td&gt;Fullscreen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;F12&lt;/td&gt; 
   &lt;td&gt;Trigger RenderDoc Capture&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Xbox and DualShock controllers work out of the box.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Controller button&lt;/th&gt; 
   &lt;th&gt;Keyboard equivalent&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LEFT AXIS UP&lt;/td&gt; 
   &lt;td&gt;W&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LEFT AXIS DOWN&lt;/td&gt; 
   &lt;td&gt;S&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LEFT AXIS LEFT&lt;/td&gt; 
   &lt;td&gt;A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LEFT AXIS RIGHT&lt;/td&gt; 
   &lt;td&gt;D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RIGHT AXIS UP&lt;/td&gt; 
   &lt;td&gt;I&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RIGHT AXIS DOWN&lt;/td&gt; 
   &lt;td&gt;K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RIGHT AXIS LEFT&lt;/td&gt; 
   &lt;td&gt;J&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RIGHT AXIS RIGHT&lt;/td&gt; 
   &lt;td&gt;L&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TRIANGLE&lt;/td&gt; 
   &lt;td&gt;Numpad 8 or C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CIRCLE&lt;/td&gt; 
   &lt;td&gt;Numpad 6 or B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CROSS&lt;/td&gt; 
   &lt;td&gt;Numpad 2 or N&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SQUARE&lt;/td&gt; 
   &lt;td&gt;Numpad 4 or V&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PAD UP&lt;/td&gt; 
   &lt;td&gt;UP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PAD DOWN&lt;/td&gt; 
   &lt;td&gt;DOWN&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PAD LEFT&lt;/td&gt; 
   &lt;td&gt;LEFT&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PAD RIGHT&lt;/td&gt; 
   &lt;td&gt;RIGHT&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OPTIONS&lt;/td&gt; 
   &lt;td&gt;RETURN&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BACK BUTTON / TOUCH PAD&lt;/td&gt; 
   &lt;td&gt;SPACE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;L1&lt;/td&gt; 
   &lt;td&gt;Q&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;R1&lt;/td&gt; 
   &lt;td&gt;U&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;L2&lt;/td&gt; 
   &lt;td&gt;E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;R2&lt;/td&gt; 
   &lt;td&gt;O&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;L3&lt;/td&gt; 
   &lt;td&gt;X&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;R3&lt;/td&gt; 
   &lt;td&gt;M&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Keyboard and mouse inputs can be customized in the settings menu by clicking the Controller button, and further details and help on controls are also found there. Custom bindings are saved per-game. Inputs support up to three keys per binding, mouse buttons, mouse movement mapped to joystick input, and more.&lt;/p&gt; 
&lt;h1&gt;Main team&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/georgemoralis&quot;&gt;&lt;strong&gt;georgemoralis&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raphaelthegreat&quot;&gt;&lt;strong&gt;raphaelthegreat&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/psucien&quot;&gt;&lt;strong&gt;psucien&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/skmp&quot;&gt;&lt;strong&gt;skmp&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wheremyfoodat&quot;&gt;&lt;strong&gt;wheremyfoodat&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raziel1000&quot;&gt;&lt;strong&gt;raziel1000&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/viniciuslrangel&quot;&gt;&lt;strong&gt;viniciuslrangel&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vladmikhalin&quot;&gt;&lt;strong&gt;roamic&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/polybiusproxy&quot;&gt;&lt;strong&gt;poly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/squidbus&quot;&gt;&lt;strong&gt;squidbus&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/baggins183&quot;&gt;&lt;strong&gt;frodo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Logo is done by &lt;a href=&quot;https://github.com/Xphalnos&quot;&gt;&lt;strong&gt;Xphalnos&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;If you want to contribute, please look the &lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/CONTRIBUTING.md&quot;&gt;&lt;strong&gt;CONTRIBUTING.md&lt;/strong&gt;&lt;/a&gt; file.&lt;br&gt; Open a PR and we&#39;ll check it :)&lt;/p&gt; 
&lt;h1&gt;Translations&lt;/h1&gt; 
&lt;p&gt;If you want to translate shadPS4 to your language we use &lt;a href=&quot;https://crowdin.com/project/shadps4-emulator&quot;&gt;&lt;strong&gt;crowdin&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=shadps4-emu/shadPS4&amp;amp;max=15&quot;&gt; &lt;/a&gt; 
&lt;h1&gt;Special Thanks&lt;/h1&gt; 
&lt;p&gt;A few noteworthy teams/projects who&#39;ve helped us along the way are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wheremyfoodat/Panda3DS&quot;&gt;&lt;strong&gt;Panda3DS&lt;/strong&gt;&lt;/a&gt;: A multiplatform 3DS emulator from our co-author wheremyfoodat. They have been incredibly helpful in understanding and solving problems that came up from natively executing the x64 code of PS4 binaries&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/red-prig/fpPS4&quot;&gt;&lt;strong&gt;fpPS4&lt;/strong&gt;&lt;/a&gt;: The fpPS4 team has assisted massively with understanding some of the more complex parts of the PS4 operating system and libraries, by helping with reverse engineering work and research.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;yuzu&lt;/strong&gt;: Our shader compiler has been designed with yuzu&#39;s Hades compiler as a blueprint. This allowed us to focus on the challenges of emulating a modern AMD GPU while having a high-quality optimizing shader compiler implementation as a base.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/OFFTKP/felix86&quot;&gt;&lt;strong&gt;felix86&lt;/strong&gt;&lt;/a&gt;: A new x86-64 → RISC-V Linux userspace emulator&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shadps4-emu/shadPS4/raw/main/LICENSE&quot;&gt;&lt;strong&gt;GPL-2.0 license&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>n8n-io/n8n</title>
      <link>https://github.com/n8n-io/n8n</link>
      <description>&lt;p&gt;Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png&quot; alt=&quot;Banner image&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;n8n - Secure Workflow Automation for Technical Teams&lt;/h1&gt; 
&lt;p&gt;n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png&quot; alt=&quot;n8n.io - Screenshot&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Key Capabilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code When You Need It&lt;/strong&gt;: Write JavaScript/Python, add npm packages, or use the visual interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Native Platform&lt;/strong&gt;: Build AI agent workflows based on LangChain with your own data and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Self-host with our fair-code license or use our &lt;a href=&quot;https://app.n8n.cloud/login&quot;&gt;cloud offering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-Ready&lt;/strong&gt;: Advanced permissions, SSO, and air-gapped deployments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Community&lt;/strong&gt;: 400+ integrations and 900+ ready-to-use &lt;a href=&quot;https://n8n.io/workflows&quot;&gt;templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Try n8n instantly with &lt;a href=&quot;https://docs.n8n.io/hosting/installation/npm/&quot;&gt;npx&lt;/a&gt; (requires &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or deploy with &lt;a href=&quot;https://docs.n8n.io/hosting/installation/docker/&quot;&gt;Docker&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the editor at &lt;a href=&quot;http://localhost:5678&quot;&gt;http://localhost:5678&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;a href=&quot;https://docs.n8n.io&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;a href=&quot;https://n8n.io/integrations&quot;&gt;400+ Integrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href=&quot;https://n8n.io/workflows&quot;&gt;Example Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;a href=&quot;https://docs.n8n.io/langchain/&quot;&gt;AI &amp;amp; LangChain Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 &lt;a href=&quot;https://community.n8n.io&quot;&gt;Community Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href=&quot;https://community.n8n.io/c/tutorials/28&quot;&gt;Community Tutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Need help? Our community forum is the place to get support and connect with other users: &lt;a href=&quot;https://community.n8n.io&quot;&gt;community.n8n.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;n8n is &lt;a href=&quot;https://faircode.io&quot;&gt;fair-code&lt;/a&gt; distributed under the &lt;a href=&quot;https://github.com/n8n-io/n8n/raw/master/LICENSE.md&quot;&gt;Sustainable Use License&lt;/a&gt; and &lt;a href=&quot;https://github.com/n8n-io/n8n/raw/master/LICENSE_EE.md&quot;&gt;n8n Enterprise License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source Available&lt;/strong&gt;: Always visible source code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hostable&lt;/strong&gt;: Deploy anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Add your own nodes and functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;mailto:license@n8n.io&quot;&gt;Enterprise licenses&lt;/a&gt; available for additional features and support.&lt;/p&gt; 
&lt;p&gt;Additional information about the license model can be found in the &lt;a href=&quot;https://docs.n8n.io/reference/license/&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Found a bug 🐛 or have a feature idea ✨? Check our &lt;a href=&quot;https://github.com/n8n-io/n8n/raw/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Join the Team&lt;/h2&gt; 
&lt;p&gt;Want to shape the future of automation? Check out our &lt;a href=&quot;https://n8n.io/careers&quot;&gt;job posts&lt;/a&gt; and join our team!&lt;/p&gt; 
&lt;h2&gt;What does n8n mean?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; It means &quot;nodemation&quot; and is pronounced as n-eight-n.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Long answer:&lt;/strong&gt; &quot;I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. &#39;node-&#39; in the sense that it uses a Node-View and that it uses Node.js and &#39;-mation&#39; for &#39;automation&#39; which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on &#39;n8n&#39;.&quot; - &lt;strong&gt;Jan Oberhauser, Founder and CEO, n8n.io&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>neovim/neovim</title>
      <link>https://github.com/neovim/neovim</link>
      <description>&lt;p&gt;Vim-fork focused on extensibility and usability&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/neovim/neovim.github.io/master/logos/neovim-logo-300x87.png&quot; alt=&quot;Neovim&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://neovim.io/doc/&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://app.element.io/#/room/%23neovim:matrix.org&quot;&gt;Chat&lt;/a&gt;&lt;/p&gt; &lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://scan.coverity.com/projects/2227&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/2227/badge.svg?sanitize=true&quot; alt=&quot;Coverity Scan analysis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/metapackage/neovim&quot;&gt;&lt;img src=&quot;https://repology.org/badge/tiny-repos/neovim.svg?sanitize=true&quot; alt=&quot;Packages&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://buildd.debian.org/neovim&quot;&gt;&lt;img src=&quot;https://badges.debian.net/badges/debian/testing/neovim/version.svg?sanitize=true&quot; alt=&quot;Debian CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/neovim/neovim/releases/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/neovim/neovim/total.svg?maxAge=2592001&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Neovim is a project that seeks to aggressively refactor &lt;a href=&quot;https://www.vim.org/&quot;&gt;Vim&lt;/a&gt; in order to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simplify maintenance and encourage &lt;a href=&quot;https://raw.githubusercontent.com/neovim/neovim/master/CONTRIBUTING.md&quot;&gt;contributions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Split the work between multiple developers&lt;/li&gt; 
 &lt;li&gt;Enable &lt;a href=&quot;https://github.com/neovim/neovim/wiki/Related-projects#gui&quot;&gt;advanced UIs&lt;/a&gt; without modifications to the core&lt;/li&gt; 
 &lt;li&gt;Maximize &lt;a href=&quot;https://neovim.io/doc/user/ui.html&quot;&gt;extensibility&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/neovim/neovim/wiki/Introduction&quot;&gt;Introduction&lt;/a&gt; wiki page and &lt;a href=&quot;https://neovim.io/roadmap/&quot;&gt;Roadmap&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modern &lt;a href=&quot;https://github.com/neovim/neovim/wiki/Related-projects#gui&quot;&gt;GUIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neovim/neovim/wiki/Related-projects#api-clients&quot;&gt;API access&lt;/a&gt; from any language including C/C++, C#, Clojure, D, Elixir, Go, Haskell, Java/Kotlin, JavaScript/Node.js, Julia, Lisp, Lua, Perl, Python, Racket, Ruby, Rust&lt;/li&gt; 
 &lt;li&gt;Embedded, scriptable &lt;a href=&quot;https://neovim.io/doc/user/terminal.html&quot;&gt;terminal emulator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Asynchronous &lt;a href=&quot;https://github.com/neovim/neovim/pull/2247&quot;&gt;job control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neovim/neovim/pull/2506&quot;&gt;Shared data (shada)&lt;/a&gt; among multiple editor instances&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neovim/neovim/pull/3470&quot;&gt;XDG base directories&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;Compatible with most Vim plugins, including Ruby and Python plugins&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://neovim.io/doc/user/vim_diff.html#nvim-features&quot;&gt;&lt;code&gt;:help nvim-features&lt;/code&gt;&lt;/a&gt; for the full list, and &lt;a href=&quot;https://neovim.io/doc/user/news.html&quot;&gt;&lt;code&gt;:help news&lt;/code&gt;&lt;/a&gt; for noteworthy changes in the latest version!&lt;/p&gt; 
&lt;h2&gt;Install from package&lt;/h2&gt; 
&lt;p&gt;Pre-built packages for Windows, macOS, and Linux are found on the &lt;a href=&quot;https://github.com/neovim/neovim/releases/&quot;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/neovim/neovim/master/INSTALL.md#install-from-package&quot;&gt;Managed packages&lt;/a&gt; are in &lt;a href=&quot;https://formulae.brew.sh/formula/neovim&quot;&gt;Homebrew&lt;/a&gt;, &lt;a href=&quot;https://packages.debian.org/testing/neovim&quot;&gt;Debian&lt;/a&gt;, &lt;a href=&quot;https://packages.ubuntu.com/search?keywords=neovim&quot;&gt;Ubuntu&lt;/a&gt;, &lt;a href=&quot;https://packages.fedoraproject.org/pkgs/neovim/neovim/&quot;&gt;Fedora&lt;/a&gt;, &lt;a href=&quot;https://www.archlinux.org/packages/?q=neovim&quot;&gt;Arch Linux&lt;/a&gt;, &lt;a href=&quot;https://voidlinux.org/packages/?arch=x86_64&amp;amp;q=neovim&quot;&gt;Void Linux&lt;/a&gt;, &lt;a href=&quot;https://packages.gentoo.org/packages/app-editors/neovim&quot;&gt;Gentoo&lt;/a&gt;, and more!&lt;/p&gt; 
&lt;h2&gt;Install from source&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/neovim/neovim/master/BUILD.md&quot;&gt;BUILD.md&lt;/a&gt; and &lt;a href=&quot;https://neovim.io/doc/user/support.html#supported-platforms&quot;&gt;supported platforms&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;The build is CMake-based, but a Makefile is provided as a convenience. After installing the dependencies, run the following command.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make CMAKE_BUILD_TYPE=RelWithDebInfo
sudo make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install to a non-default location:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make CMAKE_BUILD_TYPE=RelWithDebInfo CMAKE_INSTALL_PREFIX=/full/path/
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CMake hints for inspecting the build:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;cmake --build build --target help&lt;/code&gt; lists all build targets.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;build/CMakeCache.txt&lt;/code&gt; (or &lt;code&gt;cmake -LAH build/&lt;/code&gt;) contains the resolved values of all CMake variables.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;build/compile_commands.json&lt;/code&gt; shows the full compiler invocations for each translation unit.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Transitioning from Vim&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://neovim.io/doc/user/nvim.html#nvim-from-vim&quot;&gt;&lt;code&gt;:help nvim-from-vim&lt;/code&gt;&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;h2&gt;Project layout&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;├─ cmake/           CMake utils
├─ cmake.config/    CMake defines
├─ cmake.deps/      subproject to fetch and build dependencies (optional)
├─ runtime/         plugins and docs
├─ src/nvim/        application source code (see src/nvim/README.md)
│  ├─ api/          API subsystem
│  ├─ eval/         Vimscript subsystem
│  ├─ event/        event-loop subsystem
│  ├─ generators/   code generation (pre-compilation)
│  ├─ lib/          generic data structures
│  ├─ lua/          Lua subsystem
│  ├─ msgpack_rpc/  RPC subsystem
│  ├─ os/           low-level platform code
│  └─ tui/          built-in UI
└─ test/            tests (see test/README.md)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Neovim contributions since &lt;a href=&quot;https://github.com/neovim/neovim/commit/b17d9691a24099c9210289f16afb1a498a89d803&quot;&gt;b17d96&lt;/a&gt; are licensed under the Apache 2.0 license, except for contributions copied from Vim (identified by the &lt;code&gt;vim-patch&lt;/code&gt; token). See LICENSE for details.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Vim is Charityware.  You can use and copy it as much as you like, but you are
encouraged to make a donation for needy children in Uganda.  Please see the
kcc section of the vim docs or visit the ICCF web site, available at these URLs:

        https://iccf-holland.org/
        https://www.vim.org/iccf/
        https://www.iccf.nl/

You can also sponsor the development of Vim.  Vim sponsors can vote for
features.  The money goes to Uganda anyway.
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- vim: set tw=80: --&gt;</description>
    </item>
    
    <item>
      <title>punkpeye/awesome-mcp-servers</title>
      <link>https://github.com/punkpeye/awesome-mcp-servers</link>
      <description>&lt;p&gt;A collection of MCP servers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome MCP Servers &lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/README.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/English-Click-yellow&quot; alt=&quot;English&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/README-zh.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B-orange&quot; alt=&quot;中文文档&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/README-ja.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E6%97%A5%E6%9C%AC%E8%AA%9E-%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF-%E9%9D%92&quot; alt=&quot;日本語&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://glama.ai/mcp/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1312302100125843476?logo=discord&amp;amp;label=discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.reddit.com/r/mcp/&quot;&gt;&lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/mcp?style=flat&amp;amp;logo=reddit&amp;amp;label=subreddit&quot; alt=&quot;Subreddit subscribers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A curated list of awesome Model Context Protocol (MCP) servers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#what-is-mcp&quot;&gt;What is MCP?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#clients&quot;&gt;Clients&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#tutorials&quot;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#server-implementations&quot;&gt;Server Implementations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#frameworks&quot;&gt;Frameworks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#utilities&quot;&gt;Utilities&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#tips-and-tricks&quot;&gt;Tips &amp;amp; Tricks&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is MCP?&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://modelcontextprotocol.io/&quot;&gt;MCP&lt;/a&gt; is an open protocol that enables AI models to securely interact with local and remote resources through standardized server implementations. This list focuses on production-ready and experimental MCP servers that extend AI capabilities through file access, database connections, API integrations, and other contextual services.&lt;/p&gt; 
&lt;h2&gt;Clients&lt;/h2&gt; 
&lt;p&gt;Checkout &lt;a href=&quot;https://github.com/punkpeye/awesome-mcp-clients/&quot;&gt;awesome-mcp-clients&lt;/a&gt; and &lt;a href=&quot;https://glama.ai/mcp/clients&quot;&gt;glama.ai/mcp/clients&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] &lt;a href=&quot;https://glama.ai/chat&quot;&gt;Glama Chat&lt;/a&gt; is a multi-modal AI client with MCP support &amp;amp; &lt;a href=&quot;https://glama.ai/gateway&quot;&gt;AI gateway&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Tutorials&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glama.ai/blog/2024-11-25-model-context-protocol-quickstart&quot;&gt;Model Context Protocol (MCP) Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/wxCCzo9dGj0&quot;&gt;Setup Claude Desktop App to Use a SQLite Database&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/mcp&quot;&gt;r/mcp Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glama.ai/mcp/discord&quot;&gt;Discord Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Legend&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎖️ – official implementation&lt;/li&gt; 
 &lt;li&gt;programming language 
  &lt;ul&gt; 
   &lt;li&gt;🐍 – Python codebase&lt;/li&gt; 
   &lt;li&gt;📇 – TypeScript codebase&lt;/li&gt; 
   &lt;li&gt;🏎️ – Go codebase&lt;/li&gt; 
   &lt;li&gt;🦀 – Rust codebase&lt;/li&gt; 
   &lt;li&gt;#️⃣ - C# Codebase&lt;/li&gt; 
   &lt;li&gt;☕ - Java codebase&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;scope 
  &lt;ul&gt; 
   &lt;li&gt;☁️ - Cloud Service&lt;/li&gt; 
   &lt;li&gt;🏠 - Local Service&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;operating system 
  &lt;ul&gt; 
   &lt;li&gt;🍎 – For macOS&lt;/li&gt; 
   &lt;li&gt;🪟 – For Windows&lt;/li&gt; 
   &lt;li&gt;🐧 - For Linux&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Confused about Local 🏠 vs Cloud ☁️?&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use local when MCP server is talking to a locally installed software, e.g. taking control over Chrome browser.&lt;/li&gt; 
  &lt;li&gt;Use network when MCP server is talking to remote APIs, e.g. weather API.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Server Implementations&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We now have a &lt;a href=&quot;https://glama.ai/mcp/servers&quot;&gt;web-based directory&lt;/a&gt; that is synced with the repository.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;📂 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#browser-automation&quot;&gt;Browser Automation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎨 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#art-and-culture&quot;&gt;Art &amp;amp; Culture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;☁️ - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#cloud-platforms&quot;&gt;Cloud Platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🖥️ - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#command-line&quot;&gt;Command Line&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#communication&quot;&gt;Communication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👤 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#customer-data-platforms&quot;&gt;Customer Data Platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🗄️ - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#databases&quot;&gt;Databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🛠️ - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#developer-tools&quot;&gt;Developer Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📂 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#file-systems&quot;&gt;File Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💰 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#finance--fintech&quot;&gt;Finance &amp;amp; Fintech&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎮 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#gaming&quot;&gt;Gaming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🧠 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#knowledge--memory&quot;&gt;Knowledge &amp;amp; Memory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🗺️ - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#location-services&quot;&gt;Location Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎯 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#marketing&quot;&gt;Marketing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📊 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#monitoring&quot;&gt;Monitoring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔎 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#search&quot;&gt;Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔒 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🏃 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#sports&quot;&gt;Sports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🚆 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#travel-and-transportation&quot;&gt;Travel &amp;amp; Transportation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔄 - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#version-control&quot;&gt;Version Control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🛠️ - &lt;a href=&quot;https://raw.githubusercontent.com/punkpeye/awesome-mcp-servers/main/#other-tools-and-integrations&quot;&gt;Other Tools and Integrations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📂 &lt;a name=&quot;browser-automation&quot;&gt;&lt;/a&gt;Browser Automation&lt;/h3&gt; 
&lt;p&gt;Web content access and automation capabilities. Enables searching, scraping, and processing web content in AI-friendly formats.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blackwhite084/playwright-plus-python-mcp&quot;&gt;@blackwhite084/playwright-plus-python-mcp&lt;/a&gt; 🌐 - An MCP python server using Playwright for browser automation,more suitable for llm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/executeautomation/mcp-playwright&quot;&gt;@executeautomation/playwright-mcp-server&lt;/a&gt; 🌐⚡️ - An MCP server using Playwright for browser automation and webscrapping&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Automata-Labs-team/MCP-Server-Playwright&quot;&gt;@automatalabs/mcp-server-playwright&lt;/a&gt; 🌐 🖱️ - An MCP server for browser automation using Playwright&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer&quot;&gt;@modelcontextprotocol/server-puppeteer&lt;/a&gt; 📇 🏠 - Browser automation for web scraping and interaction&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kimtaeyoon83/mcp-server-youtube-transcript&quot;&gt;@kimtaeyoon83/mcp-server-youtube-transcript&lt;/a&gt; 📇 ☁️ - Fetch YouTube subtitles and transcripts for AI analysis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/recursechat/mcp-server-apple-shortcuts&quot;&gt;@recursechat/mcp-server-apple-shortcuts&lt;/a&gt; 📇 🏠 🍎 - An MCP Server Integration with Apple Shortcuts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kimtth/mcp-aoai-web-browsing&quot;&gt;@kimtth/mcp-aoai-web-browsing&lt;/a&gt; 🐍 🏠 - A &lt;code&gt;minimal&lt;/code&gt; server/client MCP implementation using Azure OpenAI and Playwright.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pskill9/web-search&quot;&gt;@pskill9/web-search&lt;/a&gt; 📇 🏠 - An MCP server that enables free web searching using Google search results, with no API keys required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/co-browser/browser-use-mcp-server&quot;&gt;@co-browser/browser-use-mcp-server&lt;/a&gt; 🌐🔮 - browser-use packaged as an MCP server with SSE transport. includes a dockerfile to run chromium in docker + a vnc server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/34892002/bilibili-mcp-js&quot;&gt;@34892002/bilibili-mcp-js&lt;/a&gt; 📇 🏠 - A MCP server that supports searching for Bilibili content. Provides LangChain integration examples and test scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getrupt/ashra-mcp&quot;&gt;@getrupt/ashra-mcp&lt;/a&gt; 🐍 🏠 - Extract structured data from any website. Just prompt and get JSON.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎨 &lt;a name=&quot;art-and-culture&quot;&gt;&lt;/a&gt;Art &amp;amp; Culture&lt;/h3&gt; 
&lt;p&gt;Access and explore art collections, cultural heritage, and museum databases. Enables AI models to search and analyze artistic and cultural content.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/burningion/video-editing-mcp&quot;&gt;burningion/video-editing-mcp&lt;/a&gt; 📹🎬 - Add, Analyze, Search, and Generate Video Edits from your Video Jungle Collection&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/r-huijts/rijksmuseum-mcp&quot;&gt;r-huijts/rijksmuseum-mcp&lt;/a&gt; 📇 ☁️ - Rijksmuseum API integration for artwork search, details, and collections&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yuna0x0/anilist-mcp&quot;&gt;yuna0x0/anilist-mcp&lt;/a&gt; 📇 ☁️ - A MCP server integrating AniList API for anime and manga information&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;☁️ &lt;a name=&quot;cloud-platforms&quot;&gt;&lt;/a&gt;Cloud Platforms&lt;/h3&gt; 
&lt;p&gt;Cloud platform service integration. Enables management and interaction with cloud infrastructure and services.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cloudflare/mcp-server-cloudflare&quot;&gt;Cloudflare MCP Server&lt;/a&gt; 🎖️ 📇 ☁️ - Integration with Cloudflare services including Workers, KV, R2, and D1&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexei-led/aws-mcp-server&quot;&gt;alexei-led/aws-mcp-server&lt;/a&gt; 🐍 ☁️ - A lightweight but powerful server that enables AI assistants to execute AWS CLI commands, use Unix pipes, and apply prompt templates for common AWS tasks in a safe Docker environment with multi-architecture support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/strowk/mcp-k8s-go&quot;&gt;Kubernetes MCP Server&lt;/a&gt; - 🏎️ ☁️/🏠 Kubernetes cluster operations through MCP&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flux159/mcp-server-kubernetes&quot;&gt;@flux159/mcp-server-kubernetes&lt;/a&gt; - 📇 ☁️/🏠 Typescript implementation of Kubernetes cluster operations for pods, deployments, services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/manusa/kubernetes-mcp-server&quot;&gt;@manusa/Kubernetes MCP Server&lt;/a&gt; - 🏎️ 🏠 A powerful Kubernetes MCP server with additional support for OpenShift. Besides providing CRUD operations for &lt;strong&gt;any&lt;/strong&gt; Kubernetes resource, this server provides specialized tools to interact with your cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wenhuwang/mcp-k8s-eye&quot;&gt;wenhuwang/mcp-k8s-eye&lt;/a&gt; 🏎️ ☁️/🏠 MCP Server for kubernetes management, and analyze your cluster, application health&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnneerdael/netskope-mcp&quot;&gt;johnneerdael/netskope-mcp&lt;/a&gt; 🔒 ☁️ - An MCP to give access to all Netskope Private Access components within a Netskope Private Access environments including detailed setup information and LLM examples on usage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nwiizo/tfmcp&quot;&gt;nwiizo/tfmcp&lt;/a&gt; - 🦀 🏠 - A Terraform MCP server allowing AI assistants to manage and operate Terraform environments, enabling reading configurations, analyzing plans, applying configurations, and managing Terraform state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🖥️ &lt;a name=&quot;command-line&quot;&gt;&lt;/a&gt;Command Line&lt;/h3&gt; 
&lt;p&gt;Run commands, capture output and otherwise interact with shells and command line tools.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ferrislucas/iterm-mcp&quot;&gt;ferrislucas/iterm-mcp&lt;/a&gt; 🖥️ 🛠️ 💬 - A Model Context Protocol server that provides access to iTerm. You can run commands and ask questions about what you see in the iTerm terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/g0t4/mcp-server-commands&quot;&gt;g0t4/mcp-server-commands&lt;/a&gt; 📇 🏠 - Run any command with &lt;code&gt;run_command&lt;/code&gt; and &lt;code&gt;run_script&lt;/code&gt; tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MladenSU/cli-mcp-server&quot;&gt;MladenSU/cli-mcp-server&lt;/a&gt; 🐍 🏠 - Command line interface with secure execution and customizable security policies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tumf/mcp-shell-server&quot;&gt;tumf/mcp-shell-server&lt;/a&gt; A secure shell command execution server implementing the Model Context Protocol (MCP)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 &lt;a name=&quot;communication&quot;&gt;&lt;/a&gt;Communication&lt;/h3&gt; 
&lt;p&gt;Integration with communication platforms for message management and channel operations. Enables AI models to interact with team communication tools.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zcaceres/gtasks-mcp&quot;&gt;zcaceres/gtasks-mcp&lt;/a&gt; - 📇 ☁️ - An MCP server to Manage Google Tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hannesrudolph/imessage-query-fastmcp-mcp-server&quot;&gt;hannesrudolph/imessage-query-fastmcp-mcp-server&lt;/a&gt; 🐍 🏠 🍎 - An MCP server that provides safe access to your iMessage database through Model Context Protocol (MCP), enabling LLMs to query and analyze iMessage conversations with proper phone number validation and attachment handling&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/slack&quot;&gt;@modelcontextprotocol/server-slack&lt;/a&gt; 📇 ☁️ - Slack workspace integration for channel management and messaging&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/keturiosakys/bluesky-context-server&quot;&gt;@modelcontextprotocol/server-bluesky&lt;/a&gt; 📇 ☁️ - Bluesky instance integration for querying and interaction&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MarkusPfundstein/mcp-gsuite&quot;&gt;MarkusPfundstein/mcp-gsuite&lt;/a&gt; - 🐍 ☁️ - Integration with gmail and Google Calendar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adhikasp/mcp-twikit&quot;&gt;adhikasp/mcp-twikit&lt;/a&gt; 🐍 ☁️ - Interact with Twitter search and timeline&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gotoolkits/mcp-wecombot-server.git&quot;&gt;gotoolkits/wecombot&lt;/a&gt; - 🚀 ☁️ - An MCP server application that sends various types of messages to the WeCom group robot.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AbdelStark/nostr-mcp&quot;&gt;AbdelStark/nostr-mcp&lt;/a&gt; - 🌐 ☁️ - A Nostr MCP server that allows to interact with Nostr, enabling posting notes, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/elie222/inbox-zero/tree/main/apps/mcp-server&quot;&gt;elie222/inbox-zero&lt;/a&gt; - 🐍 ☁️ - An MCP server for Inbox Zero. Adds functionality on top of Gmail like finding out which emails you need to reply to or need to follow up on.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/carterlasalle/mac_messages_mcp&quot;&gt;carterlasalle/mac_messages_mcp&lt;/a&gt; 🏠 🍎 🚀 - An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sawa-zen/vrchat-mcp&quot;&gt;sawa-zen/vrchat-mcp&lt;/a&gt; - 📇 🏠 This is an MCP server for interacting with the VRChat API. You can retrieve information about friends, worlds, avatars, and more in VRChat.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/arpitbatra123/mcp-googletasks&quot;&gt;arpitbatra123/mcp-googletasks&lt;/a&gt; - 📇 ☁️ - An MCP server to interface with the Google Tasks API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;👤 &lt;a name=&quot;customer-data-platforms&quot;&gt;&lt;/a&gt;Customer Data Platforms&lt;/h3&gt; 
&lt;p&gt;Provides access to customer profiles inside of customer data platforms&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sergehuber/inoyu-mcp-unomi-server&quot;&gt;sergehuber/inoyu-mcp-unomi-server&lt;/a&gt; 📇 ☁️ - An MCP server to access and updates profiles on an Apache Unomi CDP server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OpenDataMCP/OpenDataMCP&quot;&gt;OpenDataMCP/OpenDataMCP&lt;/a&gt; 🐍 ☁️ - Connect any Open Data to any LLM with Model Context Protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tinybirdco/mcp-tinybird&quot;&gt;tinybirdco/mcp-tinybird&lt;/a&gt; 🐍 ☁️ - An MCP server to interact with a Tinybird Workspace from any MCP client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iaptic/mcp-server-iaptic&quot;&gt;@iaptic/mcp-server-iaptic&lt;/a&gt; 🎖️ 📇 ☁️ - Connect with &lt;a href=&quot;https://www.iaptic.com&quot;&gt;iaptic&lt;/a&gt; to ask about your Customer Purchases, Transaction data and App Revenue statistics.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🗄️ &lt;a name=&quot;databases&quot;&gt;&lt;/a&gt;Databases&lt;/h3&gt; 
&lt;p&gt;Secure database access with schema inspection capabilities. Enables querying and analyzing data with configurable security controls including read-only access.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aliyun/alibabacloud-tablestore-mcp-server&quot;&gt;aliyun/alibabacloud-tablestore-mcp-server&lt;/a&gt; ☕ 🐍 ☁️ - MCP service for Tablestore, features include adding documents, semantic search for documents based on vectors and scalars, RAG-friendly, and serverless.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cr7258/elasticsearch-mcp-server&quot;&gt;cr7258/elasticsearch-mcp-server&lt;/a&gt; 🐍 🏠 - MCP Server implementation that provides Elasticsearch interaction&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/domdomegg/airtable-mcp-server&quot;&gt;domdomegg/airtable-mcp-server&lt;/a&gt; 📇 🏠 - Airtable database integration with schema inspection, read and write capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rashidazarang/airtable-mcp&quot;&gt;rashidazarang/airtable-mcp&lt;/a&gt; 🐍 ☁️ - Connect AI tools directly to Airtable. Query, create, update, and delete records using natural language. Features include base management, table operations, schema manipulation, record filtering, and data migration through a standardized MCP interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LucasHild/mcp-server-bigquery&quot;&gt;LucasHild/mcp-server-bigquery&lt;/a&gt; 🐍 ☁️ - BigQuery database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/c4pt0r/mcp-server-tidb&quot;&gt;c4pt0r/mcp-server-tidb&lt;/a&gt; 🐍 ☁️ - TiDB database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tradercjz/dolphindb-mcp-server&quot;&gt;tradercjz/dolphindb-mcp-server&lt;/a&gt; 🐍 ☁️ - TDolphinDB database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ergut/mcp-bigquery-server&quot;&gt;ergut/mcp-bigquery-server&lt;/a&gt; 📇 ☁️ - Server implementation for Google BigQuery integration that enables direct BigQuery database access and querying capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ClickHouse/mcp-clickhouse&quot;&gt;ClickHouse/mcp-clickhouse&lt;/a&gt; 🐍 ☁️ - ClickHouse database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stack.convex.dev/convex-mcp-server&quot;&gt;get-convex/convex-backend&lt;/a&gt; 📇 ☁️ - Convex database integration to introspect tables, functions, and run oneoff queries (&lt;a href=&quot;https://github.com/get-convex/convex-backend/raw/main/npm-packages/convex/src/cli/mcp.ts&quot;&gt;Source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gannonh/firebase-mcp&quot;&gt;@gannonh/firebase-mcp&lt;/a&gt; 🔥 ⛅️ - Firebase services including Auth, Firestore and Storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jovezhong/mcp-timeplus&quot;&gt;jovezhong/mcp-timeplus&lt;/a&gt; 🐍 ☁️ - MCP server for Apache Kafka and Timeplus. Able to list Kafka topics, poll Kafka messages, save Kafka data locally and query streaming data with SQL via Timeplus&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fireproof-storage/mcp-database-server&quot;&gt;@fireproof-storage/mcp-database-server&lt;/a&gt; 📇 ☁️ - Fireproof ledger database with multi-user sync&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/designcomputer/mysql_mcp_server&quot;&gt;designcomputer/mysql_mcp_server&lt;/a&gt; 🐍 🏠 - MySQL database integration with configurable access controls, schema inspection, and comprehensive security guidelines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/f4ww4z/mcp-mysql-server&quot;&gt;f4ww4z/mcp-mysql-server&lt;/a&gt; 🐍 🏠 - Node.js-based MySQL database integration that provides secure MySQL database operations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FreePeak/db-mcp-server&quot;&gt;FreePeak/db-mcp-server&lt;/a&gt; 🏎️ 🏠 – A high-performance multi-database MCP server built with Golang, supporting MySQL &amp;amp; PostgreSQL (NoSQL coming soon). Includes built-in tools for query execution, transaction management, schema exploration, query building, and performance analysis, with seamless Cursor integration for enhanced database workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/postgres&quot;&gt;@modelcontextprotocol/server-postgres&lt;/a&gt; 📇 🏠 - PostgreSQL database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite&quot;&gt;@modelcontextprotocol/server-sqlite&lt;/a&gt; 🐍 🏠 - SQLite database operations with built-in analysis features&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joshuarileydev/supabase&quot;&gt;@joshuarileydev/supabase-mcp-server&lt;/a&gt; - Supabase MCP Server for managing and creating projects and organisations in Supabase&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexander-zuev/supabase-mcp-server&quot;&gt;@alexanderzuev/supabase-mcp-server&lt;/a&gt; - Supabase MCP Server with support for SQL query execution and database exploration tools&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ktanaka101/mcp-server-duckdb&quot;&gt;ktanaka101/mcp-server-duckdb&lt;/a&gt; 🐍 🏠 - DuckDB database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Dataring-engineering/mcp-server-trino&quot;&gt;Dataring-engineering/mcp-server-trino&lt;/a&gt; 🐍 ☁️ - Trino MCP Server to query and access data from Trino Clusters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/memgraph/mcp-memgraph&quot;&gt;memgraph/mcp-memgraph&lt;/a&gt; 🐍 🏠 - Memgraph MCP Server - includes a tool to run a query against Memgraph and a schema resource.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/furey/mongodb-lens&quot;&gt;furey/mongodb-lens&lt;/a&gt; 📇 🏠 - MongoDB Lens: Full Featured MCP Server for MongoDB Databases&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/QuantGeekDev/mongo-mcp&quot;&gt;QuantGeekDev/mongo-mcp&lt;/a&gt; 📇 🏠 - MongoDB integration that enables LLMs to interact directly with databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kiliczsh/mcp-mongo-server&quot;&gt;kiliczsh/mcp-mongo-server&lt;/a&gt; 📇 🏠 - A Model Context Protocol Server for MongoDB&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tinybirdco/mcp-tinybird&quot;&gt;tinybirdco/mcp-tinybird&lt;/a&gt; 🐍 ☁️ - Tinybird integration with query and API capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KashiwaByte/vikingdb-mcp-server&quot;&gt;KashiwaByte/vikingdb-mcp-server&lt;/a&gt; 🐍 ☁️ - VikingDB integration with collection and index introduction, vector store and search capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neo4j-contrib/mcp-neo4j&quot;&gt;neo4j-contrib/mcp-neo4j&lt;/a&gt; 🐍 🏠 - Model Context Protocol with Neo4j&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/niledatabase/nile-mcp-server&quot;&gt;niledatabase/nile-mcp-server&lt;/a&gt; MCP server for Nile&#39;s Postgres platform - Manage and query Postgres databases, tenants, users, auth using LLMs&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isaacwasserman/mcp-snowflake-server&quot;&gt;isaacwasserman/mcp-snowflake-server&lt;/a&gt; 🐍 ☁️ - Snowflake integration implementing read and (optional) write operations as well as insight tracking&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hannesrudolph/sqlite-explorer-fastmcp-mcp-server&quot;&gt;hannesrudolph/sqlite-explorer-fastmcp-mcp-server&lt;/a&gt; 🐍 🏠 - An MCP server that provides safe, read-only access to SQLite databases through Model Context Protocol (MCP). This server is built with the FastMCP framework, which enables LLMs to explore and query SQLite databases with built-in safety features and query validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sirmews/mcp-pinecone&quot;&gt;sirmews/mcp-pinecone&lt;/a&gt; 🐍 ☁️ - Pinecone integration with vector search capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/runekaagaard/mcp-alchemy&quot;&gt;runekaagaard/mcp-alchemy&lt;/a&gt; 🐍 🏠 - Universal SQLAlchemy-based database integration supporting PostgreSQL, MySQL, MariaDB, SQLite, Oracle, MS SQL Server and many more databases. Features schema and relationship inspection, and large dataset analysis capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jdbc&quot;&gt;mcp-server-jdbc&lt;/a&gt; ☕ 🏠 - Connect to any JDBC-compatible database and query, insert, update, delete, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pab1it0/adx-mcp-server&quot;&gt;pab1it0/adx-mcp-server&lt;/a&gt; 🐍 ☁️ - Query and analyze Azure Data Explorer databases&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pab1it0/prometheus-mcp-server&quot;&gt;pab1it0/prometheus-mcp-server&lt;/a&gt; 🐍 ☁️ - Query and analyze Prometheus, open-source monitoring system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neondatabase/mcp-server-neon&quot;&gt;neondatabase/mcp-server-neon&lt;/a&gt; 📇 ☁️ — An MCP Server for creating and managing Postgres databases using Neon Serverless Postgres&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/XGenerationLab/xiyan_mcp_server&quot;&gt;XGenerationLab/xiyan_mcp_server&lt;/a&gt; 📇 ☁️ — An MCP server that supports fetching data from a database using natural language queries, powered by XiyanSQL as the text-to-SQL LLM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bytebase/dbhub&quot;&gt;bytebase/dbhub&lt;/a&gt; 📇 🏠 – Universal database MCP server supporting mainstream databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GreptimeTeam/greptimedb-mcp-server&quot;&gt;GreptimeTeam/greptimedb-mcp-server&lt;/a&gt; 🐍 🏠 - MCP Server for querying GreptimeDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/idoru/influxdb-mcp-server&quot;&gt;idoru/influxdb-mcp-server&lt;/a&gt; 📇 ☁️ 🏠 - Run queries against InfluxDB OSS API v2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xing5/mcp-google-sheets&quot;&gt;xing5/mcp-google-sheets&lt;/a&gt; 🐍 ☁️ - A Model Context Protocol server for interacting with Google Sheets. This server provides tools to create, read, update, and manage spreadsheets through the Google Sheets API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qdrant/mcp-server-qdrant&quot;&gt;qdrant/mcp-server-qdrant&lt;/a&gt; 🐍 🏠 - A Qdrant MCP server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 &lt;a name=&quot;developer-tools&quot;&gt;&lt;/a&gt;Developer Tools&lt;/h3&gt; 
&lt;p&gt;Tools and integrations that enhance the development workflow and environment management.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/21st-dev/magic-mcp&quot;&gt;21st-dev/Magic-MCP&lt;/a&gt; - Create crafted UI components inspired by the best 21st.dev design engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/comet-ml/opik-mcp&quot;&gt;Coment-ML/Opik-MCP&lt;/a&gt; 🎖️ 📇 ☁️ 🏠 - Talk to your LLM observability, traces and monitoring captured by Opik using natural language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GLips/Figma-Context-MCP&quot;&gt;GLips/Figma-Context-MCP&lt;/a&gt; 📇 🏠 - Provide coding agents direct access to Figma data to help them one-shot design implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/QuantGeekDev/docker-mcp&quot;&gt;QuantGeekDev/docker-mcp&lt;/a&gt; 🏎️ 🏠 - Docker container management and operations through MCP&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zcaceres/fetch-mcp&quot;&gt;zcaceres/fetch-mcp&lt;/a&gt; 📇 🏠 - An MCP server to flexibly fetch JSON, text, and HTML data&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/r-huijts/xcode-mcp-server&quot;&gt;r-huijts/xcode-mcp-server&lt;/a&gt; 📇 🏠 🍎 - Xcode integration for project management, file operations, and build automation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/snaggle-ai/openapi-mcp-server&quot;&gt;snaggle-ai/openapi-mcp-server&lt;/a&gt; 🏎️ 🏠 - Connect any HTTP/REST API server using an Open API spec (v3)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JetBrains/mcpProxy&quot;&gt;jetbrains/mcpProxy&lt;/a&gt; 🎖️ 📇 🏠 - Connect to JetBrains IDE&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tumf/mcp-text-editor&quot;&gt;tumf/mcp-text-editor&lt;/a&gt; 🐍 🏠 - A line-oriented text file editor. Optimized for LLM tools with efficient partial file access to minimize token usage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JoshuaRileyDev/simulator-mcp-server&quot;&gt;@joshuarileydev/simulator-mcp-server&lt;/a&gt; 📇 🏠 - An MCP server to control iOS Simulators&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JoshuaRileyDev/app-store-connect-mcp-server&quot;&gt;@joshuarileydev/app-store-connect-mcp-server&lt;/a&gt; 📇 🏠 - An MCP server to communicate with the App Store Connect API for iOS Developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sammcj/mcp-package-version&quot;&gt;@sammcj/mcp-package-version&lt;/a&gt; 📇 🏠 - An MCP Server to help LLMs suggest the latest stable package versions when writing code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delano/postman-mcp-server&quot;&gt;@delano/postman-mcp-server&lt;/a&gt; 📇 ☁️ - Interact with &lt;a href=&quot;https://www.postman.com/postman/postman-public-workspace/&quot;&gt;Postman API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vivekVells/mcp-pandoc&quot;&gt;@vivekvells/mcp-pandoc&lt;/a&gt; 🗄️ 🚀 - MCP server for seamless document format conversion using Pandoc, supporting Markdown, HTML, PDF, DOCX (.docx), csv and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pskill9/website-downloader&quot;&gt;@pskill9/website-downloader&lt;/a&gt; 🗄️ 🚀 - This MCP server provides a tool to download entire websites using wget. It preserves the website structure and converts links to work locally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lamemind/mcp-server-multiverse&quot;&gt;@lamemind/mcp-server-multiverse&lt;/a&gt; 📇 🏠 🛠️ - A middleware server that enables multiple isolated instances of the same MCP servers to coexist independently with unique namespaces and configurations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/j4c0bs/mcp-server-sql-analyzer&quot;&gt;@j4c0bs/mcp-server-sql-analyzer&lt;/a&gt; 🐍 - MCP server that provides SQL analysis, linting, and dialect conversion using &lt;a href=&quot;https://github.com/tobymao/sqlglot&quot;&gt;SQLGlot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/haris-musa/excel-mcp-server&quot;&gt;@haris-musa/excel-mcp-server&lt;/a&gt; 🐍 🏠 - An Excel manipulation server providing workbook creation, data operations, formatting, and advanced features (charts, pivot tables, formulae).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ShenghaiWang/xcodebuild&quot;&gt;xcodebuild&lt;/a&gt; 🍎 Build iOS Xcode workspace/project and feed back errors to llm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasonjmcghee/claude-debugs-for-you&quot;&gt;@jasonjmcghee/claude-debugs-for-you&lt;/a&gt; 📇 🏠 - An MCP Server and VS Code Extension which enables (language agnostic) automatic debugging via breakpoints and expression evaluation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jktfe/serveMyAPI&quot;&gt;@Jktfe/serveMyAPI&lt;/a&gt; 📇 🏠 🍎 - A personal MCP (Model Context Protocol) server for securely storing and accessing API keys across projects using the macOS Keychain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xzq-xu/jvm-mcp-server&quot;&gt;@xzq.xu/jvm-mcp-server&lt;/a&gt; 📇 🏠 - An implementation project of a JVM-based MCP (Model Context Protocol) server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangkyeongmo/mcp-server-apache-airflow&quot;&gt;@yangkyeongmo@/mcp-server-apache-airflow&lt;/a&gt; 🐍 🏠 - MCP server that connects to &lt;a href=&quot;https://airflow.apache.org/&quot;&gt;Apache Airflow&lt;/a&gt; using official client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperb1iss/droidmind&quot;&gt;hyperb1iss/droidmind&lt;/a&gt; 🐍 🏠 - Control Android devices with AI through MCP, enabling device control, debugging, system analysis, and UI automation with a comprehensive security framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Rootly-AI-Labs/Rootly-MCP-server&quot;&gt;Rootly-AI-Labs/Rootly-MCP-server&lt;/a&gt; 🎖️🐍☁️🍎 - MCP server for the incident management platform &lt;a href=&quot;https://rootly.com/&quot;&gt;Rootly&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YuChenSSR/mindmap-mcp-server&quot;&gt;YuChenSSR/mindmap-mcp-server&lt;/a&gt; 🐍 🏠 - A Model Context Protocol (MCP) server for generating a beautiful interactive mindmap.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SDGLBL/mcp-claude-code&quot;&gt;SDGLBL/mcp-claude-code&lt;/a&gt; 🐍 🏠 - An implementation of Claude Code capabilities using MCP, enabling AI code understanding, modification, and project analysis with comprehensive tool support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gofireflyio/firefly-mcp&quot;&gt;gofireflyio/firefly-mcp&lt;/a&gt; 🎖️ 📇 ☁️ - Integrates, discovers, manages, and codifies cloud resources with &lt;a href=&quot;https://firefly.ai&quot;&gt;Firefly&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yWorks/mcp-typescribe&quot;&gt;yWorks/mcp-typescribe&lt;/a&gt; 📇 🏠 - MCP server that provides Typescript API information efficiently to the agent to enable it to work with untrained APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧮 Data Science Tools&lt;/h3&gt; 
&lt;p&gt;Integrations and tools designed to simplify data exploration, analysis and enhance data science workflows.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChronulusAI/chronulus-mcp&quot;&gt;ChronulusAI/chronulus-mcp&lt;/a&gt; 🐍 ☁️ - Predict anything with Chronulus AI forecasting and prediction agents.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zcaceres/markdownify-mcp&quot;&gt;zcaceres/markdownify-mcp&lt;/a&gt; 📇 🏠 - An MCP server to convert almost any file or web content into Markdown&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reading-plus-ai/mcp-server-data-exploration&quot;&gt;@reading-plus-ai/mcp-server-data-exploration&lt;/a&gt; 🐍 ☁️ - Enables autonomous data exploration on .csv-based datasets, providing intelligent insights with minimal effort.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📂 &lt;a name=&quot;file-systems&quot;&gt;&lt;/a&gt;File Systems&lt;/h3&gt; 
&lt;p&gt;Provides direct access to local file systems with configurable permissions. Enables AI models to read, write, and manage files within specified directories.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem&quot;&gt;@modelcontextprotocol/server-filesystem&lt;/a&gt; 📇 🏠 - Direct local file system access.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive&quot;&gt;@modelcontextprotocol/server-google-drive&lt;/a&gt; 📇 ☁️ - Google Drive integration for listing, reading, and searching files&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hmk/box-mcp-server&quot;&gt;hmk/box-mcp-server&lt;/a&gt; 📇 ☁️ - Box integration for listing, reading and searching files&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mark3labs/mcp-filesystem-server&quot;&gt;mark3labs/mcp-filesystem-server&lt;/a&gt; 🏎️ 🏠 - Golang implementation for local file system access.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mamertofabian/mcp-everything-search&quot;&gt;mamertofabian/mcp-everything-search&lt;/a&gt; 🐍 🏠 🪟 - Fast Windows file search using Everything SDK&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cyberchitta/llm-context.py&quot;&gt;cyberchitta/llm-context.py&lt;/a&gt; 🐍 🏠 - Share code context with LLMs via MCP or clipboard&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/filesystem&quot;&gt;filesystem@quarkiverse/quarkus-mcp-servers&lt;/a&gt; ☕ 🏠 - A filesystem allowing for browsing and editing files implemented in Java using Quarkus. Available as jar or native image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Xuanwo/mcp-server-opendal&quot;&gt;Xuanwo/mcp-server-opendal&lt;/a&gt; 🐍 🏠 ☁️ - Access any storage with Apache OpenDAL™&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💰 &lt;a name=&quot;finance--fintech&quot;&gt;&lt;/a&gt;Finance &amp;amp; Fintech&lt;/h3&gt; 
&lt;p&gt;Financial data access and cryptocurrency market information. Enables querying real-time market data, crypto prices, and financial analytics.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/heurist-network/heurist-mesh-mcp-server&quot;&gt;heurist-network/heurist-mesh-mcp-server&lt;/a&gt; 🎖️ ⛅️ 🏠 🐍 - Access specialized web3 AI agents for blockchain analysis, smart contract security auditing, token metrics evaluation, and on-chain interactions through the Heurist Mesh network. Provides comprehensive tools for DeFi analysis, NFT valuation, and transaction monitoring across multiple blockchains&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/base/base-mcp&quot;&gt;@base/base-mcp&lt;/a&gt; 🎖️ 📇 ☁️ - Base Network integration for onchain tools, allowing interaction with Base Network and Coinbase API for wallet management, fund transfers, smart contracts, and DeFi operations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/QuantGeekDev/coincap-mcp&quot;&gt;QuantGeekDev/coincap-mcp&lt;/a&gt; 📇 ☁️ - Real-time cryptocurrency market data integration using CoinCap&#39;s public API, providing access to crypto prices and market information without API keys&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anjor/coinmarket-mcp-server&quot;&gt;anjor/coinmarket-mcp-server&lt;/a&gt; 🐍 ☁️ - Coinmarket API integration to fetch cryptocurrency listings and quotes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/berlinbra/alpha-vantage-mcp&quot;&gt;berlinbra/alpha-vantage-mcp&lt;/a&gt; 🐍 ☁️ - Alpha Vantage API integration to fetch both stock and crypto information&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ferdousbhai/tasty-agent&quot;&gt;ferdousbhai/tasty-agent&lt;/a&gt; 🐍 ☁️ - Tastyworks API integration to handle trading activities on Tastytrade&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ferdousbhai/investor-agent&quot;&gt;ferdousbhai/investor-agent&lt;/a&gt; 🐍 ☁️ - Yahoo Finance integration to fetch stock market data including options recommendations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcpdotdirect/evm-mcp-server&quot;&gt;mcpdotdirect/evm-mcp-server&lt;/a&gt; 📇 ☁️ - Comprehensive blockchain services for 30+ EVM networks, supporting native tokens, ERC20, NFTs, smart contracts, transactions, and ENS resolution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bankless/onchain-mcp/&quot;&gt;bankless/onchain-mcp&lt;/a&gt; 📇 ☁️ - Bankless Onchain API to interact with smart contracts, query transaction and token information&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/cryptopanic-mcp-server&quot;&gt;kukapay/cryptopanic-mcp-server&lt;/a&gt; 🐍 ☁️ - Providing latest cryptocurrency news to AI agents, powered by CryptoPanic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/whale-tracker-mcp&quot;&gt;kukapay/whale-tracker-mcp&lt;/a&gt; 🐍 ☁️ - A mcp server for tracking cryptocurrency whale transactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/crypto-feargreed-mcp&quot;&gt;kukapay/crypto-feargreed-mcp&lt;/a&gt; 🐍 ☁️ - Providing real-time and historical Crypto Fear &amp;amp; Greed Index data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/dune-analytics-mcp&quot;&gt;kukapay/dune-analytics-mcp&lt;/a&gt; 🐍 ☁️ - A mcp server that bridges Dune Analytics data to AI agents.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/pancakeswap-poolspy-mcp&quot;&gt;kukapay/pancakeswap-poolspy-mcp&lt;/a&gt; 🐍 ☁️ - An MCP server that tracks newly created pools on Pancake Swap.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/uniswap-poolspy-mcp&quot;&gt;kukapay/uniswap-poolspy-mcp&lt;/a&gt; 🐍 ☁️ - An MCP server that tracks newly created liquidity pools on Uniswap across multiple blockchains.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/uniswap-trader-mcp&quot;&gt;kukapay/uniswap-trader-mcp&lt;/a&gt; 🐍 ☁️ - An MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/token-minter-mcp&quot;&gt;kukapay/token-minter-mcp&lt;/a&gt; 🐍 ☁️ - An MCP server providing tools for AI agents to mint ERC-20 tokens across multiple blockchains.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/thegraph-mcp&quot;&gt;kukapay/thegraph-mcp&lt;/a&gt; 🐍 ☁️ - An MCP server that powers AI agents with indexed blockchain data from The Graph.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pwh-pwh/coin-mcp-server&quot;&gt;pwh-pwh/coin-mcp-server&lt;/a&gt; 🐍 ☁️ - Bitget API to fetch cryptocurrency price.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎮 &lt;a name=&quot;gaming&quot;&gt;&lt;/a&gt;Gaming&lt;/h3&gt; 
&lt;p&gt;Integration with gaming related data, game engines, and services&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Coding-Solo/godot-mcp&quot;&gt;Coding-Solo/godot-mcp&lt;/a&gt; 📇 🏠 - A MCP server for interacting with the Godot game engine, providing tools for editing, running, debugging, and managing scenes in Godot projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rishijatia/fantasy-pl-mcp/&quot;&gt;rishijatia/fantasy-pl-mcp&lt;/a&gt; 🐍 ☁️ - An MCP server for real-time Fantasy Premier League data and analysis tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CoderGamester/mcp-unity&quot;&gt;CoderGamester/mcp-unity&lt;/a&gt; 📇 #️⃣ 🏠 - MCP Server for Unity3d Game Engine integration for game development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧠 &lt;a name=&quot;knowledge--memory&quot;&gt;&lt;/a&gt;Knowledge &amp;amp; Memory&lt;/h3&gt; 
&lt;p&gt;Persistent memory storage using knowledge graph structures. Enables AI models to maintain and query structured information across sessions.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/memory&quot;&gt;@modelcontextprotocol/server-memory&lt;/a&gt; 📇 🏠 - Knowledge graph-based persistent memory system for maintaining context&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CheMiguel23/MemoryMesh&quot;&gt;/CheMiguel23/MemoryMesh&lt;/a&gt; 📇 🏠 - Enhanced graph-based memory with a focus on AI role-play and story generation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/topoteretes/cognee/tree/dev/cognee-mcp&quot;&gt;/topoteretes/cognee&lt;/a&gt; 📇 🏠 - Memory manager for AI apps and Agents using various graph and vector stores and allowing ingestion from 30+ data sources&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hannesrudolph/mcp-ragdocs&quot;&gt;@hannesrudolph/mcp-ragdocs&lt;/a&gt; 🐍 🏠 - An MCP server implementation that provides tools for retrieving and processing documentation through vector search, enabling AI assistants to augment their responses with relevant documentation context&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaliaboi/mcp-zotero&quot;&gt;@kaliaboi/mcp-zotero&lt;/a&gt; 📇 ☁️ - A connector for LLMs to work with collections and sources on your Zotero Cloud&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0xshellming/mcp-summarizer&quot;&gt;mcp-summarizer&lt;/a&gt; 📕 ☁️ - AI Summarization MCP Server, Support for multiple content types: Plain text, Web pages, PDF documents, EPUB books, HTML content&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/graphlit/graphlit-mcp-server&quot;&gt;graphlit-mcp-server&lt;/a&gt; 📇 ☁️ - Ingest anything from Slack, Discord, websites, Google Drive, Linear or GitHub into a Graphlit project - and then search and retrieve relevant knowledge within an MCP client like Cursor, Windsurf or Cline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mem0ai/mem0-mcp&quot;&gt;@mem0ai/mem0-mcp&lt;/a&gt; 🐍 🏠 - A Model Context Protocol server for Mem0 that helps manage coding preferences and patterns, providing tools for storing, retrieving and semantically handling code implementations, best practices and technical documentation in IDEs like Cursor and Windsurf&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🗺️ &lt;a name=&quot;location-services&quot;&gt;&lt;/a&gt;Location Services&lt;/h3&gt; 
&lt;p&gt;Geographic and location-based services integration. Enables access to mapping data, directions, and place information.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps&quot;&gt;@modelcontextprotocol/server-google-maps&lt;/a&gt; 📇 ☁️ - Google Maps integration for location services, routing, and place details&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SecretiveShell/MCP-timeserver&quot;&gt;SecretiveShell/MCP-timeserver&lt;/a&gt; 🐍 🏠 - Access the time in any timezone and get the current local time&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/webcoderz/MCP-Geo&quot;&gt;webcoderz/MCP-Geo&lt;/a&gt; 🐍 🏠 - Geocoding MCP server for nominatim, ArcGIS, Bing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/briandconnelly/mcp-server-ipinfo&quot;&gt;@briandconnelly/mcp-server-ipinfo&lt;/a&gt; 🐍 ☁️ - IP address geolocation and network information using IPInfo API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jjsantos01/qgis_mcp&quot;&gt;QGIS MCP&lt;/a&gt; - connects QGIS Desktop to Claude AI through the MCP. This integration enables prompt-assisted project creation, layer loading, code execution, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/nearby-search-mcp&quot;&gt;kukapay/nearby-search-mcp&lt;/a&gt; 🐍 ☁️ - An MCP server for nearby place searches with IP-based location detection.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎯 &lt;a name=&quot;marketing&quot;&gt;&lt;/a&gt;Marketing&lt;/h3&gt; 
&lt;p&gt;Tools for creating and editing marketing content, working with web meta data, product positioning, and editing guides.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/open-strategy-partners/osp_marketing_tools&quot;&gt;Open Strategy Partners Marketing Tools&lt;/a&gt; 🐍 🏠 - A suite of marketing tools from Open Strategy Partners including writing style, editing codes, and product marketing value map creation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📊 &lt;a name=&quot;monitoring&quot;&gt;&lt;/a&gt;Monitoring&lt;/h3&gt; 
&lt;p&gt;Access and analyze application monitoring data. Enables AI models to review error reports and performance metrics.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/sentry&quot;&gt;@modelcontextprotocol/server-sentry&lt;/a&gt; 🐍 ☁️ - Sentry.io integration for error tracking and performance monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MindscapeHQ/mcp-server-raygun&quot;&gt;@modelcontextprotocol/server-raygun&lt;/a&gt; 📇 ☁️ - Raygun API V3 integration for crash reporting and real user monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metoro-io/metoro-mcp-server&quot;&gt;metoro-io/metoro-mcp-server&lt;/a&gt; 🎖️ 🏎️ ☁️ - Query and interact with kubernetes environments monitored by Metoro&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/grafana/mcp-grafana&quot;&gt;grafana/mcp-grafana&lt;/a&gt; 🎖️ 🐍 🏠 ☁️ - Search dashboards, investigate incidents and query datasources in your Grafana instance&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pydantic/logfire-mcp&quot;&gt;pydantic/logfire-mcp&lt;/a&gt; 🎖️ 🐍 ☁️ - Provides access to OpenTelemetry traces and metrics through Logfire&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seekrays/mcp-monitor&quot;&gt;seekrays/mcp-monitor&lt;/a&gt; 🏎️ 🏠 - A system monitoring tool that exposes system metrics via the Model Context Protocol (MCP). This tool allows LLMs to retrieve real-time system information through an MCP-compatible interface.（support CPU、Memory、Disk、Network、Host、Process）&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperb1iss/lucidity-mcp&quot;&gt;hyperb1iss/lucidity-mcp&lt;/a&gt; 🐍 🏠 - Enhance AI-generated code quality through intelligent, prompt-based analysis across 10 critical dimensions from complexity to security vulnerabilities&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔎 &lt;a name=&quot;search&quot;&gt;&lt;/a&gt;Search&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search&quot;&gt;@modelcontextprotocol/server-brave-search&lt;/a&gt; 📇 ☁️ - Web search capabilities using Brave&#39;s Search API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/angheljf/nyt&quot;&gt;@angheljf/nyt&lt;/a&gt; 📇 ☁️ - Search articles using the NYTimes API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/fetch&quot;&gt;@modelcontextprotocol/server-fetch&lt;/a&gt; 🐍 🏠 ☁️ - Efficient web content fetching and processing for AI consumption&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ac3xx/mcp-servers-kagi&quot;&gt;ac3xx/mcp-servers-kagi&lt;/a&gt; 📇 ☁️ - Kagi search API integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exa-labs/exa-mcp-server&quot;&gt;exa-labs/exa-mcp-server&lt;/a&gt; 🎖️ 📇 ☁️ – A Model Context Protocol (MCP) server lets AI assistants like Claude use the Exa AI Search API for web searches. This setup allows AI models to get real-time web information in a safe and controlled way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fatwang2/search1api-mcp&quot;&gt;fatwang2/search1api-mcp&lt;/a&gt; 📇 ☁️ - Search via search1api (requires paid API key)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tomatio13/mcp-server-tavily&quot;&gt;Tomatio13/mcp-server-tavily&lt;/a&gt; ☁️ 🐍 – Tavily AI search API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kshern/mcp-tavily.git&quot;&gt;kshern/mcp-tavily&lt;/a&gt; ☁️ 📇 – Tavily AI search API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blazickjp/arxiv-mcp-server&quot;&gt;blazickjp/arxiv-mcp-server&lt;/a&gt; ☁️ 🐍 - Search ArXiv research papers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mzxrai/mcp-webresearch&quot;&gt;mzxrai/mcp-webresearch&lt;/a&gt; 🔍📚 - Search Google and do deep web research on any topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andybrandt/mcp-simple-arxiv&quot;&gt;andybrandt/mcp-simple-arxiv&lt;/a&gt; - 🐍 ☁️ MCP for LLM to search and read papers from arXiv&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andybrandt/mcp-simple-pubmed&quot;&gt;andybrandt/mcp-simple-pubmed&lt;/a&gt; - 🐍 ☁️ MCP to search and read medical / life sciences papers from PubMed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apify/mcp-server-rag-web-browser&quot;&gt;apify/mcp-server-rag-web-browser&lt;/a&gt; 📇 ☁️ - An MCP server for Apify&#39;s open-source RAG Web Browser Actor to perform web searches, scrape URLs, and return content in Markdown.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SecretiveShell/MCP-searxng&quot;&gt;SecretiveShell/MCP-searxng&lt;/a&gt; 🐍 🏠 - An MCP Server to connect to searXNG instances&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bigsy/Clojars-MCP-Server&quot;&gt;Bigsy/Clojars-MCP-Server&lt;/a&gt; 📇 ☁️ - Clojars MCP Server for upto date dependency information of Clojure libraries&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ihor-sokoliuk/mcp-searxng&quot;&gt;Ihor-Sokoliuk/MCP-SearXNG&lt;/a&gt; 📇 🏠/☁️ - A Model Context Protocol Server for &lt;a href=&quot;https://docs.searxng.org&quot;&gt;SearXNG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/erithwik/mcp-hn&quot;&gt;erithwik/mcp-hn&lt;/a&gt; 🐍 ☁️ - An MCP server to search Hacker News, get top stories, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChanMeng666/server-google-news&quot;&gt;chanmeng/google-news-mcp-server&lt;/a&gt; 📇 ☁️ - Google News integration with automatic topic categorization, multi-language support, and comprehensive search capabilities including headlines, stories, and related topics through &lt;a href=&quot;https://serpapi.com/&quot;&gt;SerpAPI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devflowinc/trieve/tree/main/clients/mcp-server&quot;&gt;devflowinc/trieve&lt;/a&gt; 🎖️ 📇 ☁️ 🏠 - Crawl, embed, chunk, search, and retrieve information from datasets through &lt;a href=&quot;https://trieve.ai&quot;&gt;Trieve&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nickclyde/duckduckgo-mcp-server&quot;&gt;nickclyde/duckduckgo-mcp-server&lt;/a&gt; 🐍 ☁️ - Web search using DuckDuckGo&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zhsama/duckduckgo-mpc-server/&quot;&gt;zhsama/duckduckgo-mcp-server&lt;/a&gt; 📇 🏠 ☁️ - This is a TypeScript-based MCP server that provides DuckDuckGo search functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vectorize-io/vectorize-mcp-server/&quot;&gt;vectorize-io/vectorize-mcp-server&lt;/a&gt; ☁️ 📇 - &lt;a href=&quot;https://vectorize.io&quot;&gt;Vectorize&lt;/a&gt; MCP server for advanced retrieval, Private Deep Research, Anything-to-Markdown file extraction and text chunking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jae-jae/fetcher-mcp&quot;&gt;jae-jae/fetcher-mcp&lt;/a&gt; 📇 🏠 - MCP server for fetching web page content using Playwright headless browser, supporting Javascript rendering and intelligent content extraction, and outputting Markdown or HTML format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔒 &lt;a name=&quot;security&quot;&gt;&lt;/a&gt;Security&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BurtTheCoder/mcp-dnstwist&quot;&gt;dnstwist MCP Server&lt;/a&gt; 📇🪟☁️ - MCP server for dnstwist, a powerful DNS fuzzing tool that helps detect typosquatting, phishing, and corporate espionage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BurtTheCoder/mcp-maigret&quot;&gt;Maigret MCP Server&lt;/a&gt; 📇🪟☁️ - MCP server for maigret, a powerful OSINT tool that collects user account information from various public sources. This server provides tools for searching usernames across social networks and analyzing URLs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BurtTheCoder/mcp-shodan&quot;&gt;Shodan MCP Server&lt;/a&gt; 📇🪟☁️ - MCP server for querying the Shodan API and Shodan CVEDB. This server provides tools for IP lookups, device searches, DNS lookups, vulnerability queries, CPE lookups, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BurtTheCoder/mcp-virustotal&quot;&gt;VirusTotal MCP Server&lt;/a&gt; 📇🪟☁️ - MCP server for querying the VirusTotal API. This server provides tools for scanning URLs, analyzing file hashes, and retrieving IP address reports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fr0gger/MCP_Security&quot;&gt;ORKL MCP Server&lt;/a&gt; 📇🛡️☁️ - MCP server for querying the ORKL API. This server provides tools for fetching threat reports, analyzing threat actors, and retrieving intelligence sources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qianniuspace/mcp-security-audit&quot;&gt;Security Audit MCP Server&lt;/a&gt; 📇🛡️☁️ A powerful MCP (Model Context Protocol) Server that audits npm package dependencies for security vulnerabilities. Built with remote npm registry integration for real-time security checks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🏃 &lt;a name=&quot;sports&quot;&gt;&lt;/a&gt;Sports&lt;/h3&gt; 
&lt;p&gt;Tools for accessing sports-related data, results, and statistics.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/r-huijts/firstcycling-mcp&quot;&gt;r-huijts/firstcycling-mcp&lt;/a&gt; 📇 ☁️ - Access cycling race data, results, and statistics through natural language. Features include retrieving start lists, race results, and rider information from firstcycling.com.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚆 &lt;a name=&quot;travel-and-transportation&quot;&gt;&lt;/a&gt;Travel &amp;amp; Transportation&lt;/h3&gt; 
&lt;p&gt;Access to travel and transportation information. Enables querying schedules, routes, and real-time travel data.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/openbnb-org/mcp-server-airbnb&quot;&gt;Airbnb MCP Server&lt;/a&gt; 📇 ☁️ - Provides tools to search Airbnb and get listing details.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/r-huijts/ns-mcp-server&quot;&gt;NS Travel Information MCP Server&lt;/a&gt; 📇 ☁️ - Access Dutch Railways (NS) travel information, schedules, and real-time updates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KyrieTangSheng/mcp-server-nationalparks&quot;&gt;KyrieTangSheng/mcp-server-nationalparks&lt;/a&gt; 📇 ☁️ - National Park Service API integration providing latest information of park details, alerts, visitor centers, campgrounds, and events for U.S. National Parks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pab1it0/tripadvisor-mcp&quot;&gt;pab1it0/tripadvisor-mcp&lt;/a&gt; 📇 🐍 - A MCP server that enables LLMs to interact with Tripadvisor API, supporting location data, reviews, and photos through standardized MCP interfaces&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔄 &lt;a name=&quot;version-control&quot;&gt;&lt;/a&gt;Version Control&lt;/h3&gt; 
&lt;p&gt;Interact with Git repositories and version control platforms. Enables repository management, code analysis, pull request handling, issue tracking, and other version control operations through standardized APIs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/github&quot;&gt;@modelcontextprotocol/server-github&lt;/a&gt; 📇 ☁️ - GitHub API integration for repository management, PRs, issues, and more&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/gitlab&quot;&gt;@modelcontextprotocol/server-gitlab&lt;/a&gt; 📇 ☁️ 🏠 - GitLab platform integration for project management and CI/CD operations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oschina/gitee&quot;&gt;@oschina/mcp-gitee&lt;/a&gt; 🏎️ ☁️ 🏠 - Gitee API integration, repository, issue, and pull request management, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/git&quot;&gt;@modelcontextprotocol/server-git&lt;/a&gt; 🐍 🏠 - Direct Git repository operations including reading, searching, and analyzing local repositories&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adhikasp/mcp-git-ingest&quot;&gt;adhikasp/mcp-git-ingest&lt;/a&gt; 🐍 🏠 - Read and analyze GitHub repositories with your LLM&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ &lt;a name=&quot;other-tools-and-integrations&quot;&gt;&lt;/a&gt;Other Tools and Integrations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apify/actors-mcp-server&quot;&gt;apify/actors-mcp-server&lt;/a&gt; 📇 ☁️ - Use 3,000+ pre-built cloud tools, known as Actors, to extract data from websites, e-commerce, social media, search engines, maps, and more&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ivo-toby/contentful-mcp&quot;&gt;ivo-toby/contentful-mcp&lt;/a&gt; 📇 🏠 - Update, create, delete content, content-models and assets in your Contentful Space&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mzxrai/mcp-openai&quot;&gt;mzxrai/mcp-openai&lt;/a&gt; 📇 ☁️ - Chat with OpenAI&#39;s smartest models&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mrjoshuak/godoc-mcp&quot;&gt;mrjoshuak/godoc-mcp&lt;/a&gt; 🏎️ 🏠 - Token-efficient Go documentation server that provides AI assistants with smart access to package docs and types without reading entire source files&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pierrebrunelle/mcp-server-openai&quot;&gt;pierrebrunelle/mcp-server-openai&lt;/a&gt; 🐍 ☁️ - Query OpenAI models directly from Claude using MCP protocol&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol/servers/tree/main/src/everything&quot;&gt;@modelcontextprotocol/server-everything&lt;/a&gt; 📇 🏠 - MCP server that exercises all the features of the MCP protocol&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/baba786/phabricator-mcp-server&quot;&gt;baba786/phabricator-mcp-server&lt;/a&gt; 🐍 ☁️ - Interacting with Phabricator API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MarkusPfundstein/mcp-obsidian&quot;&gt;MarkusPfundstein/mcp-obsidian&lt;/a&gt; 🐍 ☁️ 🏠 - Interacting with Obsidian via REST API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calclavia/mcp-obsidian&quot;&gt;calclavia/mcp-obsidian&lt;/a&gt; 📇 🏠 - This is a connector to allow Claude Desktop (or any MCP client) to read and search any directory containing Markdown notes (such as an Obsidian vault).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anaisbetts/mcp-youtube&quot;&gt;anaisbetts/mcp-youtube&lt;/a&gt; 📇 ☁️ - Fetch YouTube subtitles&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Seym0n/tiktok-mcp&quot;&gt;Seym0n/tiktok-mcp&lt;/a&gt; 📇 ☁️ - Interact with TikTok videos&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danhilse/notion_mcp&quot;&gt;danhilse/notion_mcp&lt;/a&gt; 🐍 ☁️ - Integrates with Notion&#39;s API to manage personal todo lists&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rusiaaman/wcgw/raw/main/src/wcgw/client/mcp_server/Readme.md&quot;&gt;rusiaaman/wcgw&lt;/a&gt; 🐍 🏠 - Autonomous shell execution, computer control and coding agent. (Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reeeeemo/ancestry-mcp&quot;&gt;reeeeemo/ancestry-mcp&lt;/a&gt; 🐍 🏠 - Allows the AI to read .ged files and genetic data&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sirmews/apple-notes-mcp&quot;&gt;sirmews/apple-notes-mcp&lt;/a&gt; 🐍 🏠 - Allows the AI to read from your local Apple Notes database (macOS only)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anjor/coinmarket-mcp-server&quot;&gt;anjor/coinmarket-mcp-server&lt;/a&gt; 🐍 🏠 - Coinmarket API integration to fetch cryptocurrency listings and quotes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/suekou/mcp-notion-server&quot;&gt;suekou/mcp-notion-server&lt;/a&gt; 📇 🏠 - Interacting with Notion API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amidabuddha/unichat-mcp-server&quot;&gt;amidabuddha/unichat-mcp-server&lt;/a&gt; 🐍/📇 ☁️ - Send requests to OpenAI, MistralAI, Anthropic, xAI, Google AI or DeepSeek using MCP protocol via tool or predefined prompts. Vendor API key required&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evalstate/mcp-miro&quot;&gt;evalstate/mcp-miro&lt;/a&gt; 📇 ☁️ - Access MIRO whiteboards, bulk create and read items. Requires OAUTH key for REST API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tacticlaunch/mcp-linear&quot;&gt;@tacticlaunch/mcp-linear&lt;/a&gt; 📇 ☁️ 🍎 🪟 🐧 - Integrates with Linear project management system&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KS-GEN-AI/jira-mcp-server&quot;&gt;KS-GEN-AI/jira-mcp-server&lt;/a&gt; 📇 ☁️ 🍎 🪟 - Read jira data via JQL and api and execute requests to create and edit tickets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KS-GEN-AI/confluence-mcp-server&quot;&gt;KS-GEN-AI/confluence-mcp-server&lt;/a&gt; 📇 ☁️ 🍎 🪟 - Get Confluence data via CQL and read pages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sooperset/mcp-atlassian&quot;&gt;sooperset/mcp-atlassian&lt;/a&gt; 🐍 ☁️ - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pyroprompts/any-chat-completions-mcp&quot;&gt;pyroprompts/any-chat-completions-mcp&lt;/a&gt; - Chat with any other OpenAI SDK Compatible Chat Completions API, like Perplexity, Groq, xAI and more&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anaisbetts/mcp-installer&quot;&gt;anaisbetts/mcp-installer&lt;/a&gt; 🐍 🏠 - An MCP server that installs other MCP servers for you.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tanigami/mcp-server-perplexity&quot;&gt;tanigami/mcp-server-perplexity&lt;/a&gt; 🐍 ☁️ - Interacting with Perplexity API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.wikimedia.org/repos/future-audiences/wikimedia-enterprise-model-context-protocol&quot;&gt;future-audiences/wikimedia-enterprise-model-context-protocol&lt;/a&gt; 🐍 ☁️ - Wikipedia Article lookup API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andybrandt/mcp-simple-timeserver&quot;&gt;andybrandt/mcp-simple-timeserver&lt;/a&gt; 🐍 🏠☁️ - An MCP server that allows checking local time on the client machine or current UTC time from an NTP server&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andybrandt/mcp-simple-openai-assistant&quot;&gt;andybrandt/mcp-simple-openai-assistant&lt;/a&gt; - 🐍 ☁️ MCP to talk to OpenAI assistants (Claude can use any GPT model as his assitant)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evalstate/mcp-hfspace&quot;&gt;@llmindset/mcp-hfspace&lt;/a&gt; 📇 ☁️ - Use HuggingFace Spaces directly from Claude. Use Open Source Image Generation, Chat, Vision tasks and more. Supports Image, Audio and text uploads/downloads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zueai/mcp-manager&quot;&gt;zueai/mcp-manager&lt;/a&gt; 📇 ☁️ - Simple Web UI to install and manage MCP servers for Claude Desktop App.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wong2/mcp-cli&quot;&gt;wong2/mcp-cli&lt;/a&gt; 📇 🏠 - CLI tool for testing MCP servers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chrishayuk/mcp-cli&quot;&gt;chrishayuk/mcp-cli&lt;/a&gt; 🐍 🏠 - Yet another CLI tool for testing MCP servers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isaacwasserman/mcp-vegalite-server&quot;&gt;isaacwasserman/mcp-vegalite-server&lt;/a&gt; 🐍 🏠 - Generate visualizations from fetched data using the VegaLite format and renderer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tevonsb/homeassistant-mcp&quot;&gt;tevonsb/homeassistant-mcp&lt;/a&gt; 📇 🏠 - Access Home Assistant data and control devices (lights, switches, thermostats, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/allenporter/mcp-server-home-assistant&quot;&gt;allenporter/mcp-server-home-assistant&lt;/a&gt; 🐍 🏠 - Expose all Home Assistant voice intents through a Model Context Protocol Server allowing home control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/magarcia/mcp-server-giphy&quot;&gt;@magarcia/mcp-server-giphy&lt;/a&gt; 📇 ☁️ - Search and retrieve GIFs from Giphy&#39;s vast library through the Giphy API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nguyenvanduocit/all-in-one-model-context-protocol&quot;&gt;nguyenvanduocit/all-in-one-model-context-protocol&lt;/a&gt; 🏎️ 🏠 - Some useful tools for developer, almost everything an engineer need: confluence, Jira, Youtube, run script, knowledge base RAG, fetch URL, Manage youtube channel, emails, calendar, gitlab&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JoshuaRileyDev/mac-apps-launcher&quot;&gt;@joshuarileydev/mac-apps-launcher-mcp-server&lt;/a&gt; 📇 🏠 - An MCP server to list and launch applications on MacOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZeparHyfar/mcp-datetime&quot;&gt;ZeparHyfar/mcp-datetime&lt;/a&gt; - MCP server providing date and time functions in various formats&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SecretiveShell/MCP-wolfram-alpha&quot;&gt;SecretiveShell/MCP-wolfram-alpha&lt;/a&gt; 🐍 ☁️ - An MCP server for querying wolfram alpha API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zxkane/mcp-server-amazon-bedrock&quot;&gt;Amazon Bedrock Nova Canvas&lt;/a&gt; 📇 ☁️ - Use Amazon Nova Canvas model for image generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apinetwork/piapi-mcp-server&quot;&gt;apinetwork/piapi-mcp-server&lt;/a&gt; 📇 ☁️ PiAPI MCP server makes user able to generate media content with Midjourney/Flux/Kling/Hunyuan/Udio/Trellis directly from Claude or any other MCP-compatible apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gotoolkits/mcp-difyworkflow-server&quot;&gt;gotoolkits/DifyWorkflow&lt;/a&gt; - 🏎️ ☁️ Tools to the query and execute of Dify workflows&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pskill9/hn-server&quot;&gt;@pskill9/hn-server&lt;/a&gt; - 📇 ☁️ Parses the HTML content from news.ycombinator.com (Hacker News) and provides structured data for different types of stories (top, new, ask, show, jobs).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mediar-ai/screenpipe&quot;&gt;@mediar-ai/screenpipe&lt;/a&gt; - 🎖️ 🦀 🏠 🍎 Local-first system capturing screen/audio with timestamped indexing, SQL/embedding storage, semantic search, LLM-powered history analysis, and event-triggered actions - enables building context-aware AI agents through a NextJS plugin ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/akseyh/bear-mcp-server&quot;&gt;akseyh/bear-mcp-server&lt;/a&gt; - Allows the AI to read from your Bear Notes (macOS only)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jfx&quot;&gt;mcp-server-jfx&lt;/a&gt; ☕ 🏠 - Draw on JavaFX canvas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hmk/attio-mcp-server&quot;&gt;hmk/attio-mcp-server&lt;/a&gt; - 📇 ☁️ Allows AI clients to manage records and notes in Attio CRM&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roychri/mcp-server-asana&quot;&gt;roychri/mcp-server-asana&lt;/a&gt; - 📇 ☁️ This Model Context Protocol server implementation of Asana allows you to talk to Asana API from MCP Client such as Anthropic&#39;s Claude Desktop Application, and many more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nick1udwig/ws-mcp&quot;&gt;ws-mcp&lt;/a&gt; - Wrap MCP servers with a WebSocket (for use with &lt;a href=&quot;https://github.com/nick1udwig/kibitz&quot;&gt;kitbitz&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AbdelStark/bitcoin-mcp&quot;&gt;AbdelStark/bitcoin-mcp&lt;/a&gt; - ₿ A Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin, allowing them to generate keys, validate addresses, decode transactions, query the blockchain, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomekkorbak/strava-mcp-server&quot;&gt;tomekkorbak/strava-mcp-server&lt;/a&gt; 🐍 ☁️ - An MCP server for Strava, an app for tracking physical exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomekkorbak/oura-mcp-server&quot;&gt;tomekkorbak/oura-mcp-server&lt;/a&gt; 🐍 ☁️ - An MCP server for Oura, an app for tracking sleep&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rember/rember-mcp&quot;&gt;rember/rember-mcp&lt;/a&gt; 📇 🏠 - Create spaced repetition flashcards in &lt;a href=&quot;https://rember.com&quot;&gt;Rember&lt;/a&gt; to remember anything you learn in your chats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hiromitsusasaki/raindrop-io-mcp-server&quot;&gt;hiromitsusasaki/raindrop-io-mcp-server&lt;/a&gt; 📇 ☁️ - An integration that allows LLMs to interact with Raindrop.io bookmarks using the Model Context Protocol (MCP).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/integromat/make-mcp-server&quot;&gt;@makehq/mcp-server&lt;/a&gt; 🎖️ 📇 🏠 - Turn your &lt;a href=&quot;https://www.make.com/&quot;&gt;Make&lt;/a&gt; scenarios into callable tools for AI assistants.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NON906/omniparser-autogui-mcp&quot;&gt;NON906/omniparser-autogui-mcp&lt;/a&gt; - 🐍 Automatic operation of on-screen GUI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kj455/mcp-kibela&quot;&gt;kj455/mcp-kibela&lt;/a&gt; - 📇 ☁️ Allows AI models to interact with &lt;a href=&quot;https://kibe.la/&quot;&gt;Kibela&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blurrah/mcp-graphql&quot;&gt;blurrah/mcp-graphql&lt;/a&gt; 📇 ☁️ - Allows the AI to query GraphQL servers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awkoy/replicate-flux-mcp&quot;&gt;@awkoy/replicate-flux-mcp&lt;/a&gt; 📇 ☁️ - Provides the ability to generate images via Replicate&#39;s API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kenliao94/mcp-server-rabbitmq&quot;&gt;kenliao94/mcp-server-rabbitmq&lt;/a&gt; 🐍 🏠 - Enable interaction (admin operation, message enqueue/dequeue) with RabbitMQ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcelmarais/spotify-mcp-server&quot;&gt;marcelmarais/Spotify&lt;/a&gt; - 📇 🏠 Control Spotify playback and manage playlists.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NakaokaRei/swift-mcp-gui.git&quot;&gt;NakaokaRei/swift-mcp-gui&lt;/a&gt; 🏠 🍎 - MCP server that can execute commands such as keyboard input and mouse movement&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awwaiid/mcp-server-taskwarrior&quot;&gt;awwaiid/mcp-server-taskwarrior&lt;/a&gt; 🏠 📇 - An MCP server for basic local taskwarrior usage (add, update, remove tasks)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Frameworks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jlowin/fastmcp&quot;&gt;FastMCP&lt;/a&gt; 🐍 - A high-level framework for building MCP servers in Python&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/punkpeye/fastmcp&quot;&gt;FastMCP&lt;/a&gt; 📇 - A high-level framework for building MCP servers in TypeScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/strowk/foxy-contexts&quot;&gt;Foxy Contexts&lt;/a&gt; 🏎️ - Golang library to write MCP Servers declaratively with functional testing included&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/firebase/genkit/tree/main/js/plugins/mcp&quot;&gt;Genkit MCP&lt;/a&gt; 📇 – Provides integration between &lt;a href=&quot;https://github.com/firebase/genkit/tree/main&quot;&gt;Genkit&lt;/a&gt; and the Model Context Protocol (MCP).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wong2/litemcp&quot;&gt;LiteMCP&lt;/a&gt; 📇 - A high-level framework for building MCP servers in JavaScript/TypeScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mark3labs/mcp-go&quot;&gt;mark3labs/mcp-go&lt;/a&gt; 🏎️ - Golang SDK for building MCP Servers and Clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/QuantGeekDev/mcp-framework&quot;&gt;mcp-framework&lt;/a&gt; 📇 - Fast and elegant TypeScript framework for building MCP servers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/punkpeye/mcp-proxy&quot;&gt;mcp-proxy&lt;/a&gt; - 📇 A TypeScript SSE proxy for MCP servers that use &lt;code&gt;stdio&lt;/code&gt; transport.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linux-china/mcp-rs-template&quot;&gt;mcp-rs-template&lt;/a&gt; 🦀 - MCP CLI server template for Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metoro-io/mcp-golang&quot;&gt;metoro-io/mcp-golang&lt;/a&gt; 🏎️ - Golang framework for building MCP Servers, focussed on type safety&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rectalogic/langchain-mcp&quot;&gt;rectalogic/langchain-mcp&lt;/a&gt; 🐍 - Provides MCP tool calling support in LangChain, allowing for the integration of MCP tools into LangChain workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/salty-flower/ModelContextProtocol.NET&quot;&gt;salty-flower/ModelContextProtocol.NET&lt;/a&gt; #️⃣ 🏠 - A C# SDK for building MCP servers on .NET 9 with NativeAOT compatibility ⚡ 🔌&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects-experimental/spring-ai-mcp&quot;&gt;spring-projects-experimental/spring-ai-mcp&lt;/a&gt; ☕ 🌱 - Java SDK and Spring Framework integration for building MCP client and MCP servers with various, plugable, transport options.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marimo-team/codemirror-mcp&quot;&gt;@marimo-team/codemirror-mcp&lt;/a&gt; - CodeMirror extension that implements the Model Context Protocol (MCP) for resource mentions and prompt commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quarkiverse/quarkus-mcp-server&quot;&gt;quarkiverse/quarkus-mcp-server&lt;/a&gt; ☕ - Java SDK for building MCP servers using Quarkus.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lastmile-ai/mcp-agent&quot;&gt;lastmile-ai/mcp-agent&lt;/a&gt; 🤖 🔌 - Build effective agents with MCP servers using simple, composable patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mullerhai/sakura-mcp&quot;&gt;mullerhai/sakura-mcp&lt;/a&gt; 🦀 ☕ - Scala MCP Framework for Build effective agents with MCP servers and MCP clients shade from modelcontextprotocol.io.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Utilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boilingdata/mcp-server-and-gw&quot;&gt;boilingdata/mcp-server-and-gw&lt;/a&gt; 📇 - An MCP stdio to HTTP SSE transport gateway with example server and MCP client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isaacwasserman/mcp-langchain-ts-client&quot;&gt;isaacwasserman/mcp-langchain-ts-client&lt;/a&gt; 📇 – Use MCP provided tools in LangChain.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lightconetech/mcp-gateway&quot;&gt;lightconetech/mcp-gateway&lt;/a&gt; 📇 - A gateway demo for MCP SSE Server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mark3labs/mcphost&quot;&gt;mark3labs/mcphost&lt;/a&gt; 🏎️ - A CLI host application that enables Large Language Models (LLMs) to interact with external tools through the Model Context Protocol (MCP).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EvalsOne/MCP-Connect&quot;&gt;MCP-Connect&lt;/a&gt; 📇 - A tiny tool that enables cloud-based AI services to access local Stdio based MCP servers by HTTP/HTTPS requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SecretiveShell/MCP-Bridge&quot;&gt;SecretiveShell/MCP-Bridge&lt;/a&gt; 🐍 – an openAI middleware proxy to use mcp in any existing openAI compatible client&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sparfenyuk/mcp-proxy&quot;&gt;sparfenyuk/mcp-proxy&lt;/a&gt; 🐍 – An MCP stdio to SSE transport gateawy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Upsonic/gpt-computer-assistant&quot;&gt;upsonic/gpt-computer-assistant&lt;/a&gt; 🐍 – framework to build vertical AI agent&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/whereami-mcp&quot;&gt;kukapay/whereami-mcp&lt;/a&gt; 🐍 ☁️ - A lightweight mcp server that tells you exactly where you are based on your current IP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/whattimeisit-mcp&quot;&gt;kukapay/whattimeisit-mcp&lt;/a&gt; 🐍 ☁️ - A lightweight mcp server that tells you exactly what time is it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kukapay/whoami-mcp&quot;&gt;kukapay/whoami-mcp&lt;/a&gt; 🐍 🏠 - A lightweight MCP server that tells you exactly who you are.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/flux159/mcp-chat&quot;&gt;flux159/mcp-chat&lt;/a&gt; 📇🖥️ - A CLI based client to chat and connect with any MCP server. Useful during development &amp;amp; testing of MCP servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TBXark/mcp-proxy&quot;&gt;TBXark/mcp-proxy&lt;/a&gt; 🏎️ - An MCP proxy server that aggregates and serves multiple MCP resource servers through a single http server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tips and Tricks&lt;/h2&gt; 
&lt;h3&gt;Official prompt to inform LLMs how to use MCP&lt;/h3&gt; 
&lt;p&gt;Want to ask Claude about Model Context Protocol?&lt;/p&gt; 
&lt;p&gt;Create a Project, then add this file to it:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://modelcontextprotocol.io/llms-full.txt&quot;&gt;https://modelcontextprotocol.io/llms-full.txt&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Now Claude can answer questions about writing MCP servers and how they work&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/&quot;&gt;https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href=&quot;https://star-history.com/#punkpeye/awesome-mcp-servers&amp;amp;Date&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&amp;amp;type=Date&amp;amp;theme=dark&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&amp;amp;type=Date&quot;&gt; 
  &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&amp;amp;type=Date&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>khoj-ai/khoj</title>
      <link>https://github.com/khoj-ai/khoj</link>
      <description>&lt;p&gt;Your AI second brain. Self-hostable. Get answers from the web or your docs. Build custom agents, schedule automations, do deep research. Turn any online or local LLM into your personal, autonomous AI (gpt, claude, gemini, llama, qwen, mistral). Get started - free.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://assets.khoj.dev/khoj-logo-sideways-1200x540.png&quot; width=&quot;230&quot; alt=&quot;Khoj Logo&quot;&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/khoj-ai/khoj/actions/workflows/test.yml&quot;&gt;&lt;img src=&quot;https://github.com/khoj-ai/khoj/actions/workflows/test.yml/badge.svg?sanitize=true&quot; alt=&quot;test&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/khoj-ai/khoj/pkgs/container/khoj&quot;&gt;&lt;img src=&quot;https://github.com/khoj-ai/khoj/actions/workflows/dockerize.yml/badge.svg?sanitize=true&quot; alt=&quot;docker&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/khoj/&quot;&gt;&lt;img src=&quot;https://github.com/khoj-ai/khoj/actions/workflows/pypi.yml/badge.svg?sanitize=true&quot; alt=&quot;pypi&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/BDgyabRM6e&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1112065956647284756?style=plastic&amp;amp;label=discord&quot; alt=&quot;discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;b&gt;Your AI second brain&lt;/b&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://docs.khoj.dev&quot;&gt;📑 Docs&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&quot;https://khoj.dev&quot;&gt;🌐 Web&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&quot;https://app.khoj.dev&quot;&gt;🔥 App&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&quot;https://discord.gg/BDgyabRM6e&quot;&gt;💬 Discord&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&quot;https://blog.khoj.dev&quot;&gt;✍🏽 Blog&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h3&gt;🎁 New&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start any message with &lt;code&gt;/research&lt;/code&gt; to try out the experimental research mode with Khoj.&lt;/li&gt; 
 &lt;li&gt;Anyone can now &lt;a href=&quot;https://blog.khoj.dev/posts/create-agents-on-khoj/&quot;&gt;create custom agents&lt;/a&gt; with tunable personality, tools and knowledge bases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.khoj.dev/posts/evaluate-khoj-quality/&quot;&gt;Read&lt;/a&gt; about Khoj&#39;s excellent performance on modern retrieval and reasoning benchmarks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://khoj.dev&quot;&gt;Khoj&lt;/a&gt; is a personal AI app to extend your capabilities. It smoothly scales up from an on-device personal AI to a cloud-scale enterprise AI.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat with any local or online LLM (e.g llama3, qwen, gemma, mistral, gpt, claude, gemini).&lt;/li&gt; 
 &lt;li&gt;Get answers from the internet and your docs (including image, pdf, markdown, org-mode, word, notion files).&lt;/li&gt; 
 &lt;li&gt;Access it from your Browser, Obsidian, Emacs, Desktop, Phone or Whatsapp.&lt;/li&gt; 
 &lt;li&gt;Create agents with custom knowledge, persona, chat model and tools to take on any role.&lt;/li&gt; 
 &lt;li&gt;Automate away repetitive research. Get personal newsletters and smart notifications delivered to your inbox.&lt;/li&gt; 
 &lt;li&gt;Find relevant docs quickly and easily using our advanced semantic search.&lt;/li&gt; 
 &lt;li&gt;Generate images, talk out loud, play your messages.&lt;/li&gt; 
 &lt;li&gt;Khoj is open-source, self-hostable. Always.&lt;/li&gt; 
 &lt;li&gt;Run it privately on &lt;a href=&quot;https://docs.khoj.dev/get-started/setup&quot;&gt;your computer&lt;/a&gt; or try it on our &lt;a href=&quot;https://app.khoj.dev&quot;&gt;cloud app&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;See it in action&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/khoj-ai/khoj/raw/master/documentation/assets/img/quadratic_equation_khoj_web.gif?raw=true&quot; alt=&quot;demo_chat&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Go to &lt;a href=&quot;https://app.khoj.dev&quot;&gt;https://app.khoj.dev&lt;/a&gt; to see Khoj live.&lt;/p&gt; 
&lt;h2&gt;Full feature list&lt;/h2&gt; 
&lt;p&gt;You can see the full feature list &lt;a href=&quot;https://docs.khoj.dev/category/features&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Self-Host&lt;/h2&gt; 
&lt;p&gt;To get started with self-hosting Khoj, &lt;a href=&quot;https://docs.khoj.dev/get-started/setup&quot;&gt;read the docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Enterprise&lt;/h2&gt; 
&lt;p&gt;Khoj is available as a cloud service, on-premises, or as a hybrid solution. To learn more about Khoj Enterprise, &lt;a href=&quot;https://khoj.dev/teams&quot;&gt;visit our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Cheers to our awesome contributors! 🎉&lt;/p&gt; 
&lt;a href=&quot;https://github.com/khoj-ai/khoj/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=khoj-ai/khoj&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Made with &lt;a href=&quot;https://contrib.rocks&quot;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Interested in Contributing?&lt;/h3&gt; 
&lt;p&gt;We are always looking for contributors to help us build new features, improve the project documentation, or fix bugs. If you&#39;re interested, please see our &lt;a href=&quot;https://docs.khoj.dev/contributing/development&quot;&gt;Contributing Guidelines&lt;/a&gt; and check out our &lt;a href=&quot;https://github.com/orgs/khoj-ai/projects/4&quot;&gt;Contributors Project Board&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NirDiamant/GenAI_Agents</title>
      <link>https://github.com/NirDiamant/GenAI_Agents</link>
      <description>&lt;p&gt;This repository provides tutorials and implementations for various Generative AI Agent techniques, from basic to advanced. It serves as a comprehensive guide for building intelligent, interactive AI systems.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/in/nir-diamant-759323134/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/LinkedIn-Connect-blue&quot; alt=&quot;LinkedIn&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/NirDiamantAI&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/NirDiamantAI?label=Follow%20@NirDiamantAI&amp;amp;style=social&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/cA6Aa4uyDX&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20our%20community-7289da?style=flat-square&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🌟 &lt;strong&gt;Support This Project:&lt;/strong&gt; Your sponsorship fuels innovation in GenAI agent development. &lt;strong&gt;&lt;a href=&quot;https://github.com/sponsors/NirDiamant&quot;&gt;Become a sponsor&lt;/a&gt;&lt;/strong&gt; to help maintain and expand this valuable resource!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;GenAI Agents: Comprehensive Repository for Development and Implementation 🚀&lt;/h1&gt; 
&lt;p&gt;Welcome to one of the most extensive and dynamic collections of Generative AI (GenAI) agent tutorials and implementations available today. This repository serves as a comprehensive resource for learning, building, and sharing GenAI agents, ranging from simple conversational bots to complex, multi-agent systems.&lt;/p&gt; 
&lt;h2&gt;📫 Stay Updated!&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;🚀&lt;br&gt;&lt;b&gt;Cutting-edge&lt;br&gt;Updates&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;💡&lt;br&gt;&lt;b&gt;Expert&lt;br&gt;Insights&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;🎯&lt;br&gt;&lt;b&gt;Top 0.1%&lt;br&gt;Content&lt;/b&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;p&gt;&lt;a href=&quot;https://diamantai.substack.com/?r=336pe4&amp;amp;utm_campaign=pub-share-checklist&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/NirDiamant/GenAI_Agents/main/images/subscribe-button.svg?sanitize=true&quot; alt=&quot;Subscribe to DiamantAI Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;Join over 15,000 of AI enthusiasts getting unique cutting-edge insights and free tutorials!&lt;/em&gt; &lt;em&gt;&lt;strong&gt;Plus, subscribers get exclusive early access and special 33% discounts to my book and the upcoming RAG Techniques course!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href=&quot;https://diamantai.substack.com/?r=336pe4&amp;amp;utm_campaign=pub-share-checklist&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/NirDiamant/GenAI_Agents/main/images/substack_image.png&quot; alt=&quot;DiamantAI&#39;s newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Generative AI agents are at the forefront of artificial intelligence, revolutionizing the way we interact with and leverage AI technologies. This repository is designed to guide you through the development journey, from basic agent implementations to advanced, cutting-edge systems.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;h3&gt;📚 Learn to Build Your First AI Agent&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://diamantai.substack.com/p/your-first-ai-agent-simpler-than&quot;&gt;Your First AI Agent: Simpler Than You Think&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This detailed blog post complements the repository by providing a complete A-Z walkthrough with in-depth explanations of core concepts, step-by-step implementation, and the theory behind AI agents. It&#39;s designed to be incredibly simple to follow while covering everything you need to know to build your first working agent from scratch.&lt;/p&gt; &lt;p&gt;&lt;em&gt;💡 Plus: Subscribe to the newsletter for exclusive early access to tutorials and special discounts on upcoming courses and books!&lt;/em&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;Our goal is to provide a valuable resource for everyone - from beginners taking their first steps in AI to seasoned practitioners pushing the boundaries of what&#39;s possible. By offering a range of examples from foundational to complex, we aim to facilitate learning, experimentation, and innovation in the rapidly evolving field of GenAI agents.&lt;/p&gt; 
&lt;p&gt;Furthermore, this repository serves as a platform for showcasing innovative agent creations. Whether you&#39;ve developed a novel agent architecture or found an innovative application for existing techniques, we encourage you to share your work with the community.&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;p&gt;📚 Dive into my &lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/RAG_Techniques&quot;&gt;comprehensive guide on RAG techniques&lt;/a&gt;&lt;/strong&gt; to learn about integrating external knowledge into AI systems, enhancing their capabilities with up-to-date and relevant information retrieval.&lt;/p&gt; 
&lt;p&gt;🖋️ Explore my &lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/Prompt_Engineering&quot;&gt;Prompt Engineering Techniques guide&lt;/a&gt;&lt;/strong&gt; for an extensive collection of prompting strategies, from fundamental concepts to advanced methods, improving your ability to communicate effectively with AI language models.&lt;/p&gt; 
&lt;h2&gt;A Community-Driven Knowledge Hub&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;This repository grows stronger with your contributions!&lt;/strong&gt; Join our vibrant Discord community — the central hub for shaping and advancing this project together 🤝&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://discord.gg/cA6Aa4uyDX&quot;&gt;GenAI Agents Discord Community&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Whether you&#39;re a novice eager to learn or an expert ready to share your knowledge, your insights can shape the future of GenAI agents. Join us to propose ideas, get feedback, and collaborate on innovative implementations. For contribution guidelines, please refer to our &lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/strong&gt; file. Let&#39;s advance GenAI agent technology together!&lt;/p&gt; 
&lt;p&gt;🔗 For discussions on GenAI, agents, or to explore knowledge-sharing opportunities, feel free to &lt;strong&gt;&lt;a href=&quot;https://www.linkedin.com/in/nir-diamant-759323134/&quot;&gt;connect on LinkedIn&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎓 Learn to build GenAI agents from beginner to advanced levels&lt;/li&gt; 
 &lt;li&gt;🧠 Explore a wide range of agent architectures and applications&lt;/li&gt; 
 &lt;li&gt;📚 Step-by-step tutorials and comprehensive documentation&lt;/li&gt; 
 &lt;li&gt;🛠️ Practical, ready-to-use agent implementations&lt;/li&gt; 
 &lt;li&gt;🌟 Regular updates with the latest advancements in GenAI&lt;/li&gt; 
 &lt;li&gt;🤝 Share your own agent creations with the community&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;GenAI Agent Implementations&lt;/h2&gt; 
&lt;p&gt;Explore our extensive list of GenAI agent implementations, sorted by categories:&lt;/p&gt; 
&lt;h3&gt;🌱 Beginner-Friendly Agents&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Simple Conversational Agent&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/simple_conversational_agent.ipynb&quot;&gt;LangChain&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/simple_conversational_agent-pydanticai.ipynb&quot;&gt;PydanticAI&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A context-aware conversational AI maintains information across interactions, enabling more natural dialogues.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Integrates a language model, prompt template, and history manager to generate contextual responses and track conversation sessions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/simple_question_answering_agent.ipynb&quot;&gt;Simple Question Answering Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;Answering (QA) agent using LangChain and OpenAI&#39;s language model understands user queries and provides relevant, concise answers.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Combines OpenAI&#39;s GPT model, a prompt template, and an LLMChain to process user questions and generate AI-driven responses in a streamlined manner.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Simple Data Analysis Agent&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/simple_data_analysis_agent_notebook.ipynb&quot;&gt;LangChain&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/simple_data_analysis_agent_notebook-pydanticai.ipynb&quot;&gt;PydanticAI&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An AI-powered data analysis agent interprets and answers questions about datasets using natural language, combining language models with data manipulation tools for intuitive data exploration.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Integrates a language model, data manipulation framework, and agent framework to process natural language queries and perform data analysis on a synthetic dataset, enabling accessible insights for non-technical users.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🔧 Framework Tutorial: LangGraph&lt;/h3&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/langgraph-tutorial.ipynb&quot;&gt;Introduction to LangGraph: Building Modular AI Workflows&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;This tutorial introduces LangGraph, a powerful framework for creating modular, graph-based AI workflows. Learn how to leverage LangGraph to build more complex and flexible AI agents that can handle multi-step processes efficiently.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Step-by-step guide on using LangGraph to create a StateGraph workflow. The tutorial covers key concepts such as state management, node creation, and graph compilation. It demonstrates these principles by constructing a simple text analysis pipeline, serving as a foundation for more advanced agent architectures.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://open.substack.com/pub/diamantai/p/your-first-ai-agent-simpler-than?r=336pe4&amp;amp;utm_campaign=post&amp;amp;utm_medium=web&amp;amp;showWelcomeOnShare=false&quot;&gt;Blog Post&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🎓 Educational and Research Agents&lt;/h3&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/Academic_Task_Learning_Agent_LangGraph.ipynb&quot;&gt;ATLAS: Academic Task and Learning Agent System&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;ATLAS demonstrates how to build an intelligent multi-agent system that transforms academic support through AI-powered assistance. The system leverages LangGraph&#39;s workflow framework to coordinate multiple specialized agents that provide personalized academic planning, note-taking, and advisory support.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements a state-managed multi-agent architecture using four specialized agents (Coordinator, Planner, Notewriter, and Advisor) working in concert through LangGraph&#39;s workflow framework. The system features sophisticated workflows for profile analysis and academic support, with continuous adaptation based on student performance and feedback.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=yxowMLL2dDI&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://open.substack.com/pub/diamantai/p/atlas-when-artificial-intelligence?r=336pe4&amp;amp;utm_campaign=post&amp;amp;utm_medium=web&amp;amp;showWelcomeOnShare=false&quot;&gt;Blog Post&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/scientific_paper_agent_langgraph.ipynb&quot;&gt;Scientific Paper Agent - Literature Review&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An intelligent research assistant that helps users navigate, understand, and analyze scientific literature through an orchestrated workflow. The system combines academic APIs with sophisticated paper processing techniques to automate literature review tasks, enabling researchers to efficiently extract insights from academic papers while maintaining research rigor and quality control.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Leverages LangGraph to create a five-node workflow system including decision making, planning, tool execution, and quality validation nodes. The system integrates the CORE API for paper access, PDFplumber for document processing, and advanced language models for analysis. Key features include a retry mechanism for robust paper downloads, structured data handling through Pydantic models, and quality-focused improvement cycles with human-in-the-loop validation options.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://youtu.be/Bc4YtpHY6Ws&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://open.substack.com/pub/diamantai/p/nexus-ai-the-revolutionary-research?r=336pe4&amp;amp;utm_campaign=post&amp;amp;utm_medium=web&amp;amp;showWelcomeOnShare=false&quot;&gt;Blog Post&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/chiron_learning_agent_langgraph.ipynb&quot;&gt;Chiron - A Feynman-Enhanced Learning Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An adaptive learning agent that guides users through educational content using a structured checkpoint system and Feynman-style teaching. The system processes learning materials (either user-provided or web-retrieved), verifies understanding through interactive checkpoints, and provides simplified explanations when needed, creating a personalized learning experience that mimics one-on-one tutoring.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Uses LangGraph to orchestrate a learning workflow that includes checkpoint definition, context building, understanding verification, and Feynman teaching nodes. The system integrates web search for dynamic content retrieval, employs semantic chunking for context processing, and manages embeddings for relevant information retrieval. Key features include a 70% understanding threshold for progression, interactive human-in-the-loop validation, and structured output through Pydantic models for consistent data handling.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=qsdiTGkB8mk&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;💼 Business and Professional Agents&lt;/h3&gt; 
&lt;ol start=&quot;8&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/customer_support_agent_langgraph.ipynb&quot;&gt;Customer Support Agent (LangGraph)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An intelligent customer support agent using LangGraph categorizes queries, analyzes sentiment, and provides appropriate responses or escalates issues.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes LangGraph to create a workflow combining state management, query categorization, sentiment analysis, and response generation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/essay_grading_system_langgraph.ipynb&quot;&gt;Essay Grading Agent (LangGraph)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An automated essay grading system using LangGraph and an LLM model evaluates essays based on relevance, grammar, structure, and depth of analysis.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes a state graph to define the grading workflow, incorporating separate grading functions for each criterion.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/simple_travel_planner_langgraph.ipynb&quot;&gt;Travel Planning Agent (LangGraph)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A Travel Planner using LangGraph demonstrates how to build a stateful, multi-step conversational AI application that collects user input and generates personalized travel itineraries.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes StateGraph to define the application flow, incorporates custom PlannerState for process management.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/agent_hackathon_genAI_career_assistant.ipynb&quot;&gt;GenAI Career Assistant Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;The GenAI Career Assistant demonstrates how to create a multi-agent system that provides personalized guidance for careers in Generative AI. Using LangGraph and Gemini LLM, the system delivers customized learning paths, resume assistance, interview preparation, and job search support.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Leverages a multi-agent architecture using LangGraph to coordinate specialized agents (Learning, Resume, Interview, Job Search) through TypedDict-based state management. The system employs sophisticated query categorization and routing while integrating with external tools like DuckDuckGo for job searches and dynamic content generation.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=IcKh0ltXO_8&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/project_manager_assistant_agent.ipynb&quot;&gt;Project Manager Assistant Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An AI agent designed to assist in project management tasks by automating the process of creating actionable tasks from project descriptions, identifying dependencies, scheduling work, and assigning tasks to team members based on expertise. The system includes risk assessment and self-reflection capabilities to optimize project plans through multiple iterations, aiming to minimize overall project risk.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Leverages LangGraph to orchestrate a workflow of specialized nodes including task generation, dependency mapping, scheduling, allocation, and risk assessment. Each node uses GPT-4o-mini for structured outputs following Pydantic models. The system implements a feedback loop for self-improvement, where risk scores trigger reflection cycles that generate insights to optimize the project plan. Visualization tools display Gantt charts of the generated schedules across iterations.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=R7YWjzg3LpI&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/ClauseAI.ipynb&quot;&gt;Contract Analysis Assistant (ClauseAI)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;ClauseAI demonstrates how to build an AI-powered contract analysis system using a multi-agent approach. The system employs specialized AI agents for different aspects of contract review, from clause analysis to compliance checking, and leverages LangGraph for workflow orchestration and Pinecone for efficient clause retrieval and comparison.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements a sophisticated state-based workflow using LangGraph to coordinate multiple AI agents through contract analysis stages. The system features Pydantic models for data validation, vector storage with Pinecone for clause comparison, and LLM-based analysis for generating comprehensive contract reports. The implementation includes parallel processing capabilities and customizable report generation based on user requirements.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=rP8uv_tXuSI&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/e2e_testing_agent.ipynb&quot;&gt;E2E Testing Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;The E2E Testing Agent demonstrates how to build an AI-powered system that converts natural language test instructions into executable end-to-end web tests. Using LangGraph for workflow orchestration and Playwright for browser automation, the system enables users to specify test cases in plain English while handling the complexity of test generation and execution.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements a structured workflow using LangGraph to coordinate test generation, validation, and execution. The system features TypedDict state management, integration with Playwright for browser automation, and LLM-based code generation for converting natural language instructions into executable test scripts. The implementation includes DOM state analysis, error handling, and comprehensive test reporting.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jPXtpzcCtyA&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🎨 Creative and Content Generation Agents&lt;/h3&gt; 
&lt;ol start=&quot;15&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/gif_animation_generator_langgraph.ipynb&quot;&gt;GIF Animation Generator Agent (LangGraph)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A GIF animation generator that integrates LangGraph for workflow management, GPT-4 for text generation, and DALL-E for image creation, producing custom animations from user prompts.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes LangGraph to orchestrate a workflow that generates character descriptions, plots, and image prompts using GPT-4, creates images with DALL-E 3, and assembles them into GIFs using PIL. Employs asynchronous programming for efficient parallel processing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/tts_poem_generator_agent_langgraph.ipynb&quot;&gt;TTS Poem Generator Agent (LangGraph)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An advanced text-to-speech (TTS) agent using LangGraph and OpenAI&#39;s APIs classifies input text, processes it based on content type, and generates corresponding speech output.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes LangGraph to orchestrate a workflow that classifies input text using GPT models, applies content-specific processing, and converts the processed text to speech using OpenAI&#39;s TTS API. The system adapts its output based on the identified content type (general, poem, news, or joke).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/music_compositor_agent_langgraph.ipynb&quot;&gt;Music Compositor Agent (LangGraph)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An AI Music Compositor using LangGraph and OpenAI&#39;s language models generates custom musical compositions based on user input. The system processes the input through specialized components, each contributing to the final musical piece, which is then converted to a playable MIDI file.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;LangGraph orchestrates a workflow that transforms user input into a musical composition, using ChatOpenAI (GPT-4) to generate melody, harmony, and rhythm, which are then style-adapted. The final AI-generated composition is converted to a MIDI file using music21 and can be played back using pygame.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/ContentIntelligence.ipynb&quot;&gt;Content Intelligence: Multi-Platform Content Generation Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;Content Intelligence demonstrates how to build an advanced content generation system that transforms input text into platform-optimized content across multiple social media channels. The system employs LangGraph for workflow orchestration to analyze content, conduct research, and generate tailored content while maintaining brand consistency across different platforms.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements a sophisticated workflow using LangGraph to coordinate multiple specialized nodes (Summary, Research, Platform-Specific) through the content generation process. The system features TypedDict and Pydantic models for state management, integration with Tavily Search for research enhancement, and platform-specific content generation using GPT-4. The implementation includes parallel processing for multiple platforms and customizable content templates.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=DPMtPbKmWnU&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/business_meme_generator.ipynb&quot;&gt;Business Meme Generator Using LangGraph and Memegen.link&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;The Business Meme Generator demonstrates how to create an AI-powered system that generates contextually relevant memes based on company website analysis. Using LangGraph for workflow orchestration, the system combines Groq&#39;s Llama model for text analysis and the Memegen.link API to automatically produce brand-aligned memes for digital marketing.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements a state-managed workflow using LangGraph to coordinate website content analysis, meme concept generation, and image creation. The system features Pydantic models for data validation, asynchronous processing with aiohttp, and integration with external APIs (Groq, Memegen.link) to create a complete meme generation pipeline with customizable templates.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://youtu.be/lsdDaGmkSCw?si=oF3CGfhbRqz1_Vm8&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/murder_mystery_agent_langgraph.ipynb&quot;&gt;Murder Mystery Game with LLM Agents&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A text-based detective game that utilizes autonomous LLM agents as interactive characters in a procedurally generated murder mystery. Drawing inspiration from the UNBOUNDED paper, the system creates unique scenarios each time, with players taking on the role of Sherlock Holmes to solve the case through character interviews and deductive reasoning.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Leverages two LangGraph workflows - a main game loop for story/character generation and game progression, and a conversation sub-graph for character interactions. The system uses a combination of LLM-powered narrative generation, character AI, and structured game mechanics to create an immersive investigative experience with replayable storylines.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_3cJYlk2EmA&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📊 Analysis and Information Processing Agents&lt;/h3&gt; 
&lt;ol start=&quot;21&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/memory_enhanced_conversational_agent.ipynb&quot;&gt;Memory-Enhanced Conversational Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A memory-enhanced conversational AI agent incorporates short-term and long-term memory systems to maintain context within conversations and across multiple sessions, improving interaction quality and personalization.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Integrates a language model with separate short-term and long-term memory stores, utilizes a prompt template incorporating both memory types, and employs a memory manager for storage and retrieval. The system includes an interaction loop that updates and utilizes memories for each response.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/multi_agent_collaboration_system.ipynb&quot;&gt;Multi-Agent Collaboration System&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A multi-agent collaboration system combining historical research with data analysis, leveraging large language models to simulate specialized agents working together to answer complex historical questions.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes a base Agent class to create specialized HistoryResearchAgent and DataAnalysisAgent, orchestrated by a HistoryDataCollaborationSystem. The system follows a five-step process: historical context provision, data needs identification, historical data provision, data analysis, and final synthesis.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/self_improving_agent.ipynb&quot;&gt;Self-Improving Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A Self-Improving Agent using LangChain engages in conversations, learns from interactions, and continuously improves its performance over time through reflection and adaptation.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Integrates a language model with chat history management, response generation, and a reflection mechanism. The system employs a learning system that incorporates insights from reflection to enhance future performance, creating a continuous improvement loop.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/task_oriented_agent.ipynb&quot;&gt;Task-Oriented Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A language model application using LangChain that summarizes text and translates the summary to Spanish, combining custom functions, structured tools, and an agent for efficient text processing.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes custom functions for summarization and translation, wrapped as structured tools. Employs a prompt template to guide the agent, which orchestrates the use of tools. An agent executor manages the process, taking input text and producing both an English summary and its Spanish translation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/search_the_internet_and_summarize.ipynb&quot;&gt;Internet Search and Summarize Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An intelligent web research assistant that combines web search capabilities with AI-powered summarization, automating the process of gathering information from the internet and distilling it into concise, relevant summaries.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Integrates a web search module using DuckDuckGo&#39;s API, a result parser, and a text summarization engine leveraging OpenAI&#39;s language models. The system performs site-specific or general searches, extracts relevant content, generates concise summaries, and compiles attributed results for efficient information retrieval and synthesis.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/research_team_autogen.ipynb&quot;&gt;Multi agent research team - Autogen&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;This technique explores a multi-agent system for collaborative research using the AutoGen library. It employs agents to solve tasks collaboratively, focusing on efficient execution and quality assurance. The system enhances research by distributing tasks among specialized agents.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Agents are configured with specific roles using the GPT-4 model, including admin, developer, planner, executor, and quality assurance. Interaction management ensures orderly communication with defined transitions. Task execution involves collaborative planning, coding, execution, and quality checking, demonstrating a scalable framework for various domains.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/yanivvak/dream-team&quot;&gt;comprehensive solution with UI&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/build-your-dream-team-with-autogen/ba-p/4157961&quot;&gt;Blogpost&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/sales_call_analyzer_agent.ipynb&quot;&gt;Sales Call Analyzer&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An intelligent system that automates the analysis of sales call recordings by combining audio transcription with advanced natural language processing. The analyzer transcribes audio using OpenAI&#39;s Whisper, processes the text using NLP techniques, and generates comprehensive reports including sentiment analysis, key phrases, pain points, and actionable recommendations to improve sales performance.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes multiple components in a structured workflow: OpenAI Whisper for audio transcription, CrewAI for task automation and agent management, and LangChain for orchestrating the analysis pipeline. The system processes audio through a series of steps from transcription to detailed analysis, leveraging custom agents and tasks to generate structured JSON reports containing insights about customer sentiment, sales opportunities, and recommended improvements.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=SKAt_PvznDw&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/Weather_Disaster_Management_AI_AGENT.ipynb&quot;&gt;Weather Emergency &amp;amp; Response System&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A comprehensive system demonstrating two agent graph implementations for weather emergency response: a real-time graph processing live weather data, and a hybrid graph combining real and simulated data for testing high-severity scenarios. The system handles complete workflow from data gathering through emergency plan generation, with automated notifications and human verification steps.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes LangGraph for orchestrating complex workflows with state management, integrating OpenWeatherMap API for real-time data, and Gemini for analysis and response generation. The system incorporates email notifications, social media monitoring simulation, and severity-based routing with configurable human verification for low/medium severity events.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=AgiOAJl_apw&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/self_healing_code.ipynb&quot;&gt;Self-Healing Codebase System&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An intelligent system that automatically detects, diagnoses, and fixes runtime code errors using LangGraph workflow orchestration and ChromaDB vector storage. The system maintains a memory of encountered bugs and their fixes through vector embeddings, enabling pattern recognition for similar errors across the codebase.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes a state-based graph workflow that processes function definitions and runtime arguments through specialized nodes for error detection, code analysis, and fix generation. Incorporates ChromaDB for vector-based storage of bug patterns and fixes, with automated search and retrieval capabilities for similar error patterns, while maintaining code execution safety through structured validation steps.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ga7ShvIXOvE&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/database_discovery_fleet.ipynb&quot;&gt;DataScribe: AI-Powered Schema Explorer&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An intelligent agent system that enables intuitive exploration and querying of relational databases through natural language interactions. The system utilizes a fleet of specialized agents, coordinated by a stateful Supervisor, to handle schema discovery, query planning, and data analysis tasks while maintaining contextual understanding through vector-based relationship graphs.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Leverages LangGraph for orchestrating a multi-agent workflow including discovery, inference, and planning agents, with NetworkX for relationship graph visualization and management. The system incorporates dynamic state management through TypedDict classes, maintains database context between sessions using a db_graph attribute, and includes safety measures to prevent unauthorized database modifications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/memory-agent-tutorial.ipynb&quot;&gt;Memory-Enhanced Email Agent (LangGraph &amp;amp; LangMem)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An intelligent email assistant that combines three types of memory (semantic, episodic, and procedural) to create a system that improves over time. The agent can triage incoming emails, draft contextually appropriate responses using stored knowledge, and enhance its performance based on user feedback.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Leverages LangGraph for workflow orchestration and LangMem for sophisticated memory management across multiple memory types. The system implements a triage workflow with memory-enhanced decision making, specialized tools for email composition and calendar management, and a self-improvement mechanism that updates its own prompts based on feedback and past performance.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;**&lt;a href=&quot;https://open.substack.com/pub/diamantai/p/building-an-ai-agent-with-memory?r=336pe4&amp;amp;utm_campaign=post&amp;amp;utm_medium=web&amp;amp;showWelcomeOnShare=false&quot;&gt;Blog Post&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📰 News and Information Agents&lt;/h3&gt; 
&lt;ol start=&quot;32&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/news_tldr_langgraph.ipynb&quot;&gt;News TL;DR using LangGraph&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A news summarization system that generates concise TL;DR summaries of current events based on user queries. The system leverages large language models for decision making and summarization while integrating with news APIs to access up-to-date content, allowing users to quickly catch up on topics of interest through generated bullet-point summaries.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes LangGraph to orchestrate a workflow combining multiple components: GPT-4o-mini for generating search terms and article summaries, NewsAPI for retrieving article metadata, BeautifulSoup for web scraping article content, and Asyncio for concurrent processing. The system follows a structured pipeline from query processing through article selection and summarization, managing the flow between components to produce relevant TL;DRs of current news articles.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0fRxW6miybI&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://open.substack.com/pub/diamantai/p/stop-reading-start-understanding?r=336pe4&amp;amp;utm_campaign=post&amp;amp;utm_medium=web&amp;amp;showWelcomeOnShare=false&quot;&gt;Blog Post&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/ainsight_langgraph.ipynb&quot;&gt;AInsight: AI/ML Weekly News Reporter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;AInsight demonstrates how to build an intelligent news aggregation and summarization system using a multi-agent architecture. The system employs three specialized agents (NewsSearcher, Summarizer, Publisher) to automatically collect, process and summarize AI/ML news for general audiences through LangGraph-based workflow orchestration.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements a state-managed multi-agent system using LangGraph to coordinate the news collection (Tavily API), technical content summarization (GPT-4), and report generation processes. The system features modular architecture with TypedDict-based state management, external API integration, and markdown report generation with customizable templates.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=kH5S1is2D_0&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/journalism_focused_ai_assistant_langgraph.ipynb&quot;&gt;Journalism-Focused AI Assistant&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A specialized AI assistant that helps journalists tackle modern journalistic challenges like misinformation, bias, and information overload. The system integrates fact-checking, tone analysis, summarization, and grammar review tools to enhance the accuracy and efficiency of journalistic work while maintaining ethical reporting standards.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Leverages LangGraph to orchestrate a workflow of specialized components including language models for analysis and generation, web search integration via DuckDuckGo&#39;s API, document parsing tools like PyMuPDFLoader and WebBaseLoader, text splitting with RecursiveCharacterTextSplitter, and structured JSON outputs. Each component works together through a unified workflow to analyze content, verify facts, detect bias, extract quotes, and generate comprehensive reports.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/blog_writer_swarm.ipynb&quot;&gt;Blog Writer (Open AI Swarm)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A multi-agent system for collaborative blog post creation using OpenAI&#39;s Swarm package. It leverages specialized agents to perform research, planning, writing, and editing tasks efficiently.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes OpenAI&#39;s Swarm Package to manage agent interactions. Includes an admin, researcher, planner, writer, and editor, each with specific roles. The system follows a structured workflow: topic setting, outlining, research, drafting, and editing. This approach enhances content creation through task distribution, specialization, and collaborative problem-solving.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/openai/swarm&quot;&gt;Swarm Repo&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/generate_podcast_agent_langgraph.ipynb&quot;&gt;Podcast Internet Search and Generate Agent 🎙️&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A two step agent that first searches the internet for a given topic and then generates a podcast on the topic found. The search step uses a search agent and search function to find the most relevant information. The second step uses a podcast generation agent and generation function to create a podcast on the topic found.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes LangGraph to orchestrate a two-step workflow. The first step involves a search agent and function to gather information from the internet. The second step uses a podcast generation agent and function to create a podcast based on the gathered information.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🛍️ Shopping and Product Analysis Agents&lt;/h3&gt; 
&lt;ol start=&quot;37&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/ShopGenie.ipynb&quot;&gt;ShopGenie - Redefining Online Shopping Customer Experience&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An AI-powered shopping assistant that helps customers make informed purchasing decisions even without domain expertise. The system analyzes product information from multiple sources, compares specifications and reviews, identifies the best option based on user needs, and delivers recommendations through email with supporting video reviews, creating a comprehensive shopping experience.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Uses LangGraph to orchestrate a workflow combining Tavily for web search, Llama-3.1-70B for structured data analysis and product comparison, and YouTube API for review video retrieval. The system processes search results through multiple nodes including schema mapping, product comparison, review identification, and email generation. Key features include structured Pydantic models for consistent data handling, retry mechanisms for robust API interactions, and email delivery through SMTP for sharing recommendations.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Js0sK0u53dQ&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/car_buyer_agent_langgraph.ipynb&quot;&gt;Car Buyer AI Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;The Smart Product Buyer AI Agent demonstrates how to build an intelligent system that assists users in making informed purchasing decisions. Using LangGraph and LLM-based intelligence, the system processes user requirements, scrapes product listings from websites like AutoTrader, and provides detailed analysis and recommendations for car purchases.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements a state-based workflow using LangGraph to coordinate user interaction, web scraping, and decision support. The system features TypedDict state management, async web scraping with Playwright, and integrates with external APIs for comprehensive product analysis. The implementation includes a Gradio interface for real-time chat interaction and modular scraper architecture for easy extension to additional product categories.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=I61I1fp0qys&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🎯 Task Management and Productivity Agents&lt;/h3&gt; 
&lt;ol start=&quot;39&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/taskifier.ipynb&quot;&gt;Taskifier - Intelligent Task Allocation &amp;amp; Management&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An intelligent task management system that analyzes user work styles and creates personalized task breakdown strategies, born from the observation that procrastination often stems from task ambiguity among students and early-career professionals. The system evaluates historical work patterns, gathers relevant task information through web search, and generates customized step-by-step approaches to optimize productivity and reduce workflow paralysis.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Leverages LangGraph for orchestrating a multi-step workflow including work style analysis, information gathering via Tavily API, and customized plan generation. The system maintains state through the process, integrating historical work pattern data with fresh task research to output detailed, personalized task execution plans aligned with the user&#39;s natural working style.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=1W_p_RVi9KE&amp;amp;t=25s&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/grocery_management_agents_system.ipynb&quot;&gt;Grocery Management Agents System&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A multi-agent system built with CrewAI that automates grocery management tasks including receipt interpretation, expiration date tracking, inventory management, and recipe recommendations. The system uses specialized agents to extract data from receipts, estimate product shelf life, track consumption, and suggest recipes to minimize food waste.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements four specialized agents using CrewAI - a Receipt Interpreter that extracts item details from receipts, an Expiration Date Estimator that determines shelf life using online sources, a Grocery Tracker that maintains inventory based on consumption, and a Recipe Recommender that suggests meals using available ingredients. Each agent has specific tools and tasks orchestrated through a crew workflow.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FlMu5pKSaHI&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🔍 Quality Assurance and Testing Agents&lt;/h3&gt; 
&lt;ol start=&quot;41&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/graph_inspector_system_langgraph.ipynb&quot;&gt;LangGraph-Based Systems Inspector&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A comprehensive testing and validation tool for LangGraph-based applications that automatically analyzes system architecture, generates test cases, and identifies potential vulnerabilities through multi-agent inspection. The inspector employs specialized AI testers to evaluate different aspects of the system, from basic functionality to security concerns and edge cases.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Integrates LangGraph for workflow orchestration, multiple LLM-powered testing agents, and a structured evaluation pipeline that includes static analysis, test case generation, and results verification. The system uses Pydantic for data validation, NetworkX for graph representation, and implements a modular architecture that allows for parallel test execution and comprehensive result analysis.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=fQd6lXc-Y9A&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://open.substack.com/pub/diamantai/p/langgraph-systems-inspector-an-ai?r=336pe4&amp;amp;utm_campaign=post&amp;amp;utm_medium=web&amp;amp;showWelcomeOnShare=false&quot;&gt;Blog Post&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/EU_Green_Compliance_FAQ_Bot.ipynb&quot;&gt;EU Green Deal FAQ Bot&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;The EU Green Deal FAQ Bot demonstrates how to build a RAG-based AI agent that helps businesses understand EU green deal policies. The system processes complex regulatory documents into manageable chunks and provides instant, accurate answers to common questions about environmental compliance, emissions reporting, and waste management requirements.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Implements a sophisticated RAG pipeline using FAISS vectorstore for document storage, semantic chunking for preprocessing, and multiple specialized agents (Retriever, Summarizer, Evaluator) for query processing. The system features query rephrasing for improved accuracy, cross-reference with gold Q&amp;amp;A datasets for answer validation, and comprehensive evaluation metrics to ensure response quality and relevance.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Av0kBQjwU-Y&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/systematic_review_of_scientific_articles.ipynb&quot;&gt;Systematic Review Automation System + Paper Draft Creation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;A comprehensive system for automating academic systematic reviews using a directed graph architecture and LangChain components. The system generates complete, publication-ready systematic review papers, automatically processing everything from literature search through final draft generation with multiple revision cycles.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;Utilizes a state-based graph workflow that handles paper search and selection (up to 3 papers), PDF processing, and generates a complete academic paper with all standard sections (abstract, introduction, methods, results, conclusions, references). The system incorporates multiple revision cycles with automated critique and improvement phases, all orchestrated through LangGraph state management.&lt;/p&gt; &lt;h4&gt;Additional Resources 📚&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=qi35mGGkCtg&quot;&gt;YouTube Explanation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🌟 Special Advanced Technique 🌟&lt;/h3&gt; 
&lt;ol start=&quot;44&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/NirDiamant/Controllable-RAG-Agent&quot;&gt;Sophisticated Controllable Agent for Complex RAG Tasks 🤖&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4&gt;Overview 🔎&lt;/h4&gt; &lt;p&gt;An advanced RAG solution designed to tackle complex questions that simple semantic similarity-based retrieval cannot solve. This approach uses a sophisticated deterministic graph as the &quot;brain&quot; 🧠 of a highly controllable autonomous agent, capable of answering non-trivial questions from your own data.&lt;/p&gt; &lt;h4&gt;Implementation 🛠️&lt;/h4&gt; &lt;p&gt;• Implement a multi-step process involving question anonymization, high-level planning, task breakdown, adaptive information retrieval and question answering, continuous re-planning, and rigorous answer verification to ensure grounded and accurate responses.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To begin exploring and building GenAI agents:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repository: &lt;pre&gt;&lt;code&gt;git clone https://github.com/NirDiamant/GenAI_Agents.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Navigate to the technique you&#39;re interested in: &lt;pre&gt;&lt;code&gt;cd all_agents_tutorials/technique-name
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Follow the detailed implementation guide in each technique&#39;s notebook.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! If you have a new technique or improvement to suggest:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create your feature branch: &lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Commit your changes: &lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Push to the branch: &lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NirDiamant/GenAI_Agents/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=NirDiamant/GenAI_Agents&quot; alt=&quot;Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under a custom non-commercial license - see the &lt;a href=&quot;https://raw.githubusercontent.com/NirDiamant/GenAI_Agents/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;⭐️ If you find this repository helpful, please consider giving it a star!&lt;/p&gt; 
&lt;p&gt;Keywords: GenAI, Generative AI, Agents, NLP, AI, Machine Learning, Natural Language Processing, LLM, Conversational AI, Task-Oriented AI&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alibaba/spring-ai-alibaba</title>
      <link>https://github.com/alibaba/spring-ai-alibaba</link>
      <description>&lt;p&gt;Agentic AI Framework for Java Developers&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;The community driven Spring AI Alibaba OpenManus implementtation can be found at &lt;a href=&quot;https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/community/openmanus&quot;&gt;community/openmanus&lt;/a&gt; module.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;&lt;a href=&quot;https://java2ai.com&quot;&gt;Spring AI Alibaba&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/README-zh.md&quot;&gt;中文版本&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An AI application framework for Java developers built on top of Spring AI that provides seamless integration with Alibaba Cloud QWen LLM services and cloud-native infrastructures.&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;Please refer to &lt;a href=&quot;https://java2ai.com/docs/dev/get-started/&quot;&gt;quick start&lt;/a&gt; for how to quickly add generative AI to your Spring Boot applications.&lt;/p&gt; 
&lt;p&gt;Overall, it takes only two steps to turn your Spring Boot application into an intelligent agent:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Because Spring AI Alibaba is developed based on Spring Boot 3.x, it requires JDK version 17 and above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add &lt;code&gt;spring-ai-alibaba-starter&lt;/code&gt; dependency to your project.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;com.alibaba.cloud.ai&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;spring-ai-alibaba-starter&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;1.0.0-M6.1&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTICE: Since spring-ai related packages haven&#39;t been published to the central repo yet, it&#39;s needed to add the following maven repository to your project in order to successfully resolve artifacts like spring-ai-core.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;repositories&amp;gt;
 &amp;lt;repository&amp;gt;
  &amp;lt;id&amp;gt;spring-milestones&amp;lt;/id&amp;gt;
  &amp;lt;name&amp;gt;Spring Milestones&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;https://repo.spring.io/milestone&amp;lt;/url&amp;gt;
  &amp;lt;snapshots&amp;gt;
   &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;
  &amp;lt;/snapshots&amp;gt;
 &amp;lt;/repository&amp;gt;
&amp;lt;/repositories&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Addendum: If the mirrorOf tag in your local Maven settings. xml is configured with the wildcard *, please modify it according to the following example.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;mirror&amp;gt;
  &amp;lt;id&amp;gt;xxxx&amp;lt;/id&amp;gt;
  &amp;lt;mirrorOf&amp;gt;*,!spring-milestones&amp;lt;/mirrorOf&amp;gt;
  &amp;lt;name&amp;gt;xxxx&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;xxxx&amp;lt;/url&amp;gt;
&amp;lt;/mirror&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Inject &lt;code&gt;ChatClient&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@RestController
public class ChatController {

 private final ChatClient chatClient;

 public ChatController(ChatClient.Builder builder) {
  this.chatClient = builder.build();
 }

 @GetMapping(&quot;/chat&quot;)
 public String chat(String input) {
  return this.chatClient.prompt()
    .user(input)
    .call()
    .content();
 }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/springaialibaba/spring-ai-alibaba-examples&quot;&gt;Spring AI Alibaba and Spring AI usage examples&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Core Features&lt;/h2&gt; 
&lt;p&gt;Spring AI Alibaba provides the following features, read the &lt;a href=&quot;https://java2ai.com/&quot;&gt;documentation&lt;/a&gt; on our website for more details of how to use these features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for Alibaba Cloud QWen Model and Dashscope Model service.&lt;/li&gt; 
 &lt;li&gt;Support high-level AI agent abstraction -- ChatClient.&lt;/li&gt; 
 &lt;li&gt;Support various Model types like Chat, Text to Image, Audio Transcription, Text to Speech.&lt;/li&gt; 
 &lt;li&gt;Both synchronous and stream API options are supported.&lt;/li&gt; 
 &lt;li&gt;Mapping of AI Model output to POJOs.&lt;/li&gt; 
 &lt;li&gt;Portable API across Vector Store providers.&lt;/li&gt; 
 &lt;li&gt;Function calling.&lt;/li&gt; 
 &lt;li&gt;Spring Boot Auto Configuration and Starters.&lt;/li&gt; 
 &lt;li&gt;RAG (Retrieval-Augmented Generation) support: DocumentReader, Splitter, Embedding, VectorStore, and Retriever.&lt;/li&gt; 
 &lt;li&gt;Support conversation with ChatMemory&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Spring AI Alibaba aims to reduce the complexity of building ai native java applications, from development, evaluation to deployment and observability. In order to achieve that, we provide both open-source framework and ecosystem integrations around it, below are the features that we plan to support in the near future:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prompt Template Management&lt;/li&gt; 
 &lt;li&gt;Event Driven AI Application&lt;/li&gt; 
 &lt;li&gt;Support of more Vector Databases&lt;/li&gt; 
 &lt;li&gt;Function Deployment&lt;/li&gt; 
 &lt;li&gt;Observability&lt;/li&gt; 
 &lt;li&gt;AI proxy support: prompt filtering, rate limit, multiple Model, etc.&lt;/li&gt; 
 &lt;li&gt;Development Tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/docs/imgs/spring-ai-alibaba-arch.png&quot; alt=&quot;ai-native-architecture&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contribution Guide&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; to learn how to participate in the development of Spring AI Alibaba.&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/index.html&quot;&gt;Spring AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://java2ai.com/docs/dev/overview/&quot;&gt;Spring AI Alibaba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://help.aliyun.com/zh/model-studio/getting-started/what-is-model-studio/&quot;&gt;Alibaba Cloud Dashscope Model Service Platform (阿里云百炼模型服务及应用开发平台)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Dingtalk Group (钉钉群), search &lt;code&gt;61290041831&lt;/code&gt; and join.&lt;/li&gt; 
 &lt;li&gt;Wechat Group (微信公众号), scan the QR code below and follow us.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/docs/imgs/wechat-account.png&quot; style=&quot;width:260px;&quot;&gt; 
&lt;h2&gt;Credit&lt;/h2&gt; 
&lt;p&gt;Some of this project&#39;s ideas and codes are inspired by or rewrote from the following projects. Great thanks to those who have created and open-sourced these projects.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai&quot;&gt;Spring AI&lt;/a&gt;, a Spring-friendly API and abstractions for developing AI applications licensed under the Apache License 2.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/langchain-ai/langgraph&quot;&gt;Langgraph&lt;/a&gt;, a library for building stateful, multi-actor applications with LLMs, used to create agent and multi-agent workflows licensed under the MIT license.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bsorrentino/langgraph4j&quot;&gt;Langgraph4J&lt;/a&gt;, a porting of original &lt;a href=&quot;https://github.com/langchain-ai/langgraph&quot;&gt;LangGraph&lt;/a&gt; from the &lt;a href=&quot;https://github.com/langchain-ai&quot;&gt;LangChain AI project&lt;/a&gt; in Java fashion.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
