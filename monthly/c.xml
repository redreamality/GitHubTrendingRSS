<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="data:text/xsl;base64,"?>
<rss version="2.0">
  <channel>
    <title>GitHub C Monthly Trending</title>
    <description>Monthly Trending of C in GitHub</description>
    <pubDate>Sat, 29 Mar 2025 02:42:52 GMT</pubDate>
    <link>http://redreamality.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>zephyrproject-rtos/zephyr</title>
      <link>https://github.com/zephyrproject-rtos/zephyr</link>
      <description>&lt;p&gt;Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. raw:: html&lt;/p&gt; 
&lt;a href=&quot;https://www.zephyrproject.org&quot;&gt; &lt;p align=&quot;center&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;doc/_static/images/logo-readme-dark.svg&quot;&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;doc/_static/images/logo-readme-light.svg&quot;&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/zephyrproject-rtos/zephyr/main/doc/_static/images/logo-readme-light.svg?sanitize=true&quot;&gt; 
  &lt;/picture&gt; &lt;/p&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/74&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/74/badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://scorecard.dev/viewer/?uri=github.com/zephyrproject-rtos/zephyr&quot;&gt;&lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/zephyrproject-rtos/zephyr/badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml?query=branch%3Amain&quot;&gt;&lt;img src=&quot;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml/badge.svg?event=push&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Zephyr Project is a scalable real-time operating system (RTOS) supporting multiple hardware architectures, optimized for resource constrained devices, and built with security in mind.&lt;/p&gt; 
&lt;p&gt;The Zephyr OS is based on a small-footprint kernel designed for use on resource-constrained systems: from simple embedded environmental sensors and LED wearables to sophisticated smart watches and IoT wireless gateways.&lt;/p&gt; 
&lt;p&gt;The Zephyr kernel supports multiple architectures, including ARM (Cortex-A, Cortex-R, Cortex-M), Intel x86, ARC, Nios II, Tensilica Xtensa, and RISC-V, SPARC, MIPS, and a large number of &lt;code&gt;supported boards&lt;/code&gt;_.&lt;/p&gt; 
&lt;p&gt;.. below included in doc/introduction/introduction.rst&lt;/p&gt; 
&lt;p&gt;Getting Started&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Welcome to Zephyr! See the &lt;code&gt;Introduction to Zephyr&lt;/code&gt;_ for a high-level overview, and the documentation&#39;s &lt;code&gt;Getting Started Guide&lt;/code&gt;_ to start developing.&lt;/p&gt; 
&lt;p&gt;.. start_include_here&lt;/p&gt; 
&lt;p&gt;Community Support&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Community support is provided via mailing lists and Discord; see the Resources below for details.&lt;/p&gt; 
&lt;p&gt;.. _project-resources:&lt;/p&gt; 
&lt;p&gt;Resources&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Here&#39;s a quick summary of resources to help you find your way around:&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;| 📖 &lt;code&gt;Zephyr Documentation&lt;/code&gt;_ | 🚀 &lt;code&gt;Getting Started Guide&lt;/code&gt;_ | 🙋🏽 &lt;code&gt;Tips when asking for help&lt;/code&gt;_ | 💻 &lt;code&gt;Code samples&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Code and Development&lt;/h2&gt; 
&lt;p&gt;| 🌐 &lt;code&gt;Source Code Repository&lt;/code&gt;_ | 📦 &lt;code&gt;Releases&lt;/code&gt;_ | 🤝 &lt;code&gt;Contribution Guide&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Community and Support&lt;/h2&gt; 
&lt;p&gt;| 💬 &lt;code&gt;Discord Server&lt;/code&gt;_ for real-time community discussions | 📧 &lt;code&gt;User mailing list (users@lists.zephyrproject.org)&lt;/code&gt;_ | 📧 &lt;code&gt;Developer mailing list (devel@lists.zephyrproject.org)&lt;/code&gt;_ | 📬 &lt;code&gt;Other project mailing lists&lt;/code&gt;_ | 📚 &lt;code&gt;Project Wiki&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Issue Tracking and Security&lt;/h2&gt; 
&lt;p&gt;| 🐛 &lt;code&gt;GitHub Issues&lt;/code&gt;_ | 🔒 &lt;code&gt;Security documentation&lt;/code&gt;_ | 🛡️ &lt;code&gt;Security Advisories Repository&lt;/code&gt;_ | ⚠️ Report security vulnerabilities at &lt;a href=&quot;mailto:vulnerabilities@zephyrproject.org&quot;&gt;vulnerabilities@zephyrproject.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;p&gt;| 🌐 &lt;code&gt;Zephyr Project Website&lt;/code&gt;_ | 📺 &lt;code&gt;Zephyr Tech Talks&lt;/code&gt;_&lt;/p&gt; 
&lt;p&gt;.. _Zephyr Project Website: &lt;a href=&quot;https://www.zephyrproject.org&quot;&gt;https://www.zephyrproject.org&lt;/a&gt; .. _Discord Server: &lt;a href=&quot;https://chat.zephyrproject.org&quot;&gt;https://chat.zephyrproject.org&lt;/a&gt; .. _supported boards: &lt;a href=&quot;https://docs.zephyrproject.org/latest/boards/index.html&quot;&gt;https://docs.zephyrproject.org/latest/boards/index.html&lt;/a&gt; .. _Zephyr Documentation: &lt;a href=&quot;https://docs.zephyrproject.org&quot;&gt;https://docs.zephyrproject.org&lt;/a&gt; .. _Introduction to Zephyr: &lt;a href=&quot;https://docs.zephyrproject.org/latest/introduction/index.html&quot;&gt;https://docs.zephyrproject.org/latest/introduction/index.html&lt;/a&gt; .. _Getting Started Guide: &lt;a href=&quot;https://docs.zephyrproject.org/latest/develop/getting_started/index.html&quot;&gt;https://docs.zephyrproject.org/latest/develop/getting_started/index.html&lt;/a&gt; .. _Contribution Guide: &lt;a href=&quot;https://docs.zephyrproject.org/latest/contribute/index.html&quot;&gt;https://docs.zephyrproject.org/latest/contribute/index.html&lt;/a&gt; .. _Source Code Repository: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr&quot;&gt;https://github.com/zephyrproject-rtos/zephyr&lt;/a&gt; .. _GitHub Issues: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/issues&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/issues&lt;/a&gt; .. _Releases: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/releases&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/releases&lt;/a&gt; .. _Project Wiki: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/wiki&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/wiki&lt;/a&gt; .. _User mailing list (&lt;a href=&quot;mailto:users@lists.zephyrproject.org&quot;&gt;users@lists.zephyrproject.org&lt;/a&gt;): &lt;a href=&quot;https://lists.zephyrproject.org/g/users&quot;&gt;https://lists.zephyrproject.org/g/users&lt;/a&gt; .. _Developer mailing list (&lt;a href=&quot;mailto:devel@lists.zephyrproject.org&quot;&gt;devel@lists.zephyrproject.org&lt;/a&gt;): &lt;a href=&quot;https://lists.zephyrproject.org/g/devel&quot;&gt;https://lists.zephyrproject.org/g/devel&lt;/a&gt; .. _Other project mailing lists: &lt;a href=&quot;https://lists.zephyrproject.org/g/main/subgroups&quot;&gt;https://lists.zephyrproject.org/g/main/subgroups&lt;/a&gt; .. _Code samples: &lt;a href=&quot;https://docs.zephyrproject.org/latest/samples/index.html&quot;&gt;https://docs.zephyrproject.org/latest/samples/index.html&lt;/a&gt; .. _Security documentation: &lt;a href=&quot;https://docs.zephyrproject.org/latest/security/index.html&quot;&gt;https://docs.zephyrproject.org/latest/security/index.html&lt;/a&gt; .. _Security Advisories Repository: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/security&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/security&lt;/a&gt; .. _Tips when asking for help: &lt;a href=&quot;https://docs.zephyrproject.org/latest/develop/getting_started/index.html#asking-for-help&quot;&gt;https://docs.zephyrproject.org/latest/develop/getting_started/index.html#asking-for-help&lt;/a&gt; .. _Zephyr Tech Talks: &lt;a href=&quot;https://www.zephyrproject.org/tech-talks&quot;&gt;https://www.zephyrproject.org/tech-talks&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pgvector/pgvector</title>
      <link>https://github.com/pgvector/pgvector</link>
      <description>&lt;p&gt;Open-source vector similarity search for Postgres&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pgvector&lt;/h1&gt; 
&lt;p&gt;Open-source vector similarity search for Postgres&lt;/p&gt; 
&lt;p&gt;Store your vectors with the rest of your data. Supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;exact and approximate nearest neighbor search&lt;/li&gt; 
 &lt;li&gt;single-precision, half-precision, binary, and sparse vectors&lt;/li&gt; 
 &lt;li&gt;L2 distance, inner product, cosine distance, L1 distance, Hamming distance, and Jaccard distance&lt;/li&gt; 
 &lt;li&gt;any &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#languages&quot;&gt;language&lt;/a&gt; with a Postgres client&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Plus &lt;a href=&quot;https://en.wikipedia.org/wiki/ACID&quot;&gt;ACID&lt;/a&gt; compliance, point-in-time recovery, JOINs, and all of the other &lt;a href=&quot;https://www.postgresql.org/about/&quot;&gt;great features&lt;/a&gt; of Postgres&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector/actions&quot;&gt;&lt;img src=&quot;https://github.com/pgvector/pgvector/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Linux and Mac&lt;/h3&gt; 
&lt;p&gt;Compile and install the extension (supports Postgres 13+)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd /tmp
git clone --branch v0.8.0 https://github.com/pgvector/pgvector.git
cd pgvector
make
make install # may need sudo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#installation-notes---linux-and-mac&quot;&gt;installation notes&lt;/a&gt; if you run into issues&lt;/p&gt; 
&lt;p&gt;You can also install it with &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#docker&quot;&gt;Docker&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#homebrew&quot;&gt;Homebrew&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#pgxn&quot;&gt;PGXN&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#apt&quot;&gt;APT&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#yum&quot;&gt;Yum&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#pkg&quot;&gt;pkg&lt;/a&gt;, or &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#conda-forge&quot;&gt;conda-forge&lt;/a&gt;, and it comes preinstalled with &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#postgresapp&quot;&gt;Postgres.app&lt;/a&gt; and many &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#hosted-postgres&quot;&gt;hosted providers&lt;/a&gt;. There are also instructions for &lt;a href=&quot;https://github.com/pgvector/setup-pgvector&quot;&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Ensure &lt;a href=&quot;https://learn.microsoft.com/en-us/cpp/build/building-on-the-command-line?view=msvc-170#download-and-install-the-tools&quot;&gt;C++ support in Visual Studio&lt;/a&gt; is installed, and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;call &quot;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: The exact path will vary depending on your Visual Studio version and edition&lt;/p&gt; 
&lt;p&gt;Then use &lt;code&gt;nmake&lt;/code&gt; to build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;set &quot;PGROOT=C:\Program Files\PostgreSQL\16&quot;
cd %TEMP%
git clone --branch v0.8.0 https://github.com/pgvector/pgvector.git
cd pgvector
nmake /F Makefile.win
nmake /F Makefile.win install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#installation-notes---windows&quot;&gt;installation notes&lt;/a&gt; if you run into issues&lt;/p&gt; 
&lt;p&gt;You can also install it with &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#docker&quot;&gt;Docker&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#conda-forge&quot;&gt;conda-forge&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Enable the extension (do this once in each database where you want to use it)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsql&quot;&gt;CREATE EXTENSION vector;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a vector column with 3 dimensions&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Insert vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;INSERT INTO items (embedding) VALUES (&#39;[1,2,3]&#39;), (&#39;[4,5,6]&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get the nearest neighbors by L2 distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items ORDER BY embedding &amp;lt;-&amp;gt; &#39;[3,1,2]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also supports inner product (&lt;code&gt;&amp;lt;#&amp;gt;&lt;/code&gt;), cosine distance (&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;), and L1 distance (&lt;code&gt;&amp;lt;+&amp;gt;&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;Note: &lt;code&gt;&amp;lt;#&amp;gt;&lt;/code&gt; returns the negative inner product since Postgres only supports &lt;code&gt;ASC&lt;/code&gt; order index scans on operators&lt;/p&gt; 
&lt;h2&gt;Storing&lt;/h2&gt; 
&lt;p&gt;Create a new table with a vector column&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or add a vector column to an existing table&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;ALTER TABLE items ADD COLUMN embedding vector(3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also supports &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#half-precision-vectors&quot;&gt;half-precision&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#binary-vectors&quot;&gt;binary&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#sparse-vectors&quot;&gt;sparse&lt;/a&gt; vectors&lt;/p&gt; 
&lt;p&gt;Insert vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;INSERT INTO items (embedding) VALUES (&#39;[1,2,3]&#39;), (&#39;[4,5,6]&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or load vectors in bulk using &lt;code&gt;COPY&lt;/code&gt; (&lt;a href=&quot;https://github.com/pgvector/pgvector-python/raw/master/examples/loading/example.py&quot;&gt;example&lt;/a&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;COPY items (embedding) FROM STDIN WITH (FORMAT BINARY);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Upsert vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;INSERT INTO items (id, embedding) VALUES (1, &#39;[1,2,3]&#39;), (2, &#39;[4,5,6]&#39;)
    ON CONFLICT (id) DO UPDATE SET embedding = EXCLUDED.embedding;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;UPDATE items SET embedding = &#39;[1,2,3]&#39; WHERE id = 1;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Delete vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;DELETE FROM items WHERE id = 1;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Querying&lt;/h2&gt; 
&lt;p&gt;Get the nearest neighbors to a vector&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items ORDER BY embedding &amp;lt;-&amp;gt; &#39;[3,1,2]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Supported distance functions are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;-&amp;gt;&lt;/code&gt; - L2 distance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;#&amp;gt;&lt;/code&gt; - (negative) inner product&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; - cosine distance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;+&amp;gt;&lt;/code&gt; - L1 distance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;~&amp;gt;&lt;/code&gt; - Hamming distance (binary vectors)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;%&amp;gt;&lt;/code&gt; - Jaccard distance (binary vectors)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Get the nearest neighbors to a row&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items WHERE id != 1 ORDER BY embedding &amp;lt;-&amp;gt; (SELECT embedding FROM items WHERE id = 1) LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get rows within a certain distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items WHERE embedding &amp;lt;-&amp;gt; &#39;[3,1,2]&#39; &amp;lt; 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Combine with &lt;code&gt;ORDER BY&lt;/code&gt; and &lt;code&gt;LIMIT&lt;/code&gt; to use an index&lt;/p&gt; 
&lt;h4&gt;Distances&lt;/h4&gt; 
&lt;p&gt;Get the distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT embedding &amp;lt;-&amp;gt; &#39;[3,1,2]&#39; AS distance FROM items;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For inner product, multiply by -1 (since &lt;code&gt;&amp;lt;#&amp;gt;&lt;/code&gt; returns the negative inner product)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsql&quot;&gt;SELECT (embedding &amp;lt;#&amp;gt; &#39;[3,1,2]&#39;) * -1 AS inner_product FROM items;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For cosine similarity, use 1 - cosine distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT 1 - (embedding &amp;lt;=&amp;gt; &#39;[3,1,2]&#39;) AS cosine_similarity FROM items;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Aggregates&lt;/h4&gt; 
&lt;p&gt;Average vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT AVG(embedding) FROM items;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Average groups of vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT category_id, AVG(embedding) FROM items GROUP BY category_id;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Indexing&lt;/h2&gt; 
&lt;p&gt;By default, pgvector performs exact nearest neighbor search, which provides perfect recall.&lt;/p&gt; 
&lt;p&gt;You can add an index to use approximate nearest neighbor search, which trades some recall for speed. Unlike typical indexes, you will see different results for queries after adding an approximate index.&lt;/p&gt; 
&lt;p&gt;Supported index types are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#hnsw&quot;&gt;HNSW&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#ivfflat&quot;&gt;IVFFlat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HNSW&lt;/h2&gt; 
&lt;p&gt;An HNSW index creates a multilayer graph. It has better query performance than IVFFlat (in terms of speed-recall tradeoff), but has slower build times and uses more memory. Also, an index can be created without any data in the table since there isn’t a training step like IVFFlat.&lt;/p&gt; 
&lt;p&gt;Add an index for each distance function you want to use.&lt;/p&gt; 
&lt;p&gt;L2 distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding vector_l2_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Use &lt;code&gt;halfvec_l2_ops&lt;/code&gt; for &lt;code&gt;halfvec&lt;/code&gt; and &lt;code&gt;sparsevec_l2_ops&lt;/code&gt; for &lt;code&gt;sparsevec&lt;/code&gt; (and similar with the other distance functions)&lt;/p&gt; 
&lt;p&gt;Inner product&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding vector_ip_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Cosine distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding vector_cosine_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;L1 distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding vector_l1_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hamming distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding bit_hamming_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Jaccard distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding bit_jaccard_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Supported types are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;vector&lt;/code&gt; - up to 2,000 dimensions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;halfvec&lt;/code&gt; - up to 4,000 dimensions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bit&lt;/code&gt; - up to 64,000 dimensions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sparsevec&lt;/code&gt; - up to 1,000 non-zero elements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Index Options&lt;/h3&gt; 
&lt;p&gt;Specify HNSW parameters&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;m&lt;/code&gt; - the max number of connections per layer (16 by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ef_construction&lt;/code&gt; - the size of the dynamic candidate list for constructing the graph (64 by default)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding vector_l2_ops) WITH (m = 16, ef_construction = 64);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A higher value of &lt;code&gt;ef_construction&lt;/code&gt; provides better recall at the cost of index build time / insert speed.&lt;/p&gt; 
&lt;h3&gt;Query Options&lt;/h3&gt; 
&lt;p&gt;Specify the size of the dynamic candidate list for search (40 by default)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET hnsw.ef_search = 100;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A higher value provides better recall at the cost of speed.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;SET LOCAL&lt;/code&gt; inside a transaction to set it for a single query&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;BEGIN;
SET LOCAL hnsw.ef_search = 100;
SELECT ...
COMMIT;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Index Build Time&lt;/h3&gt; 
&lt;p&gt;Indexes build significantly faster when the graph fits into &lt;code&gt;maintenance_work_mem&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET maintenance_work_mem = &#39;8GB&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A notice is shown when the graph no longer fits&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;NOTICE:  hnsw graph no longer fits into maintenance_work_mem after 100000 tuples
DETAIL:  Building will take significantly more time.
HINT:  Increase maintenance_work_mem to speed up builds.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Do not set &lt;code&gt;maintenance_work_mem&lt;/code&gt; so high that it exhausts the memory on the server&lt;/p&gt; 
&lt;p&gt;Like other index types, it’s faster to create an index after loading your initial data&lt;/p&gt; 
&lt;p&gt;You can also speed up index creation by increasing the number of parallel workers (2 by default)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET max_parallel_maintenance_workers = 7; -- plus leader
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a large number of workers, you may need to increase &lt;code&gt;max_parallel_workers&lt;/code&gt; (8 by default)&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#index-options&quot;&gt;index options&lt;/a&gt; also have a significant impact on build time (use the defaults unless seeing low recall)&lt;/p&gt; 
&lt;h3&gt;Indexing Progress&lt;/h3&gt; 
&lt;p&gt;Check &lt;a href=&quot;https://www.postgresql.org/docs/current/progress-reporting.html#CREATE-INDEX-PROGRESS-REPORTING&quot;&gt;indexing progress&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT phase, round(100.0 * blocks_done / nullif(blocks_total, 0), 1) AS &quot;%&quot; FROM pg_stat_progress_create_index;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The phases for HNSW are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;initializing&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;loading tuples&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;IVFFlat&lt;/h2&gt; 
&lt;p&gt;An IVFFlat index divides vectors into lists, and then searches a subset of those lists that are closest to the query vector. It has faster build times and uses less memory than HNSW, but has lower query performance (in terms of speed-recall tradeoff).&lt;/p&gt; 
&lt;p&gt;Three keys to achieving good recall are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create the index &lt;em&gt;after&lt;/em&gt; the table has some data&lt;/li&gt; 
 &lt;li&gt;Choose an appropriate number of lists - a good place to start is &lt;code&gt;rows / 1000&lt;/code&gt; for up to 1M rows and &lt;code&gt;sqrt(rows)&lt;/code&gt; for over 1M rows&lt;/li&gt; 
 &lt;li&gt;When querying, specify an appropriate number of &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#query-options&quot;&gt;probes&lt;/a&gt; (higher is better for recall, lower is better for speed) - a good place to start is &lt;code&gt;sqrt(lists)&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Add an index for each distance function you want to use.&lt;/p&gt; 
&lt;p&gt;L2 distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING ivfflat (embedding vector_l2_ops) WITH (lists = 100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Use &lt;code&gt;halfvec_l2_ops&lt;/code&gt; for &lt;code&gt;halfvec&lt;/code&gt; (and similar with the other distance functions)&lt;/p&gt; 
&lt;p&gt;Inner product&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING ivfflat (embedding vector_ip_ops) WITH (lists = 100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Cosine distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING ivfflat (embedding vector_cosine_ops) WITH (lists = 100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hamming distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING ivfflat (embedding bit_hamming_ops) WITH (lists = 100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Supported types are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;vector&lt;/code&gt; - up to 2,000 dimensions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;halfvec&lt;/code&gt; - up to 4,000 dimensions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bit&lt;/code&gt; - up to 64,000 dimensions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Query Options&lt;/h3&gt; 
&lt;p&gt;Specify the number of probes (1 by default)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET ivfflat.probes = 10;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A higher value provides better recall at the cost of speed, and it can be set to the number of lists for exact nearest neighbor search (at which point the planner won’t use the index)&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;SET LOCAL&lt;/code&gt; inside a transaction to set it for a single query&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;BEGIN;
SET LOCAL ivfflat.probes = 10;
SELECT ...
COMMIT;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Index Build Time&lt;/h3&gt; 
&lt;p&gt;Speed up index creation on large tables by increasing the number of parallel workers (2 by default)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET max_parallel_maintenance_workers = 7; -- plus leader
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a large number of workers, you may also need to increase &lt;code&gt;max_parallel_workers&lt;/code&gt; (8 by default)&lt;/p&gt; 
&lt;h3&gt;Indexing Progress&lt;/h3&gt; 
&lt;p&gt;Check &lt;a href=&quot;https://www.postgresql.org/docs/current/progress-reporting.html#CREATE-INDEX-PROGRESS-REPORTING&quot;&gt;indexing progress&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT phase, round(100.0 * tuples_done / nullif(tuples_total, 0), 1) AS &quot;%&quot; FROM pg_stat_progress_create_index;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The phases for IVFFlat are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;initializing&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;performing k-means&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;assigning tuples&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;loading tuples&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Note: &lt;code&gt;%&lt;/code&gt; is only populated during the &lt;code&gt;loading tuples&lt;/code&gt; phase&lt;/p&gt; 
&lt;h2&gt;Filtering&lt;/h2&gt; 
&lt;p&gt;There are a few ways to index nearest neighbor queries with a &lt;code&gt;WHERE&lt;/code&gt; clause.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items WHERE category_id = 123 ORDER BY embedding &amp;lt;-&amp;gt; &#39;[3,1,2]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A good place to start is creating an index on the filter column. This can provide fast, exact nearest neighbor search in many cases. Postgres has a number of &lt;a href=&quot;https://www.postgresql.org/docs/current/indexes-types.html&quot;&gt;index types&lt;/a&gt; for this: B-tree (default), hash, GiST, SP-GiST, GIN, and BRIN.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items (category_id);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For multiple columns, consider a &lt;a href=&quot;https://www.postgresql.org/docs/current/indexes-multicolumn.html&quot;&gt;multicolumn index&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items (location_id, category_id);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Exact indexes work well for conditions that match a low percentage of rows. Otherwise, &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#indexing&quot;&gt;approximate indexes&lt;/a&gt; can work better.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding vector_l2_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With approximate indexes, filtering is applied &lt;em&gt;after&lt;/em&gt; the index is scanned. If a condition matches 10% of rows, with HNSW and the default &lt;code&gt;hnsw.ef_search&lt;/code&gt; of 40, only 4 rows will match on average. For more rows, increase &lt;code&gt;hnsw.ef_search&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET hnsw.ef_search = 200;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Starting with 0.8.0, you can enable &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#iterative-index-scans&quot;&gt;iterative index scans&lt;/a&gt;, which will automatically scan more of the index when needed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET hnsw.iterative_scan = strict_order;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If filtering by only a few distinct values, consider &lt;a href=&quot;https://www.postgresql.org/docs/current/indexes-partial.html&quot;&gt;partial indexing&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw (embedding vector_l2_ops) WHERE (category_id = 123);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If filtering by many different values, consider &lt;a href=&quot;https://www.postgresql.org/docs/current/ddl-partitioning.html&quot;&gt;partitioning&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE items (embedding vector(3), category_id int) PARTITION BY LIST(category_id);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Iterative Index Scans&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Added in 0.8.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;With approximate indexes, queries with filtering can return less results since filtering is applied &lt;em&gt;after&lt;/em&gt; the index is scanned. Starting with 0.8.0, you can enable iterative index scans, which will automatically scan more of the index until enough results are found (or it reaches &lt;code&gt;hnsw.max_scan_tuples&lt;/code&gt; or &lt;code&gt;ivfflat.max_probes&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Iterative scans can use strict or relaxed ordering.&lt;/p&gt; 
&lt;p&gt;Strict ensures results are in the exact order by distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET hnsw.iterative_scan = strict_order;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Relaxed allows results to be slightly out of order by distance, but provides better recall&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET hnsw.iterative_scan = relaxed_order;
# or
SET ivfflat.iterative_scan = relaxed_order;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With relaxed ordering, you can use a &lt;a href=&quot;https://www.postgresql.org/docs/current/queries-with.html#QUERIES-WITH-CTE-MATERIALIZATION&quot;&gt;materialized CTE&lt;/a&gt; to get strict ordering&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;WITH relaxed_results AS MATERIALIZED (
    SELECT id, embedding &amp;lt;-&amp;gt; &#39;[1,2,3]&#39; AS distance FROM items WHERE category_id = 123 ORDER BY distance LIMIT 5
) SELECT * FROM relaxed_results ORDER BY distance;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For queries that filter by distance, use a materialized CTE and place the distance filter outside of it for best performance (due to the &lt;a href=&quot;https://www.postgresql.org/message-id/flat/CAOdR5yGUoMQ6j7M5hNUXrySzaqZVGf_Ne%2B8fwZMRKTFxU1nbJg%40mail.gmail.com&quot;&gt;current behavior&lt;/a&gt; of the Postgres executor)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;WITH nearest_results AS MATERIALIZED (
    SELECT id, embedding &amp;lt;-&amp;gt; &#39;[1,2,3]&#39; AS distance FROM items ORDER BY distance LIMIT 5
) SELECT * FROM nearest_results WHERE distance &amp;lt; 5 ORDER BY distance;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Place any other filters inside the CTE&lt;/p&gt; 
&lt;h3&gt;Iterative Scan Options&lt;/h3&gt; 
&lt;p&gt;Since scanning a large portion of an approximate index is expensive, there are options to control when a scan ends.&lt;/p&gt; 
&lt;h4&gt;HNSW&lt;/h4&gt; 
&lt;p&gt;Specify the max number of tuples to visit (20,000 by default)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET hnsw.max_scan_tuples = 20000;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: This is approximate and does not affect the initial scan&lt;/p&gt; 
&lt;p&gt;Specify the max amount of memory to use, as a multiple of &lt;code&gt;work_mem&lt;/code&gt; (1 by default)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET hnsw.scan_mem_multiplier = 2;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Try increasing this if increasing &lt;code&gt;hnsw.max_scan_tuples&lt;/code&gt; does not improve recall&lt;/p&gt; 
&lt;h4&gt;IVFFlat&lt;/h4&gt; 
&lt;p&gt;Specify the max number of probes&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET ivfflat.max_probes = 100;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: If this is lower than &lt;code&gt;ivfflat.probes&lt;/code&gt;, &lt;code&gt;ivfflat.probes&lt;/code&gt; will be used&lt;/p&gt; 
&lt;h2&gt;Half-Precision Vectors&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;halfvec&lt;/code&gt; type to store half-precision vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE items (id bigserial PRIMARY KEY, embedding halfvec(3));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Half-Precision Indexing&lt;/h2&gt; 
&lt;p&gt;Index vectors at half precision for smaller indexes&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw ((embedding::halfvec(3)) halfvec_l2_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get the nearest neighbors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items ORDER BY embedding::halfvec(3) &amp;lt;-&amp;gt; &#39;[1,2,3]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Binary Vectors&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;bit&lt;/code&gt; type to store binary vectors (&lt;a href=&quot;https://github.com/pgvector/pgvector-python/raw/master/examples/imagehash/example.py&quot;&gt;example&lt;/a&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE items (id bigserial PRIMARY KEY, embedding bit(3));
INSERT INTO items (embedding) VALUES (&#39;000&#39;), (&#39;111&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get the nearest neighbors by Hamming distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items ORDER BY embedding &amp;lt;~&amp;gt; &#39;101&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also supports Jaccard distance (&lt;code&gt;&amp;lt;%&amp;gt;&lt;/code&gt;)&lt;/p&gt; 
&lt;h2&gt;Binary Quantization&lt;/h2&gt; 
&lt;p&gt;Use expression indexing for binary quantization&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw ((binary_quantize(embedding)::bit(3)) bit_hamming_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get the nearest neighbors by Hamming distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items ORDER BY binary_quantize(embedding)::bit(3) &amp;lt;~&amp;gt; binary_quantize(&#39;[1,-2,3]&#39;) LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Re-rank by the original vectors for better recall&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM (
    SELECT * FROM items ORDER BY binary_quantize(embedding)::bit(3) &amp;lt;~&amp;gt; binary_quantize(&#39;[1,-2,3]&#39;) LIMIT 20
) ORDER BY embedding &amp;lt;=&amp;gt; &#39;[1,-2,3]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sparse Vectors&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;sparsevec&lt;/code&gt; type to store sparse vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE items (id bigserial PRIMARY KEY, embedding sparsevec(5));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Insert vectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;INSERT INTO items (embedding) VALUES (&#39;{1:1,3:2,5:3}/5&#39;), (&#39;{1:4,3:5,5:6}/5&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The format is &lt;code&gt;{index1:value1,index2:value2}/dimensions&lt;/code&gt; and indices start at 1 like SQL arrays&lt;/p&gt; 
&lt;p&gt;Get the nearest neighbors by L2 distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items ORDER BY embedding &amp;lt;-&amp;gt; &#39;{1:3,3:1,5:2}/5&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Hybrid Search&lt;/h2&gt; 
&lt;p&gt;Use together with Postgres &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-intro.html&quot;&gt;full-text search&lt;/a&gt; for hybrid search.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT id, content FROM items, plainto_tsquery(&#39;hello search&#39;) query
    WHERE textsearch @@ query ORDER BY ts_rank_cd(textsearch, query) DESC LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/pgvector/pgvector-python/raw/master/examples/hybrid_search/rrf.py&quot;&gt;Reciprocal Rank Fusion&lt;/a&gt; or a &lt;a href=&quot;https://github.com/pgvector/pgvector-python/raw/master/examples/hybrid_search/cross_encoder.py&quot;&gt;cross-encoder&lt;/a&gt; to combine results.&lt;/p&gt; 
&lt;h2&gt;Indexing Subvectors&lt;/h2&gt; 
&lt;p&gt;Use expression indexing to index subvectors&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw ((subvector(embedding, 1, 3)::vector(3)) vector_cosine_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get the nearest neighbors by cosine distance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items ORDER BY subvector(embedding, 1, 3)::vector(3) &amp;lt;=&amp;gt; subvector(&#39;[1,2,3,4,5]&#39;::vector, 1, 3) LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Re-rank by the full vectors for better recall&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM (
    SELECT * FROM items ORDER BY subvector(embedding, 1, 3)::vector(3) &amp;lt;=&amp;gt; subvector(&#39;[1,2,3,4,5]&#39;::vector, 1, 3) LIMIT 20
) ORDER BY embedding &amp;lt;=&amp;gt; &#39;[1,2,3,4,5]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;h3&gt;Tuning&lt;/h3&gt; 
&lt;p&gt;Use a tool like &lt;a href=&quot;https://pgtune.leopard.in.ua/&quot;&gt;PgTune&lt;/a&gt; to set initial values for Postgres server parameters. For instance, &lt;code&gt;shared_buffers&lt;/code&gt; should typically be 25% of the server’s memory. You can find the config file with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SHOW config_file;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And check individual settings with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SHOW shared_buffers;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be sure to restart Postgres for changes to take effect.&lt;/p&gt; 
&lt;h3&gt;Loading&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;COPY&lt;/code&gt; for bulk loading data (&lt;a href=&quot;https://github.com/pgvector/pgvector-python/raw/master/examples/loading/example.py&quot;&gt;example&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;COPY items (embedding) FROM STDIN WITH (FORMAT BINARY);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add any indexes &lt;em&gt;after&lt;/em&gt; loading the initial data for best performance.&lt;/p&gt; 
&lt;h3&gt;Indexing&lt;/h3&gt; 
&lt;p&gt;See index build time for &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#index-build-time&quot;&gt;HNSW&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#index-build-time-1&quot;&gt;IVFFlat&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In production environments, create indexes concurrently to avoid blocking writes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX CONCURRENTLY ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Querying&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt; to debug performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;EXPLAIN ANALYZE SELECT * FROM items ORDER BY embedding &amp;lt;-&amp;gt; &#39;[3,1,2]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Exact Search&lt;/h4&gt; 
&lt;p&gt;To speed up queries without an index, increase &lt;code&gt;max_parallel_workers_per_gather&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SET max_parallel_workers_per_gather = 4;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If vectors are normalized to length 1 (like &lt;a href=&quot;https://platform.openai.com/docs/guides/embeddings/which-distance-function-should-i-use&quot;&gt;OpenAI embeddings&lt;/a&gt;), use inner product for best performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsql&quot;&gt;SELECT * FROM items ORDER BY embedding &amp;lt;#&amp;gt; &#39;[3,1,2]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Approximate Search&lt;/h4&gt; 
&lt;p&gt;To speed up queries with an IVFFlat index, increase the number of inverted lists (at the expense of recall).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING ivfflat (embedding vector_l2_ops) WITH (lists = 1000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Vacuuming&lt;/h3&gt; 
&lt;p&gt;Vacuuming can take a while for HNSW indexes. Speed it up by reindexing first.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;REINDEX INDEX CONCURRENTLY index_name;
VACUUM table_name;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Monitoring&lt;/h2&gt; 
&lt;p&gt;Monitor performance with &lt;a href=&quot;https://www.postgresql.org/docs/current/pgstatstatements.html&quot;&gt;pg_stat_statements&lt;/a&gt; (be sure to add it to &lt;code&gt;shared_preload_libraries&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE EXTENSION pg_stat_statements;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get the most time-consuming queries with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT query, calls, ROUND((total_plan_time + total_exec_time) / calls) AS avg_time_ms,
    ROUND((total_plan_time + total_exec_time) / 60000) AS total_time_min
    FROM pg_stat_statements ORDER BY total_plan_time + total_exec_time DESC LIMIT 20;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Replace &lt;code&gt;total_plan_time + total_exec_time&lt;/code&gt; with &lt;code&gt;total_time&lt;/code&gt; for Postgres &amp;lt; 13&lt;/p&gt; 
&lt;p&gt;Monitor recall by comparing results from approximate search with exact search.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;BEGIN;
SET LOCAL enable_indexscan = off; -- use exact search
SELECT ...
COMMIT;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Scaling&lt;/h2&gt; 
&lt;p&gt;Scale pgvector the same way you scale Postgres.&lt;/p&gt; 
&lt;p&gt;Scale vertically by increasing memory, CPU, and storage on a single instance. Use existing tools to &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#tuning&quot;&gt;tune parameters&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#monitoring&quot;&gt;monitor performance&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Scale horizontally with &lt;a href=&quot;https://www.postgresql.org/docs/current/hot-standby.html&quot;&gt;replicas&lt;/a&gt;, or use &lt;a href=&quot;https://github.com/citusdata/citus&quot;&gt;Citus&lt;/a&gt; or another approach for sharding (&lt;a href=&quot;https://github.com/pgvector/pgvector-python/raw/master/examples/citus/example.py&quot;&gt;example&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Languages&lt;/h2&gt; 
&lt;p&gt;Use pgvector from any language with a Postgres client. You can even generate and store vectors in one language and query them in another.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Libraries / Examples&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;C&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-c&quot;&gt;pgvector-c&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;C++&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-cpp&quot;&gt;pgvector-cpp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;C#, F#, Visual Basic&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-dotnet&quot;&gt;pgvector-dotnet&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Crystal&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-crystal&quot;&gt;pgvector-crystal&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;D&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-d&quot;&gt;pgvector-d&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dart&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-dart&quot;&gt;pgvector-dart&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Elixir&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-elixir&quot;&gt;pgvector-elixir&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Erlang&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-erlang&quot;&gt;pgvector-erlang&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Fortran&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-fortran&quot;&gt;pgvector-fortran&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gleam&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-gleam&quot;&gt;pgvector-gleam&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-go&quot;&gt;pgvector-go&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Haskell&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-haskell&quot;&gt;pgvector-haskell&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java, Kotlin, Groovy, Scala&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-java&quot;&gt;pgvector-java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JavaScript, TypeScript&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-node&quot;&gt;pgvector-node&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Julia&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-julia&quot;&gt;pgvector-julia&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Lisp&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-lisp&quot;&gt;pgvector-lisp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Lua&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-lua&quot;&gt;pgvector-lua&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Nim&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-nim&quot;&gt;pgvector-nim&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OCaml&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-ocaml&quot;&gt;pgvector-ocaml&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Perl&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-perl&quot;&gt;pgvector-perl&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PHP&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-php&quot;&gt;pgvector-php&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-python&quot;&gt;pgvector-python&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;R&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-r&quot;&gt;pgvector-r&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Raku&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-raku&quot;&gt;pgvector-raku&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ruby&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-ruby&quot;&gt;pgvector-ruby&lt;/a&gt;, &lt;a href=&quot;https://github.com/ankane/neighbor&quot;&gt;Neighbor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-rust&quot;&gt;pgvector-rust&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-swift&quot;&gt;pgvector-swift&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Zig&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector-zig&quot;&gt;pgvector-zig&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;h4&gt;How many vectors can be stored in a single table?&lt;/h4&gt; 
&lt;p&gt;A non-partitioned table has a limit of 32 TB by default in Postgres. A partitioned table can have thousands of partitions of that size.&lt;/p&gt; 
&lt;h4&gt;Is replication supported?&lt;/h4&gt; 
&lt;p&gt;Yes, pgvector uses the write-ahead log (WAL), which allows for replication and point-in-time recovery.&lt;/p&gt; 
&lt;h4&gt;What if I want to index vectors with more than 2,000 dimensions?&lt;/h4&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#half-precision-indexing&quot;&gt;half-precision indexing&lt;/a&gt; to index up to 4,000 dimensions or &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#binary-quantization&quot;&gt;binary quantization&lt;/a&gt; to index up to 64,000 dimensions. Another option is &lt;a href=&quot;https://en.wikipedia.org/wiki/Dimensionality_reduction&quot;&gt;dimensionality reduction&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Can I store vectors with different dimensions in the same column?&lt;/h4&gt; 
&lt;p&gt;You can use &lt;code&gt;vector&lt;/code&gt; as the type (instead of &lt;code&gt;vector(3)&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE embeddings (model_id bigint, item_id bigint, embedding vector, PRIMARY KEY (model_id, item_id));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, you can only create indexes on rows with the same number of dimensions (using &lt;a href=&quot;https://www.postgresql.org/docs/current/indexes-expressional.html&quot;&gt;expression&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/docs/current/indexes-partial.html&quot;&gt;partial&lt;/a&gt; indexing):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON embeddings USING hnsw ((embedding::vector(3)) vector_l2_ops) WHERE (model_id = 123);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and query with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM embeddings WHERE model_id = 123 ORDER BY embedding::vector(3) &amp;lt;-&amp;gt; &#39;[3,1,2]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Can I store vectors with more precision?&lt;/h4&gt; 
&lt;p&gt;You can use the &lt;code&gt;double precision[]&lt;/code&gt; or &lt;code&gt;numeric[]&lt;/code&gt; type to store vectors with more precision.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE items (id bigserial PRIMARY KEY, embedding double precision[]);

-- use {} instead of [] for Postgres arrays
INSERT INTO items (embedding) VALUES (&#39;{1,2,3}&#39;), (&#39;{4,5,6}&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optionally, add a &lt;a href=&quot;https://www.postgresql.org/docs/current/ddl-constraints.html&quot;&gt;check constraint&lt;/a&gt; to ensure data can be converted to the &lt;code&gt;vector&lt;/code&gt; type and has the expected dimensions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;ALTER TABLE items ADD CHECK (vector_dims(embedding::vector) = 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://www.postgresql.org/docs/current/indexes-expressional.html&quot;&gt;expression indexing&lt;/a&gt; to index (at a lower precision):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX ON items USING hnsw ((embedding::vector(3)) vector_l2_ops);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and query with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM items ORDER BY embedding::vector(3) &amp;lt;-&amp;gt; &#39;[3,1,2]&#39; LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Do indexes need to fit into memory?&lt;/h4&gt; 
&lt;p&gt;No, but like other index types, you’ll likely see better performance if they do. You can get the size of an index with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT pg_size_pretty(pg_relation_size(&#39;index_name&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h4&gt;Why isn’t a query using an index?&lt;/h4&gt; 
&lt;p&gt;The query needs to have an &lt;code&gt;ORDER BY&lt;/code&gt; and &lt;code&gt;LIMIT&lt;/code&gt;, and the &lt;code&gt;ORDER BY&lt;/code&gt; must be the result of a distance operator (not an expression) in ascending order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;-- index
ORDER BY embedding &amp;lt;=&amp;gt; &#39;[3,1,2]&#39; LIMIT 5;

-- no index
ORDER BY 1 - (embedding &amp;lt;=&amp;gt; &#39;[3,1,2]&#39;) DESC LIMIT 5;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can encourage the planner to use an index for a query with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;BEGIN;
SET LOCAL enable_seqscan = off;
SELECT ...
COMMIT;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, if the table is small, a table scan may be faster.&lt;/p&gt; 
&lt;h4&gt;Why isn’t a query using a parallel table scan?&lt;/h4&gt; 
&lt;p&gt;The planner doesn’t consider &lt;a href=&quot;https://www.postgresql.org/docs/current/storage-toast.html&quot;&gt;out-of-line storage&lt;/a&gt; in cost estimates, which can make a serial scan look cheaper. You can reduce the cost of a parallel scan for a query with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;BEGIN;
SET LOCAL min_parallel_table_scan_size = 1;
SET LOCAL parallel_setup_cost = 1;
SELECT ...
COMMIT;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or choose to store vectors inline:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;ALTER TABLE items ALTER COLUMN embedding SET STORAGE PLAIN;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Why are there less results for a query after adding an HNSW index?&lt;/h4&gt; 
&lt;p&gt;Results are limited by the size of the dynamic candidate list (&lt;code&gt;hnsw.ef_search&lt;/code&gt;), which is 40 by default. There may be even less results due to dead tuples or filtering conditions in the query. Enabling &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#iterative-index-scans&quot;&gt;iterative index scans&lt;/a&gt; can help address this.&lt;/p&gt; 
&lt;p&gt;Also, note that &lt;code&gt;NULL&lt;/code&gt; vectors are not indexed (as well as zero vectors for cosine distance).&lt;/p&gt; 
&lt;h4&gt;Why are there less results for a query after adding an IVFFlat index?&lt;/h4&gt; 
&lt;p&gt;The index was likely created with too little data for the number of lists. Drop the index until the table has more data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;DROP INDEX index_name;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Results can also be limited by the number of probes (&lt;code&gt;ivfflat.probes&lt;/code&gt;). Enabling &lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#iterative-index-scans&quot;&gt;iterative index scans&lt;/a&gt; can address this.&lt;/p&gt; 
&lt;p&gt;Also, note that &lt;code&gt;NULL&lt;/code&gt; vectors are not indexed (as well as zero vectors for cosine distance).&lt;/p&gt; 
&lt;h2&gt;Reference&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#vector-type&quot;&gt;Vector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#halfvec-type&quot;&gt;Halfvec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#bit-type&quot;&gt;Bit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#sparsevec-type&quot;&gt;Sparsevec&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Vector Type&lt;/h3&gt; 
&lt;p&gt;Each vector takes &lt;code&gt;4 * dimensions + 8&lt;/code&gt; bytes of storage. Each element is a single-precision floating-point number (like the &lt;code&gt;real&lt;/code&gt; type in Postgres), and all elements must be finite (no &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt; or &lt;code&gt;-Infinity&lt;/code&gt;). Vectors can have up to 16,000 dimensions.&lt;/p&gt; 
&lt;h3&gt;Vector Operators&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Operator&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;+&lt;/td&gt; 
   &lt;td&gt;element-wise addition&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;element-wise subtraction&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;*&lt;/td&gt; 
   &lt;td&gt;element-wise multiplication&lt;/td&gt; 
   &lt;td&gt;0.5.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;||&lt;/td&gt; 
   &lt;td&gt;concatenate&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;-&amp;gt;&lt;/td&gt; 
   &lt;td&gt;Euclidean distance&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;#&amp;gt;&lt;/td&gt; 
   &lt;td&gt;negative inner product&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;=&amp;gt;&lt;/td&gt; 
   &lt;td&gt;cosine distance&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;+&amp;gt;&lt;/td&gt; 
   &lt;td&gt;taxicab distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Vector Functions&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Function&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;binary_quantize(vector) → bit&lt;/td&gt; 
   &lt;td&gt;binary quantize&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cosine_distance(vector, vector) → double precision&lt;/td&gt; 
   &lt;td&gt;cosine distance&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;inner_product(vector, vector) → double precision&lt;/td&gt; 
   &lt;td&gt;inner product&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l1_distance(vector, vector) → double precision&lt;/td&gt; 
   &lt;td&gt;taxicab distance&lt;/td&gt; 
   &lt;td&gt;0.5.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l2_distance(vector, vector) → double precision&lt;/td&gt; 
   &lt;td&gt;Euclidean distance&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l2_normalize(vector) → vector&lt;/td&gt; 
   &lt;td&gt;Normalize with Euclidean norm&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;subvector(vector, integer, integer) → vector&lt;/td&gt; 
   &lt;td&gt;subvector&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vector_dims(vector) → integer&lt;/td&gt; 
   &lt;td&gt;number of dimensions&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vector_norm(vector) → double precision&lt;/td&gt; 
   &lt;td&gt;Euclidean norm&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Vector Aggregate Functions&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Function&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;avg(vector) → vector&lt;/td&gt; 
   &lt;td&gt;average&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sum(vector) → vector&lt;/td&gt; 
   &lt;td&gt;sum&lt;/td&gt; 
   &lt;td&gt;0.5.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Halfvec Type&lt;/h3&gt; 
&lt;p&gt;Each half vector takes &lt;code&gt;2 * dimensions + 8&lt;/code&gt; bytes of storage. Each element is a half-precision floating-point number, and all elements must be finite (no &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt; or &lt;code&gt;-Infinity&lt;/code&gt;). Half vectors can have up to 16,000 dimensions.&lt;/p&gt; 
&lt;h3&gt;Halfvec Operators&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Operator&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;+&lt;/td&gt; 
   &lt;td&gt;element-wise addition&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;element-wise subtraction&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;*&lt;/td&gt; 
   &lt;td&gt;element-wise multiplication&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;||&lt;/td&gt; 
   &lt;td&gt;concatenate&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;-&amp;gt;&lt;/td&gt; 
   &lt;td&gt;Euclidean distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;#&amp;gt;&lt;/td&gt; 
   &lt;td&gt;negative inner product&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;=&amp;gt;&lt;/td&gt; 
   &lt;td&gt;cosine distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;+&amp;gt;&lt;/td&gt; 
   &lt;td&gt;taxicab distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Halfvec Functions&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Function&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;binary_quantize(halfvec) → bit&lt;/td&gt; 
   &lt;td&gt;binary quantize&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cosine_distance(halfvec, halfvec) → double precision&lt;/td&gt; 
   &lt;td&gt;cosine distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;inner_product(halfvec, halfvec) → double precision&lt;/td&gt; 
   &lt;td&gt;inner product&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l1_distance(halfvec, halfvec) → double precision&lt;/td&gt; 
   &lt;td&gt;taxicab distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l2_distance(halfvec, halfvec) → double precision&lt;/td&gt; 
   &lt;td&gt;Euclidean distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l2_norm(halfvec) → double precision&lt;/td&gt; 
   &lt;td&gt;Euclidean norm&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l2_normalize(halfvec) → halfvec&lt;/td&gt; 
   &lt;td&gt;Normalize with Euclidean norm&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;subvector(halfvec, integer, integer) → halfvec&lt;/td&gt; 
   &lt;td&gt;subvector&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vector_dims(halfvec) → integer&lt;/td&gt; 
   &lt;td&gt;number of dimensions&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Halfvec Aggregate Functions&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Function&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;avg(halfvec) → halfvec&lt;/td&gt; 
   &lt;td&gt;average&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sum(halfvec) → halfvec&lt;/td&gt; 
   &lt;td&gt;sum&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Bit Type&lt;/h3&gt; 
&lt;p&gt;Each bit vector takes &lt;code&gt;dimensions / 8 + 8&lt;/code&gt; bytes of storage. See the &lt;a href=&quot;https://www.postgresql.org/docs/current/datatype-bit.html&quot;&gt;Postgres docs&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h3&gt;Bit Operators&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Operator&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;~&amp;gt;&lt;/td&gt; 
   &lt;td&gt;Hamming distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;%&amp;gt;&lt;/td&gt; 
   &lt;td&gt;Jaccard distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Bit Functions&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Function&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hamming_distance(bit, bit) → double precision&lt;/td&gt; 
   &lt;td&gt;Hamming distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;jaccard_distance(bit, bit) → double precision&lt;/td&gt; 
   &lt;td&gt;Jaccard distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Sparsevec Type&lt;/h3&gt; 
&lt;p&gt;Each sparse vector takes &lt;code&gt;8 * non-zero elements + 16&lt;/code&gt; bytes of storage. Each element is a single-precision floating-point number, and all elements must be finite (no &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt; or &lt;code&gt;-Infinity&lt;/code&gt;). Sparse vectors can have up to 16,000 non-zero elements.&lt;/p&gt; 
&lt;h3&gt;Sparsevec Operators&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Operator&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;-&amp;gt;&lt;/td&gt; 
   &lt;td&gt;Euclidean distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;#&amp;gt;&lt;/td&gt; 
   &lt;td&gt;negative inner product&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;=&amp;gt;&lt;/td&gt; 
   &lt;td&gt;cosine distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;+&amp;gt;&lt;/td&gt; 
   &lt;td&gt;taxicab distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Sparsevec Functions&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Function&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Added&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cosine_distance(sparsevec, sparsevec) → double precision&lt;/td&gt; 
   &lt;td&gt;cosine distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;inner_product(sparsevec, sparsevec) → double precision&lt;/td&gt; 
   &lt;td&gt;inner product&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l1_distance(sparsevec, sparsevec) → double precision&lt;/td&gt; 
   &lt;td&gt;taxicab distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l2_distance(sparsevec, sparsevec) → double precision&lt;/td&gt; 
   &lt;td&gt;Euclidean distance&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l2_norm(sparsevec) → double precision&lt;/td&gt; 
   &lt;td&gt;Euclidean norm&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;l2_normalize(sparsevec) → sparsevec&lt;/td&gt; 
   &lt;td&gt;Normalize with Euclidean norm&lt;/td&gt; 
   &lt;td&gt;0.7.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installation Notes - Linux and Mac&lt;/h2&gt; 
&lt;h3&gt;Postgres Location&lt;/h3&gt; 
&lt;p&gt;If your machine has multiple Postgres installations, specify the path to &lt;a href=&quot;https://www.postgresql.org/docs/current/app-pgconfig.html&quot;&gt;pg_config&lt;/a&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export PG_CONFIG=/Library/PostgreSQL/17/bin/pg_config
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then re-run the installation instructions (run &lt;code&gt;make clean&lt;/code&gt; before &lt;code&gt;make&lt;/code&gt; if needed). If &lt;code&gt;sudo&lt;/code&gt; is needed for &lt;code&gt;make install&lt;/code&gt;, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo --preserve-env=PG_CONFIG make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A few common paths on Mac are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;EDB installer - &lt;code&gt;/Library/PostgreSQL/17/bin/pg_config&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Homebrew (arm64) - &lt;code&gt;/opt/homebrew/opt/postgresql@17/bin/pg_config&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Homebrew (x86-64) - &lt;code&gt;/usr/local/opt/postgresql@17/bin/pg_config&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note: Replace &lt;code&gt;17&lt;/code&gt; with your Postgres server version&lt;/p&gt; 
&lt;h3&gt;Missing Header&lt;/h3&gt; 
&lt;p&gt;If compilation fails with &lt;code&gt;fatal error: postgres.h: No such file or directory&lt;/code&gt;, make sure Postgres development files are installed on the server.&lt;/p&gt; 
&lt;p&gt;For Ubuntu and Debian, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt install postgresql-server-dev-17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Replace &lt;code&gt;17&lt;/code&gt; with your Postgres server version&lt;/p&gt; 
&lt;h3&gt;Missing SDK&lt;/h3&gt; 
&lt;p&gt;If compilation fails and the output includes &lt;code&gt;warning: no such sysroot directory&lt;/code&gt; on Mac, your Postgres installation points to a path that no longer exists.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pg_config --cppflags
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reinstall Postgres to fix this.&lt;/p&gt; 
&lt;h3&gt;Portability&lt;/h3&gt; 
&lt;p&gt;By default, pgvector compiles with &lt;code&gt;-march=native&lt;/code&gt; on some platforms for best performance. However, this can lead to &lt;code&gt;Illegal instruction&lt;/code&gt; errors if trying to run the compiled extension on a different machine.&lt;/p&gt; 
&lt;p&gt;To compile for portability, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;make OPTFLAGS=&quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation Notes - Windows&lt;/h2&gt; 
&lt;h3&gt;Missing Header&lt;/h3&gt; 
&lt;p&gt;If compilation fails with &lt;code&gt;Cannot open include file: &#39;postgres.h&#39;: No such file or directory&lt;/code&gt;, make sure &lt;code&gt;PGROOT&lt;/code&gt; is correct.&lt;/p&gt; 
&lt;h3&gt;Mismatched Architecture&lt;/h3&gt; 
&lt;p&gt;If compilation fails with &lt;code&gt;error C2196: case value &#39;4&#39; already used&lt;/code&gt;, make sure &lt;code&gt;vcvars64.bat&lt;/code&gt; was called. Then run &lt;code&gt;nmake /F Makefile.win clean&lt;/code&gt; and re-run the installation instructions.&lt;/p&gt; 
&lt;h3&gt;Missing Symbol&lt;/h3&gt; 
&lt;p&gt;If linking fails with &lt;code&gt;unresolved external symbol float_to_shortest_decimal_bufn&lt;/code&gt; with Postgres 17.0-17.2, upgrade to Postgres 17.3+.&lt;/p&gt; 
&lt;h3&gt;Permissions&lt;/h3&gt; 
&lt;p&gt;If installation fails with &lt;code&gt;Access is denied&lt;/code&gt;, re-run the installation instructions as an administrator.&lt;/p&gt; 
&lt;h2&gt;Additional Installation Methods&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;Get the &lt;a href=&quot;https://hub.docker.com/r/pgvector/pgvector&quot;&gt;Docker image&lt;/a&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker pull pgvector/pgvector:pg17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This adds pgvector to the &lt;a href=&quot;https://hub.docker.com/_/postgres&quot;&gt;Postgres image&lt;/a&gt; (replace &lt;code&gt;17&lt;/code&gt; with your Postgres server version, and run it the same way).&lt;/p&gt; 
&lt;p&gt;You can also build the image manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --branch v0.8.0 https://github.com/pgvector/pgvector.git
cd pgvector
docker build --pull --build-arg PG_MAJOR=17 -t myuser/pgvector .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you increase &lt;code&gt;maintenance_work_mem&lt;/code&gt;, make sure &lt;code&gt;--shm-size&lt;/code&gt; is at least that size to avoid an error with parallel HNSW index builds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker run --shm-size=1g ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;p&gt;With Homebrew Postgres, you can use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install pgvector
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: This only adds it to the &lt;code&gt;postgresql@17&lt;/code&gt; and &lt;code&gt;postgresql@14&lt;/code&gt; formulas&lt;/p&gt; 
&lt;h3&gt;PGXN&lt;/h3&gt; 
&lt;p&gt;Install from the &lt;a href=&quot;https://pgxn.org/dist/vector&quot;&gt;PostgreSQL Extension Network&lt;/a&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pgxn install vector
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;APT&lt;/h3&gt; 
&lt;p&gt;Debian and Ubuntu packages are available from the &lt;a href=&quot;https://wiki.postgresql.org/wiki/Apt&quot;&gt;PostgreSQL APT Repository&lt;/a&gt;. Follow the &lt;a href=&quot;https://wiki.postgresql.org/wiki/Apt#Quickstart&quot;&gt;setup instructions&lt;/a&gt; and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt install postgresql-17-pgvector
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Replace &lt;code&gt;17&lt;/code&gt; with your Postgres server version&lt;/p&gt; 
&lt;h3&gt;Yum&lt;/h3&gt; 
&lt;p&gt;RPM packages are available from the &lt;a href=&quot;https://yum.postgresql.org/&quot;&gt;PostgreSQL Yum Repository&lt;/a&gt;. Follow the &lt;a href=&quot;https://www.postgresql.org/download/linux/redhat/&quot;&gt;setup instructions&lt;/a&gt; for your distribution and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo yum install pgvector_17
# or
sudo dnf install pgvector_17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Replace &lt;code&gt;17&lt;/code&gt; with your Postgres server version&lt;/p&gt; 
&lt;h3&gt;pkg&lt;/h3&gt; 
&lt;p&gt;Install the FreeBSD package with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pkg install postgresql16-pgvector
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or the port with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd /usr/ports/databases/pgvector
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;conda-forge&lt;/h3&gt; 
&lt;p&gt;With Conda Postgres, install from &lt;a href=&quot;https://anaconda.org/conda-forge/pgvector&quot;&gt;conda-forge&lt;/a&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;conda install -c conda-forge pgvector
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This method is &lt;a href=&quot;https://github.com/conda-forge/pgvector-feedstock&quot;&gt;community-maintained&lt;/a&gt; by &lt;a href=&quot;https://github.com/mmcauliffe&quot;&gt;@mmcauliffe&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Postgres.app&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href=&quot;https://postgresapp.com/downloads.html&quot;&gt;latest release&lt;/a&gt; with Postgres 15+.&lt;/p&gt; 
&lt;h2&gt;Hosted Postgres&lt;/h2&gt; 
&lt;p&gt;pgvector is available on &lt;a href=&quot;https://github.com/pgvector/pgvector/issues/54&quot;&gt;these providers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pgvector/pgvector/master/#installation&quot;&gt;Install&lt;/a&gt; the latest version (use the same method as the original installation). Then in each database you want to upgrade, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;ALTER EXTENSION vector UPDATE;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can check the version in the current database with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT extversion FROM pg_extension WHERE extname = &#39;vector&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Thanks to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/pdf/10.1145/3318464.3386131&quot;&gt;PASE: PostgreSQL Ultra-High-Dimensional Approximate Nearest Neighbor Search Extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebookresearch/faiss&quot;&gt;Faiss: A Library for Efficient Similarity Search and Clustering of Dense Vectors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cdn.aaai.org/ICML/2003/ICML03-022.pdf&quot;&gt;Using the Triangle Inequality to Accelerate k-means&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theory.stanford.edu/~sergei/papers/kMeansPP-soda.pdf&quot;&gt;k-means++: The Advantage of Careful Seeding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cs.utexas.edu/users/inderjit/public_papers/concept_mlj.pdf&quot;&gt;Concept Decompositions for Large Sparse Text Data using Clustering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://arxiv.org/ftp/arxiv/papers/1603/1603.09320.pdf&quot;&gt;Efficient and Robust Approximate Nearest Neighbor Search using Hierarchical Navigable Small World Graphs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;View the &lt;a href=&quot;https://github.com/pgvector/pgvector/raw/master/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Everyone is encouraged to help improve this project. Here are a few ways you can help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pgvector/pgvector/issues&quot;&gt;Report bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fix bugs and &lt;a href=&quot;https://github.com/pgvector/pgvector/pulls&quot;&gt;submit pull requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Write, clarify, or fix documentation&lt;/li&gt; 
 &lt;li&gt;Suggest or add new features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started with development:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/pgvector/pgvector.git
cd pgvector
make
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run all tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;make installcheck        # regression tests
make prove_installcheck  # TAP tests
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run single tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;make installcheck REGRESS=functions                            # regression test
make prove_installcheck PROVE_TESTS=test/t/001_ivfflat_wal.pl  # TAP test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To enable assertions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;make clean &amp;amp;&amp;amp; PG_CFLAGS=&quot;-DUSE_ASSERT_CHECKING&quot; make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To enable benchmarking:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;make clean &amp;amp;&amp;amp; PG_CFLAGS=&quot;-DIVFFLAT_BENCH&quot; make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To show memory usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;make clean &amp;amp;&amp;amp; PG_CFLAGS=&quot;-DHNSW_MEMORY -DIVFFLAT_MEMORY&quot; make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get k-means metrics:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;make clean &amp;amp;&amp;amp; PG_CFLAGS=&quot;-DIVFFLAT_KMEANS_DEBUG&quot; make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Resources for contributors&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/current/extend-pgxs.html&quot;&gt;Extension Building Infrastructure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/current/indexam.html&quot;&gt;Index Access Method Interface Definition&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/current/generic-wal.html&quot;&gt;Generic WAL Records&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>reactos/reactos</title>
      <link>https://github.com/reactos/reactos</link>
      <description>&lt;p&gt;A free Windows-compatible Operating System&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://reactos.org/&quot;&gt; &lt;img alt=&quot;ReactOS&quot; src=&quot;https://reactos.org/wiki/images/0/02/ReactOS_logo.png&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://reactos.org/project-news/reactos-0415-released/&quot;&gt; &lt;img alt=&quot;ReactOS 0.4.15 Release&quot; src=&quot;https://img.shields.io/badge/release-0.4.15-0688CB.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactos.org/download/&quot;&gt; &lt;img alt=&quot;Download ReactOS&quot; src=&quot;https://img.shields.io/badge/download-latest-0688CB.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sourceforge.net/projects/reactos/&quot;&gt; &lt;img alt=&quot;SourceForge Download&quot; src=&quot;https://img.shields.io/sourceforge/dm/reactos.svg?colorB=0688CB&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/reactos/reactos/raw/master/COPYING&quot;&gt; &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/badge/license-GNU_GPL_2.0-0688CB.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactos.org/donate/&quot;&gt; &lt;img alt=&quot;Donate&quot; src=&quot;https://img.shields.io/badge/%24-donate-E44E4A.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/reactos&quot;&gt; &lt;img alt=&quot;Follow on Twitter&quot; src=&quot;https://img.shields.io/twitter/follow/reactos.svg?style=social&amp;amp;label=Follow%20%40reactos&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://reactos.org/&quot;&gt;Website&lt;/a&gt; • &lt;a href=&quot;https://chat.reactos.org/&quot;&gt;Official chat&lt;/a&gt; • &lt;a href=&quot;https://reactos.org/wiki/&quot;&gt;Wiki&lt;/a&gt; • &lt;a href=&quot;https://reactos.org/forum/&quot;&gt;Forum&lt;/a&gt; • &lt;a href=&quot;https://discord.gg/7knjvhT&quot;&gt;Community Discord&lt;/a&gt; • &lt;a href=&quot;https://jira.reactos.org/issues/&quot;&gt;JIRA Bug Tracker&lt;/a&gt; • &lt;a href=&quot;https://git.reactos.org/&quot;&gt;ReactOS Git mirror&lt;/a&gt; • &lt;a href=&quot;https://reactos.org/testman/&quot;&gt;Testman&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is ReactOS?&lt;/h2&gt; 
&lt;p&gt;ReactOS™ is an Open Source effort to develop a quality operating system that is compatible with applications and drivers written for the Microsoft® Windows™ NT family of operating systems (NT4, 2000, XP, 2003, Vista, 7).&lt;/p&gt; 
&lt;p&gt;The ReactOS project, although currently focused on Windows Server 2003 compatibility, is always keeping an eye toward compatibility with Windows Vista and future Windows NT releases.&lt;/p&gt; 
&lt;p&gt;The code of ReactOS is licensed under &lt;a href=&quot;https://github.com/reactos/reactos/raw/master/COPYING&quot;&gt;GNU GPL 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Product quality warning&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ReactOS is currently an Alpha quality operating system.&lt;/strong&gt; This means that ReactOS is under heavy development and you have to be ready to encounter some problems. Different things may not work well and it can corrupt the data present on your hard disk. It is HIGHLY recommended to test ReactOS on a virtual machine or on a computer with no sensitive or critical data!&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/reactos/reactos/workflows/Build/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt; &lt;a href=&quot;https://sourceforge.net/projects/reactos/files/RosBE-Windows/i386/2.2.1/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/RosBE_Windows-2.2.1-0688CB.svg?sanitize=true&quot; alt=&quot;rosbewin.badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sourceforge.net/projects/reactos/files/RosBE-Unix/2.2.1/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/RosBE_Unix-2.2.1-0688CB.svg?sanitize=true&quot; alt=&quot;rosbeunix.badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://scan.coverity.com/projects/205&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/205/badge.svg?flat=1&quot; alt=&quot;coverity.badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To build the system it is strongly advised to use the &lt;em&gt;ReactOS Build Environment (RosBE).&lt;/em&gt; Up-to-date versions for Windows and for Unix/GNU-Linux are available from our download page at: &lt;a href=&quot;https://reactos.org/wiki/Build_Environment&quot;&gt;&quot;Build Environment&quot;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively one can use Microsoft Visual C++ (MSVC) version 2019+. Building with MSVC is covered here: &lt;a href=&quot;https://reactos.org/wiki/CMake#Visual_Studio_or_Microsoft_Visual_C.2B.2B&quot;&gt;&quot;Visual Studio or Microsoft Visual C++&quot;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://reactos.org/wiki/Building_ReactOS&quot;&gt;&quot;Building ReactOS&quot;&lt;/a&gt; article for more details.&lt;/p&gt; 
&lt;h3&gt;Binaries&lt;/h3&gt; 
&lt;p&gt;To build ReactOS you must run the &lt;code&gt;configure&lt;/code&gt; script in the directory you want to have your build files. Choose &lt;code&gt;configure.cmd&lt;/code&gt; or &lt;code&gt;configure.sh&lt;/code&gt; depending on your system. Then run &lt;code&gt;ninja &amp;lt;modulename&amp;gt;&lt;/code&gt; to build a module you want or just &lt;code&gt;ninja&lt;/code&gt; to build all modules.&lt;/p&gt; 
&lt;h3&gt;Bootable images&lt;/h3&gt; 
&lt;p&gt;To build a bootable CD image run &lt;code&gt;ninja bootcd&lt;/code&gt; from the build directory. This will create a CD image with a filename &lt;code&gt;bootcd.iso&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can always download fresh binary builds of bootable images from the &lt;a href=&quot;https://reactos.org/getbuilds/&quot;&gt;&quot;Daily builds&quot;&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;By default, ReactOS currently can only be installed on a machine that has a FAT16 or FAT32 partition as the active (bootable) partition. The partition on which ReactOS is to be installed (which may or may not be the bootable partition) must also be formatted as FAT16 or FAT32. ReactOS Setup can format the partitions if needed.&lt;/p&gt; 
&lt;p&gt;Starting with 0.4.10, ReactOS can be installed using the BtrFS file system. But consider this as an experimental feature and thus regressions not triggered on FAT setup may be observed.&lt;/p&gt; 
&lt;p&gt;To install ReactOS from the bootable CD distribution, extract the archive contents. Then burn the CD image, boot from it, and follow the instructions.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://reactos.org/wiki/Installing_ReactOS&quot;&gt;&quot;Installing ReactOS&quot;&lt;/a&gt; Wiki page or &lt;a href=&quot;https://raw.githubusercontent.com/reactos/reactos/master/INSTALL&quot;&gt;INSTALL&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;If you discover a bug in ReactOS search on JIRA first - it might be reported already. If not report the bug providing logs and as much information as possible.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://reactos.org/wiki/File_Bugs&quot;&gt;&quot;File Bugs&quot;&lt;/a&gt; for a guide.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The bug tracker is &lt;em&gt;not&lt;/em&gt; for discussions. Please use our &lt;a href=&quot;https://chat.reactos.org/&quot;&gt;official chat&lt;/a&gt; or our &lt;a href=&quot;https://reactos.org/forum/&quot;&gt;forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing &lt;a href=&quot;https://reactos.org/wiki/Commiting_Changes&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PR-welcome-0688CB.svg?sanitize=true&quot; alt=&quot;prwelcome.badge&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;We are always looking for developers! Check &lt;a href=&quot;https://raw.githubusercontent.com/reactos/reactos/master/CONTRIBUTING.md&quot;&gt;how to contribute&lt;/a&gt; if you are willing to participate.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Legal notice&lt;/strong&gt;: If you have seen proprietary Microsoft Windows source code (including but not limited to the leaked Windows NT 3.5, NT 4, 2000 source code and the Windows Research Kernel), your contribution won&#39;t be accepted because of potential copyright violation.&lt;/p&gt; 
&lt;p&gt;Try out cloud-based ReactOS development using Gitpod and Docker:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/reactos/reactos&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can also support ReactOS by &lt;a href=&quot;https://reactos.org/donate/&quot;&gt;donating&lt;/a&gt;! We rely on our backers to maintain our servers and accelerate development by &lt;a href=&quot;https://reactos.org/contributing/#paid-jobs&quot;&gt;hiring full-time devs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;More information&lt;/h2&gt; 
&lt;p&gt;ReactOS is a Free and Open Source operating system based on the Windows architecture, providing support for existing applications and drivers, and an alternative to the current dominant consumer operating system.&lt;/p&gt; 
&lt;p&gt;It is not another wrapper built on Linux, like WINE. It does not attempt or plan to compete with WINE; in fact, the user-mode part of ReactOS is almost entirely WINE-based and our two teams have cooperated closely in the past.&lt;/p&gt; 
&lt;p&gt;ReactOS is also not &quot;yet another OS&quot;. It does not attempt to be a third player like any other alternative OS out there. People are not meant to uninstall Linux and use ReactOS instead; ReactOS is a replacement for Windows users who want a Windows replacement that behaves just like Windows.&lt;/p&gt; 
&lt;p&gt;More information is available at: &lt;a href=&quot;https://reactos.org/&quot;&gt;reactos.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see the &lt;a href=&quot;https://raw.githubusercontent.com/reactos/reactos/master/media/doc/&quot;&gt;media/doc&lt;/a&gt; subdirectory for some sparse notes.&lt;/p&gt; 
&lt;h2&gt;Who is responsible&lt;/h2&gt; 
&lt;p&gt;Active devs are listed as members of &lt;a href=&quot;https://github.com/orgs/reactos/people&quot;&gt;GitHub organization&lt;/a&gt;. See also the &lt;a href=&quot;https://raw.githubusercontent.com/reactos/reactos/master/CREDITS&quot;&gt;CREDITS&lt;/a&gt; file for others.&lt;/p&gt; 
&lt;h2&gt;Code mirrors&lt;/h2&gt; 
&lt;p&gt;The main development is done on &lt;a href=&quot;https://github.com/reactos/reactos&quot;&gt;GitHub&lt;/a&gt;. We have an &lt;a href=&quot;https://git.reactos.org/?p=reactos.git&quot;&gt;alternative mirror&lt;/a&gt; in case GitHub is down.&lt;/p&gt; 
&lt;p&gt;There is also an obsolete &lt;a href=&quot;https://svn.reactos.org/reactos/&quot;&gt;SVN archive repository&lt;/a&gt; that is kept for historical purposes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kingToolbox/WindTerm</title>
      <link>https://github.com/kingToolbox/WindTerm</link>
      <description>&lt;p&gt;A professional cross-platform SSH/Sftp/Shell/Telnet/Tmux/Serial terminal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WindTerm&lt;/h1&gt; 
&lt;p&gt;A Quicker and better SSH/Telnet/Serial/Shell/Sftp client for DevOps.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Hello WindTerm &lt;span&gt;🌹&lt;/span&gt;, hello world!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We&#39;re just beginning! If you want a high performance text editor, you can try &lt;a href=&quot;https://www.github.com/kingToolbox/WindEdit/&quot;&gt;WindEdit&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Completely FREE for commercial and non-commercial use without limitations.&lt;/strong&gt; &lt;strong&gt;All released source codes (except thirdparty directory) are provided under the terms of Apache-2.0 license.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Introduction&lt;/h1&gt; 
&lt;p&gt;See &lt;a href=&quot;https://kingtoolbox.github.io&quot;&gt;Intro Videos&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Download&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Linux binary&lt;/strong&gt;, &lt;strong&gt;MacOS binary&lt;/strong&gt; and &lt;strong&gt;Windows binary&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kingToolbox/WindTerm/releases&quot;&gt;https://github.com/kingToolbox/WindTerm/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Source Code&lt;/h1&gt; 
&lt;p&gt;WindTerm is a &lt;strong&gt;partial&lt;/strong&gt; open source project, and the source will be gradually opened.&lt;/p&gt; 
&lt;p&gt;Open source code includes, but is not limited to, the classes that can be used independently, such as functional, algorithms, gui widgets, etc., as well as functional libraries, such as network, protocols, etc., as well as all types that require open source according to the license.&lt;/p&gt; 
&lt;h1&gt;Issues and feature requests&lt;/h1&gt; 
&lt;p&gt;Any issues and feature requests are welcome.&lt;/p&gt; 
&lt;p&gt;Please click &lt;a href=&quot;https://github.com/kingToolbox/WindTerm/issues&quot;&gt;issues&lt;/a&gt; to commit an issue or a feature request.&lt;/p&gt; 
&lt;p&gt;Please click &lt;a href=&quot;https://github.com/kingToolbox/WindTerm/discussions&quot;&gt;Discussion&lt;/a&gt; to discuss anything about SSH, SFtp, Shell(Linux shell, Windows cmd and powershell), Telnet, Serial and WindTerm.&lt;/p&gt; 
&lt;h1&gt;Screenshots&lt;/h1&gt; 
&lt;p&gt;Main Window (zsh):&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kingToolbox/WindTerm/raw/master/images/screenshots/WindTerm.png&quot; alt=&quot;MainWindow&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Split views:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kingToolbox/WindTerm/raw/master/images/screenshots/SplitView.png&quot; alt=&quot;SplitView&quot;&gt;&lt;/p&gt; 
&lt;p&gt;DigeWhite Theme:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kingToolbox/WindTerm/raw/master/images/screenshots/WindTerm_DigeWhite_Theme.png&quot; alt=&quot;DigeWhite Theme&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;h3&gt;SSH, Telnet, Tcp, Shell, Serial, Tmux&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;SSH v2, Telnet, Raw Tcp, Serial, Shell protocols implemented. &lt;a href=&quot;https://kingtoolbox.github.io/2020/01/22/new-session/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports SSH auto execution when session authenticated.&lt;/li&gt; 
 &lt;li&gt;Supports SSH ControlMaster.&lt;/li&gt; 
 &lt;li&gt;Supports SSH ProxyCommand or ProxyJump. &lt;a href=&quot;https://kingtoolbox.github.io/2021/03/11/proxycommand/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports SSH agent. &lt;a href=&quot;https://kingtoolbox.github.io/2020/08/22/ssh_agent/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports SSH agent forwarding.&lt;/li&gt; 
 &lt;li&gt;Supports SSH auto login with password, public-key, keyboard-interactive, gssapi-with-mic. &lt;a href=&quot;https://kingtoolbox.github.io/2020/01/23/auto-login/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports X11 forwarding. &lt;a href=&quot;https://kingtoolbox.github.io/2020/07/21/x11_forwarding/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports direct/local port forwarding, reverse/remote port forwarding and dynamic port forwarding. &lt;a href=&quot;https://kingtoolbox.github.io/2020/07/21/port_forwarding/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports XModem, YModem and ZModem. &lt;a href=&quot;https://kingtoolbox.github.io/tags/modem/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Integrated sftp, scp client, supports download, upload, remove, rename, make new file/directory and so on. &lt;a href=&quot;https://kingtoolbox.github.io/tags/transfer/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Integrated local file manager, supports move to, copy to, copy from, remove, rename, make new file/directory and so on.&lt;/li&gt; 
 &lt;li&gt;Supports Windows Cmd, PowerShell and Cmd, PowerShell as administrator.&lt;/li&gt; 
 &lt;li&gt;Supports Linux bash, zsh, powershell core and so on.&lt;/li&gt; 
 &lt;li&gt;Supports MacOS bash, zsh, powershell core and so on.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supports &lt;code&gt;tmux integration&lt;/code&gt;&lt;/strong&gt;. &lt;a href=&quot;https://kingtoolbox.github.io/2025/01/05/tmux-integration/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GUI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Supports Windows, MacOS and Linux.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supports Multilingual User Interface.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Supports Unicode 13.&lt;/li&gt; 
 &lt;li&gt;Session dialog and session tree. &lt;a href=&quot;https://kingtoolbox.github.io/2020/01/22/manage-sessions/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto Completion.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/tags/auto-completion/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Free Type Mode.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2022/04/12/free_type_mode/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Focus Mode.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2021/06/28/ui_focus_mode/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sync Input.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2021/05/27/sync-input/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced protection of the session username and password.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2021/03/11/protection-username-password/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Command palette.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/tags/command-palette/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Command sender.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/tags/sender/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explorer Pane.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2021/05/27/explorer/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shell Pane.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Quick Bar.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2020/08/22/quickbar/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Paste Dialog.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2020/08/22/paste_dialog/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Local and remote modes with vim keybindings. (Using Shift+Enter key to switch between remote and local mode&lt;/strong&gt;) &lt;a href=&quot;https://kingtoolbox.github.io/2020/06/21/keyboard-modes/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports time stamp, folding, outlining, split views.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supports powerline in Linux and PowerShell, e.g. Oh-My-Zsh, Oh-My-Posh.&lt;/strong&gt; &lt;a href=&quot;https://github.com/kingToolbox/WindTerm#screenshots&quot;&gt;Intro Image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports color schemes like vscode. &lt;a href=&quot;https://kingtoolbox.github.io/2020/01/23/highlight/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports searching and previewing. &lt;a href=&quot;https://kingtoolbox.github.io/2020/01/22/search-and-mark/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports highlighting the opening and closing delimiter, such as (), [], {} and the customed delimiters. &lt;a href=&quot;https://kingtoolbox.github.io/2020/06/28/pair/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports changing the UI theme. &lt;a href=&quot;https://kingtoolbox.github.io/2020/09/18/theme/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports setting the tab color. &lt;a href=&quot;https://kingtoolbox.github.io/2020/09/18/tabbar-change-tabcolor/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports searching over the opened tabs. &lt;a href=&quot;https://kingtoolbox.github.io/2021/03/11/tabbar-search-tab/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports closing tabs to the right.&lt;/li&gt; 
 &lt;li&gt;Supports setting the windows transparency. &lt;a href=&quot;https://kingtoolbox.github.io/2020/11/13/windows-opacity/&quot;&gt;Intro video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports select-to-copy, right-click-to-paste or middle-click-to-paste.&lt;/li&gt; 
 &lt;li&gt;Supports searching text online with Google, Bing, Github, Stackoverflow, Wikipedia and DuckDuckGo. &lt;a href=&quot;https://kingtoolbox.github.io/2020/11/13/search-online/&quot;&gt;Intro video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports hiding mouse cursor while typing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supports locking screen.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2021/04/23/lock-screen/&quot;&gt;Intro video&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Term&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports vt100, vt220, vt340, vt420, vt520, xterm, xterm-256-colors.&lt;/li&gt; 
 &lt;li&gt;Supports unicode, emojis, true-color, mouse protocol, etc.&lt;/li&gt; 
 &lt;li&gt;Supports auto wrap mode. &lt;a href=&quot;https://kingtoolbox.github.io/2020/01/22/auto-wrap/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Protocols and terms can be customed.&lt;/li&gt; 
 &lt;li&gt;All vttest tests have passed except Tektronix 4014.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Session&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Supports HTTP and SOCKS5 proxy.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2021/03/11/proxy-http-socks5/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supports Jump Server proxy.&lt;/strong&gt; &lt;a href=&quot;https://kingtoolbox.github.io/2021/03/11/proxy-jump-server/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports manual and automated session logging. &lt;a href=&quot;https://kingtoolbox.github.io/tags/logging/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rename and duplicate session. &lt;a href=&quot;https://kingtoolbox.github.io/tags/tabbar/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Restore last sessions and layouts when restart. &lt;a href=&quot;https://kingtoolbox.github.io/2020/01/22/restore-sessions/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports opening a specific session or set of sessions on startup.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Performance&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Dynamic memory compression, typically &lt;code&gt;20%&lt;/code&gt; to &lt;code&gt;90%&lt;/code&gt; of the working memory load can be reduced.&lt;/li&gt; 
 &lt;li&gt;High performance, low memory, low latency. &lt;a href=&quot;https://kingtoolbox.github.io/2020/01/23/windterm-putty-performance/&quot;&gt;Intro Video&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Sftp Performance&lt;/h1&gt; 
&lt;p&gt;The hardware used for generating the data in these benchmarks was&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;windows 10 - 2.3 GHz Intel Core i5 and 8GB memory.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;WindTerm1.72, WindTerm 1.2, FileZilla 3.48.1, WinSCP 5.17.2 (Build 10278)&lt;/strong&gt; tests are performed on WSL(Ubuntu 18.04.2).&lt;/p&gt; 
&lt;p&gt;The version of clients:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Release Date&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;windterm&lt;/td&gt; 
   &lt;td&gt;v1.72&lt;/td&gt; 
   &lt;td&gt;2020-10-25&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;windterm&lt;/td&gt; 
   &lt;td&gt;v1.2&lt;/td&gt; 
   &lt;td&gt;2020-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FileZilla&lt;/td&gt; 
   &lt;td&gt;v3.48.1&lt;/td&gt; 
   &lt;td&gt;2020-05-19&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WinScp&lt;/td&gt; 
   &lt;td&gt;v5.17.2 (Build 10278)&lt;/td&gt; 
   &lt;td&gt;2020-03-09&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;All test data is for reference only.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;5GB huge file (5,154,830 KB), generated by random data&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Download Time&lt;/th&gt; 
   &lt;th&gt;Download Rate&lt;/th&gt; 
   &lt;th&gt;Upload Time&lt;/th&gt; 
   &lt;th&gt;Upload Rate&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm 1.72 (Use high speed transfer)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;23s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;216.3 MB/s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;20s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;247.0 MB/s&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm 1.72&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;23s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;214.7 MB/s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;20s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;244.0 MB/s&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm 1.2&lt;/td&gt; 
   &lt;td&gt;37s&lt;/td&gt; 
   &lt;td&gt;139.3 MB/s&lt;/td&gt; 
   &lt;td&gt;43s&lt;/td&gt; 
   &lt;td&gt;119.9 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FileZilla&lt;/td&gt; 
   &lt;td&gt;32s&lt;/td&gt; 
   &lt;td&gt;161.1 MB/s&lt;/td&gt; 
   &lt;td&gt;30s&lt;/td&gt; 
   &lt;td&gt;171.8 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WinSCP&lt;/td&gt; 
   &lt;td&gt;81s&lt;/td&gt; 
   &lt;td&gt;63.7 MB/s&lt;/td&gt; 
   &lt;td&gt;91s&lt;/td&gt; 
   &lt;td&gt;56.7 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;4400 files, 16 folders (107,042 KB), unzipped from &lt;a href=&quot;https://github.com/vim/vim/archive/v7.4.1049.zip&quot;&gt;vim-7.4.1049.zip&lt;/a&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Download Time&lt;/th&gt; 
   &lt;th&gt;Download Rate&lt;/th&gt; 
   &lt;th&gt;Upload Time&lt;/th&gt; 
   &lt;th&gt;Upload Rate&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm 1.7&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;26s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;3.9 MB/s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;13s&lt;/td&gt; 
   &lt;td&gt;8.1 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm 1.2&lt;/td&gt; 
   &lt;td&gt;32s&lt;/td&gt; 
   &lt;td&gt;3.4 MB/s&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;10s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;10.7 MB/s&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FileZilla&lt;/td&gt; 
   &lt;td&gt;48s&lt;/td&gt; 
   &lt;td&gt;2.2 MB/s&lt;/td&gt; 
   &lt;td&gt;35s&lt;/td&gt; 
   &lt;td&gt;3.1 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WinSCP&lt;/td&gt; 
   &lt;td&gt;42s&lt;/td&gt; 
   &lt;td&gt;2.6 MB/s&lt;/td&gt; 
   &lt;td&gt;12s&lt;/td&gt; 
   &lt;td&gt;8.9 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Terminal Performance&lt;/h1&gt; 
&lt;p&gt;The hardware used for generating the data in these benchmarks was&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;windows 10 - 2.3 GHz Intel Core i5 and 8GB memory.
MacOs 10.13 - 2.3 GHz Intel Core i5 and 8GB memory.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;WindTerm 1.72, rxvt, putty, xterm, Windows Terminal&lt;/strong&gt; tests are performed on WSL(Ubuntu 18.04.2).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Iterm2, kitty, Alacritty&lt;/strong&gt; tests are performed on MacOS shell,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;For WindTerm: No color scheme used in windterm. Color scheme will result in approximately 2% loss and more memory usage.

For Alacritty: Only supports up to 100,000 scrollback lines, so every test use &quot;history: 100000&quot; setting and no memory usage measured.

For Windows Terminal: Only supports up to 65,535 scrollback lines, so every test use &quot;historySize: 65535&quot; setting and no memory usage measured. 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The version of terminals:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Release Date&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;windterm&lt;/td&gt; 
   &lt;td&gt;v1.72&lt;/td&gt; 
   &lt;td&gt;2020-10-25&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rxvt-unicode&lt;/td&gt; 
   &lt;td&gt;v9.2.2&lt;/td&gt; 
   &lt;td&gt;2016-05-14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;putty&lt;/td&gt; 
   &lt;td&gt;v0.71&lt;/td&gt; 
   &lt;td&gt;2019-03-16&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xterm&lt;/td&gt; 
   &lt;td&gt;v3.30&lt;/td&gt; 
   &lt;td&gt;2017-06-20&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iterm2&lt;/td&gt; 
   &lt;td&gt;v3.3.6&lt;/td&gt; 
   &lt;td&gt;2019-10-09&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;alacritty&lt;/td&gt; 
   &lt;td&gt;v0.5.0&lt;/td&gt; 
   &lt;td&gt;2020-07-21&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;kitty&lt;/td&gt; 
   &lt;td&gt;v0.14.6&lt;/td&gt; 
   &lt;td&gt;2019-09-25&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Terminal&lt;/td&gt; 
   &lt;td&gt;v1.3.2651.0&lt;/td&gt; 
   &lt;td&gt;2020-09-22&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;All test data is for reference only.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Test Command: &quot;cat ./benchmark_randomdata&quot;&lt;/h2&gt; 
&lt;p&gt;The benchmark_randomdata contains 97.6MB random text (102,401,504 bytes, 1,329,878 lines, generated and tested by &lt;a href=&quot;https://github.com/kingToolbox/WindTerm/raw/master/benchmark/urandom_test.sh&quot;&gt;random_test.sh&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;In all cases, three runs were made to warm system caches. The reported numbers are the median of five runs.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Telnet:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Lines of scrollback&lt;/th&gt; 
   &lt;th&gt;Data Rate(MB/sec)&lt;/th&gt; 
   &lt;th&gt;Memory Usage(MB)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;unlimited&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;52.1&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;106.6&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rxvt&lt;/td&gt; 
   &lt;td&gt;1,350,000&lt;/td&gt; 
   &lt;td&gt;37.8&lt;/td&gt; 
   &lt;td&gt;842.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Putty&lt;/td&gt; 
   &lt;td&gt;1,350,000&lt;/td&gt; 
   &lt;td&gt;4.9&lt;/td&gt; 
   &lt;td&gt;733.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xterm&lt;/td&gt; 
   &lt;td&gt;1,350,000&lt;/td&gt; 
   &lt;td&gt;2.2&lt;/td&gt; 
   &lt;td&gt;3328.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Terminal + telnet.exe&lt;/td&gt; 
   &lt;td&gt;65,535&lt;/td&gt; 
   &lt;td&gt;0.1&lt;/td&gt; 
   &lt;td&gt;Not measured, use 65,535 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;SSH:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Lines of scrollback&lt;/th&gt; 
   &lt;th&gt;Data Rate(MB/sec)&lt;/th&gt; 
   &lt;th&gt;Memory Usage(MB)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;unlimited&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;41.8&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;108.5&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rxvt&lt;/td&gt; 
   &lt;td&gt;1,350,000&lt;/td&gt; 
   &lt;td&gt;40.2&lt;/td&gt; 
   &lt;td&gt;842.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Putty&lt;/td&gt; 
   &lt;td&gt;1,350,000&lt;/td&gt; 
   &lt;td&gt;4.8&lt;/td&gt; 
   &lt;td&gt;734.9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xterm&lt;/td&gt; 
   &lt;td&gt;1,350,000&lt;/td&gt; 
   &lt;td&gt;2.3&lt;/td&gt; 
   &lt;td&gt;3328.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Terminal + ssh.exe&lt;/td&gt; 
   &lt;td&gt;65,535&lt;/td&gt; 
   &lt;td&gt;2.1&lt;/td&gt; 
   &lt;td&gt;Not measured, use 65,535 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Shell:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Lines of scrollback&lt;/th&gt; 
   &lt;th&gt;Data Rate(MB/sec)&lt;/th&gt; 
   &lt;th&gt;Memory Usage(MB)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iterm2&lt;/td&gt; 
   &lt;td&gt;unlimited&lt;/td&gt; 
   &lt;td&gt;- (Take too long time)&lt;/td&gt; 
   &lt;td&gt;more than 1300&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;kitty&lt;/td&gt; 
   &lt;td&gt;unlimited&lt;/td&gt; 
   &lt;td&gt;17.2&lt;/td&gt; 
   &lt;td&gt;2655&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Alacritty&lt;/td&gt; 
   &lt;td&gt;100,000&lt;/td&gt; 
   &lt;td&gt;41.3&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Test command: &quot;time seq 1 n&quot; (n = [1000000, 2000000, 5000000, 10000000], scrollback lines: unlimited)&lt;/h2&gt; 
&lt;h3&gt;n = 1,000,000&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Time(sec)&lt;/th&gt; 
   &lt;th&gt;Memory Usage(MB)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;1.236&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;16.1&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rxvt&lt;/td&gt; 
   &lt;td&gt;5.082&lt;/td&gt; 
   &lt;td&gt;633.3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;putty&lt;/td&gt; 
   &lt;td&gt;4.161&lt;/td&gt; 
   &lt;td&gt;551.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xterm&lt;/td&gt; 
   &lt;td&gt;40.421&lt;/td&gt; 
   &lt;td&gt;2500.7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iterm2&lt;/td&gt; 
   &lt;td&gt;2.116&lt;/td&gt; 
   &lt;td&gt;146.3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kitty&lt;/td&gt; 
   &lt;td&gt;2.535&lt;/td&gt; 
   &lt;td&gt;2376.5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Alacritty&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1.162&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Not measured, use 100,000 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Terminal + ssh.exe&lt;/td&gt; 
   &lt;td&gt;23.246&lt;/td&gt; 
   &lt;td&gt;Not measured, use 65,535 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;n = 2,000,000&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Time(sec)&lt;/th&gt; 
   &lt;th&gt;Memory Usage(MB)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;2.287&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;24.1&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rxvt&lt;/td&gt; 
   &lt;td&gt;10.896&lt;/td&gt; 
   &lt;td&gt;1266.6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;putty&lt;/td&gt; 
   &lt;td&gt;16.045&lt;/td&gt; 
   &lt;td&gt;1102.6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xterm&lt;/td&gt; 
   &lt;td&gt;68.154&lt;/td&gt; 
   &lt;td&gt;5005.5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iterm2&lt;/td&gt; 
   &lt;td&gt;4.181&lt;/td&gt; 
   &lt;td&gt;383.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kitty&lt;/td&gt; 
   &lt;td&gt;5.620&lt;/td&gt; 
   &lt;td&gt;4749.9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Alacritty&lt;/td&gt; 
   &lt;td&gt;2.322&lt;/td&gt; 
   &lt;td&gt;Not measured, use 100,000 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Terminal + ssh.exe&lt;/td&gt; 
   &lt;td&gt;50.381&lt;/td&gt; 
   &lt;td&gt;Not measured, use 65,535 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;n = 5,000,000&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Time(sec)&lt;/th&gt; 
   &lt;th&gt;Memory Usage(MB)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;5.520&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;68.2&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rxvt&lt;/td&gt; 
   &lt;td&gt;27.533&lt;/td&gt; 
   &lt;td&gt;3166.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;putty&lt;/td&gt; 
   &lt;td&gt;45.911&lt;/td&gt; 
   &lt;td&gt;2757.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xterm&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Out of memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iterm2&lt;/td&gt; 
   &lt;td&gt;10.805&lt;/td&gt; 
   &lt;td&gt;1048.3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kitty&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Out of memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Alacritty&lt;/td&gt; 
   &lt;td&gt;5.799&lt;/td&gt; 
   &lt;td&gt;Not measured, use 100,000 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Terminal + ssh.exe&lt;/td&gt; 
   &lt;td&gt;130.371&lt;/td&gt; 
   &lt;td&gt;Not measured, use 65,535 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;n = 10,000,000&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Time(sec)&lt;/th&gt; 
   &lt;th&gt;Memory Usage(MB)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;10.674&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;133.3&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rxvt&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Out of memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;putty&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Out of memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xterm&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Out of memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iterm2&lt;/td&gt; 
   &lt;td&gt;20.468&lt;/td&gt; 
   &lt;td&gt;2231.3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kitty&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Out of memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Alacritty&lt;/td&gt; 
   &lt;td&gt;11.598&lt;/td&gt; 
   &lt;td&gt;Not measured, use 100,000 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Terminal + ssh.exe&lt;/td&gt; 
   &lt;td&gt;264.739&lt;/td&gt; 
   &lt;td&gt;Not measured, use 65,535 scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;n = 10,000,000 scrollback = 30 Lines&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Time(sec)&lt;/th&gt; 
   &lt;th&gt;Memory Usage(MB)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;10.167&lt;/td&gt; 
   &lt;td&gt;0.7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rxvt&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9.687&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.1&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;putty&lt;/td&gt; 
   &lt;td&gt;95.382&lt;/td&gt; 
   &lt;td&gt;0.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xterm&lt;/td&gt; 
   &lt;td&gt;286.510&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.1&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iterm2&lt;/td&gt; 
   &lt;td&gt;25.448&lt;/td&gt; 
   &lt;td&gt;7.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kitty&lt;/td&gt; 
   &lt;td&gt;16.104&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Alacritty&lt;/td&gt; 
   &lt;td&gt;11.798&lt;/td&gt; 
   &lt;td&gt;Not measured, use zero scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Terminal + ssh.exe&lt;/td&gt; 
   &lt;td&gt;261.096&lt;/td&gt; 
   &lt;td&gt;Not measured, use zero scrollback lines setting&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Linux Terminal Performance&lt;/h1&gt; 
&lt;p&gt;The hardware used for generating the data in these benchmarks was&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Debian 10 Vm - 4cpu and 4GB memory.

For WindTerm: No color scheme used in windterm. Color scheme will result in approximately 2% loss and more memory usage.

For other terminals: No memory usage measured because most of them write the history to disk or only support a limited number of lines in memory..
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The version of terminals:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Release Date&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windterm&lt;/td&gt; 
   &lt;td&gt;v1.9&lt;/td&gt; 
   &lt;td&gt;2020-12-22&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gnome&lt;/td&gt; 
   &lt;td&gt;v3.30.2&lt;/td&gt; 
   &lt;td&gt;2018-10-22&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mate Terminal&lt;/td&gt; 
   &lt;td&gt;v1.20.2&lt;/td&gt; 
   &lt;td&gt;2019-02-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Konsole&lt;/td&gt; 
   &lt;td&gt;v18.04.0&lt;/td&gt; 
   &lt;td&gt;2019-04-12&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Xfce4 Terminal&lt;/td&gt; 
   &lt;td&gt;v0.8.7.4&lt;/td&gt; 
   &lt;td&gt;2018-5-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QTerminal&lt;/td&gt; 
   &lt;td&gt;v0.14.1&lt;/td&gt; 
   &lt;td&gt;2019-01-26&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;All test data is for reference only.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Test Command: &quot;cat ./benchmark_randomdata&quot;&lt;/h2&gt; 
&lt;p&gt;The benchmark_randomdata contains 97.6MB random text (102,401,504 bytes, 1,329,878 lines, generated and tested by &lt;a href=&quot;https://github.com/kingToolbox/WindTerm/raw/master/benchmark/urandom_test.sh&quot;&gt;random_test.sh&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;In all cases, three runs were made to warm system caches. The reported numbers are the median of five runs.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Cost Time&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1.976s&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gnome Terminal&lt;/td&gt; 
   &lt;td&gt;9.781s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mate Terminal&lt;/td&gt; 
   &lt;td&gt;9.841s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Konsole&lt;/td&gt; 
   &lt;td&gt;25.050s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xfce4 Terminal&lt;/td&gt; 
   &lt;td&gt;10.520s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QTerminal&lt;/td&gt; 
   &lt;td&gt;20.763s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Test command: &quot;time seq 1 n&quot; (n = [1000000, 2000000, 5000000, 10000000], scrollback lines: unlimited)&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;n&lt;/th&gt; 
   &lt;th&gt;1,000,000&lt;/th&gt; 
   &lt;th&gt;2,000,000&lt;/th&gt; 
   &lt;th&gt;5,000,000&lt;/th&gt; 
   &lt;th&gt;10,000,000&lt;/th&gt; 
   &lt;th&gt;10,000,000&lt;br&gt;(scrollback lines: 100)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindTerm&lt;/td&gt; 
   &lt;td&gt;0.846s (18.6MB)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1.574s&lt;/strong&gt; (26.6MB)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;4.046s&lt;/strong&gt; (56.4MB)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;8.232s&lt;/strong&gt; (102.2MB)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;7.748s&lt;/strong&gt; (3.4MB)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gnome Terminal&lt;/td&gt; 
   &lt;td&gt;0.920s&lt;/td&gt; 
   &lt;td&gt;2.152s&lt;/td&gt; 
   &lt;td&gt;5.271s&lt;/td&gt; 
   &lt;td&gt;11.111s&lt;/td&gt; 
   &lt;td&gt;13.109s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mate Terminal&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.822s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.698s&lt;/td&gt; 
   &lt;td&gt;5.943s&lt;/td&gt; 
   &lt;td&gt;10.920s&lt;/td&gt; 
   &lt;td&gt;12.290s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Konsole&lt;/td&gt; 
   &lt;td&gt;1.612s&lt;/td&gt; 
   &lt;td&gt;3.199s&lt;/td&gt; 
   &lt;td&gt;8.157s&lt;/td&gt; 
   &lt;td&gt;16.029s&lt;/td&gt; 
   &lt;td&gt;15.650s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xfce4 Terminal&lt;/td&gt; 
   &lt;td&gt;0.870s&lt;/td&gt; 
   &lt;td&gt;2.160s&lt;/td&gt; 
   &lt;td&gt;5.866s&lt;/td&gt; 
   &lt;td&gt;12.089s&lt;/td&gt; 
   &lt;td&gt;13.304s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QTerminal&lt;/td&gt; 
   &lt;td&gt;9.272s&lt;/td&gt; 
   &lt;td&gt;18.391s&lt;/td&gt; 
   &lt;td&gt;45.999s&lt;/td&gt; 
   &lt;td&gt;104.277s&lt;/td&gt; 
   &lt;td&gt;17.208s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Latency&lt;/h1&gt; 
&lt;p&gt;Considering the network influence on the latency, the following data is from &lt;a href=&quot;https://github.com/kingToolbox/digedit&quot;&gt;WindEdit&lt;/a&gt;. DIGEdit is the text component of WindTerm.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Min&lt;/th&gt; 
   &lt;th&gt;Max&lt;/th&gt; 
   &lt;th&gt;Avg&lt;/th&gt; 
   &lt;th&gt;SD&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WindEdit&lt;/td&gt; 
   &lt;td&gt;1.9&lt;/td&gt; 
   &lt;td&gt;7.6&lt;/td&gt; 
   &lt;td&gt;2.9&lt;/td&gt; 
   &lt;td&gt;0.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Notepad&lt;/td&gt; 
   &lt;td&gt;0.9&lt;/td&gt; 
   &lt;td&gt;16.5&lt;/td&gt; 
   &lt;td&gt;7.8&lt;/td&gt; 
   &lt;td&gt;1.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GVim&lt;/td&gt; 
   &lt;td&gt;0.9&lt;/td&gt; 
   &lt;td&gt;10.4&lt;/td&gt; 
   &lt;td&gt;2.8&lt;/td&gt; 
   &lt;td&gt;1.2&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Shortcuts&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://kingtoolbox.github.io/tags/keyboard/&quot;&gt;Shortcut Keys List&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Roadmap&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Release cycle:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;2-3 months.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prerelease cycle:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;4~6 weeks&lt;/p&gt; 
&lt;h1&gt;Roadmap of v2.7 (February 2025, for reference only)&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resolve issues as much as possible&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;SSH Agent Forwaring&lt;/li&gt; 
 &lt;li&gt;Tmux integration&lt;/li&gt; 
 &lt;li&gt;Command Snippet &lt;a href=&quot;https://github.com/kingToolbox/WindTerm/issues/239#issuecomment-951934488&quot;&gt;Description&lt;/a&gt; (Postponed to a later version )&lt;/li&gt; 
 &lt;li&gt;SSH GSSAPI Authentication (Postponed to a later version )&lt;/li&gt; 
 &lt;li&gt;Search in sessions (Postponed to a later version )&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Download: &lt;a href=&quot;https://github.com/kingToolbox/WindTerm/releases/tag/2.7-prerelease-3&quot;&gt;WindTerm 2.7.0 Prerelease 3&lt;/a&gt; (2025-2-10)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Roadmap of version 2.x:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;External tools&lt;/li&gt; 
 &lt;li&gt;Protocols: 
  &lt;ul&gt; 
   &lt;li&gt;Mosh&lt;/li&gt; 
   &lt;li&gt;Rlogin&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Session: 
  &lt;ul&gt; 
   &lt;li&gt;Auto Complete&lt;/li&gt; 
   &lt;li&gt;Chat mode&lt;/li&gt; 
   &lt;li&gt;Log viewer&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;File transfer: 
  &lt;ul&gt; 
   &lt;li&gt;ftp, ftps&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Script, macro and plugin stystem&lt;/li&gt; 
 &lt;li&gt;More ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Release Schedule:&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Level&lt;/th&gt; 
   &lt;th&gt;Target&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Timeline&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.x&lt;/td&gt; 
   &lt;td&gt;Basic&lt;/td&gt; 
   &lt;td&gt;Basic framework and basic features, but complete a high-performance text editor (&lt;a href=&quot;https://github.com/kingToolbox/WindEdit&quot;&gt;WindEdit&lt;/a&gt;) as the base, and be able to use them normally.&lt;/td&gt; 
   &lt;td&gt;Finished&lt;/td&gt; 
   &lt;td&gt;Long long ago ~ Sprint of 2020&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v1.x&lt;/td&gt; 
   &lt;td&gt;Manual&lt;/td&gt; 
   &lt;td&gt;Perfect features and can be used by most developers in their daily work&lt;/td&gt; 
   &lt;td&gt;Finished&lt;/td&gt; 
   &lt;td&gt;Spring of 2020 ~ Winter of 2020&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;v2.x&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Semi automatic&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Through triggers, macros, events, notifications and so on, developers can be assisted to complete some operations.&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Developing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Spring of 2021 ~ Summer of 2022&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v3.x&lt;/td&gt; 
   &lt;td&gt;Fully automatic&lt;/td&gt; 
   &lt;td&gt;Through plugins, scripts, machine learning and so on, automatically operating with achieving non-attended&lt;/td&gt; 
   &lt;td&gt;Planning&lt;/td&gt; 
   &lt;td&gt;Summer of 2022 ~ Winter of 2023&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Acknowledgement&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Contribution&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/EvoWebFrance&quot;&gt;EvoWebFrance&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;French translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/kvnklk&quot;&gt;kvnklk&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;German translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Lemonawa&quot;&gt;Lemonawa&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Simplified Chinese translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/LuxNegra&quot;&gt;LuxNegra&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;French translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MosamXu&quot;&gt;MosamXu&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Simplified Chinese translation&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>RT-Thread/rt-thread</title>
      <link>https://github.com/RT-Thread/rt-thread</link>
      <description>&lt;p&gt;RT-Thread is an open source IoT Real-Time Operating System (RTOS).&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/figures/logo.png&quot; width=&quot;60%&quot;&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/README_zh.md&quot;&gt;中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/README_es.md&quot;&gt;Español&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/README_de.md&quot;&gt;Deutsch&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/RT-Thread/rt-thread/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/RT-Thread/rt-thread?style=flat-square&amp;amp;logo=GitHub&quot; alt=&quot;GitHubStars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitee.com/rtthread/rt-thread/stargazers&quot;&gt;&lt;img src=&quot;https://gitee.com/rtthread/rt-thread/badge/star.svg?theme=gvp&quot; alt=&quot;GiteeStars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RT-Thread/rt-thread/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/RT-Thread/rt-thread.svg?sanitize=true&quot; alt=&quot;GitHub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RT-Thread/rt-thread/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/RT-Thread/rt-thread.svg?sanitize=true&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/RT-Thread/rt-thread?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RT-Thread/rt-thread/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/RT-Thread/rt-thread.svg?sanitize=true&quot; alt=&quot;GitHub pull-requests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RT-Thread/rt-thread/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RT-Thread/rt-thread/actions/workflows/bsp_buildings.yml&quot;&gt;&lt;img src=&quot;https://github.com/RT-Thread/rt-thread/actions/workflows/bsp_buildings.yml/badge.svg?sanitize=true&quot; alt=&quot;RT-Thread BSP Static Build Check&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hellogithub.com/repository/5816fc3c1e714d109631ceb377538ca9&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.hellogithub.com/v1/widgets/recommend.svg?rid=5816fc3c1e714d109631ceb377538ca9&amp;amp;claim_uid=kVCe5FXIMGAjJfy&quot; alt=&quot;Featured｜HelloGitHub&quot; style=&quot;width: 100px; height: 20px;&quot; width=&quot;250&quot; height=&quot;54&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;RT-Thread&lt;/h1&gt; 
&lt;p&gt;RT-Thread was born in 2006, it is an open source, neutral, and community-based real-time operating system (RTOS).&lt;/p&gt; 
&lt;p&gt;RT-Thread is mainly written in C language, easy to understand and easy to port(can be quickly port to a wide range of mainstream MCUs and module chips). It applies object-oriented programming methods to real-time system design, making the code elegant, structured, modular, and very tailorable.&lt;/p&gt; 
&lt;p&gt;RT-Thread has Standard version and Nano version. For resource-constrained microcontroller (MCU) systems, the Nano version that requires only 3KB Flash and 1.2KB RAM memory resources can be tailored with easy-to-use tools. For resource-rich IoT devices, RT-Thread can use the on-line software package management tool, together with system configuration tools, to achieve intuitive and rapid modular cutting, seamlessly import rich software packages; thus, achieving complex functions like Android&#39;s graphical interface and touch sliding effects, smart voice interaction effects, and so on.&lt;/p&gt; 
&lt;h2&gt;RT-Thread Architecture&lt;/h2&gt; 
&lt;p&gt;RT-Thread has not only a real-time kernel, but also rich components. Its architecture is as follows:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/figures/architecture.png&quot; alt=&quot;architecture&quot;&gt;&lt;/p&gt; 
&lt;p&gt;It includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Kernel layer: RT-Thread kernel, the core part of RT-Thread, includes the implementation of objects in the kernel system, such as multi-threading and its scheduling, semaphore, mailbox, message queue, memory management, timer, etc.; libcpu/BSP (Chip Migration Related Files/Board Support Package) is closely related to hardware and consists of peripheral drivers and CPU porting.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Components and Service Layer: Components are based on upper-level software on top of the RT-Thread kernel, such as virtual file systems, FinSH command-line interfaces, network frameworks, device frameworks, and more. Its modular design allows for high internal cohesion inside the components and low coupling between components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://packages.rt-thread.org/en/index.html&quot;&gt;RT-Thread software package&lt;/a&gt;: A general-purpose software component running on the RT-Thread IoT operating system platform for different application areas, consisting of description information, source code or library files. RT-Thread provides an open package platform with officially available or developer-supplied packages that provide developers with a choice of reusable packages that are an important part of the RT-Thread ecosystem. The package ecosystem is critical to the choice of an operating system because these packages are highly reusable and modular, making it easy for application developers to build the system they want in the shortest amount of time. RT-Thread supports 450+ software packages.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RT-Thread Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Designed for resource-constrained devices, the minimum kernel requires only 1.2KB of RAM and 3 KB of Flash.&lt;/li&gt; 
 &lt;li&gt;A variety of standard interfaces, such as POSIX, CMSIS, C++ application environment.&lt;/li&gt; 
 &lt;li&gt;Has rich components and a prosperous and fast growing package ecosystem.&lt;/li&gt; 
 &lt;li&gt;Elegant code style, easy to use, read and master.&lt;/li&gt; 
 &lt;li&gt;High Scalability. RT-Thread has high-quality scalable software architecture, loose coupling, modularity, is easy to tailor and expand.&lt;/li&gt; 
 &lt;li&gt;Supports high-performance applications.&lt;/li&gt; 
 &lt;li&gt;Supports all mainstream compiling tools such as GCC, Keil and IAR.&lt;/li&gt; 
 &lt;li&gt;Supports a wide range of &lt;a href=&quot;https://www.rt-thread.io/board.html&quot;&gt;architectures and chips&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code Catalogue&lt;/h2&gt; 
&lt;p&gt;RT-Thread source code catalog is shown as follow:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bsp&lt;/td&gt; 
   &lt;td&gt;Board Support Package based on the porting of various development boards&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;components&lt;/td&gt; 
   &lt;td&gt;Components, such as finsh shell, file system, protocol stack etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;documentation&lt;/td&gt; 
   &lt;td&gt;Related documents, like coding style, doxygen etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;examples&lt;/td&gt; 
   &lt;td&gt;Related sample code&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;include&lt;/td&gt; 
   &lt;td&gt;Head files of RT-Thread kernel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;libcpu&lt;/td&gt; 
   &lt;td&gt;CPU porting code such as ARM/MIPS/RISC-V etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;src&lt;/td&gt; 
   &lt;td&gt;The source files for the RT-Thread kernel.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tools&lt;/td&gt; 
   &lt;td&gt;The script files for the RT-Thread command build tool.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;RT-Thread has now been ported for nearly 200 development boards, most BSPs support MDK, IAR development environment and GCC compiler, and have provided default MDK and IAR project, which allows users to add their own application code directly based on the project. Each BSP has a similar directory structure, and most BSPs provide a README.md file, which is a markdown-format file that contains the basic introduction of BSP, and introduces how to simply start using BSP.&lt;/p&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;h2&gt;Supported Architectures&lt;/h2&gt; 
&lt;p&gt;RT-Thread supports many architectures, and has covered the major architectures in current applications. Architecture and chip manufacturer involved:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ARM Cortex-M0/M0+&lt;/strong&gt;：manufacturers like ST&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM Cortex-M3&lt;/strong&gt;：manufacturers like ST、Winner Micro、MindMotion, ect.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM Cortex-M4&lt;/strong&gt;：manufacturers like ST、Infineon、Nuvoton、NXP、&lt;a href=&quot;https://github.com/RT-Thread/rt-thread/tree/master/bsp/nrf5x&quot;&gt;Nordic&lt;/a&gt;、GigaDevice、Realtek、Ambiq Micro, ect.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM Cortex-M7&lt;/strong&gt;：manufacturers like ST、NXP&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM Cortex-M23&lt;/strong&gt;：manufacturers like GigaDevice&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM Cortex-M33&lt;/strong&gt;：manufacturers like ST&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM Cortex-R4&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM Cortex-A8/A9&lt;/strong&gt;：manufacturers like NXP&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM7&lt;/strong&gt;：manufacturers like Samsung&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM9&lt;/strong&gt;：manufacturers like Allwinner、Xilinx 、GOKE&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARM11&lt;/strong&gt;：manufacturers like Fullhan&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MIPS32&lt;/strong&gt;：manufacturers like loongson、Ingenic&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RISC-V RV32E/RV32I[F]/RV64[D]&lt;/strong&gt;：manufacturers like sifive、&lt;a href=&quot;https://github.com/RT-Thread/rt-thread/tree/master/bsp/k210&quot;&gt;Canaan Kendryte&lt;/a&gt;、&lt;a href=&quot;https://github.com/RT-Thread/rt-thread/tree/master/bsp/bouffalo_lab&quot;&gt;bouffalo_lab&lt;/a&gt;、&lt;a href=&quot;https://nucleisys.com/&quot;&gt;Nuclei&lt;/a&gt;、&lt;a href=&quot;https://www.t-head.cn/&quot;&gt;T-Head&lt;/a&gt;、&lt;a href=&quot;https://github.com/RT-Thread/rt-thread/tree/master/bsp/hpmicro&quot;&gt;HPMicro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ARC&lt;/strong&gt;：manufacturers like SYNOPSYS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DSP&lt;/strong&gt;：manufacturers like TI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;C-Sky&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;x86&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported IDE and Compiler&lt;/h2&gt; 
&lt;p&gt;The main IDE/compilers supported by RT-Thread are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;RT-Thread Studio IDE&lt;/li&gt; 
 &lt;li&gt;MDK KEIL&lt;/li&gt; 
 &lt;li&gt;IAR&lt;/li&gt; 
 &lt;li&gt;GCC&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RT-Thread Studio IDE&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.rt-thread.io/document/site/rtthread-studio/um/studio-user-manual/&quot;&gt;User Manual&lt;/a&gt; | &lt;a href=&quot;https://youtu.be/ucq5eJgZIQg&quot;&gt;Tutorial Videos&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RT-Thread Studio IDE (a.k.a. RT-Studio) is a one-stop intergrated development environment built by RT-Thread team. It has a easy-to-use graphical configuration system and a wealth of software packages and components resources. RT-Studio has the features of project creation, configuration and management,as well as code editing, SDK management, build configuration, debugging configuration, program download and debug. We&#39;re looking to make the use of RT-Studio as intuitive as possible, reducing the duplication of work and improving the development efficiency.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/figures/studio.gif&quot; alt=&quot;studio&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Env Tool&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/env/env.md&quot;&gt;User Manual&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/watch?v=dEK94o_YoSo&quot;&gt;Tutorial Videos&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;In the early stage, RT-Thread team also created an auxiliary tool called Env. It is an auxiliary tool with a TUI (Text-based user interface). Developers can use Env tool to configure and generate the GCC, Keil MDK, and IAR projects.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/figures/env.png&quot; alt=&quot;env&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.rt-thread.io/document/site/tutorial/quick-start/introduction/introduction/&quot;&gt;RT-Thread Programming Guide&lt;/a&gt; | &lt;a href=&quot;https://www.rt-thread.io/studio.html&quot;&gt;RT-Thread Studio IDE&lt;/a&gt; | &lt;a href=&quot;https://github.com/RT-Thread-packages/kernel-sample&quot;&gt;Kernel Sample&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/watch?v=ZMi1O-Rr7yc&amp;amp;list=PLXUV89C_M3G5KVw2IerI-pqApdSM_IaZo&quot;&gt;RT-Thread Beginners Guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Based on &lt;a href=&quot;https://github.com/RT-Thread/rt-thread/tree/master/bsp/stm32/stm32f103-blue-pill&quot;&gt;STM32F103 BluePill&lt;/a&gt; | &lt;a href=&quot;https://github.com/RT-Thread/rt-thread/tree/master/bsp/raspberry-pico&quot;&gt;Raspberry Pi Pico&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Simulator&lt;/h2&gt; 
&lt;p&gt;RT-Thread BSP can be compiled directly and downloaded to the corresponding development board for use. In addition, RT-Thread also provides qemu-vexpress-a9 BSP, which can be used without hardware platform. See the getting started guide below for details. Getting Started of QEMU with Env: &lt;a href=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/2.quick-start/quick_start_qemu/quick_start_qemu_windows.md&quot;&gt;Windows&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/2.quick-start/quick_start_qemu/quick_start_qemu_linux.md&quot;&gt;Linux Ubuntu&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/2.quick-start/quick_start_qemu/quick_start_qemu_macos.md&quot;&gt;Mac OS&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;RT-Thread follows the Apache License 2.0 free software license. It&#39;s completely open-source, can be used in commercial applications for free, does not require the disclosure of code, and has no potential commercial risk. License information and copyright information can generally be seen at the beginning of the code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;/* Copyright (c) 2006-2018, RT-Thread Development Team
 *
 * SPDX-License-Identifier: Apache-2.0
 * ...
 */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Community&lt;/h1&gt; 
&lt;p&gt;RT-Thread is very grateful for the support from all community developers, and if you have any ideas, suggestions or questions in the process of using RT-Thread, RT-Thread can be reached by the following means, and we are also updating RT-Thread in real time on these channels. At the same time, any questions can be asked in the &lt;a href=&quot;https://github.com/RT-Thread/rt-thread/issues&quot;&gt;issue section of RT-Thread repository&lt;/a&gt; or &lt;a href=&quot;https://club.rt-thread.io/&quot;&gt;RT-Thread forum&lt;/a&gt;, and community members will answer them.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.rt-thread.io&quot;&gt;Website&lt;/a&gt; | &lt;a href=&quot;https://github.com/RT-Thread/rt-thread&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/rt_thread&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://www.linkedin.com/company/rt-thread-iot-os/posts/?feedView=all&quot;&gt;LinkedIn&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/channel/UCdDHtIfSYPq4002r27ffqPw&quot;&gt;Youtube&lt;/a&gt; | &lt;a href=&quot;https://www.facebook.com/RT-Thread-IoT-OS-110395723808463/?modal=admin_todo_tour&quot;&gt;Facebook&lt;/a&gt; | &lt;a href=&quot;https://rt-thread.medium.com/&quot;&gt;Medium&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Contribution&lt;/h1&gt; 
&lt;p&gt;If you are interested in RT-Thread and want to join in the development of RT-Thread and become a code contributor,please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/.github/CONTRIBUTING.md&quot;&gt;Code Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Thanks for the following contributors!&lt;/h2&gt; 
&lt;a href=&quot;https://github.com/RT-Thread/rt-thread/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=RT-Thread/rt-thread&quot;&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>taosdata/TDengine</title>
      <link>https://github.com/taosdata/TDengine</link>
      <description>&lt;p&gt;High-performance, scalable time-series database designed for Industrial IoT (IIoT) scenarios&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://tdengine.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/docs/assets/tdengine.svg?sanitize=true&quot; alt=&quot;TDengine&quot; width=&quot;500&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/taosdata/TDengine/actions/workflows/tdengine-release-build.yml&quot;&gt;&lt;img src=&quot;https://github.com/taosdata/TDengine/actions/workflows/tdengine-release-build.yml/badge.svg?sanitize=true&quot; alt=&quot;TDengine Release Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/taosdata/TDengine?branch=3.0&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/taosdata/TDengine/badge.svg?branch=3.0&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/feici02/TDengine/commits/main/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/taosdata/tdengine&quot; alt=&quot;GitHub commit activity&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/taosdata/TDengine/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/taosdata/tdengine&quot; alt=&quot;GitHub Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/taosdata/TDengine/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/taosdata/tdengine&quot; alt=&quot;GitHub License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/4201&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/4201/badge&quot; alt=&quot;CII Best Practices&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://twitter.com/tdenginedb&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/tdenginedb?label=TDengine&amp;amp;style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/@tdengine&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Subscribe_@tdengine--white?logo=youtube&amp;amp;style=social&quot; alt=&quot;YouTube Channel&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.com/invite/VZdSuUg4pS&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join_Discord--white?logo=discord&amp;amp;style=social&quot; alt=&quot;Discord Community&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/company/tdengine&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Follow_LinkedIn--white?logo=linkedin&amp;amp;style=social&quot; alt=&quot;LinkedIn&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/tagged/tdengine&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Ask_StackOverflow--white?logo=stackoverflow&amp;amp;style=social&amp;amp;logoColor=orange&quot; alt=&quot;StackOverflow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/README-CN.md&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://cloud.tdengine.com&quot;&gt;TDengine Cloud&lt;/a&gt; | &lt;a href=&quot;https://tdengine.com/time-series-database/&quot;&gt;Learn more about TSDB&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#1-introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#2-documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#3-prerequisites&quot;&gt;Prerequisites&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#31-prerequisites-on-linux&quot;&gt;3.1 Prerequisites On Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#32-prerequisites-on-macos&quot;&gt;3.2 Prerequisites On macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#33-prerequisites-on-windows&quot;&gt;3.3 Prerequisites On Windows&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#34-clone-the-repo&quot;&gt;3.4 Clone the repo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#4-building&quot;&gt;Building&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#41-build-on-linux&quot;&gt;4.1 Build on Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#42-build-on-macos&quot;&gt;4.2 Build on macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#43-build-on-windows&quot;&gt;4.3 Build On Windows&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#5-packaging&quot;&gt;Packaging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#6-installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#61-install-on-linux&quot;&gt;6.1 Install on Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#62-install-on-macos&quot;&gt;6.2 Install on macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#63-install-on-windows&quot;&gt;6.3 Install on Windows&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#7-running&quot;&gt;Running&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#71-run-tdengine-on-linux&quot;&gt;7.1 Run TDengine on Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#72-run-tdengine-on-macos&quot;&gt;7.2 Run TDengine on macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#73-run-tdengine-on-windows&quot;&gt;7.3 Run TDengine on Windows&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#8-testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#9-releasing&quot;&gt;Releasing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#10-workflow&quot;&gt;Workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#11-coverage&quot;&gt;Coverage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/#12-contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;1. Introduction&lt;/h1&gt; 
&lt;p&gt;TDengine is an open source, high-performance, cloud native and AI powered &lt;a href=&quot;https://tdengine.com/tsdb/&quot;&gt;time-series database&lt;/a&gt; designed for Internet of Things (IoT), Connected Cars, and Industrial IoT. It enables efficient, real-time data ingestion, processing, and analysis of TB and even PB scale data per day, generated by billions of sensors and data collectors. TDengine differentiates itself from other time-series databases with the following advantages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tdengine.com/tdengine/high-performance-time-series-database/&quot;&gt;High Performance&lt;/a&gt;&lt;/strong&gt;: TDengine is the only time-series database to solve the high cardinality issue to support billions of data collection points while out performing other time-series databases for data ingestion, querying and data compression.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tdengine.com/tdengine/simplified-time-series-data-solution/&quot;&gt;Simplified Solution&lt;/a&gt;&lt;/strong&gt;: Through built-in caching, stream processing, data subscription and AI agent features, TDengine provides a simplified solution for time-series data processing. It reduces system design complexity and operation costs significantly.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tdengine.com/tdengine/cloud-native-time-series-database/&quot;&gt;Cloud Native&lt;/a&gt;&lt;/strong&gt;: Through native distributed design, sharding and partitioning, separation of compute and storage, RAFT, support for kubernetes deployment and full observability, TDengine is a cloud native Time-Series Database and can be deployed on public, private or hybrid clouds.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tdengine.com/tdengine/tdgpt/&quot;&gt;AI Powered&lt;/a&gt;&lt;/strong&gt;: Through the built in AI agent TDgpt, TDengine can connect to a variety of time series foundation model, large language model, machine learning and traditional algorithms to provide time series data forecasting, anomly detection, imputation and classification.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tdengine.com/tdengine/easy-time-series-data-platform/&quot;&gt;Ease of Use&lt;/a&gt;&lt;/strong&gt;: For administrators, TDengine significantly reduces the effort to deploy and maintain. For developers, it provides a simple interface, simplified solution and seamless integrations for third party tools. For data users, it gives easy data access.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tdengine.com/tdengine/time-series-data-analytics-made-easy/&quot;&gt;Easy Data Analytics&lt;/a&gt;&lt;/strong&gt;: Through super tables, storage and compute separation, data partitioning by time interval, pre-computation and AI agent, TDengine makes it easy to explore, format, and get access to data in a highly efficient way.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tdengine.com/tdengine/open-source-time-series-database/&quot;&gt;Open Source&lt;/a&gt;&lt;/strong&gt;: TDengine’s core modules, including cluster feature and AI agent, are all available under open source licenses. It has gathered 23.7k stars on GitHub. There is an active developer community, and over 730k running instances worldwide.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a full list of TDengine competitive advantages, please &lt;a href=&quot;https://tdengine.com/tdengine/&quot;&gt;check here&lt;/a&gt;. The easiest way to experience TDengine is through &lt;a href=&quot;https://cloud.tdengine.com&quot;&gt;TDengine Cloud&lt;/a&gt;. For the latest TDengine component TDgpt, please refer to &lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/tools/tdgpt/README.md&quot;&gt;TDgpt README&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h1&gt;2. Documentation&lt;/h1&gt; 
&lt;p&gt;For user manual, system design and architecture, please refer to &lt;a href=&quot;https://docs.tdengine.com&quot;&gt;TDengine Documentation&lt;/a&gt; (&lt;a href=&quot;https://docs.taosdata.com&quot;&gt;TDengine 文档&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;You can choose to install TDengine via &lt;a href=&quot;https://docs.tdengine.com/get-started/deploy-in-docker/&quot;&gt;container&lt;/a&gt;, &lt;a href=&quot;https://docs.tdengine.com/get-started/deploy-from-package/&quot;&gt;installation package&lt;/a&gt;, &lt;a href=&quot;https://docs.tdengine.com/operations-and-maintenance/deploy-your-cluster/#kubernetes-deployment&quot;&gt;Kubernetes&lt;/a&gt; or try &lt;a href=&quot;https://cloud.tdengine.com/&quot;&gt;fully managed service&lt;/a&gt; without installation. This quick guide is for developers who want to contribute, build, release and test TDengine by themselves.&lt;/p&gt; 
&lt;p&gt;For contributing/building/testing TDengine Connectors, please check the following repositories: &lt;a href=&quot;https://github.com/taosdata/taos-connector-jdbc&quot;&gt;JDBC Connector&lt;/a&gt;, &lt;a href=&quot;https://github.com/taosdata/driver-go&quot;&gt;Go Connector&lt;/a&gt;, &lt;a href=&quot;https://github.com/taosdata/taos-connector-python&quot;&gt;Python Connector&lt;/a&gt;, &lt;a href=&quot;https://github.com/taosdata/taos-connector-node&quot;&gt;Node.js Connector&lt;/a&gt;, &lt;a href=&quot;https://github.com/taosdata/taos-connector-dotnet&quot;&gt;C# Connector&lt;/a&gt;, &lt;a href=&quot;https://github.com/taosdata/taos-connector-rust&quot;&gt;Rust Connector&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;3. Prerequisites&lt;/h1&gt; 
&lt;p&gt;At the moment, TDengine server supports running on Linux/MacOS systems. Any application can also choose the RESTful interface provided by taosAdapter to connect the taosd service. TDengine supports X64/ARM64 CPU, and it will support MIPS64, Alpha64, ARM32, RISC-V and other CPU architectures in the future. Right now we don&#39;t support build with cross-compiling environment.&lt;/p&gt; 
&lt;p&gt;Starting from version 3.1.0.0, TDengine supports the Windows system exclusively in its Enterprise edition.&lt;/p&gt; 
&lt;p&gt;If you want to compile taosAdapter or taosKeeper, you need to install Go 1.18 or above.&lt;/p&gt; 
&lt;h2&gt;3.1 Prerequisites on Linux&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Install required tools on Linux&lt;/summary&gt; 
 &lt;h3&gt;For Ubuntu 18.04、20.04、22.04&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get update
sudo apt-get install -y gcc cmake build-essential git libjansson-dev \
  libsnappy-dev liblzma-dev zlib1g-dev pkg-config
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;For CentOS 8&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo yum update
yum install -y epel-release gcc gcc-c++ make cmake git perl dnf-plugins-core 
yum config-manager --set-enabled powertools
yum install -y zlib-static xz-devel snappy-devel jansson-devel pkgconfig libatomic-static libstdc++-static 
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;3.2 Prerequisites on macOS&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Install required tools on macOS&lt;/summary&gt; 
 &lt;p&gt;Please intall the dependencies with &lt;a href=&quot;https://brew.sh/&quot;&gt;brew&lt;/a&gt;.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install argp-standalone gflags pkgconfig
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;3.3 Prerequisites on Windows&lt;/h2&gt; 
&lt;p&gt;Not available for community edition.&lt;/p&gt; 
&lt;h2&gt;3.4 Clone the repo&lt;/h2&gt; 
&lt;p&gt;Clone the repository to the target machine:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/taosdata/TDengine.git
cd TDengine
&lt;/code&gt;&lt;/pre&gt;  
&lt;h1&gt;4. Building&lt;/h1&gt; 
&lt;p&gt;TDengine provide a few useful tools such as taosBenchmark (was named taosdemo) and taosdump. They were part of TDengine. By default, TDengine compiling does not include taosTools. You can use &lt;code&gt;cmake .. -DBUILD_TOOLS=true&lt;/code&gt; to make them be compiled with TDengine.&lt;/p&gt; 
&lt;p&gt;TDengine requires &lt;a href=&quot;https://gcc.gnu.org/&quot;&gt;GCC&lt;/a&gt; 9.3.1 or higher and &lt;a href=&quot;https://cmake.org/&quot;&gt;CMake&lt;/a&gt; 3.13.0 or higher for building.&lt;/p&gt; 
&lt;h2&gt;4.1 Build on Linux&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Detailed steps to build on Linux&lt;/summary&gt; 
 &lt;p&gt;You can run the bash script &lt;code&gt;build.sh&lt;/code&gt; to build both TDengine and taosTools including taosBenchmark and taosdump as below:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./build.sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;It equals to execute following commands:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir debug &amp;amp;&amp;amp; cd debug
cmake .. -DBUILD_TOOLS=true -DBUILD_CONTRIB=true
make
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you want to compile taosAdapter, you need to add the &lt;code&gt;-DBUILD_HTTP=false&lt;/code&gt; option.&lt;/p&gt; 
 &lt;p&gt;If you want to compile taosKeeper, you need to add the &lt;code&gt;-DBUILD_KEEPER=true&lt;/code&gt; option.&lt;/p&gt; 
 &lt;p&gt;You can use Jemalloc as memory allocator instead of glibc:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cmake .. -DJEMALLOC_ENABLED=ON
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;TDengine build script can auto-detect the host machine&#39;s architecture on x86, x86-64, arm64 platform. You can also specify architecture manually by CPUTYPE option:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cmake .. -DCPUTYPE=aarch64 &amp;amp;&amp;amp; cmake --build .
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;4.2 Build on macOS&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Detailed steps to build on macOS&lt;/summary&gt; 
 &lt;p&gt;Please install XCode command line tools and cmake. Verified with XCode 11.4+ on Catalina and Big Sur.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;mkdir debug &amp;amp;&amp;amp; cd debug
cmake .. &amp;amp;&amp;amp; cmake --build .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you want to compile taosAdapter, you need to add the &lt;code&gt;-DBUILD_HTTP=false&lt;/code&gt; option.&lt;/p&gt; 
 &lt;p&gt;If you want to compile taosKeeper, you need to add the &lt;code&gt;-DBUILD_KEEPER=true&lt;/code&gt; option.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;4.3 Build on Windows&lt;/h2&gt; 
&lt;p&gt;Not available for community edition.&lt;/p&gt; 
&lt;h1&gt;5. Packaging&lt;/h1&gt; 
&lt;p&gt;The TDengine community installer can NOT be created by this repository only, due to some component dependencies. We are still working on this improvement.&lt;/p&gt; 
&lt;h1&gt;6. Installation&lt;/h1&gt; 
&lt;h2&gt;6.1 Install on Linux&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Detailed steps to install on Linux&lt;/summary&gt; 
 &lt;p&gt;After building successfully, TDengine can be installed by:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Installing from source code will also configure service management for TDengine. Users can also choose to &lt;a href=&quot;https://docs.tdengine.com/get-started/deploy-from-package/&quot;&gt;install from packages&lt;/a&gt; for it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;6.2 Install on macOS&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Detailed steps to install on macOS&lt;/summary&gt; 
 &lt;p&gt;After building successfully, TDengine can be installed by:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;6.3 Install on Windows&lt;/h2&gt; 
&lt;p&gt;Not available for community edition.&lt;/p&gt; 
&lt;h1&gt;7. Running&lt;/h1&gt; 
&lt;h2&gt;7.1 Run TDengine on Linux&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Detailed steps to run on Linux&lt;/summary&gt; 
 &lt;p&gt;To start the service after installation on linux, in a terminal, use:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo systemctl start taosd
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then users can use the TDengine CLI to connect the TDengine server. In a terminal, use:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;taos
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If TDengine CLI connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown.&lt;/p&gt; 
 &lt;p&gt;If you don&#39;t want to run TDengine as a service, you can run it in current shell. For example, to quickly start a TDengine server after building, run the command below in terminal: (We take Linux as an example, command on Windows will be &lt;code&gt;taosd.exe&lt;/code&gt;)&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./build/bin/taosd -c test/cfg
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;In another terminal, use the TDengine CLI to connect the server:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./build/bin/taos -c test/cfg
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Option &lt;code&gt;-c test/cfg&lt;/code&gt; specifies the system configuration file directory.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;7.2 Run TDengine on macOS&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Detailed steps to run on macOS&lt;/summary&gt; 
 &lt;p&gt;To start the service after installation on macOS, double-click the /applications/TDengine to start the program, or in a terminal, use:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo launchctl start com.tdengine.taosd
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then users can use the TDengine CLI to connect the TDengine server. In a terminal, use:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;taos
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If TDengine CLI connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;7.3 Run TDengine on Windows&lt;/h2&gt; 
&lt;p&gt;Not available for community edition.&lt;/p&gt; 
&lt;h1&gt;8. Testing&lt;/h1&gt; 
&lt;p&gt;For how to run different types of tests on TDengine, please see &lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/tests/README.md&quot;&gt;Testing TDengine&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;9. Releasing&lt;/h1&gt; 
&lt;p&gt;For the complete list of TDengine Releases, please see &lt;a href=&quot;https://github.com/taosdata/TDengine/releases&quot;&gt;Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;10. Workflow&lt;/h1&gt; 
&lt;p&gt;TDengine build check workflow can be found in this &lt;a href=&quot;https://github.com/taosdata/TDengine/actions/workflows/taosd-ci-build.yml&quot;&gt;Github Action&lt;/a&gt;. More workflows will be available soon.&lt;/p&gt; 
&lt;h1&gt;11. Coverage&lt;/h1&gt; 
&lt;p&gt;Latest TDengine test coverage report can be found on &lt;a href=&quot;https://coveralls.io/github/taosdata/TDengine&quot;&gt;coveralls.io&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;How to run the coverage report locally?&lt;/summary&gt; To create the test coverage report (in HTML format) locally, please run following commands: 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd tests
bash setup-lcov.sh -v 1.16 &amp;amp;&amp;amp; ./run_local_coverage.sh -b main -c task 
# on main branch and run cases in longtimeruning_cases.task 
# for more infomation about options please refer to ./run_local_coverage.sh -h
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Please note that the -b and -i options will recompile TDengine with the -DCOVER=true option, which may take a amount of time.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h1&gt;12. Contributing&lt;/h1&gt; 
&lt;p&gt;Please follow the &lt;a href=&quot;https://raw.githubusercontent.com/taosdata/TDengine/main/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; to contribute to TDengine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>screetsec/TheFatRat</title>
      <link>https://github.com/screetsec/TheFatRat</link>
      <description>&lt;p&gt;Thefatrat a massive exploiting tool : Easy tool to generate backdoor and easy tool to post exploitation attack like browser attack and etc . This tool compiles a malware with popular payload and then the compiled malware can be execute on windows, android, mac . The malware that created with this tool also have an ability to bypass most AV softw…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TheFatRat&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/TheFatRat-1.9.8-brightgreen.svg?maxAge=259200&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Codename-Target-red.svg?maxAge=259200&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Release-Testing-brightgreen.svg?sanitize=true&quot; alt=&quot;Stage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Supported_OS-Linux-orange.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Available-BlackArch-red.svg?maxAge=259200&quot; alt=&quot;Available&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ManhNho/CEHv10/tree/master/Slides&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CEHv10-eccouncil-blue.svg?maxAge=259200&quot; alt=&quot;Documentation&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-blue.svg?style=flat&quot; alt=&quot;Contributions Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;A Massive Exploiting Tool&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17976841/65820028-6ae17e00-e24e-11e9-894f-35836481cc2c.png&quot; alt=&quot;Banner&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TheFatRat&lt;/strong&gt; is an exploiting tool which compiles a malware with famous payload, and then the compiled maware can be executed on Linux , Windows , Mac and Android. &lt;strong&gt;TheFatRat&lt;/strong&gt; Provides An Easy way to create Backdoors and Payload which can bypass most anti-virus.&lt;/p&gt; 
&lt;h2&gt;Information&lt;/h2&gt; 
&lt;p&gt;This tool is for educational purpose only, usage of TheFatRat for attacking targets without prior mutual consent is illegal. Developers assume no liability and are not responsible for any misuse or damage cause by this program.&lt;/p&gt; 
&lt;h2&gt;Features !&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully Automating MSFvenom &amp;amp; Metasploit.&lt;/li&gt; 
 &lt;li&gt;Local or remote listener Generation.&lt;/li&gt; 
 &lt;li&gt;Easily Make Backdoor by category Operating System.&lt;/li&gt; 
 &lt;li&gt;Generate payloads in Various formats.&lt;/li&gt; 
 &lt;li&gt;Bypass anti-virus backdoors.&lt;/li&gt; 
 &lt;li&gt;File pumper that you can use for increasing the size of your files.&lt;/li&gt; 
 &lt;li&gt;The ability to detect external IP &amp;amp; Interface address .&lt;/li&gt; 
 &lt;li&gt;Automatically creates AutoRun files for USB / CDROM exploitation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;But it&#39;s shit! And your implementation sucks!&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Yes, you&#39;re probably correct. Feel free to &quot;Not use it&quot; and there is a pull button to &quot;Make it better&quot;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Instructions on how to install &lt;em&gt;TheFatRat&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/Screetsec/TheFatRat.git
cd TheFatRat
chmod +x setup.sh &amp;amp;&amp;amp; ./setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd TheFatRat
./update &amp;amp;&amp;amp; chmod +x setup.sh &amp;amp;&amp;amp; ./setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Troubleshoot on TheFatRat&lt;/h3&gt; 
&lt;p&gt;chk_tools script to use in case of problems in setup.sh of fatrat this script will check if everything is in the right version to run fatrat and will also provide you a solution for the problem&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd TheFatRat
chmod +x chk_tools 
./chk_tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools Overview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Front View&lt;/th&gt; 
   &lt;th&gt;Sample Feature&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17976841/25420100/9ee12cf6-2a80-11e7-8dfa-c2e3cfe71366.png&quot; alt=&quot;Index&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17976841/65820886-91a4b200-e258-11e9-9a00-1e5905f6be16.jpg&quot; alt=&quot;f&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation Available in Modules CEH v9 and V10 , Download source here 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/khanhnnvn/CEHv10/raw/master/Labs/CEHv10%20Module%2006%20System%20Hacking.pdf&quot;&gt;CEHv10 Module 06 System Hacking.pdf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/khanhnnvn/CEHv10/raw/master/Labs/CEHv10%20Module%2017%20Hacking%20Mobile%20Platforms.pdf&quot;&gt;CEHv10 Module 17 Hacking Mobile Platforms.pdf&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Published in International Journal of Cyber-Security and Digital Forensics 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.researchgate.net/publication/323574673_MALWARE_ANALYSIS_OF_BACKDOOR_CREATOR_FATRAT&quot;&gt;Malware Analysis Of Backdoor Creator : TheFatRat&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Youtube Videos 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FsSgJFxyzFQ&quot;&gt;How To Download &amp;amp; Install TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=NCsrcqhUBCc&amp;amp;feature=youtu.be&amp;amp;list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8&quot;&gt;TheFatRat 1.9.6 - Trodebi ( Embed Trojan into Debian Package )&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bFXVAXRXE9Q&quot;&gt;hacking windows 10 with TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FlXMslSjnGw&quot;&gt;Hacking Windows using TheFatRat + Apache2 Server + Ettercap + Metasploit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lglOXojT84M&quot;&gt;Hacking with a Microsoft Office Word Document from TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=pbvg7pgxVjo&quot;&gt;XSS to powershell attack and bypass Antivirus using BeEF + TheFatRat + Metasploit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XLNigYZ5-fM&quot;&gt;TheFatRat - Hacking Over WAN - Embedding Payload in Original Android APK - Without Port Forwarding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=C_Og6LnEZSg&quot;&gt;How To Automatically Embed Payloads In APK&#39;s - Evil-Droid, Thefatrat &amp;amp; Apkinjector&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VPl1TMCAIy8&quot;&gt;Bind FUD Payload with JPG and Hack over WAN with TheFatRat&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;All notable changes to this project will be documented in this &lt;a href=&quot;https://github.com/Screetsec/thefatrat/raw/master/CHANGELOG.md&quot;&gt;file&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;About issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://github.com/Screetsec/TheFatRat/raw/master/issues.md&quot;&gt;document&lt;/a&gt; before making an issue&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Alternative Best Tool - Generating Backdoor &amp;amp; Bypass&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Veil-Framework/Veil&quot;&gt;Veil-Framework /Veil&lt;/a&gt; - Veil Framework&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shellterproject.com/download/&quot;&gt;Shellter&lt;/a&gt; - Shellter AV Evasion Artware&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trustedsec/unicorn&quot;&gt;Unicorn&lt;/a&gt; - Trustedsec&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/g0tmi1k/msfpc&quot;&gt;MSFvenom Payload Creator (MSFPC)&lt;/a&gt; - g0tmi1k&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/r00t-3xp10it/venom&quot;&gt;Venom&lt;/a&gt; - Pedro Ubuntu&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oddcod3/Phantom-Evasion&quot;&gt;Phantom-Evasion&lt;/a&gt; - Diego Cornacchini&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits &amp;amp; Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/&quot;&gt;Offensive Security&lt;/a&gt; - Offensive Security&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dracos-linux.org/&quot;&gt;dracOs Linux&lt;/a&gt; - Penetration Testing OS From Indonesia&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/peterpt&quot;&gt;peterpt&lt;/a&gt; - Maintainer &amp;amp; Contributor&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dana-at-cp/backdoor-apk&quot;&gt;Dana James Traversie&lt;/a&gt; - backdoor_apk&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/z0noxz/powerstager&quot;&gt;z0noxz&lt;/a&gt; - Powerstager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trustedsec/unicorn&quot;&gt;TrustedSec&lt;/a&gt; - Unicorn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rsmudge&quot;&gt;Raphael Mudge&lt;/a&gt; - External Source&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://astr0baby.wordpress.com&quot;&gt;astr0baby&lt;/a&gt; - Reference Source&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ngesec.id/&quot;&gt;NgeSEC&lt;/a&gt; Community&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gauli.net/&quot;&gt;Gauli(dot)Net&lt;/a&gt; - Lab Penetration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;TheFatRat is made with 🖤 by Edo Maland &amp;amp; All &lt;a href=&quot;https://github.com/Screetsec/TheFatRat/graphs/contributors&quot;&gt;Contributors&lt;/a&gt;. See the &lt;strong&gt;License&lt;/strong&gt; file for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tsl0922/ttyd</title>
      <link>https://github.com/tsl0922/ttyd</link>
      <description>&lt;p&gt;Share your terminal over the web&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/tsl0922/ttyd/workflows/backend/badge.svg?sanitize=true&quot; alt=&quot;backend&quot;&gt; &lt;img src=&quot;https://github.com/tsl0922/ttyd/workflows/frontend/badge.svg?sanitize=true&quot; alt=&quot;frontend&quot;&gt; &lt;a href=&quot;https://github.com/tsl0922/ttyd/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/tsl0922/ttyd/total&quot; alt=&quot;GitHub Releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/tsl0922/ttyd&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/tsl0922/ttyd&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/ttyd/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/tiny-repos/ttyd.svg?sanitize=true&quot; alt=&quot;Packaging status&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/license/tsl0922/ttyd&quot; alt=&quot;GitHub&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;ttyd - Share your terminal over the web&lt;/h1&gt; 
&lt;p&gt;ttyd is a simple command-line tool for sharing terminal over the web.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/tsl0922/ttyd/raw/main/screenshot.gif&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built on top of &lt;a href=&quot;https://libuv.org&quot;&gt;libuv&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API&quot;&gt;WebGL2&lt;/a&gt; for speed&lt;/li&gt; 
 &lt;li&gt;Fully-featured terminal with &lt;a href=&quot;https://en.wikipedia.org/wiki/CJK_characters&quot;&gt;CJK&lt;/a&gt; and IME support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ZMODEM&quot;&gt;ZMODEM&lt;/a&gt; (&lt;a href=&quot;https://ohse.de/uwe/software/lrzsz.html&quot;&gt;lrzsz&lt;/a&gt;) / &lt;a href=&quot;https://trzsz.github.io&quot;&gt;trzsz&lt;/a&gt; file transfer support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sixel&quot;&gt;Sixel&lt;/a&gt; image output support (&lt;a href=&quot;https://saitoha.github.io/libsixel&quot;&gt;img2sixel&lt;/a&gt; / &lt;a href=&quot;https://github.com/hackerb9/lsix&quot;&gt;lsix&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;SSL support based on &lt;a href=&quot;https://www.openssl.org&quot;&gt;OpenSSL&lt;/a&gt; / &lt;a href=&quot;https://github.com/Mbed-TLS/mbedtls&quot;&gt;Mbed TLS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run any custom command with options&lt;/li&gt; 
 &lt;li&gt;Basic authentication support and many other custom options&lt;/li&gt; 
 &lt;li&gt;Cross platform: macOS, Linux, FreeBSD/OpenBSD, &lt;a href=&quot;https://openwrt.org&quot;&gt;OpenWrt&lt;/a&gt;, Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;❤ Special thanks to &lt;a href=&quot;https://www.jetbrains.com/?from=ttyd&quot;&gt;JetBrains&lt;/a&gt; for sponsoring the opensource license to this project.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;h2&gt;Install on macOS&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;http://brew.sh&quot;&gt;Homebrew&lt;/a&gt;: &lt;code&gt;brew install ttyd&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.macports.org&quot;&gt;MacPorts&lt;/a&gt;: &lt;code&gt;sudo port install ttyd&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install on Linux&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Binary version (recommended): download from the &lt;a href=&quot;https://github.com/tsl0922/ttyd/releases&quot;&gt;releases&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://docs.brew.sh/Homebrew-on-Linux&quot;&gt;Homebrew&lt;/a&gt; : &lt;code&gt;brew install ttyd&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install the snap: &lt;code&gt;sudo snap install ttyd --classic&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build from source (debian/ubuntu): &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get update
sudo apt-get install -y build-essential cmake git libjson-c-dev libwebsockets-dev
git clone https://github.com/tsl0922/ttyd.git
cd ttyd &amp;amp;&amp;amp; mkdir build &amp;amp;&amp;amp; cd build
cmake ..
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt; You may also need to compile/install &lt;a href=&quot;https://libwebsockets.org&quot;&gt;libwebsockets&lt;/a&gt; from source if the &lt;code&gt;libwebsockets-dev&lt;/code&gt; package is outdated.&lt;/li&gt; 
 &lt;li&gt;Install on OpenWrt: &lt;code&gt;opkg install ttyd&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install on Gentoo: clone the &lt;a href=&quot;https://bitbucket.org/mgpagano/ttyd/src/master&quot;&gt;repo&lt;/a&gt; and follow the directions &lt;a href=&quot;https://wiki.gentoo.org/wiki/Custom_repository#Creating_a_local_repository&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install on Windows&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Binary version (recommended): download from the &lt;a href=&quot;https://github.com/tsl0922/ttyd/releases&quot;&gt;releases&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;WinGet&lt;/a&gt;: &lt;code&gt;winget install tsl0922.ttyd&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://scoop.sh/#/apps?q=ttyd&amp;amp;s=2&amp;amp;d=1&amp;amp;o=true&quot;&gt;Scoop&lt;/a&gt;: &lt;code&gt;scoop install ttyd&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tsl0922/ttyd/wiki/Compile-on-Windows&quot;&gt;Compile on Windows&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;h2&gt;Command-line Options&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;USAGE:
    ttyd [options] &amp;lt;command&amp;gt; [&amp;lt;arguments...&amp;gt;]

OPTIONS:
    -p, --port              Port to listen (default: 7681, use `0` for random port)
    -i, --interface         Network interface to bind (eg: eth0), or UNIX domain socket path (eg: /var/run/ttyd.sock)
    -U, --socket-owner      User owner of the UNIX domain socket file, when enabled (eg: user:group)
    -c, --credential        Credential for basic authentication (format: username:password)
    -H, --auth-header       HTTP Header name for auth proxy, this will configure ttyd to let a HTTP reverse proxy handle authentication
    -u, --uid               User id to run with
    -g, --gid               Group id to run with
    -s, --signal            Signal to send to the command when exit it (default: 1, SIGHUP)
    -w, --cwd               Working directory to be set for the child program
    -a, --url-arg           Allow client to send command line arguments in URL (eg: http://localhost:7681?arg=foo&amp;amp;arg=bar)
    -W, --writable          Allow clients to write to the TTY (readonly by default)
    -t, --client-option     Send option to client (format: key=value), repeat to add more options
    -T, --terminal-type     Terminal type to report, default: xterm-256color
    -O, --check-origin      Do not allow websocket connection from different origin
    -m, --max-clients       Maximum clients to support (default: 0, no limit)
    -o, --once              Accept only one client and exit on disconnection
    -q, --exit-no-conn      Exit on all clients disconnection
    -B, --browser           Open terminal with the default system browser
    -I, --index             Custom index.html path
    -b, --base-path         Expected base path for requests coming from a reverse proxy (eg: /mounted/here, max length: 128)
    -P, --ping-interval     Websocket ping interval(sec) (default: 5)
    -6, --ipv6              Enable IPv6 support
    -S, --ssl               Enable SSL
    -C, --ssl-cert          SSL certificate file path
    -K, --ssl-key           SSL key file path
    -A, --ssl-ca            SSL CA file path for client certificate verification
    -d, --debug             Set log level (default: 7)
    -v, --version           Print the version and exit
    -h, --help              Print this text and exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read the example usage on the &lt;a href=&quot;https://github.com/tsl0922/ttyd/wiki/Example-Usage&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Browser Support&lt;/h2&gt; 
&lt;p&gt;Modern browsers, See &lt;a href=&quot;https://github.com/xtermjs/xterm.js#browser-support&quot;&gt;Browser Support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krishnasrinivas/wetty&quot;&gt;Wetty&lt;/a&gt;: &lt;a href=&quot;https://nodejs.org&quot;&gt;Node&lt;/a&gt; based web terminal (SSH/login)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yudai/gotty&quot;&gt;GoTTY&lt;/a&gt;: &lt;a href=&quot;https://golang.org&quot;&gt;Go&lt;/a&gt; based web terminal&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>git/git</title>
      <link>https://github.com/git/git</link>
      <description>&lt;p&gt;Git Source Code Mirror - This is a publish-only repository but pull requests can be turned into patches to the mailing list via GitGitGadget (https://gitgitgadget.github.io/). Please follow Documentation/SubmittingPatches procedure for any of your improvements.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/git/git/actions?query=branch%3Amaster+event%3Apush&quot;&gt;&lt;img src=&quot;https://github.com/git/git/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Git - fast, scalable, distributed revision control system&lt;/h1&gt; 
&lt;p&gt;Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals.&lt;/p&gt; 
&lt;p&gt;Git is an Open Source project covered by the GNU General Public License version 2 (some parts of it are under different licenses, compatible with the GPLv2). It was originally written by Linus Torvalds with help of a group of hackers around the net.&lt;/p&gt; 
&lt;p&gt;Please read the file &lt;a href=&quot;https://raw.githubusercontent.com/git/git/master/INSTALL&quot;&gt;INSTALL&lt;/a&gt; for installation instructions.&lt;/p&gt; 
&lt;p&gt;Many Git online resources are accessible from &lt;a href=&quot;https://git-scm.com/&quot;&gt;https://git-scm.com/&lt;/a&gt; including full documentation and Git related tools.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/git/git/master/Documentation/gittutorial.adoc&quot;&gt;Documentation/gittutorial.adoc&lt;/a&gt; to get started, then see &lt;a href=&quot;https://raw.githubusercontent.com/git/git/master/Documentation/giteveryday.adoc&quot;&gt;Documentation/giteveryday.adoc&lt;/a&gt; for a useful minimum set of commands, and &lt;code&gt;Documentation/git-&amp;lt;commandname&amp;gt;.adoc&lt;/code&gt; for documentation of each command. If git has been correctly installed, then the tutorial can also be read with &lt;code&gt;man gittutorial&lt;/code&gt; or &lt;code&gt;git help tutorial&lt;/code&gt;, and the documentation of each command with &lt;code&gt;man git-&amp;lt;commandname&amp;gt;&lt;/code&gt; or &lt;code&gt;git help &amp;lt;commandname&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;CVS users may also want to read &lt;a href=&quot;https://raw.githubusercontent.com/git/git/master/Documentation/gitcvs-migration.adoc&quot;&gt;Documentation/gitcvs-migration.adoc&lt;/a&gt; (&lt;code&gt;man gitcvs-migration&lt;/code&gt; or &lt;code&gt;git help cvs-migration&lt;/code&gt; if git is installed).&lt;/p&gt; 
&lt;p&gt;The user discussion and development of Git take place on the Git mailing list -- everyone is welcome to post bug reports, feature requests, comments and patches to &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt; (read &lt;a href=&quot;https://raw.githubusercontent.com/git/git/master/Documentation/SubmittingPatches&quot;&gt;Documentation/SubmittingPatches&lt;/a&gt; for instructions on patch submission and &lt;a href=&quot;https://raw.githubusercontent.com/git/git/master/Documentation/CodingGuidelines&quot;&gt;Documentation/CodingGuidelines&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Those wishing to help with error message, usage and informational message string translations (localization l10) should see &lt;a href=&quot;https://raw.githubusercontent.com/git/git/master/po/README.md&quot;&gt;po/README.md&lt;/a&gt; (a &lt;code&gt;po&lt;/code&gt; file is a Portable Object file that holds the translations).&lt;/p&gt; 
&lt;p&gt;To subscribe to the list, send an email to &lt;a href=&quot;mailto:git+subscribe@vger.kernel.org&quot;&gt;git+subscribe@vger.kernel.org&lt;/a&gt; (see &lt;a href=&quot;https://subspace.kernel.org/subscribing.html&quot;&gt;https://subspace.kernel.org/subscribing.html&lt;/a&gt; for details). The mailing list archives are available at &lt;a href=&quot;https://lore.kernel.org/git/&quot;&gt;https://lore.kernel.org/git/&lt;/a&gt;, &lt;a href=&quot;https://marc.info/?l=git&quot;&gt;https://marc.info/?l=git&lt;/a&gt; and other archival sites.&lt;/p&gt; 
&lt;p&gt;Issues which are security relevant should be disclosed privately to the Git Security mailing list &lt;a href=&quot;mailto:git-security@googlegroups.com&quot;&gt;git-security@googlegroups.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The maintainer frequently sends the &quot;What&#39;s cooking&quot; reports that list the current status of various development topics to the mailing list. The discussion following them give a good reference for project status, development direction and remaining tasks.&lt;/p&gt; 
&lt;p&gt;The name &quot;git&quot; was given by Linus Torvalds when he wrote the very first version. He described the tool as &quot;the stupid content tracker&quot; and the name as (depending on your mood):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;random three-letter combination that is pronounceable, and not actually used by any common UNIX command. The fact that it is a mispronunciation of &quot;get&quot; may or may not be relevant.&lt;/li&gt; 
 &lt;li&gt;stupid. contemptible and despicable. simple. Take your pick from the dictionary of slang.&lt;/li&gt; 
 &lt;li&gt;&quot;global information tracker&quot;: you&#39;re in a good mood, and it actually works for you. Angels sing, and a light suddenly fills the room.&lt;/li&gt; 
 &lt;li&gt;&quot;goddamn idiotic truckload of sh*t&quot;: when it breaks&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Genymobile/scrcpy</title>
      <link>https://github.com/Genymobile/scrcpy</link>
      <description>&lt;p&gt;Display and control your Android device&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;This GitHub repo (&lt;a href=&quot;https://github.com/Genymobile/scrcpy&quot;&gt;https://github.com/Genymobile/scrcpy&lt;/a&gt;) is the only official source for the project. Do not download releases from random websites, even if their name contains &lt;code&gt;scrcpy&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;scrcpy (v3.1)&lt;/h1&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/app/data/icon.svg?sanitize=true&quot; width=&quot;128&quot; height=&quot;128&quot; alt=&quot;scrcpy&quot; align=&quot;right&quot;&gt; 
&lt;p&gt;&lt;em&gt;pronounced &quot;&lt;strong&gt;scr&lt;/strong&gt;een &lt;strong&gt;c&lt;/strong&gt;o&lt;strong&gt;py&lt;/strong&gt;&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This application mirrors Android devices (video and audio) connected via USB or &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/connection.md#tcpip-wireless&quot;&gt;TCP/IP&lt;/a&gt; and allows control using the computer&#39;s keyboard and mouse. It does not require &lt;em&gt;root&lt;/em&gt; access or an app installed on the device. It works on &lt;em&gt;Linux&lt;/em&gt;, &lt;em&gt;Windows&lt;/em&gt;, and &lt;em&gt;macOS&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/assets/screenshot-debian-600.jpg&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;It focuses on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt;: native, displays only the device screen&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt;: 30~120fps, depending on the device&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt;: 1920×1080 or above&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Genymobile/scrcpy/pull/646&quot;&gt;35~70ms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt;: ~1 second to display the first image&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt;: nothing is left installed on the Android device&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;user benefits&lt;/strong&gt;: no account, no ads, no internet required&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;freedom&lt;/strong&gt;: free and open source software&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Its features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;audio forwarding&lt;/a&gt; (Android 11+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/recording.md&quot;&gt;recording&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/virtual_display.md&quot;&gt;virtual display&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;mirroring with &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/device.md#turn-screen-off&quot;&gt;Android device screen off&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/control.md#copy-paste&quot;&gt;copy-paste&lt;/a&gt; in both directions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md&quot;&gt;configurable quality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/camera.md&quot;&gt;camera mirroring&lt;/a&gt; (Android 12+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/v4l2.md&quot;&gt;mirroring as a webcam (V4L2)&lt;/a&gt; (Linux-only)&lt;/li&gt; 
 &lt;li&gt;physical &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/keyboard.md#physical-keyboard-simulation&quot;&gt;keyboard&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#physical-mouse-simulation&quot;&gt;mouse&lt;/a&gt; simulation (HID)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/gamepad.md&quot;&gt;gamepad&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;and more…&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;The Android device requires at least API 21 (Android 5.0).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;Audio forwarding&lt;/a&gt; is supported for API &amp;gt;= 30 (Android 11+).&lt;/p&gt; 
&lt;p&gt;Make sure you &lt;a href=&quot;https://developer.android.com/studio/debug/dev-options#enable&quot;&gt;enabled USB debugging&lt;/a&gt; on your device(s).&lt;/p&gt; 
&lt;p&gt;On some devices (especially Xiaomi), you might get the following error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;java.lang.SecurityException: Injecting input events requires the caller (or the source of the instrumentation, if any) to have the INJECT_EVENTS permission.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In that case, you need to enable &lt;a href=&quot;https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323&quot;&gt;an additional option&lt;/a&gt; &lt;code&gt;USB debugging (Security Settings)&lt;/code&gt; (this is an item different from &lt;code&gt;USB debugging&lt;/code&gt;) to control it using a keyboard and mouse. Rebooting the device is necessary once this option is set.&lt;/p&gt; 
&lt;p&gt;Note that USB debugging is not required to run scrcpy in &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG mode&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get the app&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/linux.md&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/windows.md&quot;&gt;Windows&lt;/a&gt; (read &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/windows.md#run&quot;&gt;how to run&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/macos.md&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Must-know tips&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md#size&quot;&gt;Reducing resolution&lt;/a&gt; may greatly improve performance (&lt;code&gt;scrcpy -m1024&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#mouse-bindings&quot;&gt;&lt;em&gt;Right-click&lt;/em&gt;&lt;/a&gt; triggers &lt;code&gt;BACK&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#mouse-bindings&quot;&gt;&lt;em&gt;Middle-click&lt;/em&gt;&lt;/a&gt; triggers &lt;code&gt;HOME&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;f&lt;/kbd&gt; toggles &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/window.md#fullscreen&quot;&gt;fullscreen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;There are many other &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/shortcuts.md&quot;&gt;shortcuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage examples&lt;/h2&gt; 
&lt;p&gt;There are a lot of options, &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#user-documentation&quot;&gt;documented&lt;/a&gt; in separate pages. Here are just some common examples.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Capture the screen in H.265 (better quality), limit the size to 1920, limit the frame rate to 60fps, disable audio, and control the device by simulating a physical keyboard:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-codec=h265 --max-size=1920 --max-fps=60 --no-audio --keyboard=uhid
scrcpy --video-codec=h265 -m1920 --max-fps=60 --no-audio -K  # short version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start VLC in a new virtual display (separate from the device display):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --new-display=1920x1080 --start-app=org.videolan.vlc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Record the device camera in H.265 at 1920x1080 (and microphone) to an MP4 file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-source=camera --video-codec=h265 --camera-size=1920x1080 --record=file.mp4
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Capture the device front camera and expose it as a webcam on the computer (on Linux):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-source=camera --camera-size=1920x1080 --camera-facing=front --v4l2-sink=/dev/video2 --no-playback
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Control the device without mirroring by simulating a physical keyboard and mouse (USB debugging not required):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --otg
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Control the device using gamepad controllers plugged into the computer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --gamepad=uhid
scrcpy -G  # short version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;User documentation&lt;/h2&gt; 
&lt;p&gt;The application provides a lot of features and configuration options. They are documented in the following pages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/connection.md&quot;&gt;Connection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md&quot;&gt;Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;Audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/control.md&quot;&gt;Control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/keyboard.md&quot;&gt;Keyboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md&quot;&gt;Mouse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/gamepad.md&quot;&gt;Gamepad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/device.md&quot;&gt;Device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/window.md&quot;&gt;Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/recording.md&quot;&gt;Recording&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/virtual_display.md&quot;&gt;Virtual display&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/tunnels.md&quot;&gt;Tunnels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/camera.md&quot;&gt;Camera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/v4l2.md&quot;&gt;Video4Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/shortcuts.md&quot;&gt;Shortcuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Genymobile/scrcpy/wiki&quot;&gt;Translations&lt;/a&gt; (not necessarily up to date)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/build.md&quot;&gt;Build instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/develop.md&quot;&gt;Developers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.rom1v.com/2018/03/introducing-scrcpy/&quot;&gt;Introducing scrcpy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/&quot;&gt;Scrcpy now works wirelessly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.rom1v.com/2023/03/scrcpy-2-0-with-audio/&quot;&gt;Scrcpy 2.0, with audio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;You can open an &lt;a href=&quot;https://github.com/Genymobile/scrcpy/issues&quot;&gt;issue&lt;/a&gt; for bug reports, feature requests or general questions.&lt;/p&gt; 
&lt;p&gt;For bug reports, please read the &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&quot;&gt;FAQ&lt;/a&gt; first, you might find a solution to your problem immediately.&lt;/p&gt; 
&lt;p&gt;You can also use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reddit: &lt;a href=&quot;https://www.reddit.com/r/scrcpy&quot;&gt;&lt;code&gt;r/scrcpy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;BlueSky: &lt;a href=&quot;https://bsky.app/profile/scrcpy.bsky.social&quot;&gt;&lt;code&gt;@scrcpy.bsky.social&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/scrcpy_app&quot;&gt;&lt;code&gt;@scrcpy_app&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;I&#39;m &lt;a href=&quot;https://github.com/rom1v&quot;&gt;@rom1v&lt;/a&gt;, the author and maintainer of &lt;em&gt;scrcpy&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;If you appreciate this application, you can &lt;a href=&quot;https://blog.rom1v.com/about/#support-my-open-source-work&quot;&gt;support my open source work&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sponsors/rom1v&quot;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://liberapay.com/rom1v/&quot;&gt;Liberapay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paypal.me/rom2v&quot;&gt;PayPal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Licence&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2018 Genymobile
Copyright (C) 2018-2025 Romain Vimont

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>DPDK/dpdk</title>
      <link>https://github.com/DPDK/dpdk</link>
      <description>&lt;p&gt;Data Plane Development Kit&lt;/p&gt;&lt;hr&gt;&lt;p&gt;DPDK is a set of libraries and drivers for fast packet processing. It supports many processor architectures and both FreeBSD and Linux.&lt;/p&gt; 
&lt;p&gt;The DPDK uses the Open Source BSD-3-Clause license for the core libraries and drivers. The kernel components are GPL-2.0 licensed.&lt;/p&gt; 
&lt;p&gt;Please check the doc directory for release notes, API documentation, and sample application information.&lt;/p&gt; 
&lt;p&gt;For questions and usage discussions, subscribe to: &lt;a href=&quot;mailto:users@dpdk.org&quot;&gt;users@dpdk.org&lt;/a&gt; Report bugs and issues to the development mailing list: &lt;a href=&quot;mailto:dev@dpdk.org&quot;&gt;dev@dpdk.org&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>asg017/sqlite-vec</title>
      <link>https://github.com/asg017/sqlite-vec</link>
      <description>&lt;p&gt;A vector search SQLite extension that runs anywhere!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;sqlite-vec&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/Ve7WeCJFXk&quot;&gt;&lt;img src=&quot;https://dcbadge.vercel.app/api/server/VCtQ8cGhUs&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An extremely small, &quot;fast enough&quot; vector search SQLite extension that runs anywhere! A successor to &lt;a href=&quot;https://github.com/asg017/sqlite-vss&quot;&gt;&lt;code&gt;sqlite-vss&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- deno-fmt-ignore-start --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;em&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; is a pre-v1, so expect breaking changes!&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- deno-fmt-ignore-end --&gt; 
&lt;ul&gt; 
 &lt;li&gt;Store and query float, int8, and binary vectors in &lt;code&gt;vec0&lt;/code&gt; virtual tables&lt;/li&gt; 
 &lt;li&gt;Written in pure C, no dependencies, runs anywhere SQLite runs (Linux/MacOS/Windows, in the browser with WASM, Raspberry Pis, etc.)&lt;/li&gt; 
 &lt;li&gt;Store non-vector data in metadata, auxiliary, or partition key columns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://hacks.mozilla.org/2024/06/sponsoring-sqlite-vec-to-enable-more-powerful-local-ai-applications/&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./.github/logos/mozilla.dark.svg&quot;&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./.github/logos/mozilla.svg&quot;&gt; 
   &lt;img alt=&quot;Mozilla Builders logo&quot; width=&quot;400&quot;&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;i&gt; &lt;code&gt;sqlite-vec&lt;/code&gt; is a &lt;a href=&quot;https://hacks.mozilla.org/2024/06/sponsoring-sqlite-vec-to-enable-more-powerful-local-ai-applications/&quot;&gt;Mozilla Builders project&lt;/a&gt;, with additional sponsorship from &lt;a href=&quot;https://fly.io/&quot;&gt;&lt;img width=&quot;14px&quot; src=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/flyio.small.ico&quot;&gt; Fly.io &lt;/a&gt;, &lt;a href=&quot;https://tur.so/sqlite-vec&quot;&gt;&lt;img width=&quot;14px&quot; src=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/turso.small.ico&quot;&gt; Turso&lt;/a&gt;, &lt;a href=&quot;https://sqlitecloud.io/&quot;&gt;&lt;img width=&quot;14px&quot; src=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/sqlitecloud.small.svg?sanitize=true&quot;&gt; SQLite Cloud&lt;/a&gt;, and &lt;a href=&quot;https://shinkai.com/&quot;&gt;&lt;img width=&quot;14px&quot; src=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/shinkai.small.svg?sanitize=true&quot;&gt; Shinkai&lt;/a&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/#sponsors&quot;&gt;the Sponsors section&lt;/a&gt; for more details. &lt;/i&gt; &lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/installation.html&quot;&gt;Installing &lt;code&gt;sqlite-vec&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Install&lt;/th&gt; 
   &lt;th&gt;More Info&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install sqlite-vec&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/python.html&quot;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pypi.org/project/sqlite-vec/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/sqlite-vec.svg?color=blue&amp;amp;logo=python&amp;amp;logoColor=white&quot; alt=&quot;PyPI&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npm install sqlite-vec&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/js.html&quot;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Node.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.npmjs.com/package/sqlite-vec&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/sqlite-vec.svg?color=green&amp;amp;logo=nodedotjs&amp;amp;logoColor=white&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ruby&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;gem install sqlite-vec&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/ruby.html&quot;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Ruby&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/gem/v/sqlite-vec?color=red&amp;amp;logo=rubygems&amp;amp;logoColor=white&quot; alt=&quot;Gem&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;go get -u github.com/asg017/sqlite-vec/bindings/go&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/go.html&quot;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pkg.go.dev/github.com/asg017/asg017/sqlite-vec-go-bindings/cgo&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/github.com/asg017/sqlite-vec-go-bindings/cgo.svg?sanitize=true&quot; alt=&quot;Go Reference&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;cargo add sqlite-vec&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/rust.html&quot;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Rust&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://crates.io/crates/sqlite-vec&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/v/sqlite-vec?logo=rust&quot; alt=&quot;Crates.io&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Datasette&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;datasette install datasette-sqlite-vec&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/datasette.html&quot;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Datasette&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://datasette.io/plugins/datasette-sqlite-vec&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/datasette-sqlite-vec.svg?color=B6B6D9&amp;amp;label=Datasette+plugin&amp;amp;logoColor=white&amp;amp;logo=python&quot; alt=&quot;Datasette&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rqlite&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;rqlited -extensions-path=sqlite-vec.tar.gz&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/rqlite.html&quot;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with rqlite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://rqlite.io/docs/guides/extensions/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/rqlite-sqlite_extensions-blue&quot; alt=&quot;rqlite&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;sqlite-utils&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sqlite-utils install sqlite-utils-sqlite-vec&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://alexgarcia.xyz/sqlite-vec/sqlite-utils.html&quot;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with sqlite-utils&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://datasette.io/plugins/datasette-sqlite-vec&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/sqlite-utils-sqlite-vec.svg?color=B6B6D9&amp;amp;label=sqlite-utils+plugin&amp;amp;logoColor=white&amp;amp;logo=python&quot; alt=&quot;sqlite-utils&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Github Release&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/v/tag/asg017/sqlite-vec?color=lightgrey&amp;amp;include_prereleases&amp;amp;label=Github+release&amp;amp;logo=github&quot; alt=&quot;GitHub tag (latest SemVer pre-release)&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Sample usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;.load ./vec0

create virtual table vec_examples using vec0(
  sample_embedding float[8]
);

-- vectors can be provided as JSON or in a compact binary format
insert into vec_examples(rowid, sample_embedding)
  values
    (1, &#39;[-0.200, 0.250, 0.341, -0.211, 0.645, 0.935, -0.316, -0.924]&#39;),
    (2, &#39;[0.443, -0.501, 0.355, -0.771, 0.707, -0.708, -0.185, 0.362]&#39;),
    (3, &#39;[0.716, -0.927, 0.134, 0.052, -0.669, 0.793, -0.634, -0.162]&#39;),
    (4, &#39;[-0.710, 0.330, 0.656, 0.041, -0.990, 0.726, 0.385, -0.958]&#39;);


-- KNN style query
select
  rowid,
  distance
from vec_examples
where sample_embedding match &#39;[0.890, 0.544, 0.825, 0.961, 0.358, 0.0196, 0.521, 0.175]&#39;
order by distance
limit 2;
/*
┌───────┬──────────────────┐
│ rowid │     distance     │
├───────┼──────────────────┤
│ 2     │ 2.38687372207642 │
│ 1     │ 2.38978505134583 │
└───────┴──────────────────┘
*/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Development of &lt;code&gt;sqlite-vec&lt;/code&gt; is supported by multiple generous sponsors! Mozilla is the main sponsor through the new Builders project.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://hacks.mozilla.org/2024/06/sponsoring-sqlite-vec-to-enable-more-powerful-local-ai-applications/&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./.github/logos/mozilla.dark.svg&quot;&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./.github/logos/mozilla.svg&quot;&gt; 
   &lt;img alt=&quot;Mozilla Builders logo&quot; width=&quot;400&quot;&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; is also sponsored by the following companies:&lt;/p&gt; 
&lt;a href=&quot;https://fly.io/&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./.github/logos/flyio.dark.svg&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./.github/logos/flyio.svg&quot;&gt; 
  &lt;img alt=&quot;Fly.io logo&quot; src=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/flyio.svg?sanitize=true&quot; width=&quot;48%&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href=&quot;https://tur.so/sqlite-vec&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./.github/logos/turso.svg&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./.github/logos/turso.svg&quot;&gt; 
  &lt;img alt=&quot;Turso logo&quot; src=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/turso.svg?sanitize=true&quot; width=&quot;48%&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href=&quot;https://sqlitecloud.io/&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./.github/logos/sqlitecloud.dark.svg&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./.github/logos/sqlitecloud.svg&quot;&gt; 
  &lt;img alt=&quot;SQLite Cloud logo&quot; src=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/flyio.svg?sanitize=true&quot; width=&quot;48%&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href=&quot;https://shinkai.com&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./.github/logos/shinkai.dark.svg&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./.github/logos/shinkai.svg&quot;&gt; 
  &lt;img alt=&quot;Shinkai logo&quot; src=&quot;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/shinkai.svg?sanitize=true&quot; width=&quot;48%&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;As well as multiple individual supporters on &lt;a href=&quot;https://github.com/sponsors/asg017/&quot;&gt;Github sponsors&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;If your company interested in sponsoring &lt;code&gt;sqlite-vec&lt;/code&gt; development, send me an email to get more info: &lt;a href=&quot;https://alexgarcia.xyz&quot;&gt;https://alexgarcia.xyz&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/asg017/sqlite-ecosystem&quot;&gt;&lt;strong&gt;&lt;code&gt;sqlite-ecosystem&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, Maybe more 3rd party SQLite extensions I&#39;ve developed&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/asg017/sqlite-rembed&quot;&gt;&lt;strong&gt;&lt;code&gt;sqlite-rembed&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, Generate text embeddings from remote APIs like OpenAI/Nomic/Ollama, meant for testing and SQL scripts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/asg017/sqlite-lembed&quot;&gt;&lt;strong&gt;&lt;code&gt;sqlite-lembed&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, Generate text embeddings locally from embedding models in the &lt;code&gt;.gguf&lt;/code&gt; format&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mit-pdos/xv6-public</title>
      <link>https://github.com/mit-pdos/xv6-public</link>
      <description>&lt;p&gt;xv6 OS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NOTE: we have stopped maintaining the x86 version of xv6, and switched our efforts to the RISC-V version (&lt;a href=&quot;https://github.com/mit-pdos/xv6-riscv.git&quot;&gt;https://github.com/mit-pdos/xv6-riscv.git&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;xv6 is a re-implementation of Dennis Ritchie&#39;s and Ken Thompson&#39;s Unix Version 6 (v6). xv6 loosely follows the structure and style of v6, but is implemented for a modern x86-based multiprocessor using ANSI C.&lt;/p&gt; 
&lt;p&gt;ACKNOWLEDGMENTS&lt;/p&gt; 
&lt;p&gt;xv6 is inspired by John Lions&#39;s Commentary on UNIX 6th Edition (Peer to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14, 2000)). See also &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/&quot;&gt;https://pdos.csail.mit.edu/6.828/&lt;/a&gt;, which provides pointers to on-line resources for v6.&lt;/p&gt; 
&lt;p&gt;xv6 borrows code from the following sources: JOS (asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and others) Plan 9 (entryother.S, mp.h, mp.c, lapic.c) FreeBSD (ioapic.c) NetBSD (console.c)&lt;/p&gt; 
&lt;p&gt;The following people have made contributions: Russ Cox (context switching, locking), Cliff Frey (MP), Xiao Yu (MP), Nickolai Zeldovich, and Austin Clements.&lt;/p&gt; 
&lt;p&gt;We are also grateful for the bug reports and patches contributed by Silas Boyd-Wickizer, Anton Burtsev, Cody Cutler, Mike CAT, Tej Chajed, eyalz800, Nelson Elhage, Saar Ettinger, Alice Ferrazzi, Nathaniel Filardo, Peter Froehlich, Yakir Goaron,Shivam Handa, Bryan Henry, Jim Huang, Alexander Kapshuk, Anders Kaseorg, kehao95, Wolfgang Keller, Eddie Kohler, Austin Liew, Imbar Marinescu, Yandong Mao, Matan Shabtay, Hitoshi Mitake, Carmi Merimovich, Mark Morrissey, mtasm, Joel Nider, Greg Price, Ayan Shafqat, Eldar Sehayek, Yongming Shen, Cam Tenny, tyfkda, Rafael Ubal, Warren Toomey, Stephen Tu, Pablo Ventura, Xi Wang, Keiichi Watanabe, Nicolas Wolovick, wxdao, Grant Wu, Jindong Zhang, Icenowy Zheng, and Zou Chang Wei.&lt;/p&gt; 
&lt;p&gt;The code in the files that constitute xv6 is Copyright 2006-2018 Frans Kaashoek, Robert Morris, and Russ Cox.&lt;/p&gt; 
&lt;p&gt;ERROR REPORTS&lt;/p&gt; 
&lt;p&gt;We don&#39;t process error reports (see note on top of this file).&lt;/p&gt; 
&lt;p&gt;BUILDING AND RUNNING XV6&lt;/p&gt; 
&lt;p&gt;To build xv6 on an x86 ELF machine (like Linux or FreeBSD), run &quot;make&quot;. On non-x86 or non-ELF machines (like OS X, even on x86), you will need to install a cross-compiler gcc suite capable of producing x86 ELF binaries (see &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/&quot;&gt;https://pdos.csail.mit.edu/6.828/&lt;/a&gt;). Then run &quot;make TOOLPREFIX=i386-jos-elf-&quot;. Now install the QEMU PC simulator and run &quot;make qemu&quot;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pr3y/Bruce</title>
      <link>https://github.com/pr3y/Bruce</link>
      <description>&lt;p&gt;Predatory ESP32 Firmware&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/bruce_banner.jpg&quot; alt=&quot;Bruce Main Menu&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;🦈&lt;/span&gt; Bruce&lt;/h1&gt; 
&lt;p&gt;Bruce is meant to be a versatile ESP32 firmware that supports a ton of offensive features focusing on facilitating Red Team operations. It also supports m5stack products and works great with Cardputer, Sticks, M5Cores, T-Decks and T-Embeds.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🏗&lt;/span&gt; How to install&lt;/h2&gt; 
&lt;h3&gt;The easiest way to install Bruce is using our official Web Flasher!&lt;/h3&gt; 
&lt;h3&gt;Check out: &lt;a href=&quot;https://bruce.computer/flasher&quot;&gt;https://bruce.computer/flasher&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Alternatively, you can download the latest binary from releases or actions and flash locally using esptool.py&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;esptool.py --port /dev/ttyACM0 write_flash 0x00000 Bruce-&amp;lt;device&amp;gt;.bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;For m5stack devices&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you already use M5Launcher to manage your m5stack device, you can install it with OTA&lt;/p&gt; 
&lt;p&gt;Or you can burn it directly from the &lt;a href=&quot;https://docs.m5stack.com/en/download&quot;&gt;m5burner tool&lt;/a&gt;, just search for &#39;Bruce&#39; (My official builds will be uploaded by &quot;owner&quot; and have photos.) on the device category you want to and click on burn&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⌨&lt;/span&gt; Discord Server&lt;/h2&gt; 
&lt;p&gt;Contact us in our &lt;a href=&quot;https://discord.gg/WJ9XF9czVT&quot;&gt;Discord Server&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;📑&lt;/span&gt; Wiki&lt;/h2&gt; 
&lt;p&gt;For more information on each function supported by Bruce, &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki&quot;&gt;read our wiki here&lt;/a&gt;. Also, &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FAQ&quot;&gt;read our FAQ&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; List of Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;WiFi&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Connect to WiFi&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; WiFi AP&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Disconnect WiFi&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#wifi-atks&quot;&gt;WiFi Atks&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#beacon-spam&quot;&gt;Beacon Spam&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#target-atk&quot;&gt;Target Atk&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Information&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Target Deauth&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; EvilPortal + Deauth&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Deauth Flood (More than one target)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Wardriving&quot;&gt;Wardriving&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#telnet&quot;&gt;TelNet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#ssh&quot;&gt;SSH&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#raw-sniffer&quot;&gt;RAW Sniffer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#tcp-client&quot;&gt;TCP Client&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#tcp-listener&quot;&gt;TCP Listener&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#dpwo-esp32&quot;&gt;DPWO-ESP32&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#evil-portal&quot;&gt;Evil Portal&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#evil-portal&quot;&gt;Scan Hosts&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#wireguard-tunneling&quot;&gt;Wireguard Tunneling&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Brucegotchi 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Pwnagotchi friend&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Pwngrid spam faces &amp;amp; names 
     &lt;ul&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; [Optional] DoScreen a very long name and face&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; [Optional] Flood uniq peer identifiers&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;BLE&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/BLE#ble-scan&quot;&gt;BLE Scan&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Bad BLE - Run Ducky scripts, similar to &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#badusb&quot;&gt;BadUsb&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; BLE Keyboard - Cardputer and T-Deck Only&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; iOS Spam&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Windows Spam&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Samsung Spam&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Android Spam&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Spam All&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;RF&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Scan/Copy&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/RF#replay-payloads-like-flipper&quot;&gt;Custom SubGhz&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Spectrum&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Jammer Full (sends a full squared wave into output)&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Jammer Intermittent (sends PWM signal into output)&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Config 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; RF TX Pin&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; RF RX Pin&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; RF Module 
     &lt;ul&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; RF433 T/R M5Stack&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/CC1101&quot;&gt;CC1101 (Sub-Ghz)&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; RF Frequency&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Replay&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;RFID&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Read tag&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Read 125kHz&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Clone tag&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Write NDEF records&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Amiibolink&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Chameleon&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Write data&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Erase data&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Save file&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Load file&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Config 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/RFID#supported-modules&quot;&gt;RFID Module&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; PN532&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Emulate tag&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;IR&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; TV-B-Gone&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; IR Receiver&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/IR#replay-payloads-like-flipper&quot;&gt;Custom IR (NEC, NECext, SIRC, SIRC15, SIRC20, Samsung32, RC5, RC5X, RC6)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Config 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Ir TX Pin&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Ir RX Pin&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;FM&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#play_or_pause_button-broadcast-standard&quot;&gt;Broadcast standard&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#no_entry_sign-broadcast-rerserved&quot;&gt;Broadcast reserved&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#stop_button-broadcast-stop&quot;&gt;Broadcast stop&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#ocean-fm-spectrum&quot;&gt;FM Spectrum&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#car-hijack-ta&quot;&gt;Hijack Traffic Announcements&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#bookmark_tabs-config&quot;&gt;Config&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;NRF24&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/BLE#nrf24-jammer&quot;&gt;NRF24 Jammer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 2.4G Spectrum&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Mousejack&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Scripts&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Interpreter&quot;&gt;JavaScript Interpreter&lt;/a&gt; &lt;a href=&quot;https://github.com/justinknight93/Doolittle&quot;&gt;Credits to justinknight93&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Others&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Mic Spectrum&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; QRCodes 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Custom&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; PIX (Brazil bank transfer system)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#sd-card-mngr&quot;&gt;SD Card Mngr&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; View image (jpg)&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; File Info&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Wardriving#how-to-upload&quot;&gt;Wigle Upload&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Play Audio&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; View File&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#littlefs-mngr&quot;&gt;LittleFS Mngr&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#webui&quot;&gt;WebUI&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Server Structure&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Html&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; SDCard Mngr&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Spiffs Mngr&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Megalodon&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#badusb&quot;&gt;BADUsb (New features, LittleFS and SDCard)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; USB Keyboard - Cardputer and T-Deck Only&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#openhaystack&quot;&gt;Openhaystack&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#ibutton&quot;&gt;iButton&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#led-control&quot;&gt;LED Control&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Clock&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; RTC Support&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; NTP time adjust&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Manual adjust&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Connect (ESPNOW)&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Send File&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Receive File&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Config&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Brightness&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Dim Time&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Orientation&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; UI Color&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Boot Sound on/off&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Clock&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Sleep&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Restart&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Specific functions per Device, the ones not mentioned here are available to all.&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Device&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;CC1101&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;NRF24&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Interpreter&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;FM Radio&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;PN532&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Mic&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;BadUSB&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;RGB Led&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Speaker&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Fuel Guage&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;LITE_MODE&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stack-cardputer-kit-w-m5stamps&quot;&gt;M5Stack Cardputer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;NS4168&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stickc-plus2-esp32-mini-iot-development-kit&quot;&gt;M5Stack M5StickC PLUS2&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Tone&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stickc-plus-esp32-pico-mini-iot-development-kit&quot;&gt;M5Stack M5StickC PLUS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Tone&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;²&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/basic-core-iot-development-kit&quot;&gt;M5Stack M5Core BASIC&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Tone&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stack-core2-esp32-iot-development-kit-v1-1&quot;&gt;M5Stack M5Core2&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stack-cores3-esp32s3-lotdevelopment-kit&quot;&gt;M5Stack M5CoreS3&lt;/a&gt;/&lt;a href=&quot;https://shop.m5stack.com/products/m5stack-cores3-se-iot-controller-w-o-battery-bottom&quot;&gt;SE&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.aliexpress.us/item/3256804774970998.html&quot;&gt;JCZN CYD‑2432S028&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;²&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-embed-cc1101&quot;&gt;Lilygo T‑Embed CC1101&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-embed&quot;&gt;Lilygo T‑Embed&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-deck&quot;&gt;Lilygo T‑Deck&lt;/a&gt; (&lt;a href=&quot;https://lilygo.cc/products/t-deck-plus-1&quot;&gt;and pro&lt;/a&gt;)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-display-s3&quot;&gt;Lilygo T-Display-S3&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-watch-s3&quot;&gt;Lilygo T-Watch-S3&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;² CYD have a LITE_VERSION version for Launcher Compatibility ¹ Core, CYD and StickCs Bad-USB: &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#badusb&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;LITE_MODE&lt;/em&gt;: TelNet, SSH, DPWO, WireGuard, ScanHosts, RawSniffer, Brucegotchi, BLEBacon, BLEScan, Interpreter and OpenHaystack are NOT available for M5Launcher Compatibility&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;✨&lt;/span&gt; Why and how does it look?&lt;/h2&gt; 
&lt;p&gt;Bruce stems from a keen observation within the community focused on devices like Flipper Zero. While these devices offered a glimpse into the world of offensive security, there was a palpable sense that something more could be achieved without being that overpriced, particularly with the robust and modular hardware ecosystem provided by ESP32 Devices, Lilygo and M5Stack products.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/pic1.png&quot; alt=&quot;Bruce Main Menu&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/core.png&quot; alt=&quot;Bruce on M5Core&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/stick.png&quot; alt=&quot;Bruce on Stick&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/cyd.png&quot; alt=&quot;Bruce on CYD&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Other media can be &lt;a href=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;👏&lt;/span&gt; Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmorcelli&quot;&gt;@bmorcelli&lt;/a&gt; for new core and a bunch of new features, also porting to many devices!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IncursioHack&quot;&gt;@IncursioHack&lt;/a&gt; for adding RF and RFID modules features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Luidiblu&quot;&gt;@Luidiblu&lt;/a&gt; for logo and UI design assistance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eadmaster&quot;&gt;@eadmaster&lt;/a&gt; for adding a lot of features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rennancockles&quot;&gt;@rennancockles&lt;/a&gt; for a lot of RFID code, refactoring and others features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/7h30th3r0n3&quot;&gt;@7h30th3r0n3&lt;/a&gt; refactoring and a lot of help with WiFi attacks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tawank&quot;&gt;@Tawank&lt;/a&gt; refactoring interpreter among many other things&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;&quot;&gt;@pablonymous&lt;/a&gt; new RF functions to read RAW Data&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;&quot;&gt;Smoochiee&lt;/a&gt; for Bruce PCB design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;&quot;&gt;TH3_KR4K3N&lt;/a&gt; for Stick cplus extender PCB design.&lt;/li&gt; 
 &lt;li&gt;Everyone who contributed in some way to the project, thanks &lt;span&gt;❤️&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;🚧&lt;/span&gt; Disclaimer&lt;/h2&gt; 
&lt;p&gt;Bruce is a tool for cyber offensive and red team operations, distributed under the terms of the Affero General Public License (AGPL). It is intended for legal and authorized security testing purposes only. Use of this software for any malicious or unauthorized activities is strictly prohibited. By downloading, installing, or using Bruce, you agree to comply with all applicable laws and regulations. This software is provided free of charge, and we do not accept payments for copies or modifications. The developers of Bruce assume no liability for any misuse of the software. Use at your own risk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BasedHardware/omi</title>
      <link>https://github.com/BasedHardware/omi</link>
      <description>&lt;p&gt;AI wearables. Put it on, speak, transcribe, automatically&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;&lt;strong&gt;omi&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p&gt;Meet Omi, the world’s leading open-source AI wearable that captures conversations, gives summaires, action items and does actions for you. Simply connect Omi to your mobile device and enjoy automatic, high-quality transcriptions of meetings, chats, and voice memos wherever you are.&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/834d3fdb-31b5-4f22-ae35-da3d2b9a8f59&quot; alt=&quot;Omi&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/7a658366-9e02-4057-bde5-a510e1f0217a&quot; alt=&quot;CleanShot 2025-02-08 at 18 22 23&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://discord.gg/omi&quot;&gt;&lt;img src=&quot;https://dcbadge.vercel.app/api/server/ZutWMTJnwA?style=flat&quot; alt=&quot;Discord Follow&quot;&gt;&lt;/a&gt;     &lt;a href=&quot;https://x.com/kodjima33&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/kodjima33&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;     &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/BasedHardware/Omi&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/BasedHardware/Omi&quot; alt=&quot;GitHub Repo stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt; &lt;p&gt;&lt;a href=&quot;https://omi.me/&quot;&gt;Homepage&lt;/a&gt; | &lt;a href=&quot;https://docs.omi.me/&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://www.omi.me/cart/50230946562340:1&quot;&gt;Buy Consumer device&lt;/a&gt; | &lt;a href=&quot;https://www.omi.me/products/omi-dev-kit-2&quot;&gt;Buy Developer Kit&lt;/a&gt;&lt;/p&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;Quick Start (2 min)&lt;/h2&gt; 
&lt;p&gt;Download omi App&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.friend.ios&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/7/78/Google_Play_Store_badge_EN.svg?sanitize=true&quot; alt=&quot;Get it on Google Play&quot; height=&quot;50px&quot; width=&quot;180px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://apps.apple.com/us/app/friend-ai-wearable/id6502156163&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/3/3c/Download_on_the_App_Store_Badge.svg?sanitize=true&quot; alt=&quot;Download on the App Store&quot; height=&quot;50px&quot; width=&quot;180px&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create webhook using &lt;a href=&quot;https://webhook.site&quot;&gt;webhook.site&lt;/a&gt; and copy this url&lt;/p&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/083a6ec4-4694-4c7a-843a-4a1a0c254453&quot; width=&quot;500&quot;&gt; 
&lt;p&gt;In omi App:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Explore =&amp;gt; Create an App&lt;/th&gt; 
   &lt;th&gt;Select Capability&lt;/th&gt; 
   &lt;th&gt;Paste Webhook URL&lt;/th&gt; 
   &lt;th&gt;Install App&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/31809b81-7de2-4381-b5fc-5c9714972211&quot; width=&quot;200&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/59cfbe8e-7e3b-437f-81f7-25eb50ccdd7d&quot; width=&quot;200&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/3d864ee8-555f-4ded-b4db-87ff78128323&quot; width=&quot;200&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/58cf6da6-e245-415e-92e7-dc1f46583cfc&quot; width=&quot;200&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Start speaking, you&#39;ll see Real-time transcript on &lt;a href=&quot;https://webhook.site&quot;&gt;webhook.site &lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;In this repo:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/omi&quot;&gt;omi device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/app&quot;&gt;mobile app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/personas-open-source&quot;&gt;ai personas (web)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/BasedHardware/omi/main/sdks&quot;&gt;SDKs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/developer/AppSetup&quot;&gt;omi mobile App setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/assembly/Buying_Guide/&quot;&gt;Buying Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/assembly/Build_the_device/&quot;&gt;Build the device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/get_started/Flash_device/&quot;&gt;Install firmware&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/developer/apps/Introduction&quot;&gt;Create your own app in 1 minute&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out our &lt;a href=&quot;https://docs.omi.me/docs/developer/Contribution/&quot;&gt;contributions guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Earn from contributing! Check the &lt;a href=&quot;https://omi.me/bounties&quot;&gt;paid bounties 🤑&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check out the &lt;a href=&quot;https://github.com/BasedHardware/Omi/issues&quot;&gt;current issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href=&quot;https://discord.gg/omi&quot;&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Build your own &lt;a href=&quot;https://docs.omi.me/docs/developer/apps/Introduction&quot;&gt;Plugins/Integrations&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Omi is available under &lt;a href=&quot;https://github.com/BasedHardware/omi/raw/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>redis/redis</title>
      <link>https://github.com/redis/redis</link>
      <description>&lt;p&gt;Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of values are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://codecov.io/github/redis/redis&quot;&gt;&lt;img src=&quot;https://codecov.io/github/redis/redis/graph/badge.svg?token=6bVHb5fRuz&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This README is just a fast &lt;em&gt;quick start&lt;/em&gt; document. You can find more detailed documentation at &lt;a href=&quot;https://redis.io&quot;&gt;redis.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What is Redis?&lt;/h2&gt; 
&lt;p&gt;Redis is often referred to as a &lt;em&gt;data structures&lt;/em&gt; server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a &lt;em&gt;server-client&lt;/em&gt; model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.&lt;/p&gt; 
&lt;p&gt;Data structures implemented into Redis have a few special properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that it is also non-volatile.&lt;/li&gt; 
 &lt;li&gt;The implementation of data structures emphasizes memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modelled using a high-level programming language.&lt;/li&gt; 
 &lt;li&gt;Redis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, clustering, and high availability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Another good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations that work with complex data types like Lists, Sets, ordered data structures, and so forth.&lt;/p&gt; 
&lt;p&gt;If you want to know more, this is a list of selected starting points:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Introduction to Redis data types. &lt;a href=&quot;https://redis.io/docs/latest/develop/data-types/&quot;&gt;https://redis.io/docs/latest/develop/data-types/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The full list of Redis commands. &lt;a href=&quot;https://redis.io/commands&quot;&gt;https://redis.io/commands&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;There is much more inside the official Redis documentation. &lt;a href=&quot;https://redis.io/documentation&quot;&gt;https://redis.io/documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is Redis Community Edition?&lt;/h2&gt; 
&lt;p&gt;Redis OSS was renamed Redis Community Edition (CE) with the v7.4 release.&lt;/p&gt; 
&lt;p&gt;Redis Ltd. also offers &lt;a href=&quot;https://redis.io/enterprise/&quot;&gt;Redis Software&lt;/a&gt;, a self-managed software with additional compliance, reliability, and resiliency for enterprise scaling, and &lt;a href=&quot;https://redis.io/cloud/&quot;&gt;Redis Cloud&lt;/a&gt;, a fully managed service integrated with Google Cloud, Azure, and AWS for production-ready apps.&lt;/p&gt; 
&lt;p&gt;Read more about the differences between Redis Community Edition and Redis &lt;a href=&quot;https://redis.io/comparisons/oss-vs-enterprise/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building Redis&lt;/h2&gt; 
&lt;p&gt;Redis can be compiled and used on Linux, OSX, OpenBSD, NetBSD, FreeBSD. We support big endian and little endian architectures, and both 32 bit and 64 bit systems.&lt;/p&gt; 
&lt;p&gt;It may compile on Solaris derived systems (for instance SmartOS) but our support for this platform is &lt;em&gt;best effort&lt;/em&gt; and Redis is not guaranteed to work as well as in Linux, OSX, and *BSD.&lt;/p&gt; 
&lt;p&gt;It is as simple as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build with TLS support, you&#39;ll need OpenSSL development libraries (e.g. libssl-dev on Debian/Ubuntu) and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make BUILD_TLS=yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build with systemd support, you&#39;ll need systemd development libraries (such as libsystemd-dev on Debian/Ubuntu or systemd-devel on CentOS) and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make USE_SYSTEMD=yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To append a suffix to Redis program names, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make PROG_SUFFIX=&quot;-alt&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can build a 32 bit Redis binary using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make 32bit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After building Redis, it is a good idea to test it using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If TLS is built, running the tests with TLS enabled (you will need &lt;code&gt;tcl-tls&lt;/code&gt; installed):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% ./utils/gen-test-certs.sh
% ./runtest --tls
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Fixing build problems with dependencies or cached build options&lt;/h2&gt; 
&lt;p&gt;Redis has some dependencies which are included in the &lt;code&gt;deps&lt;/code&gt; directory. &lt;code&gt;make&lt;/code&gt; does not automatically rebuild dependencies even if something in the source code of dependencies changes.&lt;/p&gt; 
&lt;p&gt;When you update the source code with &lt;code&gt;git pull&lt;/code&gt; or when code inside the dependencies tree is modified in any other way, make sure to use the following command in order to really clean everything and rebuild from scratch:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make distclean
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will clean: jemalloc, lua, hiredis, linenoise and other dependencies.&lt;/p&gt; 
&lt;p&gt;Also if you force certain build options like 32bit target, no C compiler optimizations (for debugging purposes), and other similar build time options, those options are cached indefinitely until you issue a &lt;code&gt;make distclean&lt;/code&gt; command.&lt;/p&gt; 
&lt;h2&gt;Fixing problems building 32 bit binaries&lt;/h2&gt; 
&lt;p&gt;If after building Redis with a 32 bit target you need to rebuild it with a 64 bit target, or the other way around, you need to perform a &lt;code&gt;make distclean&lt;/code&gt; in the root directory of the Redis distribution.&lt;/p&gt; 
&lt;p&gt;In case of build errors when trying to build a 32 bit binary of Redis, try the following steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the package libc6-dev-i386 (also try g++-multilib).&lt;/li&gt; 
 &lt;li&gt;Try using the following command line instead of &lt;code&gt;make 32bit&lt;/code&gt;: &lt;code&gt;make CFLAGS=&quot;-m32 -march=native&quot; LDFLAGS=&quot;-m32&quot;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Allocator&lt;/h2&gt; 
&lt;p&gt;Selecting a non-default memory allocator when building Redis is done by setting the &lt;code&gt;MALLOC&lt;/code&gt; environment variable. Redis is compiled and linked against libc malloc by default, with the exception of jemalloc being the default on Linux systems. This default was picked because jemalloc has proven to have fewer fragmentation problems than libc malloc.&lt;/p&gt; 
&lt;p&gt;To force compiling against libc malloc, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make MALLOC=libc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To compile against jemalloc on Mac OS X systems, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make MALLOC=jemalloc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Monotonic clock&lt;/h2&gt; 
&lt;p&gt;By default, Redis will build using the POSIX clock_gettime function as the monotonic clock source. On most modern systems, the internal processor clock can be used to improve performance. Cautions can be found here: &lt;a href=&quot;http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/&quot;&gt;http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To build with support for the processor&#39;s internal instruction clock, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make CFLAGS=&quot;-DUSE_PROCESSOR_CLOCK&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Verbose build&lt;/h2&gt; 
&lt;p&gt;Redis will build with a user-friendly colorized output by default. If you want to see a more verbose output, use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make V=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Redis&lt;/h2&gt; 
&lt;p&gt;To run Redis with the default configuration, just type:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% cd src
% ./redis-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to provide your redis.conf, you have to run it using an additional parameter (the path of the configuration file):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% cd src
% ./redis-server /path/to/redis.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is possible to alter the Redis configuration by passing parameters directly as options using the command line. Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% ./redis-server --port 9999 --replicaof 127.0.0.1 6379
% ./redis-server /etc/redis/6379.conf --loglevel debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All the options in redis.conf are also supported as options using the command line, with exactly the same name.&lt;/p&gt; 
&lt;h2&gt;Running Redis with TLS&lt;/h2&gt; 
&lt;p&gt;Please consult the &lt;a href=&quot;https://raw.githubusercontent.com/redis/redis/unstable/TLS.md&quot;&gt;TLS.md&lt;/a&gt; file for more information on how to use Redis with TLS.&lt;/p&gt; 
&lt;h2&gt;Playing with Redis&lt;/h2&gt; 
&lt;p&gt;You can use redis-cli to play with Redis. Start a redis-server instance, then in another terminal try the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% cd src
% ./redis-cli
redis&amp;gt; ping
PONG
redis&amp;gt; set foo bar
OK
redis&amp;gt; get foo
&quot;bar&quot;
redis&amp;gt; incr mycounter
(integer) 1
redis&amp;gt; incr mycounter
(integer) 2
redis&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find the list of all the available commands at &lt;a href=&quot;https://redis.io/commands&quot;&gt;https://redis.io/commands&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing Redis&lt;/h2&gt; 
&lt;p&gt;In order to install Redis binaries into /usr/local/bin, just use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use &lt;code&gt;make PREFIX=/some/other/directory install&lt;/code&gt; if you wish to use a different destination.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;make install&lt;/code&gt; will just install binaries in your system, but will not configure init scripts and configuration files in the appropriate place. This is not needed if you just want to play a bit with Redis, but if you are installing it the proper way for a production system, we have a script that does this for Ubuntu and Debian systems:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% cd utils
% ./install_server.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;code&gt;install_server.sh&lt;/code&gt; will not work on Mac OSX; it is built for Linux only.&lt;/p&gt; 
&lt;p&gt;The script will ask you a few questions and will setup everything you need to run Redis properly as a background daemon that will start again on system reboots.&lt;/p&gt; 
&lt;p&gt;You&#39;ll be able to stop and start Redis using the script named &lt;code&gt;/etc/init.d/redis_&amp;lt;portnumber&amp;gt;&lt;/code&gt;, for instance &lt;code&gt;/etc/init.d/redis_6379&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Code contributions&lt;/h2&gt; 
&lt;p&gt;By contributing code to the Redis project in any form, including sending a pull request via GitHub, a code fragment or patch via private email or public discussion groups, you agree to release your code under the terms of the &lt;a href=&quot;https://github.com/redis/redis/raw/unstable/CONTRIBUTING.md&quot;&gt;Redis Software Grant and Contributor License Agreement&lt;/a&gt;. Redis software contains contributions to the original Redis core project, which are owned by their contributors and licensed under the 3BSD license. Any copy of that license in this repository applies only to those contributions. Redis releases all Redis Community Edition versions from 7.4.x and thereafter under the RSALv2/SSPL dual-license as described in the &lt;a href=&quot;https://github.com/redis/redis/raw/unstable/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; file included in the Redis Community Edition source distribution.&lt;/p&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/redis/redis/raw/unstable/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; file in this source distribution for more information. For security bugs and vulnerabilities, please see &lt;a href=&quot;https://github.com/redis/redis/raw/unstable/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Redis Trademarks&lt;/h2&gt; 
&lt;p&gt;The purpose of a trademark is to identify the goods and services of a person or company without causing confusion. As the registered owner of its name and logo, Redis accepts certain limited uses of its trademarks but it has requirements that must be followed as described in its Trademark Guidelines available at: &lt;a href=&quot;https://redis.com/legal/trademark-guidelines/&quot;&gt;https://redis.com/legal/trademark-guidelines/&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Redis internals&lt;/h1&gt; 
&lt;p&gt;If you are reading this README you are likely in front of a GitHub page or you just untarred the Redis distribution tar ball. In both the cases you are basically one step away from the source code, so here we explain the Redis source code layout, what is in each file as a general idea, the most important functions and structures inside the Redis server and so forth. We keep all the discussion at a high level without digging into the details since this document would be huge otherwise and our code base changes continuously, but a general idea should be a good starting point to understand more. Moreover most of the code is heavily commented and easy to follow.&lt;/p&gt; 
&lt;h2&gt;Source code layout&lt;/h2&gt; 
&lt;p&gt;The Redis root directory just contains this README, the Makefile which calls the real Makefile inside the &lt;code&gt;src&lt;/code&gt; directory and an example configuration for Redis and Redis Sentinel. You can find a few shell scripts that are used in order to execute the Redis, Redis Cluster and Redis Sentinel unit tests, which are implemented inside the &lt;code&gt;tests&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;Inside the root are the following important directories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;src&lt;/code&gt;: contains the Redis implementation, written in C.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tests&lt;/code&gt;: contains the unit tests, implemented in Tcl.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;deps&lt;/code&gt;: contains libraries Redis uses. Everything needed to compile Redis is inside this directory; your system just needs to provide &lt;code&gt;libc&lt;/code&gt;, a POSIX compatible interface and a C compiler. Notably &lt;code&gt;deps&lt;/code&gt; contains a copy of &lt;code&gt;jemalloc&lt;/code&gt;, which is the default allocator of Redis under Linux. Note that under &lt;code&gt;deps&lt;/code&gt; there are also things which started with the Redis project, but for which the main repository is not &lt;code&gt;redis/redis&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are a few more directories but they are not very important for our goals here. We&#39;ll focus mostly on &lt;code&gt;src&lt;/code&gt;, where the Redis implementation is contained, exploring what there is inside each file. The order in which files are exposed is the logical one to follow in order to disclose different layers of complexity incrementally.&lt;/p&gt; 
&lt;p&gt;Note: lately Redis was refactored quite a bit. Function names and file names have been changed, so you may find that this documentation reflects the &lt;code&gt;unstable&lt;/code&gt; branch more closely. For instance, in Redis 3.0 the &lt;code&gt;server.c&lt;/code&gt; and &lt;code&gt;server.h&lt;/code&gt; files were named &lt;code&gt;redis.c&lt;/code&gt; and &lt;code&gt;redis.h&lt;/code&gt;. However the overall structure is the same. Keep in mind that all the new developments and pull requests should be performed against the &lt;code&gt;unstable&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h2&gt;server.h&lt;/h2&gt; 
&lt;p&gt;The simplest way to understand how a program works is to understand the data structures it uses. So we&#39;ll start from the main header file of Redis, which is &lt;code&gt;server.h&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;All the server configuration and in general all the shared state is defined in a global structure called &lt;code&gt;server&lt;/code&gt;, of type &lt;code&gt;struct redisServer&lt;/code&gt;. A few important fields in this structure are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;server.db&lt;/code&gt; is an array of Redis databases, where data is stored.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;server.commands&lt;/code&gt; is the command table.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;server.clients&lt;/code&gt; is a linked list of clients connected to the server.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;server.master&lt;/code&gt; is a special client, the master, if the instance is a replica.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are tons of other fields. Most fields are commented directly inside the structure definition.&lt;/p&gt; 
&lt;p&gt;Another important Redis data structure is the one defining a client. In the past it was called &lt;code&gt;redisClient&lt;/code&gt;, now just &lt;code&gt;client&lt;/code&gt;. The structure has many fields, here we&#39;ll just show the main ones:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;struct client {
    int fd;
    sds querybuf;
    int argc;
    robj **argv;
    redisDb *db;
    int flags;
    list *reply;
    // ... many other fields ...
    char buf[PROTO_REPLY_CHUNK_BYTES];
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The client structure defines a &lt;em&gt;connected client&lt;/em&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;fd&lt;/code&gt; field is the client socket file descriptor.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;argc&lt;/code&gt; and &lt;code&gt;argv&lt;/code&gt; are populated with the command the client is executing, so that functions implementing a given Redis command can read the arguments.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;querybuf&lt;/code&gt; accumulates the requests from the client, which are parsed by the Redis server according to the Redis protocol and executed by calling the implementations of the commands the client is executing.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;reply&lt;/code&gt; and &lt;code&gt;buf&lt;/code&gt; are dynamic and static buffers that accumulate the replies the server sends to the client. These buffers are incrementally written to the socket as soon as the file descriptor is writable.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As you can see in the client structure above, arguments in a command are described as &lt;code&gt;robj&lt;/code&gt; structures. The following is the full &lt;code&gt;robj&lt;/code&gt; structure, which defines a &lt;em&gt;Redis object&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;struct redisObject {
    unsigned type:4;
    unsigned encoding:4;
    unsigned lru:LRU_BITS; /* LRU time (relative to global lru_clock) or
                            * LFU data (least significant 8 bits frequency
                            * and most significant 16 bits access time). */
    int refcount;
    void *ptr;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Basically this structure can represent all the basic Redis data types like strings, lists, sets, sorted sets and so forth. The interesting thing is that it has a &lt;code&gt;type&lt;/code&gt; field, so that it is possible to know what type a given object has, and a &lt;code&gt;refcount&lt;/code&gt;, so that the same object can be referenced in multiple places without allocating it multiple times. Finally the &lt;code&gt;ptr&lt;/code&gt; field points to the actual representation of the object, which might vary even for the same type, depending on the &lt;code&gt;encoding&lt;/code&gt; used.&lt;/p&gt; 
&lt;p&gt;Redis objects are used extensively in the Redis internals, however in order to avoid the overhead of indirect accesses, recently in many places we just use plain dynamic strings not wrapped inside a Redis object.&lt;/p&gt; 
&lt;h2&gt;server.c&lt;/h2&gt; 
&lt;p&gt;This is the entry point of the Redis server, where the &lt;code&gt;main()&lt;/code&gt; function is defined. The following are the most important steps in order to startup the Redis server.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;initServerConfig()&lt;/code&gt; sets up the default values of the &lt;code&gt;server&lt;/code&gt; structure.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;initServer()&lt;/code&gt; allocates the data structures needed to operate, setup the listening socket, and so forth.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aeMain()&lt;/code&gt; starts the event loop which listens for new connections.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are two special functions called periodically by the event loop:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;serverCron()&lt;/code&gt; is called periodically (according to &lt;code&gt;server.hz&lt;/code&gt; frequency), and performs tasks that must be performed from time to time, like checking for timed out clients.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;beforeSleep()&lt;/code&gt; is called every time the event loop fired, Redis served a few requests, and is returning back into the event loop.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Inside server.c you can find code that handles other vital things of the Redis server:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;call()&lt;/code&gt; is used in order to call a given command in the context of a given client.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;activeExpireCycle()&lt;/code&gt; handles eviction of keys with a time to live set via the &lt;code&gt;EXPIRE&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;performEvictions()&lt;/code&gt; is called when a new write command should be performed but Redis is out of memory according to the &lt;code&gt;maxmemory&lt;/code&gt; directive.&lt;/li&gt; 
 &lt;li&gt;The global variable &lt;code&gt;redisCommandTable&lt;/code&gt; defines all the Redis commands, specifying the name of the command, the function implementing the command, the number of arguments required, and other properties of each command.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;commands.c&lt;/h2&gt; 
&lt;p&gt;This file is auto generated by utils/generate-command-code.py, the content is based on the JSON files in the src/commands folder. These are meant to be the single source of truth about the Redis commands, and all the metadata about them. These JSON files are not meant to be used by anyone directly, instead that metadata can be obtained via the &lt;code&gt;COMMAND&lt;/code&gt; command.&lt;/p&gt; 
&lt;h2&gt;networking.c&lt;/h2&gt; 
&lt;p&gt;This file defines all the I/O functions with clients, masters and replicas (which in Redis are just special clients):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;createClient()&lt;/code&gt; allocates and initializes a new client.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;addReply*()&lt;/code&gt; family of functions are used by command implementations in order to append data to the client structure, that will be transmitted to the client as a reply for a given command executed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;writeToClient()&lt;/code&gt; transmits the data pending in the output buffers to the client and is called by the &lt;em&gt;writable event handler&lt;/em&gt; &lt;code&gt;sendReplyToClient()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;readQueryFromClient()&lt;/code&gt; is the &lt;em&gt;readable event handler&lt;/em&gt; and accumulates data read from the client into the query buffer.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;processInputBuffer()&lt;/code&gt; is the entry point in order to parse the client query buffer according to the Redis protocol. Once commands are ready to be processed, it calls &lt;code&gt;processCommand()&lt;/code&gt; which is defined inside &lt;code&gt;server.c&lt;/code&gt; in order to actually execute the command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;freeClient()&lt;/code&gt; deallocates, disconnects and removes a client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;aof.c and rdb.c&lt;/h2&gt; 
&lt;p&gt;As you can guess from the names, these files implement the RDB and AOF persistence for Redis. Redis uses a persistence model based on the &lt;code&gt;fork()&lt;/code&gt; system call in order to create a process with the same (shared) memory content of the main Redis process. This secondary process dumps the content of the memory on disk. This is used by &lt;code&gt;rdb.c&lt;/code&gt; to create the snapshots on disk and by &lt;code&gt;aof.c&lt;/code&gt; in order to perform the AOF rewrite when the append only file gets too big.&lt;/p&gt; 
&lt;p&gt;The implementation inside &lt;code&gt;aof.c&lt;/code&gt; has additional functions in order to implement an API that allows commands to append new commands into the AOF file as clients execute them.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;call()&lt;/code&gt; function defined inside &lt;code&gt;server.c&lt;/code&gt; is responsible for calling the functions that in turn will write the commands into the AOF.&lt;/p&gt; 
&lt;h2&gt;db.c&lt;/h2&gt; 
&lt;p&gt;Certain Redis commands operate on specific data types; others are general. Examples of generic commands are &lt;code&gt;DEL&lt;/code&gt; and &lt;code&gt;EXPIRE&lt;/code&gt;. They operate on keys and not on their values specifically. All those generic commands are defined inside &lt;code&gt;db.c&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Moreover &lt;code&gt;db.c&lt;/code&gt; implements an API in order to perform certain operations on the Redis dataset without directly accessing the internal data structures.&lt;/p&gt; 
&lt;p&gt;The most important functions inside &lt;code&gt;db.c&lt;/code&gt; which are used in many command implementations are the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lookupKeyRead()&lt;/code&gt; and &lt;code&gt;lookupKeyWrite()&lt;/code&gt; are used in order to get a pointer to the value associated to a given key, or &lt;code&gt;NULL&lt;/code&gt; if the key does not exist.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dbAdd()&lt;/code&gt; and its higher level counterpart &lt;code&gt;setKey()&lt;/code&gt; create a new key in a Redis database.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dbDelete()&lt;/code&gt; removes a key and its associated value.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;emptyData()&lt;/code&gt; removes an entire single database or all the databases defined.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The rest of the file implements the generic commands exposed to the client.&lt;/p&gt; 
&lt;h2&gt;object.c&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;robj&lt;/code&gt; structure defining Redis objects was already described. Inside &lt;code&gt;object.c&lt;/code&gt; there are all the functions that operate with Redis objects at a basic level, like functions to allocate new objects, handle the reference counting and so forth. Notable functions inside this file:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;incrRefCount()&lt;/code&gt; and &lt;code&gt;decrRefCount()&lt;/code&gt; are used in order to increment or decrement an object reference count. When it drops to 0 the object is finally freed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;createObject()&lt;/code&gt; allocates a new object. There are also specialized functions to allocate string objects having a specific content, like &lt;code&gt;createStringObjectFromLongLong()&lt;/code&gt; and similar functions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This file also implements the &lt;code&gt;OBJECT&lt;/code&gt; command.&lt;/p&gt; 
&lt;h2&gt;replication.c&lt;/h2&gt; 
&lt;p&gt;This is one of the most complex files inside Redis, it is recommended to approach it only after getting a bit familiar with the rest of the code base. In this file there is the implementation of both the master and replica role of Redis.&lt;/p&gt; 
&lt;p&gt;One of the most important functions inside this file is &lt;code&gt;replicationFeedSlaves()&lt;/code&gt; that writes commands to the clients representing replica instances connected to our master, so that the replicas can get the writes performed by the clients: this way their data set will remain synchronized with the one in the master.&lt;/p&gt; 
&lt;p&gt;This file also implements both the &lt;code&gt;SYNC&lt;/code&gt; and &lt;code&gt;PSYNC&lt;/code&gt; commands that are used in order to perform the first synchronization between masters and replicas, or to continue the replication after a disconnection.&lt;/p&gt; 
&lt;h2&gt;Script&lt;/h2&gt; 
&lt;p&gt;The script unit is composed of 3 units:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;script.c&lt;/code&gt; - integration of scripts with Redis (commands execution, set replication/resp, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;script_lua.c&lt;/code&gt; - responsible to execute Lua code, uses &lt;code&gt;script.c&lt;/code&gt; to interact with Redis from within the Lua code.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;function_lua.c&lt;/code&gt; - contains the Lua engine implementation, uses &lt;code&gt;script_lua.c&lt;/code&gt; to execute the Lua code.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;functions.c&lt;/code&gt; - contains Redis Functions implementation (&lt;code&gt;FUNCTION&lt;/code&gt; command), uses &lt;code&gt;functions_lua.c&lt;/code&gt; if the function it wants to invoke needs the Lua engine.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;eval.c&lt;/code&gt; - contains the &lt;code&gt;eval&lt;/code&gt; implementation using &lt;code&gt;script_lua.c&lt;/code&gt; to invoke the Lua code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other C files&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;t_hash.c&lt;/code&gt;, &lt;code&gt;t_list.c&lt;/code&gt;, &lt;code&gt;t_set.c&lt;/code&gt;, &lt;code&gt;t_string.c&lt;/code&gt;, &lt;code&gt;t_zset.c&lt;/code&gt; and &lt;code&gt;t_stream.c&lt;/code&gt; contains the implementation of the Redis data types. They implement both an API to access a given data type, and the client command implementations for these data types.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ae.c&lt;/code&gt; implements the Redis event loop, it&#39;s a self contained library which is simple to read and understand.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sds.c&lt;/code&gt; is the Redis string library, check &lt;a href=&quot;https://github.com/antirez/sds&quot;&gt;https://github.com/antirez/sds&lt;/a&gt; for more information.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;anet.c&lt;/code&gt; is a library to use POSIX networking in a simpler way compared to the raw interface exposed by the kernel.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dict.c&lt;/code&gt; is an implementation of a non-blocking hash table which rehashes incrementally.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cluster.c&lt;/code&gt; implements the Redis Cluster. Probably a good read only after being very familiar with the rest of the Redis code base. If you want to read &lt;code&gt;cluster.c&lt;/code&gt; make sure to read the &lt;a href=&quot;https://redis.io/docs/latest/operate/oss_and_stack/reference/cluster-spec/&quot;&gt;Redis Cluster specification&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Anatomy of a Redis command&lt;/h2&gt; 
&lt;p&gt;All the Redis commands are defined in the following way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;void foobarCommand(client *c) {
    printf(&quot;%s&quot;,c-&amp;gt;argv[1]-&amp;gt;ptr); /* Do something with the argument. */
    addReply(c,shared.ok); /* Reply something to the client. */
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The command function is referenced by a JSON file, together with its metadata, see &lt;code&gt;commands.c&lt;/code&gt; described above for details. The command flags are documented in the comment above the &lt;code&gt;struct redisCommand&lt;/code&gt; in &lt;code&gt;server.h&lt;/code&gt;. For other details, please refer to the &lt;code&gt;COMMAND&lt;/code&gt; command. &lt;a href=&quot;https://redis.io/commands/command/&quot;&gt;https://redis.io/commands/command/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After the command operates in some way, it returns a reply to the client, usually using &lt;code&gt;addReply()&lt;/code&gt; or a similar function defined inside &lt;code&gt;networking.c&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There are tons of command implementations inside the Redis source code that can serve as examples of actual commands implementations (e.g. pingCommand). Writing a few toy commands can be a good exercise to get familiar with the code base.&lt;/p&gt; 
&lt;p&gt;There are also many other files not described here, but it is useless to cover everything. We just want to help you with the first steps. Eventually you&#39;ll find your way inside the Redis code base :-)&lt;/p&gt; 
&lt;p&gt;Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>valkey-io/valkey</title>
      <link>https://github.com/valkey-io/valkey</link>
      <description>&lt;p&gt;A flexible distributed key-value datastore that is optimized for caching and other realtime workloads.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://codecov.io/gh/valkey-io/valkey&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/valkey-io/valkey/graph/badge.svg?token=KYYSJAYC5F&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This project was forked from the open source Redis project right before the transition to their new source available licenses.&lt;/p&gt; 
&lt;p&gt;This README is just a fast &lt;em&gt;quick start&lt;/em&gt; document. More details can be found under &lt;a href=&quot;https://valkey.io/&quot;&gt;valkey.io&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What is Valkey?&lt;/h1&gt; 
&lt;p&gt;Valkey is a high-performance data structure server that primarily serves key/value workloads. It supports a wide range of native structures and an extensible plugin system for adding new data structures and access patterns.&lt;/p&gt; 
&lt;h1&gt;Building Valkey using &lt;code&gt;Makefile&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;Valkey can be compiled and used on Linux, OSX, OpenBSD, NetBSD, FreeBSD. We support big endian and little endian architectures, and both 32 bit and 64 bit systems.&lt;/p&gt; 
&lt;p&gt;It may compile on Solaris derived systems (for instance SmartOS) but our support for this platform is &lt;em&gt;best effort&lt;/em&gt; and Valkey is not guaranteed to work as well as in Linux, OSX, and *BSD.&lt;/p&gt; 
&lt;p&gt;It is as simple as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build with TLS support, you&#39;ll need OpenSSL development libraries (e.g. libssl-dev on Debian/Ubuntu).&lt;/p&gt; 
&lt;p&gt;To build TLS support as Valkey built-in:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make BUILD_TLS=yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build TLS as Valkey module:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make BUILD_TLS=module
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that sentinel mode does not support TLS module.&lt;/p&gt; 
&lt;p&gt;To build with experimental RDMA support you&#39;ll need RDMA development libraries (e.g. librdmacm-dev and libibverbs-dev on Debian/Ubuntu).&lt;/p&gt; 
&lt;p&gt;To build RDMA support as Valkey built-in:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make BUILD_RDMA=yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build RDMA as Valkey module:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make BUILD_RDMA=module
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build with systemd support, you&#39;ll need systemd development libraries (such as libsystemd-dev on Debian/Ubuntu or systemd-devel on CentOS) and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make USE_SYSTEMD=yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To append a suffix to Valkey program names, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make PROG_SUFFIX=&quot;-alt&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can build a 32 bit Valkey binary using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make 32bit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After building Valkey, it is a good idea to test it using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above runs the main integration tests. Additional tests are started using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make test-unit     # Unit tests
% make test-modules  # Tests of the module API
% make test-sentinel # Valkey Sentinel integration tests
% make test-cluster  # Valkey Cluster integration tests
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More about running the integration tests can be found in &lt;a href=&quot;https://raw.githubusercontent.com/valkey-io/valkey/unstable/tests/README.md&quot;&gt;tests/README.md&lt;/a&gt; and for unit tests, see &lt;a href=&quot;https://raw.githubusercontent.com/valkey-io/valkey/unstable/src/unit/README.md&quot;&gt;src/unit/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Fixing build problems with dependencies or cached build options&lt;/h2&gt; 
&lt;p&gt;Valkey has some dependencies which are included in the &lt;code&gt;deps&lt;/code&gt; directory. &lt;code&gt;make&lt;/code&gt; does not automatically rebuild dependencies even if something in the source code of dependencies changes.&lt;/p&gt; 
&lt;p&gt;When you update the source code with &lt;code&gt;git pull&lt;/code&gt; or when code inside the dependencies tree is modified in any other way, make sure to use the following command in order to really clean everything and rebuild from scratch:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make distclean
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will clean: jemalloc, lua, hiredis, linenoise and other dependencies.&lt;/p&gt; 
&lt;p&gt;Also if you force certain build options like 32bit target, no C compiler optimizations (for debugging purposes), and other similar build time options, those options are cached indefinitely until you issue a &lt;code&gt;make distclean&lt;/code&gt; command.&lt;/p&gt; 
&lt;h2&gt;Fixing problems building 32 bit binaries&lt;/h2&gt; 
&lt;p&gt;If after building Valkey with a 32 bit target you need to rebuild it with a 64 bit target, or the other way around, you need to perform a &lt;code&gt;make distclean&lt;/code&gt; in the root directory of the Valkey distribution.&lt;/p&gt; 
&lt;p&gt;In case of build errors when trying to build a 32 bit binary of Valkey, try the following steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the package libc6-dev-i386 (also try g++-multilib).&lt;/li&gt; 
 &lt;li&gt;Try using the following command line instead of &lt;code&gt;make 32bit&lt;/code&gt;: &lt;code&gt;make CFLAGS=&quot;-m32 -march=native&quot; LDFLAGS=&quot;-m32&quot;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Allocator&lt;/h2&gt; 
&lt;p&gt;Selecting a non-default memory allocator when building Valkey is done by setting the &lt;code&gt;MALLOC&lt;/code&gt; environment variable. Valkey is compiled and linked against libc malloc by default, with the exception of jemalloc being the default on Linux systems. This default was picked because jemalloc has proven to have fewer fragmentation problems than libc malloc.&lt;/p&gt; 
&lt;p&gt;To force compiling against libc malloc, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make MALLOC=libc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To compile against jemalloc on Mac OS X systems, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make MALLOC=jemalloc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Monotonic clock&lt;/h2&gt; 
&lt;p&gt;By default, Valkey will build using the POSIX clock_gettime function as the monotonic clock source. On most modern systems, the internal processor clock can be used to improve performance. Cautions can be found here: &lt;a href=&quot;http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/&quot;&gt;http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To build with support for the processor&#39;s internal instruction clock, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make CFLAGS=&quot;-DUSE_PROCESSOR_CLOCK&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Verbose build&lt;/h2&gt; 
&lt;p&gt;Valkey will build with a user-friendly colorized output by default. If you want to see a more verbose output, use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make V=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Running Valkey&lt;/h1&gt; 
&lt;p&gt;To run Valkey with the default configuration, just type:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% cd src
% ./valkey-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to provide your valkey.conf, you have to run it using an additional parameter (the path of the configuration file):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% cd src
% ./valkey-server /path/to/valkey.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is possible to alter the Valkey configuration by passing parameters directly as options using the command line. Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% ./valkey-server --port 9999 --replicaof 127.0.0.1 6379
% ./valkey-server /etc/valkey/6379.conf --loglevel debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All the options in valkey.conf are also supported as options using the command line, with exactly the same name.&lt;/p&gt; 
&lt;h1&gt;Running Valkey with TLS:&lt;/h1&gt; 
&lt;h2&gt;Running manually&lt;/h2&gt; 
&lt;p&gt;To manually run a Valkey server with TLS mode (assuming &lt;code&gt;./gen-test-certs.sh&lt;/code&gt; was invoked so sample certificates/keys are available):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;TLS built-in mode:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./src/valkey-server --tls-port 6379 --port 0 \
    --tls-cert-file ./tests/tls/valkey.crt \
    --tls-key-file ./tests/tls/valkey.key \
    --tls-ca-cert-file ./tests/tls/ca.crt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;TLS module mode:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./src/valkey-server --tls-port 6379 --port 0 \
    --tls-cert-file ./tests/tls/valkey.crt \
    --tls-key-file ./tests/tls/valkey.key \
    --tls-ca-cert-file ./tests/tls/ca.crt \
    --loadmodule src/valkey-tls.so
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that you can disable TCP by specifying &lt;code&gt;--port 0&lt;/code&gt; explicitly. It&#39;s also possible to have both TCP and TLS available at the same time, but you&#39;ll have to assign different ports.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;valkey-cli&lt;/code&gt; to connect to the Valkey server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./src/valkey-cli --tls \
    --cert ./tests/tls/valkey.crt \
    --key ./tests/tls/valkey.key \
    --cacert ./tests/tls/ca.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Specifying &lt;code&gt;--tls-replication yes&lt;/code&gt; makes a replica connect to the primary.&lt;/p&gt; 
&lt;p&gt;Using &lt;code&gt;--tls-cluster yes&lt;/code&gt; makes Valkey Cluster use TLS across nodes.&lt;/p&gt; 
&lt;h1&gt;Running Valkey with RDMA:&lt;/h1&gt; 
&lt;p&gt;Note that Valkey Over RDMA is an experimental feature. It may be changed or removed in any minor or major version. Currently, it is only supported on Linux.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;RDMA built-in mode:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./src/valkey-server --protected-mode no \
     --rdma-bind 192.168.122.100 --rdma-port 6379
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;RDMA module mode:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./src/valkey-server --protected-mode no \
     --loadmodule src/valkey-rdma.so --rdma-bind 192.168.122.100 --rdma-port 6379
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It&#39;s possible to change bind address/port of RDMA by runtime command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;192.168.122.100:6379&amp;gt; CONFIG SET rdma-port 6380
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It&#39;s also possible to have both RDMA and TCP available, and there is no conflict of TCP(6379) and RDMA(6379), Ex:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% ./src/valkey-server --protected-mode no \
     --loadmodule src/valkey-rdma.so --rdma-bind 192.168.122.100 --rdma-port 6379 \
     --port 6379
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the network card (192.168.122.100 of this example) should support RDMA. To test a server supports RDMA or not:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% rdma res show (a new version iproute2 package)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% ibv_devices
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Playing with Valkey&lt;/h1&gt; 
&lt;p&gt;You can use valkey-cli to play with Valkey. Start a valkey-server instance, then in another terminal try the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% cd src
% ./valkey-cli
valkey&amp;gt; ping
PONG
valkey&amp;gt; set foo bar
OK
valkey&amp;gt; get foo
&quot;bar&quot;
valkey&amp;gt; incr mycounter
(integer) 1
valkey&amp;gt; incr mycounter
(integer) 2
valkey&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Installing Valkey&lt;/h1&gt; 
&lt;p&gt;In order to install Valkey binaries into /usr/local/bin, just use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use &lt;code&gt;make PREFIX=/some/other/directory install&lt;/code&gt; if you wish to use a different destination.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: For compatibility with Redis, we create symlinks from the Redis names (&lt;code&gt;redis-server&lt;/code&gt;, &lt;code&gt;redis-cli&lt;/code&gt;, etc.) to the Valkey binaries installed by &lt;code&gt;make install&lt;/code&gt;. The symlinks are created in same directory as the Valkey binaries. The symlinks are removed when using &lt;code&gt;make uninstall&lt;/code&gt;. The creation of the symlinks can be skipped by setting the makefile variable &lt;code&gt;USE_REDIS_SYMLINKS=no&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;make install&lt;/code&gt; will just install binaries in your system, but will not configure init scripts and configuration files in the appropriate place. This is not needed if you just want to play a bit with Valkey, but if you are installing it the proper way for a production system, we have a script that does this for Ubuntu and Debian systems:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;% cd utils
% ./install_server.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;code&gt;install_server.sh&lt;/code&gt; will not work on Mac OSX; it is built for Linux only.&lt;/p&gt; 
&lt;p&gt;The script will ask you a few questions and will setup everything you need to run Valkey properly as a background daemon that will start again on system reboots.&lt;/p&gt; 
&lt;p&gt;You&#39;ll be able to stop and start Valkey using the script named &lt;code&gt;/etc/init.d/valkey_&amp;lt;portnumber&amp;gt;&lt;/code&gt;, for instance &lt;code&gt;/etc/init.d/valkey_6379&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;Building using &lt;code&gt;CMake&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;In addition to the traditional &lt;code&gt;Makefile&lt;/code&gt; build, Valkey supports an alternative, &lt;strong&gt;experimental&lt;/strong&gt;, build system using &lt;code&gt;CMake&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To build and install &lt;code&gt;Valkey&lt;/code&gt;, in &lt;code&gt;Release&lt;/code&gt; mode (an optimized build), type this into your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir build-release
cd $_
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/valkey
sudo make install
# Valkey is now installed under /opt/valkey
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Other options supported by Valkey&#39;s &lt;code&gt;CMake&lt;/code&gt; build system:&lt;/p&gt; 
&lt;h2&gt;Special build flags&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_TLS=&amp;lt;yes|no&amp;gt;&lt;/code&gt; enable TLS build for Valkey. Default: &lt;code&gt;no&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_RDMA=&amp;lt;no|module&amp;gt;&lt;/code&gt; enable RDMA module build (only module mode supported). Default: &lt;code&gt;no&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_MALLOC=&amp;lt;libc|jemalloc|tcmalloc|tcmalloc_minimal&amp;gt;&lt;/code&gt; choose the allocator to use. Default on Linux: &lt;code&gt;jemalloc&lt;/code&gt;, for other OS: &lt;code&gt;libc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_SANITIZER=&amp;lt;address|thread|undefined&amp;gt;&lt;/code&gt; build with address sanitizer enabled. Default: disabled (no sanitizer)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_UNIT_TESTS=[yes|no]&lt;/code&gt; when set, the build will produce the executable &lt;code&gt;valkey-unit-tests&lt;/code&gt;. Default: &lt;code&gt;no&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_TEST_MODULES=[yes|no]&lt;/code&gt; when set, the build will include the modules located under the &lt;code&gt;tests/modules&lt;/code&gt; folder. Default: &lt;code&gt;no&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_EXAMPLE_MODULES=[yes|no]&lt;/code&gt; when set, the build will include the example modules located under the &lt;code&gt;src/modules&lt;/code&gt; folder. Default: &lt;code&gt;no&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Common flags&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-DCMAKE_BUILD_TYPE=&amp;lt;Debug|Release...&amp;gt;&lt;/code&gt; define the build type, see CMake manual for more details&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DCMAKE_INSTALL_PREFIX=/installation/path&lt;/code&gt; override this value to define a custom install prefix. Default: &lt;code&gt;/usr/local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-G&quot;&amp;lt;Generator Name&amp;gt;&quot;&lt;/code&gt; generate build files for &quot;Generator Name&quot;. By default, CMake will generate &lt;code&gt;Makefile&lt;/code&gt;s.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Verbose build&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;CMake&lt;/code&gt; generates a user-friendly colorized output by default. If you want to see a more verbose output, use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;make VERBOSE=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;During the &lt;code&gt;CMake&lt;/code&gt; stage, &lt;code&gt;CMake&lt;/code&gt; caches variables in a local file named &lt;code&gt;CMakeCache.txt&lt;/code&gt;. All variables generated by Valkey are removed from the cache once consumed (this is done by calling to &lt;code&gt;unset(VAR-NAME CACHE)&lt;/code&gt;). However, some variables, like the compiler path, are kept in cache. To start a fresh build either remove the cache file &lt;code&gt;CMakeCache.txt&lt;/code&gt; from the build folder, or delete the build folder completely.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;It is important to re-run &lt;code&gt;CMake&lt;/code&gt; when adding new source files.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Integration with IDE&lt;/h2&gt; 
&lt;p&gt;During the &lt;code&gt;CMake&lt;/code&gt; stage of the build, &lt;code&gt;CMake&lt;/code&gt; generates a JSON file named &lt;code&gt;compile_commands.json&lt;/code&gt; and places it under the build folder. This file is used by many IDEs and text editors for providing code completion (via &lt;code&gt;clangd&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;A small caveat is that these tools will look for &lt;code&gt;compile_commands.json&lt;/code&gt; under the Valkey&#39;s top folder. A common workaround is to create a symbolic link to it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /path/to/valkey/
# We assume here that your build folder is `build-release`
ln -sf $(pwd)/build-release/compile_commands.json $(pwd)/compile_commands.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Restart your IDE and voila&lt;/p&gt; 
&lt;h1&gt;Code contributions&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/valkey-io/valkey/raw/unstable/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;. For security bugs and vulnerabilities, please see &lt;a href=&quot;https://github.com/valkey-io/valkey/raw/unstable/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Valkey is an open community project under LF Projects&lt;/h1&gt; 
&lt;p&gt;Valkey a Series of LF Projects, LLC 2810 N Church St, PMB 57274 Wilmington, Delaware 19802-4447&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/security-research</title>
      <link>https://github.com/google/security-research</link>
      <description>&lt;p&gt;This project hosts security advisories and their accompanying proof-of-concepts related to research conducted at Google which impact non-Google owned code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Security Research&lt;/h1&gt; 
&lt;p&gt;This project hosts security advisories and their accompanying proof-of-concepts related to research conducted at Google which impact non-Google owned code.&lt;/p&gt; 
&lt;p&gt;We believe that vulnerability disclosure is a two-way street. Vendors, as well as researchers, must act responsibly. This is why Google adheres to a 90-day disclosure deadline. We notify vendors of vulnerabilities immediately, with details shared in public with the defensive community after 90 days, or sooner if the vendor releases a fix.&lt;/p&gt; 
&lt;p&gt;You can read up on our full policy at: &lt;a href=&quot;https://www.google.com/about/appsecurity/&quot;&gt;https://www.google.com/about/appsecurity/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advisories&lt;/h2&gt; 
&lt;p&gt;The disclosure of vulnerabilities are all in the form of security advisories, which can be browsed in the &lt;a href=&quot;https://github.com/google/security-research/security/advisories?state=published&quot;&gt;Security Advisories&lt;/a&gt; page.&lt;/p&gt; 
&lt;h1&gt;License &amp;amp; Patents&lt;/h1&gt; 
&lt;p&gt;The advisories and patches posted here are free and open source.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/google/security-research/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for further details.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;The easiest way to contribute to our security research projects is to correct the patches when you see mistakes.&lt;/p&gt; 
&lt;p&gt;Please read up our &lt;a href=&quot;https://github.com/google/security-research/raw/master/CONTRIBUTING.md&quot;&gt;Contribution&lt;/a&gt; policy.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nothings/stb</title>
      <link>https://github.com/nothings/stb</link>
      <description>&lt;p&gt;stb single-file public domain libraries for C/C++&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;stb&lt;/h1&gt; 
&lt;p&gt;single-file public domain (or MIT licensed) libraries for C/C++&lt;/p&gt; 
&lt;h1&gt;This project discusses security-relevant bugs in public in Github Issues and Pull Requests, and it may take significant time for security fixes to be implemented or merged. If this poses an unreasonable risk to your project, do not use stb libraries.&lt;/h1&gt; 
&lt;p&gt;Noteworthy:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;image loader: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image.h&quot;&gt;stb_image.h&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;image writer: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image_write.h&quot;&gt;stb_image_write.h&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;image resizer: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image_resize2.h&quot;&gt;stb_image_resize2.h&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;font text rasterizer: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_truetype.h&quot;&gt;stb_truetype.h&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;typesafe containers: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_ds.h&quot;&gt;stb_ds.h&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Most libraries by stb, except: stb_dxt by Fabian &quot;ryg&quot; Giesen, original stb_image_resize by Jorge L. &quot;VinoBS&quot; Rodriguez, and stb_image_resize2 and stb_sprintf by Jeff Roberts.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;stb_libs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;library&lt;/th&gt; 
   &lt;th&gt;lastest version&lt;/th&gt; 
   &lt;th&gt;category&lt;/th&gt; 
   &lt;th&gt;LoC&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_vorbis.c&quot;&gt;stb_vorbis.c&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.22&lt;/td&gt; 
   &lt;td&gt;audio&lt;/td&gt; 
   &lt;td&gt;5584&lt;/td&gt; 
   &lt;td&gt;decode ogg vorbis files from file/memory to float/16-bit signed output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_hexwave.h&quot;&gt;stb_hexwave.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
   &lt;td&gt;audio&lt;/td&gt; 
   &lt;td&gt;680&lt;/td&gt; 
   &lt;td&gt;audio waveform synthesizer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image.h&quot;&gt;stb_image.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;2.30&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;7988&lt;/td&gt; 
   &lt;td&gt;image loading/decoding from file/memory: JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_truetype.h&quot;&gt;stb_truetype.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.26&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;5079&lt;/td&gt; 
   &lt;td&gt;parse, decode, and rasterize characters from truetype fonts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image_write.h&quot;&gt;stb_image_write.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.16&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;1724&lt;/td&gt; 
   &lt;td&gt;image writing to disk: PNG, TGA, BMP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image_resize2.h&quot;&gt;stb_image_resize2.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;2.13&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;10616&lt;/td&gt; 
   &lt;td&gt;resize images larger/smaller with good quality&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_rect_pack.h&quot;&gt;stb_rect_pack.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.01&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;623&lt;/td&gt; 
   &lt;td&gt;simple 2D rectangle packer with decent quality&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_perlin.h&quot;&gt;stb_perlin.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;428&lt;/td&gt; 
   &lt;td&gt;perlin&#39;s revised simplex noise w/ different seeds&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_ds.h&quot;&gt;stb_ds.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.67&lt;/td&gt; 
   &lt;td&gt;utility&lt;/td&gt; 
   &lt;td&gt;1895&lt;/td&gt; 
   &lt;td&gt;typesafe dynamic array and hash tables for C, will compile in C++&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_sprintf.h&quot;&gt;stb_sprintf.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.10&lt;/td&gt; 
   &lt;td&gt;utility&lt;/td&gt; 
   &lt;td&gt;1906&lt;/td&gt; 
   &lt;td&gt;fast sprintf, snprintf for C/C++&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_textedit.h&quot;&gt;stb_textedit.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.14&lt;/td&gt; 
   &lt;td&gt;user&amp;nbsp;interface&lt;/td&gt; 
   &lt;td&gt;1429&lt;/td&gt; 
   &lt;td&gt;guts of a text editor for games etc implementing them from scratch&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_voxel_render.h&quot;&gt;stb_voxel_render.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.89&lt;/td&gt; 
   &lt;td&gt;3D&amp;nbsp;graphics&lt;/td&gt; 
   &lt;td&gt;3807&lt;/td&gt; 
   &lt;td&gt;Minecraft-esque voxel rendering &quot;engine&quot; with many more features&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_dxt.h&quot;&gt;stb_dxt.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.12&lt;/td&gt; 
   &lt;td&gt;3D&amp;nbsp;graphics&lt;/td&gt; 
   &lt;td&gt;719&lt;/td&gt; 
   &lt;td&gt;Fabian &quot;ryg&quot; Giesen&#39;s real-time DXT compressor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_easy_font.h&quot;&gt;stb_easy_font.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.1&lt;/td&gt; 
   &lt;td&gt;3D&amp;nbsp;graphics&lt;/td&gt; 
   &lt;td&gt;305&lt;/td&gt; 
   &lt;td&gt;quick-and-dirty easy-to-deploy bitmap font for printing frame rate, etc&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_tilemap_editor.h&quot;&gt;stb_tilemap_editor.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.42&lt;/td&gt; 
   &lt;td&gt;game&amp;nbsp;dev&lt;/td&gt; 
   &lt;td&gt;4187&lt;/td&gt; 
   &lt;td&gt;embeddable tilemap editor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_herringbone_wang_tile.h&quot;&gt;stb_herringbone_wa...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.7&lt;/td&gt; 
   &lt;td&gt;game&amp;nbsp;dev&lt;/td&gt; 
   &lt;td&gt;1221&lt;/td&gt; 
   &lt;td&gt;herringbone Wang tile map generator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_c_lexer.h&quot;&gt;stb_c_lexer.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.12&lt;/td&gt; 
   &lt;td&gt;parsing&lt;/td&gt; 
   &lt;td&gt;941&lt;/td&gt; 
   &lt;td&gt;simplify writing parsers for C-like languages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_divide.h&quot;&gt;stb_divide.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.94&lt;/td&gt; 
   &lt;td&gt;math&lt;/td&gt; 
   &lt;td&gt;433&lt;/td&gt; 
   &lt;td&gt;more useful 32-bit modulus e.g. &quot;euclidean divide&quot;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_connected_components.h&quot;&gt;stb_connected_comp...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.96&lt;/td&gt; 
   &lt;td&gt;misc&lt;/td&gt; 
   &lt;td&gt;1049&lt;/td&gt; 
   &lt;td&gt;incrementally compute reachability on grids&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_leakcheck.h&quot;&gt;stb_leakcheck.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.6&lt;/td&gt; 
   &lt;td&gt;misc&lt;/td&gt; 
   &lt;td&gt;194&lt;/td&gt; 
   &lt;td&gt;quick-and-dirty malloc/free leak-checking&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_include.h&quot;&gt;stb_include.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.02&lt;/td&gt; 
   &lt;td&gt;misc&lt;/td&gt; 
   &lt;td&gt;295&lt;/td&gt; 
   &lt;td&gt;implement recursive #include support, particularly for GLSL&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Total libraries: 21 Total lines of C code: 51103&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h4&gt;What&#39;s the license?&lt;/h4&gt; 
&lt;p&gt;These libraries are in the public domain. You can do anything you want with them. You have no legal obligation to do anything else, although I appreciate attribution.&lt;/p&gt; 
&lt;p&gt;They are also licensed under the MIT open source license, if you have lawyers who are unhappy with public domain. Every source file includes an explicit dual-license for you to choose from.&lt;/p&gt; 
&lt;h4&gt;How do I use these libraries?&lt;/h4&gt; 
&lt;p&gt;The idea behind single-header file libraries is that they&#39;re easy to distribute and deploy because all the code is contained in a single file. By default, the .h files in here act as their own header files, i.e. they declare the functions contained in the file but don&#39;t actually result in any code getting compiled.&lt;/p&gt; 
&lt;p&gt;So in addition, you should select &lt;em&gt;exactly one&lt;/em&gt; C/C++ source file that actually instantiates the code, preferably a file you&#39;re not editing frequently. This file should define a specific macro (this is documented per-library) to actually enable the function definitions. For example, to use stb_image, you should have exactly one C/C++ file that doesn&#39;t include stb_image.h regularly, but instead does&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;#define STB_IMAGE_IMPLEMENTATION
#include &quot;stb_image.h&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The right macro to define is pointed out right at the top of each of these libraries.&lt;/p&gt; 
&lt;h4&gt;&lt;a name=&quot;other_libs&quot;&gt;&lt;/a&gt; Are there other single-file public-domain/open source libraries with minimal dependencies out there?&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nothings/single_file_libs&quot;&gt;Yes.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;If I wrap an stb library in a new library, does the new library have to be public domain/MIT?&lt;/h4&gt; 
&lt;p&gt;No, because it&#39;s public domain you can freely relicense it to whatever license your new library wants to be.&lt;/p&gt; 
&lt;h4&gt;What&#39;s the deal with SSE support in GCC-based compilers?&lt;/h4&gt; 
&lt;p&gt;stb_image will either use SSE2 (if you compile with -msse2) or will not use any SIMD at all, rather than trying to detect the processor at runtime and handle it correctly. As I understand it, the approved path in GCC for runtime-detection require you to use multiple source files, one for each CPU configuration. Because stb_image is a header-file library that compiles in only one source file, there&#39;s no approved way to build both an SSE-enabled and a non-SSE-enabled variation.&lt;/p&gt; 
&lt;p&gt;While we&#39;ve tried to work around it, we&#39;ve had multiple issues over the years due to specific versions of gcc breaking what we&#39;re doing, so we&#39;ve given up on it. See &lt;a href=&quot;https://github.com/nothings/stb/issues/280&quot;&gt;https://github.com/nothings/stb/issues/280&lt;/a&gt; and &lt;a href=&quot;https://github.com/nothings/stb/issues/410&quot;&gt;https://github.com/nothings/stb/issues/410&lt;/a&gt; for examples.&lt;/p&gt; 
&lt;h4&gt;Some of these libraries seem redundant to existing open source libraries. Are they better somehow?&lt;/h4&gt; 
&lt;p&gt;Generally they&#39;re only better in that they&#39;re easier to integrate, easier to use, and easier to release (single file; good API; no attribution requirement). They may be less featureful, slower, and/or use more memory. If you&#39;re already using an equivalent library, there&#39;s probably no good reason to switch.&lt;/p&gt; 
&lt;h4&gt;Can I link directly to the table of stb libraries?&lt;/h4&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/nothings/stb#stb_libs&quot;&gt;this URL&lt;/a&gt; to link directly to that list.&lt;/p&gt; 
&lt;h4&gt;Why do you list &quot;lines of code&quot;? It&#39;s a terrible metric.&lt;/h4&gt; 
&lt;p&gt;Just to give you some idea of the internal complexity of the library, to help you manage your expectations, or to let you know what you&#39;re getting into. While not all the libraries are written in the same style, they&#39;re certainly similar styles, and so comparisons between the libraries are probably still meaningful.&lt;/p&gt; 
&lt;p&gt;Note though that the lines do include both the implementation, the part that corresponds to a header file, and the documentation.&lt;/p&gt; 
&lt;h4&gt;Why single-file headers?&lt;/h4&gt; 
&lt;p&gt;Windows doesn&#39;t have standard directories where libraries live. That makes deploying libraries in Windows a lot more painful than open source developers on Unix-derivates generally realize. (It also makes library dependencies a lot worse in Windows.)&lt;/p&gt; 
&lt;p&gt;There&#39;s also a common problem in Windows where a library was built against a different version of the runtime library, which causes link conflicts and confusion. Shipping the libs as headers means you normally just compile them straight into your project without making libraries, thus sidestepping that problem.&lt;/p&gt; 
&lt;p&gt;Making them a single file makes it very easy to just drop them into a project that needs them. (Of course you can still put them in a proper shared library tree if you want.)&lt;/p&gt; 
&lt;p&gt;Why not two files, one a header and one an implementation? The difference between 10 files and 9 files is not a big deal, but the difference between 2 files and 1 file is a big deal. You don&#39;t need to zip or tar the files up, you don&#39;t have to remember to attach &lt;em&gt;two&lt;/em&gt; files, etc.&lt;/p&gt; 
&lt;h4&gt;Why &quot;stb&quot;? Is this something to do with Set-Top Boxes?&lt;/h4&gt; 
&lt;p&gt;No, they are just the initials for my name, Sean T. Barrett. This was not chosen out of egomania, but as a moderately sane way of namespacing the filenames and source function names.&lt;/p&gt; 
&lt;h4&gt;Will you add more image types to stb_image.h?&lt;/h4&gt; 
&lt;p&gt;No. As stb_image use has grown, it has become more important for us to focus on security of the codebase. Adding new image formats increases the amount of code we need to secure, so it is no longer worth adding new formats.&lt;/p&gt; 
&lt;h4&gt;Do you have any advice on how to create my own single-file library?&lt;/h4&gt; 
&lt;p&gt;Yes. &lt;a href=&quot;https://github.com/nothings/stb/raw/master/docs/stb_howto.txt&quot;&gt;https://github.com/nothings/stb/blob/master/docs/stb_howto.txt&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Why public domain?&lt;/h4&gt; 
&lt;p&gt;I prefer it over GPL, LGPL, BSD, zlib, etc. for many reasons. Some of them are listed here: &lt;a href=&quot;https://github.com/nothings/stb/raw/master/docs/why_public_domain.md&quot;&gt;https://github.com/nothings/stb/blob/master/docs/why_public_domain.md&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Why C?&lt;/h4&gt; 
&lt;p&gt;Primarily, because I use C, not C++. But it does also make it easier for other people to use them from other languages.&lt;/p&gt; 
&lt;h4&gt;Why not C99? stdint.h, declare-anywhere, etc.&lt;/h4&gt; 
&lt;p&gt;I still use MSVC 6 (1998) as my IDE because it has better human factors for me than later versions of MSVC.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coturn/coturn</title>
      <link>https://github.com/coturn/coturn</link>
      <description>&lt;p&gt;coturn TURN server project&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/coturn/coturn/actions/workflows/docker.yml&quot;&gt;&lt;img src=&quot;https://github.com/coturn/coturn/actions/workflows/docker.yml/badge.svg?sanitize=true&quot; alt=&quot;Docker CI&quot; title=&quot;Docker CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/coturn/coturn&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/coturn/coturn?label=Docker%20Hub%20pulls&quot; alt=&quot;Docker Hub&quot; title=&quot;Docker Hub pulls&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/coturn/coturn&quot;&gt;Docker Hub&lt;/a&gt; | &lt;a href=&quot;https://github.com/orgs/coturn/packages/container/package/coturn&quot;&gt;GitHub Container Registry&lt;/a&gt; | &lt;a href=&quot;https://quay.io/repository/coturn/coturn&quot;&gt;Quay.io&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Coturn TURN server&lt;/h1&gt; 
&lt;p&gt;coturn is a free open source implementation of TURN and STUN Server. The TURN Server is a VoIP media traffic NAT traversal server and gateway.&lt;/p&gt; 
&lt;h2&gt;Installing / Getting started&lt;/h2&gt; 
&lt;p&gt;Linux distros may have a version of coturn which you can install by&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;apt install coturn
turnserver --log-file stdout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or run coturn using docker container:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d -p 3478:3478 -p 3478:3478/udp -p 5349:5349 -p 5349:5349/udp -p 49152-65535:49152-65535/udp coturn/coturn
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See more details about using docker container &lt;a href=&quot;https://github.com/coturn/coturn/raw/master/docker/coturn/README.md&quot;&gt;Docker Readme&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;p&gt;coturn requires following dependencies to be installed first&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;libevent2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optional&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;openssl (to support TLS and DTLS, authorized STUN and TURN)&lt;/li&gt; 
 &lt;li&gt;libmicrohttp and &lt;a href=&quot;https://github.com/digitalocean/prometheus-client-c&quot;&gt;prometheus-client-c&lt;/a&gt; (prometheus interface)&lt;/li&gt; 
 &lt;li&gt;MariaDB/MySQL (user database)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/redis/hiredis&quot;&gt;Hiredis&lt;/a&gt; (user database, monitoring)&lt;/li&gt; 
 &lt;li&gt;SQLite (user database)&lt;/li&gt; 
 &lt;li&gt;PostgreSQL (user database)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Building&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone git@github.com:coturn/coturn.git
cd coturn
./configure
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;STUN specs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3489&quot;&gt;RFC 3489&lt;/a&gt; - &quot;classic&quot; STUN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5389&quot;&gt;RFC 5389&lt;/a&gt; - base &quot;new&quot; STUN specs&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5769&quot;&gt;RFC 5769&lt;/a&gt; - test vectors for STUN protocol testing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5780&quot;&gt;RFC 5780&lt;/a&gt; - NAT behavior discovery support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7443&quot;&gt;RFC 7443&lt;/a&gt; - ALPN support for STUN &amp;amp; TURN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7635&quot;&gt;RFC 7635&lt;/a&gt; - oAuth third-party TURN/STUN authorization&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;TURN specs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5766&quot;&gt;RFC 5766&lt;/a&gt; - base TURN specs&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6062&quot;&gt;RFC 6062&lt;/a&gt; - TCP relaying TURN extension&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6156&quot;&gt;RFC 6156&lt;/a&gt; - IPv6 extension for TURN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7443&quot;&gt;RFC 7443&lt;/a&gt; - ALPN support for STUN &amp;amp; TURN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7635&quot;&gt;RFC 7635&lt;/a&gt; - oAuth third-party TURN/STUN authorization&lt;/li&gt; 
 &lt;li&gt;DTLS support (&lt;a href=&quot;http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00&quot;&gt;http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Mobile ICE (MICE) support (&lt;a href=&quot;http://tools.ietf.org/html/draft-wing-tram-turn-mobility-02&quot;&gt;http://tools.ietf.org/html/draft-wing-tram-turn-mobility-02&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;TURN REST API (&lt;a href=&quot;http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00&quot;&gt;http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Origin field in TURN (Multi-tenant TURN Server) (&lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-tram-stun-origin-06&quot;&gt;https://tools.ietf.org/html/draft-ietf-tram-stun-origin-06&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;TURN Bandwidth draft specs (&lt;a href=&quot;http://tools.ietf.org/html/draft-thomson-tram-turn-bandwidth-01&quot;&gt;http://tools.ietf.org/html/draft-thomson-tram-turn-bandwidth-01&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;TURN-bis (with dual allocation) draft specs (&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tram-turnbis-04&quot;&gt;http://tools.ietf.org/html/draft-ietf-tram-turnbis-04&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ICE and related specs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5245&quot;&gt;RFC 5245&lt;/a&gt; - ICE&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5768&quot;&gt;RFC 5768&lt;/a&gt; – ICE–SIP&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6336&quot;&gt;RFC 6336&lt;/a&gt; – ICE–IANA Registry&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6544&quot;&gt;RFC 6544&lt;/a&gt; – ICE–TCP&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5928&quot;&gt;RFC 5928&lt;/a&gt; - TURN Resolution Mechanism&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The implementation fully supports the following client-to-TURN-server protocols:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UDP (per &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5766&quot;&gt;RFC 5766&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;TCP (per &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5766&quot;&gt;RFC 5766&lt;/a&gt; and &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6062&quot;&gt;RFC 6062&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;TLS (per &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc&quot;&gt;RFC 5766&lt;/a&gt; and &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6062&quot;&gt;RFC 6062&lt;/a&gt;): including TLS1.3; ECDHE is supported.&lt;/li&gt; 
 &lt;li&gt;DTLS1.0 and DTLS1.2 (&lt;a href=&quot;http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00&quot;&gt;http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;SCTP (experimental implementation).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Relay protocols:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UDP (per &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc5766&quot;&gt;RFC 5766&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;TCP (per &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6062&quot;&gt;RFC 6062&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;User databases (for user repository, with passwords or keys, if authentication is required):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;SQLite&lt;/li&gt; 
 &lt;li&gt;MariaDB/MySQL&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;li&gt;Redis&lt;/li&gt; 
 &lt;li&gt;MongoDB&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Management interfaces:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;telnet cli&lt;/li&gt; 
 &lt;li&gt;HTTPS interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Monitoring:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redis can be used for status and statistics storage and notification&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://prometheus.io/&quot;&gt;prometheus&lt;/a&gt; interface (unavailable on apt package)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Message integrity digest algorithms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;HMAC-SHA1, with MD5-hashed keys (as required by STUN and TURN standards)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;TURN authentication mechanisms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&#39;classic&#39; long-term credentials mechanism;&lt;/li&gt; 
 &lt;li&gt;TURN REST API (a modification of the long-term mechanism, for time-limited secret-based authentication, for WebRTC applications: &lt;a href=&quot;http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00&quot;&gt;http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00&lt;/a&gt;);&lt;/li&gt; 
 &lt;li&gt;experimental third-party oAuth-based client authorization option;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Performance and Load Balancing:&lt;/p&gt; 
&lt;p&gt;When used as a part of an ICE solution, for VoIP connectivity, this TURN server can handle thousands simultaneous calls per CPU (when TURN protocol is used) or tens of thousands calls when only STUN protocol is used. For virtually unlimited scalability a load balancing scheme can be used. The load balancing can be implemented with the following tools (either one or a combination of them):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;DNS SRV based load balancing;&lt;/li&gt; 
 &lt;li&gt;built-in 300 ALTERNATE-SERVER mechanism (requires 300 response support by the TURN client);&lt;/li&gt; 
 &lt;li&gt;network load-balancer server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Traffic bandwidth limitation and congestion avoidance algorithms implemented.&lt;/p&gt; 
&lt;p&gt;Target platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux (Debian, Ubuntu, Mint, CentOS, Fedora, Redhat, Amazon Linux, Arch Linux, OpenSUSE)&lt;/li&gt; 
 &lt;li&gt;BSD (FreeBSD, NetBSD, OpenBSD, DragonFlyBSD)&lt;/li&gt; 
 &lt;li&gt;Solaris 11&lt;/li&gt; 
 &lt;li&gt;Mac OS X&lt;/li&gt; 
 &lt;li&gt;Cygwin (for non-production R&amp;amp;D purposes)&lt;/li&gt; 
 &lt;li&gt;Windows (native with, e.g., MSVC toolchain)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This project can be successfully used on other &lt;code&gt;*NIX&lt;/code&gt; platforms, too, but that is not officially supported.&lt;/p&gt; 
&lt;p&gt;The implementation is supposed to be simple, easy to install and configure. The project focuses on performance, scalability and simplicity. The aim is to provide an enterprise-grade TURN solution.&lt;/p&gt; 
&lt;p&gt;To achieve high performance and scalability, the TURN server is implemented with the following features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;High-performance industrial-strength Network IO engine libevent2 is used&lt;/li&gt; 
 &lt;li&gt;Configurable multi-threading model implemented to allow full usage of available CPU resources (if OS allows multi-threading)&lt;/li&gt; 
 &lt;li&gt;Multiple listening and relay addresses can be configured&lt;/li&gt; 
 &lt;li&gt;Efficient memory model used&lt;/li&gt; 
 &lt;li&gt;The TURN project code can be used in a custom proprietary networking environment. In the TURN server code, an abstract networking API is used. Only couple files in the project have to be re-written to plug-in the TURN server into a proprietary environment. With this project, only implementation for standard UNIX Networking/IO API is provided, but the user can implement any other environment. The TURN server code was originally developed for a high-performance proprietary corporate environment, then adopted for UNIX Networking API&lt;/li&gt; 
 &lt;li&gt;The TURN server works as a user space process, without imposing any special requirements on the system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Project homepage: &lt;a href=&quot;https://coturn.github.io/&quot;&gt;https://coturn.github.io/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Repository: &lt;a href=&quot;https://github.com/coturn/coturn/&quot;&gt;https://github.com/coturn/coturn/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Issue tracker: &lt;a href=&quot;https://github.com/coturn/coturn/issues&quot;&gt;https://github.com/coturn/coturn/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google group: &lt;a href=&quot;https://groups.google.com/forum/#!forum/turn-server-project-rfc5766-turn-server&quot;&gt;https://groups.google.com/forum/#!forum/turn-server-project-rfc5766-turn-server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jemalloc/jemalloc</title>
      <link>https://github.com/jemalloc/jemalloc</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;jemalloc is a general purpose malloc(3) implementation that emphasizes fragmentation avoidance and scalable concurrency support. jemalloc first came into use as the FreeBSD libc allocator in 2005, and since then it has found its way into numerous applications that rely on its predictable behavior. In 2010 jemalloc development efforts broadened to include developer support features such as heap profiling and extensive monitoring/tuning hooks. Modern jemalloc releases continue to be integrated back into FreeBSD, and therefore versatility remains critical. Ongoing development efforts trend toward making jemalloc among the best allocators for a broad range of demanding applications, and eliminating/mitigating weaknesses that have practical repercussions for real world applications.&lt;/p&gt; 
&lt;p&gt;The COPYING file contains copyright and licensing information.&lt;/p&gt; 
&lt;p&gt;The INSTALL file contains information on how to configure, build, and install jemalloc.&lt;/p&gt; 
&lt;p&gt;The ChangeLog file contains a brief summary of changes for each release.&lt;/p&gt; 
&lt;p&gt;URL: &lt;a href=&quot;https://jemalloc.net/&quot;&gt;https://jemalloc.net/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nicbarker/clay</title>
      <link>https://github.com/nicbarker/clay</link>
      <description>&lt;p&gt;High performance UI layout library in C.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Clay&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Clay&lt;/em&gt;&lt;/strong&gt; (short for &lt;strong&gt;C Layout&lt;/strong&gt;) is a high performance 2D UI layout library.&lt;/p&gt; 
&lt;h3&gt;Major Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Microsecond layout performance&lt;/li&gt; 
 &lt;li&gt;Flex-box like layout model for complex, responsive layouts including text wrapping, scrolling containers and aspect ratio scaling&lt;/li&gt; 
 &lt;li&gt;Single ~4k LOC &lt;strong&gt;clay.h&lt;/strong&gt; file with &lt;strong&gt;zero&lt;/strong&gt; dependencies (including no standard library)&lt;/li&gt; 
 &lt;li&gt;Wasm support: compile with clang to a 15kb uncompressed &lt;strong&gt;.wasm&lt;/strong&gt; file for use in the browser&lt;/li&gt; 
 &lt;li&gt;Static arena based memory use with no malloc / free, and low total memory overhead (e.g. ~3.5mb for 8192 layout elements).&lt;/li&gt; 
 &lt;li&gt;React-like nested declarative syntax&lt;/li&gt; 
 &lt;li&gt;Renderer agnostic: outputs a sorted list of rendering primitives that can be easily composited in any 3D engine, and even compiled to HTML (examples provided)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Take a look at the &lt;a href=&quot;https://nicbarker.com/clay&quot;&gt;clay website&lt;/a&gt; for an example of clay compiled to wasm and running in the browser, or others in the &lt;a href=&quot;https://github.com/nicbarker/clay/tree/main/examples&quot;&gt;examples directory&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also watch the &lt;a href=&quot;https://youtu.be/DYWTw19_8r4&quot;&gt;introduction video&lt;/a&gt; for an overview of the motivation behind Clay&#39;s development and a short demo of its usage.&lt;/p&gt; 
&lt;img width=&quot;1394&quot; alt=&quot;A screenshot of a code IDE with lots of visual and textual elements&quot; src=&quot;https://github.com/user-attachments/assets/9986149a-ee0f-449a-a83e-64a392267e3d&quot;&gt; 
&lt;p&gt;&lt;em&gt;An example GUI application built with clay&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Download or clone clay.h and include it after defining &lt;code&gt;CLAY_IMPLEMENTATION&lt;/code&gt; in one file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Must be defined in one file, _before_ #include &quot;clay.h&quot;
#define CLAY_IMPLEMENTATION
#include &quot;../../clay.h&quot;

const Clay_Color COLOR_LIGHT = (Clay_Color) {224, 215, 210, 255};
const Clay_Color COLOR_RED = (Clay_Color) {168, 66, 28, 255};
const Clay_Color COLOR_ORANGE = (Clay_Color) {225, 138, 50, 255};

void HandleClayErrors(Clay_ErrorData errorData) {
    // See the Clay_ErrorData struct for more information
    printf(&quot;%s&quot;, errorData.errorText.chars);
    switch(errorData.errorType) {
        // etc
    }
}

// Example measure text function
static inline Clay_Dimensions MeasureText(Clay_StringSlice text, Clay_TextElementConfig *config, uintptr_t userData) {
    // Clay_TextElementConfig contains members such as fontId, fontSize, letterSpacing etc
    // Note: Clay_String-&amp;gt;chars is not guaranteed to be null terminated
    return (Clay_Dimensions) {
            .width = text.length * config-&amp;gt;fontSize, // &amp;lt;- this will only work for monospace fonts, see the renderers/ directory for more advanced text measurement
            .height = config-&amp;gt;fontSize
    };
}

// Layout config is just a struct that can be declared statically, or inline
Clay_ElementDeclaration sidebarItemConfig = (Clay_ElementDeclaration) {
    .layout = {
        .sizing = { .width = CLAY_SIZING_GROW(0), .height = CLAY_SIZING_FIXED(50) }
    },
    .backgroundColor = COLOR_ORANGE
};

// Re-useable components are just normal functions
void SidebarItemComponent() {
    CLAY(sidebarItemConfig) {
        // children go here...
    }
}

int main() {
    // Note: malloc is only used here as an example, any allocator that provides
    // a pointer to addressable memory of at least totalMemorySize will work
    uint64_t totalMemorySize = Clay_MinMemorySize();
    Clay_Arena arena = Clay_CreateArenaWithCapacityAndMemory(totalMemorySize, malloc(totalMemorySize));

    // Note: screenWidth and screenHeight will need to come from your environment, Clay doesn&#39;t handle window related tasks
    Clay_Initialize(arena, (Clay_Dimensions) { screenWidth, screenHeight }, (Clay_ErrorHandler) { HandleClayErrors });

    while(renderLoop()) { // Will be different for each renderer / environment
        // Optional: Update internal layout dimensions to support resizing
        Clay_SetLayoutDimensions((Clay_Dimensions) { screenWidth, screenHeight });
        // Optional: Update internal pointer position for handling mouseover / click / touch events - needed for scrolling &amp;amp; debug tools
        Clay_SetPointerState((Clay_Vector2) { mousePositionX, mousePositionY }, isMouseDown);
        // Optional: Update internal pointer position for handling mouseover / click / touch events - needed for scrolling and debug tools
        Clay_UpdateScrollContainers(true, (Clay_Vector2) { mouseWheelX, mouseWheelY }, deltaTime);

        // All clay layouts are declared between Clay_BeginLayout and Clay_EndLayout
        Clay_BeginLayout();

        // An example of laying out a UI with a fixed width sidebar and flexible width main content
        CLAY({ .id = CLAY_ID(&quot;OuterContainer&quot;), .layout = { .sizing = {CLAY_SIZING_GROW(0), CLAY_SIZING_GROW(0)}, .padding = CLAY_PADDING_ALL(16), .childGap = 16 }, .backgroundColor = {250,250,255,255} }) {
            CLAY({
                .id = CLAY_ID(&quot;SideBar&quot;),
                .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM, .sizing = { .width = CLAY_SIZING_FIXED(300), .height = CLAY_SIZING_GROW(0) }, .padding = CLAY_PADDING_ALL(16), .childGap = 16 },
                .backgroundColor = COLOR_LIGHT
            }) {
                CLAY({ .id = CLAY_ID(&quot;ProfilePictureOuter&quot;), .layout = { .sizing = { .width = CLAY_SIZING_GROW(0) }, .padding = CLAY_PADDING_ALL(16), .childGap = 16, .childAlignment = { .y = CLAY_ALIGN_Y_CENTER } }, .backgroundColor = COLOR_RED }) {
                    CLAY({ .id = CLAY_ID(&quot;ProfilePicture&quot;), .layout = { .sizing = { .width = CLAY_SIZING_FIXED(60), .height = CLAY_SIZING_FIXED(60) }}, .image = { .imageData = &amp;amp;profilePicture, .sourceDimensions = {60, 60} } }) {}
                    CLAY_TEXT(CLAY_STRING(&quot;Clay - UI Library&quot;), CLAY_TEXT_CONFIG({ .fontSize = 24, .textColor = {255, 255, 255, 255} }));
                }

                // Standard C code like loops etc work inside components
                for (int i = 0; i &amp;lt; 5; i++) {
                    SidebarItemComponent();
                }

                CLAY({ .id = CLAY_ID(&quot;MainContent&quot;), .layout = { .sizing = { .width = CLAY_SIZING_GROW(0), .height = CLAY_SIZING_GROW(0) } }, .backgroundColor = COLOR_LIGHT }) {}
            }
        }

        // All clay layouts are declared between Clay_BeginLayout and Clay_EndLayout
        Clay_RenderCommandArray renderCommands = Clay_EndLayout();

        // More comprehensive rendering examples can be found in the renderers/ directory
        for (int i = 0; i &amp;lt; renderCommands.length; i++) {
            Clay_RenderCommand *renderCommand = &amp;amp;renderCommands.internalArray[i];

            switch (renderCommand-&amp;gt;commandType) {
                case CLAY_RENDER_COMMAND_TYPE_RECTANGLE: {
                    DrawRectangle( renderCommand-&amp;gt;boundingBox, renderCommand-&amp;gt;renderData.rectangle.backgroundColor);
                }
                // ... Implement handling of other command types
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above example, rendered correctly will look something like the following:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/1928c6d4-ada9-4a4c-a3d1-44fe9b23b3bd&quot; alt=&quot;Clay Example&quot;&gt;&lt;/p&gt; 
&lt;p&gt;In summary, the general order of steps is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setlayoutdimensions&quot;&gt;Clay_SetLayoutDimensions(dimensions)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setpointerstate&quot;&gt;Clay_SetPointerState(pointerPosition, isPointerDown)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_updatescrollcontainers&quot;&gt;Clay_UpdateScrollContainers(enableDragScrolling, scrollDelta, deltaTime)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_beginlayout&quot;&gt;Clay_BeginLayout()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Declare your layout with the provided &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#element-macros&quot;&gt;Element Macros&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_endlayout&quot;&gt;Clay_EndLayout()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Render the results using the outputted &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rendercommandarray&quot;&gt;Clay_RenderCommandArray&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For help starting out or to discuss clay, considering joining &lt;a href=&quot;https://discord.gg/b4FTWkxdvT&quot;&gt;the discord server.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Summary&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#high-level-documentation&quot;&gt;High Level Documentation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#building-ui-hierarchies&quot;&gt;Building UI Hierarchies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#configuring-layout-and-styling-ui-elements&quot;&gt;Configuring Layout and Styling UI Elements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#element-ids&quot;&gt;Element IDs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#mouse-touch-and-pointer-interactions&quot;&gt;Mouse, Touch and Pointer Interactions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#scrolling-elements&quot;&gt;Scrolling Elements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#floating-elements-absolute-positioning&quot;&gt;Floating Elements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#laying-out-your-own-custom-elements&quot;&gt;Custom Elements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#retained-mode-rendering&quot;&gt;Retained Mode Rendering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#visibility-culling&quot;&gt;Visibility Culling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#preprocessor-directives&quot;&gt;Preprocessor Directives&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#bindings-for-non-c&quot;&gt;Bindings&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#debug-tools&quot;&gt;Debug Tools&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#api&quot;&gt;API&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#public-functions&quot;&gt;Public Functions&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#lifecycle-for-public-functions&quot;&gt;Lifecycle&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_minmemorysize&quot;&gt;Clay_MinMemorySize&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_createarenawithcapacityandmemory&quot;&gt;Clay_CreateArenaWithCapacityAndMemory&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setmeasuretextfunction&quot;&gt;Clay_SetMeasureTextFunction&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clau_resetmeasuretextcache&quot;&gt;Clay_ResetMeasureTextCache&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/clay_setmaxelementcount&quot;&gt;Clay_SetMaxElementCount&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setmaxmeasuretextcachewordcount&quot;&gt;Clay_SetMaxMeasureTextCacheWordCount&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_initialize&quot;&gt;Clay_Initialize&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_getcurrentcontext&quot;&gt;Clay_GetCurrentContext&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setcurrentcontext&quot;&gt;Clay_SetCurrentContext&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setlayoutdimensions&quot;&gt;Clay_SetLayoutDimensions&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setpointerstate&quot;&gt;Clay_SetPointerState&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_updatescrollcontainers&quot;&gt;Clay_UpdateScrollContainers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_beginlayout&quot;&gt;Clay_BeginLayout&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_endlayout&quot;&gt;Clay_EndLayout&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_hovered&quot;&gt;Clay_Hovered&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_onhover&quot;&gt;Clay_OnHover&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_pointerover&quot;&gt;Clay_PointerOver&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_getscrollcontainerdata&quot;&gt;Clay_GetScrollContainerData&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_getelementid&quot;&gt;Clay_GetElementId&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#element-macros&quot;&gt;Element Macros&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay-1&quot;&gt;CLAY&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_layout&quot;&gt;CLAY_LAYOUT&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rectangle&quot;&gt;CLAY_RECTANGLE&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_text&quot;&gt;CLAY_TEXT&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_image&quot;&gt;CLAY_IMAGE&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_scroll&quot;&gt;CLAY_SCROLL&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_border&quot;&gt;CLAY_BORDER&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_floating&quot;&gt;CLAY_FLOATING&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_custom_element&quot;&gt;CLAY_CUSTOM_ELEMENT&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/data-structures--definitions&quot;&gt;Data Structures &amp;amp; Defs&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_string&quot;&gt;Clay_String&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementid&quot;&gt;Clay_ElementId&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rendercommandarray&quot;&gt;Clay_RenderCommandArray&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rendercommand&quot;&gt;Clay_RenderCommand&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_scrollcontainerdata&quot;&gt;Clay_ScrollContainerData&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_errorhandler&quot;&gt;Clay_ErrorHandler&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_errordata&quot;&gt;Clay_ErrorData&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;High Level Documentation&lt;/h2&gt; 
&lt;h3&gt;Building UI Hierarchies&lt;/h3&gt; 
&lt;p&gt;Clay UIs are built using the C macro &lt;code&gt;CLAY({ configuration })&lt;/code&gt;. This macro creates a new empty element in the UI hierarchy, and supports modular customisation of layout, styling and functionality. The &lt;code&gt;CLAY()&lt;/code&gt; macro can also be &lt;em&gt;nested&lt;/em&gt;, similar to other declarative UI systems like HTML.&lt;/p&gt; 
&lt;p&gt;Child elements are added by opening a block: &lt;code&gt;{}&lt;/code&gt; after calling the &lt;code&gt;CLAY()&lt;/code&gt; macro (exactly like you would with an &lt;code&gt;if&lt;/code&gt; statement or &lt;code&gt;for&lt;/code&gt; loop), and declaring child components inside the braces.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Parent element with 8px of padding
CLAY({ .layout = { .padding = CLAY_PADDING_ALL(8) } }) {
    // Child element 1
    CLAY_TEXT(CLAY_STRING(&quot;Hello World&quot;), CLAY_TEXT_CONFIG({ .fontSize = 16 }));
    // Child element 2 with red background
    CLAY({ .backgroundColor = COLOR_RED }) {
        // etc
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, unlike HTML and other declarative DSLs, this macro is just C. As a result, you can use arbitrary C code such as loops, functions and conditions inside your layout declaration code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Re-usable &quot;components&quot; are just functions that declare more UI
void ButtonComponent(Clay_String buttonText) {
    // Red box button with 8px of padding
    CLAY({ .layout = { .padding = CLAY_PADDING_ALL(8) }, .backgroundColor = COLOR_RED }) {
        CLAY_TEXT(buttonText, textConfig);
    }
}

// Parent element
CLAY({ .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM } }) {
    // Render a bunch of text elements
    for (int i = 0; i &amp;lt; textArray.length; i++) {
        CLAY_TEXT(textArray.elements[i], textConfig);
    }
    // Only render this element if we&#39;re on a mobile screen
    if (isMobileScreen) {
        CLAY(0) {
            // etc
        }
    }
    // Re-usable components
    ButtonComponent(CLAY_STRING(&quot;Click me!&quot;));
    ButtonComponent(CLAY_STRING(&quot;No, click me!&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuring Layout and Styling UI Elements&lt;/h3&gt; 
&lt;p&gt;The layout and style of clay elements is configured with the &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementdeclaration&quot;&gt;Clay_ElementDeclaration&lt;/a&gt; struct passed to the &lt;code&gt;CLAY()&lt;/code&gt; macro.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;CLAY({ .layout = { .padding = { 8, 8, 8, 8 }, .layoutDirection = CLAY_TOP_TO_BOTTOM } }) {
    // Children are 8px inset into parent, and laid out top to bottom
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This macro isn&#39;t magic - all it&#39;s doing is wrapping the standard designated initializer syntax. e.g. &lt;code&gt;(Clay_ElementDeclaration) { .layout = { .padding = { .left = 8, .right = 8 } ...&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementdeclaration&quot;&gt;Clay_ElementDeclaration&lt;/a&gt; API for the full list of options.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Clay_ElementDeclaration&lt;/code&gt; struct can be defined in file scope or elsewhere, and reused.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Define a style in the global / file scope
Clay_ElementDeclaration reuseableStyle = (Clay_ElementDeclaration) {
    .layout = { .padding = { .left = 12 } },
    .backgroundColor = { 120, 120, 120, 255 },
    .cornerRadius = { 12, 12, 12, 12 }
};

CLAY(reuseableStyle) {
    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Element IDs&lt;/h3&gt; 
&lt;p&gt;Clay elements can optionally be tagged with a unique identifier using the &lt;code&gt;.id&lt;/code&gt; field of an element declaration, and with the &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID()&lt;/a&gt; convenience macro.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Will always produce the same ID from the same input string
CLAY({ .id = CLAY_ID(&quot;OuterContainer&quot;) }) {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Element IDs have two main use cases. Firstly, tagging an element with an ID allows you to query information about the element later, such as its &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_pointerover&quot;&gt;mouseover state&lt;/a&gt; or dimensions.&lt;/p&gt; 
&lt;p&gt;Secondly, IDs are visually useful when attempting to read and modify UI code, as well as when using the built-in &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#debug-tools&quot;&gt;debug tools&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To avoid having to construct dynamic strings at runtime to differentiate ids in loops, clay provides the &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI(string, index)&lt;/a&gt; macro to generate different ids from a single input string. Think of IDI as &quot;&lt;strong&gt;ID&lt;/strong&gt; + &lt;strong&gt;I&lt;/strong&gt;ndex&quot;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// This is the equivalent of calling CLAY_ID(&quot;Item0&quot;), CLAY_ID(&quot;Item1&quot;) etc
for (int index = 0; index &amp;lt; items.length; index++) {
    CLAY({ .id = CLAY_IDI(&quot;Item&quot;, index) }) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This ID (or, if not provided, an auto generated ID) will be forwarded to the final &lt;code&gt;Clay_RenderCommandArray&lt;/code&gt; for use in retained mode UIs. Using duplicate IDs may cause some functionality to misbehave (i.e. if you&#39;re trying to attach a floating container to a specific element with ID that is duplicated, it may not attach to the one you expect)&lt;/p&gt; 
&lt;h3&gt;Mouse, Touch and Pointer Interactions&lt;/h3&gt; 
&lt;p&gt;Clay provides several functions for handling mouse and pointer interactions.&lt;/p&gt; 
&lt;p&gt;All pointer interactions depend on the function &lt;code&gt;void Clay_SetPointerState(Clay_Vector2 position, bool isPointerDown)&lt;/code&gt; being called after each mouse position update and before any other clay functions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;During UI declaration&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The function &lt;code&gt;bool Clay_Hovered()&lt;/code&gt; can be called during element construction or in the body of an element, and returns &lt;code&gt;true&lt;/code&gt; if the mouse / pointer is over the currently open element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// An orange button that turns blue when hovered
CLAY({ .backgroundColor = Clay_Hovered() ? COLOR_BLUE : COLOR_ORANGE }) {
    bool buttonHovered = Clay_Hovered();
    CLAY_TEXT(buttonHovered ? CLAY_STRING(&quot;Hovered&quot;) : CLAY_STRING(&quot;Hover me!&quot;), headerTextConfig);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The function &lt;code&gt;void Clay_OnHover()&lt;/code&gt; allows you to attach a function pointer to the currently open element, which will be called if the mouse / pointer is over the element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;void HandleButtonInteraction(Clay_ElementId elementId, Clay_PointerData pointerInfo, intptr_t userData) {
    ButtonData *buttonData = (ButtonData *)userData;
    // Pointer state allows you to detect mouse down / hold / release
    if (pointerInfo.state == CLAY_POINTER_DATA_PRESSED_THIS_FRAME) {
        // Do some click handling
        NavigateTo(buttonData-&amp;gt;link);
    }
}

ButtonData linkButton = (ButtonData) { .link = &quot;https://github.com/nicbarker/clay&quot; };

// HandleButtonInteraction will be called for each frame the mouse / pointer / touch is inside the button boundaries
CLAY({ .layout = { .padding = CLAY_PADDING_ALL(8) } }) {
    Clay_OnHover(HandleButtonInteraction, &amp;amp;linkButton);
    CLAY_TEXT(CLAY_STRING(&quot;Button&quot;), &amp;amp;headerTextConfig);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Before / After UI declaration&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you want to query mouse / pointer overlaps outside layout declarations, you can use the function &lt;code&gt;bool Clay_PointerOver(Clay_ElementId id)&lt;/code&gt;, which takes an &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#element-ids&quot;&gt;element id&lt;/a&gt; and returns a bool representing whether the current pointer position is within its bounding box.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Reminder: Clay_SetPointerState must be called before functions that rely on pointer position otherwise it will have no effect
Clay_Vector2 mousePosition = { x, y };
Clay_SetPointerState(mousePosition);
// ...
// If profile picture was clicked
if (mouseButtonDown(0) &amp;amp;&amp;amp; Clay_PointerOver(Clay_GetElementId(&quot;ProfilePicture&quot;))) {
    // Handle profile picture clicked
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the bounding box queried by &lt;code&gt;Clay_PointerOver&lt;/code&gt; is from the last frame. This generally shouldn&#39;t make a difference except in the case of animations that move at high speed. If this is an issue for you, performing layout twice per frame with the same data will give you the correct interaction the second time.&lt;/p&gt; 
&lt;h3&gt;Scrolling Elements&lt;/h3&gt; 
&lt;p&gt;Elements are configured as scrollable with the &lt;code&gt;CLAY_SCROLL&lt;/code&gt; macro. To make scroll containers respond to mouse wheel and scroll events, two functions need to be called before &lt;code&gt;BeginLayout()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;Clay_Vector2 mousePosition = { x, y };
// Reminder: Clay_SetPointerState must be called before Clay_UpdateScrollContainers otherwise it will have no effect
Clay_SetPointerState(mousePosition);
// Clay_UpdateScrollContainers needs to be called before Clay_BeginLayout for the position to avoid a 1 frame delay
Clay_UpdateScrollContainers(
    true, // Enable drag scrolling
    scrollDelta, // Clay_Vector2 scrollwheel / trackpad scroll x and y delta this frame
    float deltaTime, // Time since last frame in seconds as a float e.g. 8ms is 0.008f
);
// ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More specific details can be found in the full &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_scroll&quot;&gt;Scroll API&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Floating Elements (&quot;Absolute&quot; Positioning)&lt;/h3&gt; 
&lt;p&gt;All standard elements in clay are laid out on top of, and &lt;em&gt;within&lt;/em&gt; their parent, positioned according to their parent&#39;s layout rules, and affect the positioning and sizing of siblings.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&quot;Floating&quot;&lt;/strong&gt; is configured with the &lt;code&gt;CLAY_FLOATING()&lt;/code&gt; macro. Floating elements don&#39;t affect the parent they are defined in, or the position of their siblings. They also have a &lt;strong&gt;z-index&lt;/strong&gt;, and as a result can intersect and render over the top of other elements.&lt;/p&gt; 
&lt;p&gt;A classic example use case for floating elements is tooltips and modals.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// The two text elements will be laid out top to bottom, and the floating container
// will be attached to &quot;Outer&quot;
CLAY({ .id = CLAY_ID(&quot;Outer&quot;), .layout = { .layoutDirection = TOP_TO_BOTTOM } }) {
    CLAY_TEXT(CLAY_ID(&quot;Button&quot;), text, &amp;amp;headerTextConfig);
    CLAY({ .id = CLAY_ID(&quot;Tooltip&quot;), .floating = { .attachTo = CLAY_ATTACH_TO_PARENT } }) {}
    CLAY_TEXT(CLAY_ID(&quot;Button&quot;), text, &amp;amp;headerTextConfig);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More specific details can be found in the full &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_floatingelementconfig&quot;&gt;Floating API&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Laying Out Your Own Custom Elements&lt;/h3&gt; 
&lt;p&gt;Clay only supports a simple set of UI element primitives, such as rectangles, text and images. Clay provides a singular API for layout out custom elements:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;#include &quot;clay.h&quot;

typedef enum {
    CUSTOM_ELEMENT_TYPE_MODEL,
    CUSTOM_ELEMENT_TYPE_VIDEO
} CustomElementType;

// A rough example of how you could handle laying out 3d models in your UI
typedef struct {
    CustomElementType type;
    union {
        Model model;
        Video video;
        // ...
    };
} CustomElementData;

Model myModel = Load3DModel(filePath);
CustomElement modelElement = (CustomElement) { .type = CUSTOM_ELEMENT_TYPE_MODEL, .model = myModel }

typedef struct {
    void* memory;
    uintptr_t offset;
} Arena;

// During init
Arena frameArena = (Arena) { .memory = malloc(1024) };

// ...
CLAY(0) {
    // Custom elements only take a single pointer, so we need to store the data somewhere
    CustomElementData *modelData = (CustomElementData *)(frameArena.memory + frameArena.offset);
    *modelData = (CustomElementData) { .type = CUSTOM_ELEMENT_TYPE_MODEL, .model = myModel };
    frameArena.offset += sizeof(CustomElementData);
    CLAY({ .custom = { .customData = modelData } }) {}
}

// Later during your rendering
switch (renderCommand-&amp;gt;commandType) {
    // ...
    case CLAY_RENDER_COMMAND_TYPE_CUSTOM: {
        // Your extended struct is passed through
        CustomElementData *customElement = renderCommand-&amp;gt;config.customElementConfig-&amp;gt;customData;
        if (!customElement) continue;
        switch (customElement-&amp;gt;type) {
            case CUSTOM_ELEMENT_TYPE_MODEL: {
                // Render your 3d model here
                break;
            }
            case CUSTOM_ELEMENT_TYPE_VIDEO: {
                // Render your video here
                break;
            }
            // ...
        }
        break;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More specific details can be found in the full &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_custom_element&quot;&gt;Custom Element API&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Retained Mode Rendering&lt;/h3&gt; 
&lt;p&gt;Clay was originally designed for &lt;a href=&quot;https://www.youtube.com/watch?v=Z1qyvQsjK5Y&quot;&gt;Immediate Mode&lt;/a&gt; rendering - where the entire UI is redrawn every frame. This may not be possible with your platform, renderer design or performance constraints.&lt;/p&gt; 
&lt;p&gt;There are some general techniques that can be used to integrate clay into a retained mode rendering system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Clay_RenderCommand&lt;/code&gt; includes the &lt;code&gt;uint32_t id&lt;/code&gt; that was used to declare the element. If unique ids are used, these can be mapped to persistent graphics objects across multiple frames / layouts.&lt;/li&gt; 
 &lt;li&gt;Render commands are culled automatically to only currently visible elements, and &lt;code&gt;Clay_RenderCommand&lt;/code&gt; is a small enough struct that you can simply compare the memory of two render commands with matching IDs to determine if the element is &quot;dirty&quot; and needs to be re-rendered or updated.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a worked example, see the provided &lt;a href=&quot;https://github.com/nicbarker/clay/raw/main/renderers/web/html/clay-html-renderer.html&quot;&gt;HTML renderer&lt;/a&gt;. This renderer converts clay layouts into persistent HTML documents with minimal changes per frame.&lt;/p&gt; 
&lt;h3&gt;Visibility Culling&lt;/h3&gt; 
&lt;p&gt;Clay provides a built-in visibility-culling mechanism that is &lt;strong&gt;enabled by default&lt;/strong&gt;. It will only output render commands for elements that are visible - that is, &lt;strong&gt;at least one pixel of their bounding box is inside the viewport.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This culling mechanism can be disabled via the use of the &lt;code&gt;#define CLAY_DISABLE_CULLING&lt;/code&gt; directive. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#preprocessor-directives&quot;&gt;Preprocessor Directives&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Preprocessor Directives&lt;/h3&gt; 
&lt;p&gt;Clay supports C preprocessor directives to modulate functionality at compile time. These can be set either in code using &lt;code&gt;#define CLAY_DISABLE_CULLING&lt;/code&gt; or on the command line when compiling using the appropriate compiler specific arguments, e.g. &lt;code&gt;clang -DCLAY_DISABLE_CULLING main.c ...&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The supported directives are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_WASM&lt;/code&gt; - Required when targeting Web Assembly.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_DLL&lt;/code&gt; - Required when creating a .Dll file.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bindings for non C&lt;/h3&gt; 
&lt;p&gt;Clay is usable out of the box as a &lt;code&gt;.h&lt;/code&gt; include in both C99 and C++20 with designated initializer support. There are also supported bindings for other languages, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicbarker/clay/tree/main/bindings/odin&quot;&gt;Odin Bindings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/clay-ui-rs/clay&quot;&gt;Rust Bindings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debug Tools&lt;/h3&gt; 
&lt;p&gt;Clay includes built-in UI debugging tools, similar to the &quot;inspector&quot; in browsers such as Chrome or Firefox. These tools are included in &lt;code&gt;clay.h&lt;/code&gt;, and work by injecting additional render commands into the output &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rendercommandarray&quot;&gt;Clay_RenderCommandArray&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;As long as the renderer that you&#39;re using works correctly, no additional setup or configuration is required to use the debug tools.&lt;/p&gt; 
&lt;p&gt;To enable the debug tools, use the function &lt;code&gt;Clay_SetDebugModeEnabled(bool enabled)&lt;/code&gt;. This boolean is persistent and does not need to be set every frame.&lt;/p&gt; 
&lt;p&gt;The debug tooling by default will render as a panel to the right side of the screen, compressing your layout by its width. The default width is 400 and is currently configurable via the direct mutation of the internal variable &lt;code&gt;Clay__debugViewWidth&lt;/code&gt;, however this is an internal API and is potentially subject to change.&lt;/p&gt; 
&lt;img width=&quot;1506&quot; alt=&quot;Screenshot 2024-09-12 at 12 54 03 PM&quot; src=&quot;https://github.com/user-attachments/assets/2d122658-3305-4e27-88d6-44f08c0cb4e6&quot;&gt; 
&lt;p&gt;&lt;em&gt;The official Clay website with debug tooling visible&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Running more than one Clay instance&lt;/h3&gt; 
&lt;p&gt;Clay allows you to run more than one instance in a program. To do this, &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_initialize&quot;&gt;Clay_Initialize&lt;/a&gt; returns a &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_context&quot;&gt;Clay_Context*&lt;/a&gt; reference. You can activate a specific instance using &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setcurrentcontext&quot;&gt;Clay_SetCurrentContext&lt;/a&gt;. If &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setcurrentcontext&quot;&gt;Clay_SetCurrentContext&lt;/a&gt; is not called, then Clay will default to using the context from the most recently called &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_initialize&quot;&gt;Clay_Initialize&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;⚠ Important: Do not render instances across different threads simultaneously, as Clay does not currently support proper multi-threading.&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// Define separate arenas for the instances.
Clay_Arena arena1, arena2;
// ... allocate arenas

// Initialize both instances, storing the context for each one.
Clay_Context* instance1 = Clay_Initialize(arena1, layoutDimensions, errorHandler);
Clay_Context* instance2 = Clay_Initialize(arena2, layoutDimensions, errorHandler);

// In the program&#39;s render function, activate each instance before executing clay commands and macros.
Clay_SetCurrentContext(instance1);
Clay_BeginLayout();
// ... declare layout for instance1
Clay_RenderCommandArray renderCommands1 = Clay_EndLayout();
render(renderCommands1);

// Switch to the second instance
Clay_SetCurrentContext(instance2);
Clay_BeginLayout();
// ... declare layout for instance2
Clay_RenderCommandArray renderCommands2 = Clay_EndLayout();
render(renderCommands2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;API&lt;/h1&gt; 
&lt;h3&gt;Naming Conventions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&quot;&lt;strong&gt;CAPITAL_LETTERS()&lt;/strong&gt;&quot; are used for macros.&lt;/li&gt; 
 &lt;li&gt;&quot;&lt;strong&gt;Clay__&lt;/strong&gt;&quot; (&quot;Clay&quot; followed by &lt;strong&gt;double&lt;/strong&gt; underscore) is used for internal functions that are not intended for use and are subject to change.&lt;/li&gt; 
 &lt;li&gt;&quot;&lt;strong&gt;Clay_&lt;/strong&gt;&quot; (&quot;Clay&quot; followed by &lt;strong&gt;single&lt;/strong&gt; underscore) is used for external functions that can be called by the user.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Public Functions&lt;/h2&gt; 
&lt;h3&gt;Lifecycle for public functions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;At startup / initialization time, run once&lt;/strong&gt; &lt;code&gt;Clay_MinMemorySize&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_CreateArenaWithCapacityAndMemory&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_Initialize&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_SetMeasureTextFunction&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Each Frame&lt;/strong&gt; &lt;code&gt;Clay_SetLayoutDimensions&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_SetPointerState&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_UpdateScrollContainers&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_BeginLayout&lt;/code&gt; -&amp;gt; &lt;code&gt;CLAY() etc...&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_EndLayout&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_MinMemorySize&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;uint32_t Clay_MinMemorySize()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Returns the minimum amount of memory &lt;strong&gt;in bytes&lt;/strong&gt; that clay needs to accommodate the current &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#preprocessor-directives&quot;&gt;CLAY_MAX_ELEMENT_COUNT&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_CreateArenaWithCapacityAndMemory&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_Arena Clay_CreateArenaWithCapacityAndMemory(uint32_t capacity, void *offset)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Creates a &lt;code&gt;Clay_Arena&lt;/code&gt; struct with the given capacity and base memory pointer, which can be passed to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_initialize&quot;&gt;Clay_Initialize&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_SetMeasureTextFunction&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_SetMeasureTextFunction(Clay_Dimensions (*measureTextFunction)(Clay_StringSlice text, Clay_TextElementConfig *config, uintptr_t userData), uintptr_t userData)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Takes a pointer to a function that can be used to measure the &lt;code&gt;width, height&lt;/code&gt; dimensions of a string. Used by clay during layout to determine &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_text&quot;&gt;CLAY_TEXT&lt;/a&gt; element sizing and wrapping.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note 1: This string is not guaranteed to be null terminated.&lt;/strong&gt; Clay saves significant performance overhead by using slices when wrapping text instead of having to clone new null terminated strings. If your renderer does not support &lt;strong&gt;ptr, length&lt;/strong&gt; style strings (e.g. Raylib), you will need to clone this to a new C string before rendering.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note 2: It is essential that this function is as fast as possible.&lt;/strong&gt; For text heavy use-cases this function is called many times, and despite the fact that clay caches text measurements internally, it can easily become the dominant overall layout cost if the provided function is slow. &lt;strong&gt;This is on the hot path!&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_ResetMeasureTextCache&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_ResetMeasureTextCache(void)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Clay caches measurements from the provided MeasureTextFunction, and this will be sufficient for the majority of use-cases. However, if the measurements can depend on external factors that clay does not know about, like DPI changes, then the cached values may be incorrect. When one of these external factors changes, Clay_ResetMeasureTextCache can be called to force clay to recalculate all string measurements in the next frame.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_SetMaxElementCount&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_SetMaxElementCount(uint32_t maxElementCount)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Sets the internal maximum element count that will be used in subsequent &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_initialize&quot;&gt;Clay_Initialize()&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_minmemorysize&quot;&gt;Clay_MinMemorySize()&lt;/a&gt; calls, allowing clay to allocate larger UI hierarchies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note: You will need to reinitialize clay, after calling &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_minmemorysize&quot;&gt;Clay_MinMemorySize()&lt;/a&gt; to calculate updated memory requirements.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_SetMaxMeasureTextCacheWordCount&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_SetMaxMeasureTextCacheWordCount(uint32_t maxMeasureTextCacheWordCount)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Sets the internal text measurement cache size that will be used in subsequent &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_initialize&quot;&gt;Clay_Initialize()&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_minmemorysize&quot;&gt;Clay_MinMemorySize()&lt;/a&gt; calls, allowing clay to allocate more text. The value represents how many separate words can be stored in the text measurement cache.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note: You will need to reinitialize clay, after calling &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_minmemorysize&quot;&gt;Clay_MinMemorySize()&lt;/a&gt; to calculate updated memory requirements.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_Initialize&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_Context* Clay_Initialize(Clay_Arena arena, Clay_Dimensions layoutDimensions, Clay_ErrorHandler errorHandler)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Initializes the internal memory mapping, sets the internal dimensions for layout, and binds an error handler for clay to use when something goes wrong. Returns a &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_context&quot;&gt;Clay_Context*&lt;/a&gt; that can optionally be given to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setcurrentcontext&quot;&gt;Clay_SetCurrentContext&lt;/a&gt; to allow running multiple instances of clay in the same program, and sets it as the current context. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#running-more-than-one-clay-instance&quot;&gt;Running more than one Clay instance&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Reference: &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_createarenawithcapacityandmemory&quot;&gt;Clay_Arena&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_errorhandler&quot;&gt;Clay_ErrorHandler&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setcurrentcontext&quot;&gt;Clay_SetCurrentContext&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_SetCurrentContext&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_SetCurrentContext(Clay_Context* context)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Sets the context that subsequent clay commands will operate on. You can get this reference from &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_initialize&quot;&gt;Clay_Initialize&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_getcurrentcontext&quot;&gt;Clay_GetCurrentContext&lt;/a&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#running-more-than-one-clay-instance&quot;&gt;Running more than one Clay instance&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_GetCurrentContext&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_Context* Clay_GetCurrentContext()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Returns the context that clay commands are currently operating on, or null if no context has been set. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#running-more-than-one-clay-instance&quot;&gt;Running more than one Clay instance&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_SetLayoutDimensions&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_SetLayoutDimensions(Clay_Dimensions dimensions)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Sets the internal layout dimensions. Cheap enough to be called every frame with your screen dimensions to automatically respond to window resizing, etc.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_SetPointerState&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_SetPointerState(Clay_Vector2 position, bool isPointerDown)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Sets the internal pointer position and state (i.e. current mouse / touch position) and recalculates overlap info, which is used for mouseover / click calculation (via &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_pointerover&quot;&gt;Clay_PointerOver&lt;/a&gt; and updating scroll containers with &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_updatescrollcontainers&quot;&gt;Clay_UpdateScrollContainers&lt;/a&gt;. &lt;strong&gt;isPointerDown should represent the current state this frame, e.g. it should be &lt;code&gt;true&lt;/code&gt; for the entire duration the left mouse button is held down.&lt;/strong&gt; Clay has internal handling for detecting click / touch start &amp;amp; end.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_UpdateScrollContainers&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_UpdateScrollContainers(bool enableDragScrolling, Clay_Vector2 scrollDelta, float deltaTime)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This function handles scrolling of containers. It responds to both &lt;code&gt;scrollDelta&lt;/code&gt;, which represents mouse wheel or trackpad scrolling this frame, as well as &quot;touch scrolling&quot; on mobile devices, or &quot;drag scrolling&quot; with a mouse or similar device.&lt;/p&gt; 
&lt;p&gt;Touch / drag scrolling only occurs if the &lt;code&gt;enableDragScrolling&lt;/code&gt; parameter is &lt;code&gt;true&lt;/code&gt;, &lt;strong&gt;and&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setpointerstate&quot;&gt;Clay_SetPointerState&lt;/a&gt; has been called this frame. As a result, you can simply always call it with &lt;code&gt;false&lt;/code&gt; as the first argument if you want to disable touch scrolling.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;deltaTime&lt;/code&gt; is the time &lt;strong&gt;in seconds&lt;/strong&gt; since the last frame (e.g. 0.016 is &lt;strong&gt;16 milliseconds&lt;/strong&gt;), and is used to normalize &amp;amp; smooth scrolling across different refresh rates.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_BeginLayout&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_BeginLayout()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Prepares clay to calculate a new layout. Called each frame / layout &lt;strong&gt;before&lt;/strong&gt; any of the &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#element-macros&quot;&gt;Element Macros&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_EndLayout&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_RenderCommandArray Clay_EndLayout()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Ends declaration of element macros and calculates the results of the current layout. Renders a &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rendercommandarray&quot;&gt;Clay_RenderCommandArray&lt;/a&gt; containing the results of the layout calculation.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_Hovered&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bool Clay_Hovered()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Called &lt;strong&gt;during&lt;/strong&gt; layout declaration, and returns &lt;code&gt;true&lt;/code&gt; if the pointer position previously set with &lt;code&gt;Clay_SetPointerState&lt;/code&gt; is inside the bounding box of the currently open element. Note: this is based on the element&#39;s position from the &lt;strong&gt;last&lt;/strong&gt; frame.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_OnHover&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;void Clay_OnHover(void (*onHoverFunction)(Clay_ElementId elementId, Clay_PointerData pointerData, intptr_t userData), intptr_t userData)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Called &lt;strong&gt;during&lt;/strong&gt; layout declaration, this function allows you to attach a function pointer to the currently open element that will be called once per layout if the pointer position previously set with &lt;code&gt;Clay_SetPointerState&lt;/code&gt; is inside the bounding box of the currently open element. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_pointerdata&quot;&gt;Clay_PointerData&lt;/a&gt; for more information on the &lt;code&gt;pointerData&lt;/code&gt; argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;void HandleButtonInteraction(Clay_ElementId elementId, Clay_PointerData pointerData, intptr_t userData) {
    ButtonData *buttonData = (ButtonData *)userData;
    // Pointer state allows you to detect mouse down / hold / release
    if (pointerData.state == CLAY_POINTER_DATA_PRESSED_THIS_FRAME) {
        // Do some click handling
        NavigateTo(buttonData-&amp;gt;link);
    }
}

ButtonData linkButton = (ButtonData) { .link = &quot;https://github.com/nicbarker/clay&quot; };

// HandleButtonInteraction will be called for each frame the mouse / pointer / touch is inside the button boundaries
CLAY({ .layout = { .padding = CLAY_PADDING_ALL(8) } }) {
    Clay_OnHover(HandleButtonInteraction, &amp;amp;buttonData);
    CLAY_TEXT(CLAY_STRING(&quot;Button&quot;), &amp;amp;headerTextConfig);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_PointerOver&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bool Clay_PointerOver(Clay_ElementId id)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the pointer position previously set with &lt;code&gt;Clay_SetPointerState&lt;/code&gt; is inside the bounding box of the layout element with the provided &lt;code&gt;id&lt;/code&gt;. Note: this is based on the element&#39;s position from the &lt;strong&gt;last&lt;/strong&gt; frame. If frame-accurate pointer overlap detection is required, perhaps in the case of significant change in UI layout between frames, you can simply run your layout code twice that frame. The second call to &lt;code&gt;Clay_PointerOver&lt;/code&gt; will be frame-accurate.&lt;/p&gt; 
&lt;h3&gt;Clay_GetScrollContainerData&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ScrollContainerData Clay_GetScrollContainerData(Clay_ElementId id)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Returns &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_scrollcontainerdata&quot;&gt;Clay_ScrollContainerData&lt;/a&gt; for the scroll container matching the provided ID. This function allows imperative manipulation of scroll position, allowing you to build things such as scroll bars, buttons that &quot;jump&quot; to somewhere in a scroll container, etc.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_GetElementData&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementData Clay_GetElementData(Clay_ElementId id)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Returns &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementdata&quot;&gt;Clay_ElementData&lt;/a&gt; for the element matching the provided ID. Used to retrieve information about elements such as their final calculated bounding box.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_GetElementId&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId Clay_GetElementId(Clay_String idString)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Returns a &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementid&quot;&gt;Clay_ElementId&lt;/a&gt; for the provided id string, used for querying element info such as mouseover state, scroll container data, etc.&lt;/p&gt; 
&lt;h2&gt;Element Macros&lt;/h2&gt; 
&lt;h3&gt;CLAY()&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY(...configuration) { ...children }&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Lifecycle&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Clay_BeginLayout()&lt;/code&gt; -&amp;gt; &lt;code&gt;CLAY()&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_EndLayout()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;CLAY&lt;/strong&gt; opens a generic empty container, that is configurable and supports nested children. &lt;strong&gt;CLAY&lt;/strong&gt; requires a parameter, so if you want to create an element without any configuration, use &lt;code&gt;CLAY(0)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Define an element with 16px of x and y padding
CLAY({ .id = CLAY_ID(&quot;Outer&quot;), .layout = { .padding = CLAY_PADDING_ALL(16) } }) {
    // A nested child element
    CLAY({ .id = CLAY_ID(&quot;SideBar&quot;), .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM, .childGap = 16 } }) {
        // Children laid out top to bottom with a 16 px gap between them
    }
    // A vertical scrolling container with a colored background
    CLAY({
        .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM, .childGap = 16 },
        .backgroundColor = { 200, 200, 100, 255 },
        .cornerRadius = CLAY_CORNER_RADIUS(10),
        .scroll = { .vertical = true }
    }) {
        // child elements
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_TEXT()&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY_TEXT(Clay_String textContents, Clay_TextElementConfig *textConfig);&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Lifecycle&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Clay_BeginLayout()&lt;/code&gt; -&amp;gt; &lt;code&gt;CLAY_TEXT()&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_EndLayout()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TEXT&lt;/strong&gt; is a measured, auto-wrapped text element. It uses &lt;code&gt;Clay_TextElementConfig&lt;/code&gt; to configure text specific options.&lt;/p&gt; 
&lt;p&gt;Note that &lt;code&gt;Clay_TextElementConfig&lt;/code&gt; uses &lt;code&gt;uint32_t fontId&lt;/code&gt;. Font ID to font asset mapping is managed in user code and passed to render commands.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Struct API (Pseudocode)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// CLAY_TEXT(text, CLAY_TEXT_CONFIG({ .member = value })) supports these options
Clay_TextElementConfig {
    Clay_Color textColor {
        float r; float g; float b; float a;
    };
    uint16_t fontId;
    uint16_t fontSize;
    uint16_t letterSpacing;
    uint16_t lineHeight;
    Clay_TextElementConfigWrapMode wrapMode {
        CLAY_TEXT_WRAP_WORDS (default),
        CLAY_TEXT_WRAP_NEWLINES,
        CLAY_TEXT_WRAP_NONE,
    };
    bool hashStringContents
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.textColor&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY_TEXT_CONFIG(.textColor = {120, 120, 120, 255})&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_color&quot;&gt;Clay_Color&lt;/a&gt;. Conventionally accepts &lt;code&gt;rgba&lt;/code&gt; float values between 0 and 255, but interpretation is left up to the renderer and does not affect layout.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.fontId&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY_TEXT_CONFIG(.fontId = FONT_ID_LATO)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;It&#39;s up to the user to load fonts and create a mapping from &lt;code&gt;fontId&lt;/code&gt; to a font that can be measured and rendered.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.fontSize&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY_TEXT_CONFIG(.fontSize = 16)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Font size is generally thought of as &lt;code&gt;x pixels tall&lt;/code&gt;, but interpretation is left up to the user &amp;amp; renderer.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.letterSpacing&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY_TEXT_CONFIG(.letterSpacing = 1)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.letterSpacing&lt;/code&gt; results in &lt;strong&gt;horizontal&lt;/strong&gt; white space between individual rendered characters.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.lineHeight&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY_TEXT_CONFIG(.lineHeight = 20)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.lineHeight&lt;/code&gt; - when non zero - forcibly sets the &lt;code&gt;height&lt;/code&gt; of each wrapped line of text to &lt;code&gt;.lineheight&lt;/code&gt; pixels tall. Will affect the layout of both parents and siblings. A value of &lt;code&gt;0&lt;/code&gt; will use the measured height of the font.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.wrapMode&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY_TEXT_CONFIG(.wrapMode = CLAY_TEXT_WRAP_NONE)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.wrapMode&lt;/code&gt; specifies under what conditions text should &lt;a href=&quot;https://en.wikipedia.org/wiki/Line_wrap_and_word_wrap&quot;&gt;wrap&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Available options are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_TEXT_WRAP_WORDS&lt;/code&gt; (default) - Text will wrap on whitespace characters as container width shrinks, preserving whole words.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_TEXT_WRAP_NEWLINES&lt;/code&gt; - will only wrap when encountering newline characters.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_TEXT_WRAP_NONE&lt;/code&gt; - Text will never wrap even if its container is compressed beyond the text measured width.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.hashStringContents&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY_TEXT_CONFIG(.hashStringContents = true)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;By default, clay will cache the dimensions of text measured by &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setmeasuretextfunction&quot;&gt;the provided MeasureText function&lt;/a&gt; based on the string&#39;s pointer and length. Setting &lt;code&gt;.hashStringContents = true&lt;/code&gt; will cause Clay to hash the entire string contents. Used to fix incorrect measurements caused by re-use of string memory, disabled by default as it will incur significant performance overhead for very large bodies of text.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Define a font somewhere in your code
const uint32_t FONT_ID_LATO = 3;
// ..
CLAY_TEXT(CLAY_STRING(&quot;John Smith&quot;), CLAY_TEXT_CONFIG({ .fontId = FONT_ID_LATO, .fontSize = 24, .textColor = {255, 0, 0, 255} }));
// Rendering example
Font fontToUse = LoadedFonts[renderCommand-&amp;gt;renderData.text-&amp;gt;fontId];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Rendering&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Element is subject to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#visibility-culling&quot;&gt;culling&lt;/a&gt;. Otherwise, multiple &lt;code&gt;Clay_RenderCommand&lt;/code&gt;s with &lt;code&gt;commandType = CLAY_RENDER_COMMAND_TYPE_TEXT&lt;/code&gt; may be created, one for each wrapped line of text.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Clay_RenderCommand.textContent&lt;/code&gt; will be populated with a &lt;code&gt;Clay_String&lt;/code&gt; &lt;em&gt;slice&lt;/em&gt; of the original string passed in (i.e. wrapping doesn&#39;t reallocate, it just returns a &lt;code&gt;Clay_String&lt;/code&gt; pointing to the start of the new line with a &lt;code&gt;length&lt;/code&gt;)&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_ID&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId CLAY_ID(STRING_LITERAL idString)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;CLAY_ID()&lt;/strong&gt; is used to generate and attach a &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementid&quot;&gt;Clay_ElementId&lt;/a&gt; to a layout element during declaration.&lt;/p&gt; 
&lt;p&gt;Note this macro only works with String literals and won&#39;t compile if used with a &lt;code&gt;char*&lt;/code&gt; variable. To use a heap allocated &lt;code&gt;char*&lt;/code&gt; string as an ID, use &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_sid&quot;&gt;CLAY_SID&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To regenerate the same ID outside of layout declaration when using utility functions such as &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_pointerover&quot;&gt;Clay_PointerOver&lt;/a&gt;, use the &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_getelementid&quot;&gt;Clay_GetElementId&lt;/a&gt; function.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Tag a button with the Id &quot;Button&quot;
CLAY({
    .id = CLAY_ID(&quot;Button&quot;),
    .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM, .sizing = { .width = CLAY_SIZING_GROW(0) }, .padding = CLAY_PADDING_ALL(16), .childGap = 16 }
}) {
    // ...children
}

// Later on outside of layout code
bool buttonIsHovered = Clay_IsPointerOver(Clay_GetElementId(&quot;Button&quot;));
if (buttonIsHovered &amp;amp;&amp;amp; leftMouseButtonPressed) {
    // ... do some click handling
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_SID()&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId CLAY_SID(Clay_String idString)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A version of &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt; that can be used with heap allocated &lt;code&gt;char *&lt;/code&gt; data. The underlying &lt;code&gt;char&lt;/code&gt; data will not be copied internally and should live until at least the next frame.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_IDI()&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId CLAY_IDI(STRING_LITERAL idString, int32_t index)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;An offset version of &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt;. Generates a &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementid&quot;&gt;Clay_ElementId&lt;/a&gt; string id from the provided &lt;code&gt;char *label&lt;/code&gt;, combined with the &lt;code&gt;int index&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Used for generating ids for sequential elements (such as in a &lt;code&gt;for&lt;/code&gt; loop) without having to construct dynamic strings at runtime.&lt;/p&gt; 
&lt;p&gt;Note this macro only works with String literals and won&#39;t compile if used with a &lt;code&gt;char*&lt;/code&gt; variable. To use a heap allocated &lt;code&gt;char*&lt;/code&gt; string as an ID, use &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_sidi&quot;&gt;CLAY_SIDI&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_SIDI()&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId CLAY_SIDI(Clay_String idString, int32_t index)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A version of &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI&lt;/a&gt; that can be used with heap allocated &lt;code&gt;char *&lt;/code&gt; data. The underlying &lt;code&gt;char&lt;/code&gt; data will not be copied internally and should live until at least the next frame.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_ID_LOCAL()&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId CLAY_ID_LOCAL(STRING_LITERAL idString)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Lifecycle&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Clay_BeginLayout()&lt;/code&gt; -&amp;gt; &lt;code&gt;CLAY(&lt;/code&gt; -&amp;gt; &lt;code&gt;CLAY_ID_LOCAL()&lt;/code&gt; -&amp;gt; &lt;code&gt;)&lt;/code&gt; -&amp;gt; &lt;code&gt;Clay_EndLayout()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;CLAY_ID_LOCAL()&lt;/strong&gt; is used to generate and attach a &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementid&quot;&gt;Clay_ElementId&lt;/a&gt; to a layout element during declaration.&lt;/p&gt; 
&lt;p&gt;Unlike &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt; which needs to be globally unique, a local ID is based on the ID of it&#39;s parent and only needs to be unique among its siblings.&lt;/p&gt; 
&lt;p&gt;As a result, local id is suitable for use in reusable components and loops.&lt;/p&gt; 
&lt;p&gt;Note this macro only works with String literals and won&#39;t compile if used with a &lt;code&gt;char*&lt;/code&gt; variable. To use a heap allocated &lt;code&gt;char*&lt;/code&gt; string as an ID, use &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_sid_local&quot;&gt;CLAY_SID_LOCAL&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;void RenderHeaderButton(ButtonData button) {
    CLAY({
        .id = CLAY_ID_LOCAL(&quot;HeaderButton&quot;),
        .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM, .sizing = { .width = CLAY_SIZING_GROW(0) }, .padding = CLAY_PADDING_ALL(16), .childGap = 16 }
    }) {
        // ...children
    }
}

for (int i = 0; i &amp;lt; headerButtons.length; i++) {
    RenderHeaderButton(headerButtons.items[i]);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_SID_LOCAL()&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId CLAY_SID_LOCAL(Clay_String idString)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A version of &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id_local&quot;&gt;CLAY_ID_LOCAL&lt;/a&gt; that can be used with heap allocated &lt;code&gt;char *&lt;/code&gt; data. The underlying &lt;code&gt;char&lt;/code&gt; data will not be copied internally and should live until at least the next frame.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_IDI_LOCAL()&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId CLAY_IDI_LOCAL(STRING_LITERAL idString, int32_t index)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;An offset version of &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_local_id&quot;&gt;CLAY_ID_LOCAL&lt;/a&gt;. Generates a &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementid&quot;&gt;Clay_ElementId&lt;/a&gt; string id from the provided &lt;code&gt;char *label&lt;/code&gt;, combined with the &lt;code&gt;int index&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Used for generating ids for sequential elements (such as in a &lt;code&gt;for&lt;/code&gt; loop) without having to construct dynamic strings at runtime.&lt;/p&gt; 
&lt;p&gt;Note this macro only works with String literals and won&#39;t compile if used with a &lt;code&gt;char*&lt;/code&gt; variable. To use a heap allocated &lt;code&gt;char*&lt;/code&gt; string as an ID, use &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_sidi_local&quot;&gt;CLAY_SIDI_LOCAL&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;CLAY_SIDI_LOCAL()&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Clay_ElementId CLAY_SIDI_LOCAL(Clay_String idString, int32_t index)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A version of &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi_local&quot;&gt;CLAY_IDI_LOCAL&lt;/a&gt; that can be used with heap allocated &lt;code&gt;char *&lt;/code&gt; data. The underlying &lt;code&gt;char&lt;/code&gt; data will not be copied internally and should live until at least the next frame.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Data Structures &amp;amp; Definitions&lt;/h2&gt; 
&lt;h3&gt;Clay_ElementDeclaration&lt;/h3&gt; 
&lt;p&gt;The &lt;strong&gt;Clay_ElementDeclaration&lt;/strong&gt; struct is the only argument to the &lt;code&gt;CLAY()&lt;/code&gt; macro and provides configuration options for layout elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    Clay_ElementId id;
    Clay_LayoutConfig layout;
    Clay_Color backgroundColor;
    Clay_CornerRadius cornerRadius;
    Clay_ImageElementConfig image;
    Clay_FloatingElementConfig floating;
    Clay_CustomElementConfig custom;
    Clay_ScrollElementConfig scroll;
    Clay_BorderElementConfig border;
    void *userData;
} Clay_ElementDeclaration;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.id&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_ElementID&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .id = CLAY_ID(&quot;FileButton&quot;) })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_elementid&quot;&gt;Clay_ElementId&lt;/a&gt;. Tags the element with an ID that can be later used to query data about the element, and gives it a human readable name in the debug tools. IDs are typically generated using the &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id_local&quot;&gt;CLAY_ID_LOCAL&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi_local&quot;&gt;CLAY_IDI_LOCAL&lt;/a&gt; macros.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.layout&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_LayoutConfig&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .layout = { .padding = { 16, 16, 12, 12 }, .layoutDirection = CLAY_TOP_TO_BOTTOM } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_layoutconfig&quot;&gt;Clay_LayoutConfig&lt;/a&gt;. Controls various settings related to &lt;em&gt;layout&lt;/em&gt;, which can be thought of as &quot;the size and position of this element and its children&quot;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.backgroundColor&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Color&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .backgroundColor = {120, 120, 120, 255} } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_color&quot;&gt;Clay_Color&lt;/a&gt;. Conventionally accepts &lt;code&gt;rgba&lt;/code&gt; float values between 0 and 255, but interpretation is left up to the renderer and does not affect layout.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.cornerRadius&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;float&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .cornerRadius = { .topLeft = 16, .topRight = 16, .bottomLeft = 16, .bottomRight = 16 } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Defines the radius in pixels for the arc of rectangle corners (&lt;code&gt;0&lt;/code&gt; is square, &lt;code&gt;rectangle.width / 2&lt;/code&gt; is circular).&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;CLAY_CORNER_RADIUS(radius)&lt;/code&gt; function-like macro is available to provide short hand for setting all four corner radii to the same value. e.g. &lt;code&gt;CLAY_BORDER({ .cornerRadius = CLAY_CORNER_RADIUS(10) })&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.image&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_ImageElementConfig&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .image = { .imageData = &amp;amp;myImage, .sourceDimensions = { 640, 480 } } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_imageelementconfig&quot;&gt;Clay_ImageElementConfig&lt;/a&gt;. Configures the element as an image element. Causes a render command with type &lt;code&gt;IMAGE&lt;/code&gt; to be emitted.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.floating&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_FloatingElementConfig&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { .attachTo = CLAY_ATTACH_TO_PARENT } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_floatingelementconfig&quot;&gt;Clay_FloatingElementConfig&lt;/a&gt;. Configures the element as an floating element, which allows it to stack &quot;in front&quot; and &quot;on top&quot; of other elements without affecting sibling or parent size or position.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.custom&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_CustomElementConfig&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .custom = { .customData = &amp;amp;my3DModel } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_customelementconfig&quot;&gt;Clay_CustomElementConfig&lt;/a&gt;. Configures the element as a custom element, which allows you to pass custom data through to the renderer. Causes a render command with type &lt;code&gt;CUSTOM&lt;/code&gt; to be emitted.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.scroll&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_ScrollElementConfig&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .scroll = { .vertical = true } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_scrollelementconfig&quot;&gt;Clay_ScrollElementConfig&lt;/a&gt;. Configures the element as a scroll element, which causes child elements to be clipped / masked if they overflow, and together with &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_updatescrollcontainers&quot;&gt;Clay_UpdateScrollContainer&lt;/a&gt; enables scrolling of child contents.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.border&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_BorderElementConfig&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .border = { .width = { .left = 5 }, .color = COLOR_BLUE } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_borderelementconfig&quot;&gt;Clay_BorderElementConfig&lt;/a&gt;. Configures the element as a border element, which instructs the renderer to draw coloured border lines along the perimeter of this element&#39;s bounding box. Causes a render command with type &lt;code&gt;BORDER&lt;/code&gt; to be emitted.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.userData&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;void *&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .userData = &amp;amp;extraData })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Transparently passes a pointer through to the corresponding &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rendercommand&quot;&gt;Clay_RenderCommands&lt;/a&gt;s generated by this element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Declare a reusable rectangle config, with a purple color and 10px rounded corners
Clay_RectangleElementConfig rectangleConfig = (Clay_RectangleElementConfig) { .color = { 200, 200, 100, 255 }, .cornerRadius = CLAY_CORNER_RADIUS(10) };
// Declare a rectangle element using a reusable config
CLAY(rectangleConfig)) {}
// Declare a retangle element using an inline config
CLAY({ .color = { 200, 200, 100, 255 }, .cornerRadius = CLAY_CORNER_RADIUS(10) })) {
    // child elements
}
// Declare a scrolling container with a colored background
CLAY({ 
    .backgroundColor = { 200, 200, 100, 255 }, 
    .cornerRadius = CLAY_CORNER_RADIUS(10)
    CLAY_SCROLL({ .vertical = true })
) {
    // child elements
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Element is subject to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#visibility-culling&quot;&gt;culling&lt;/a&gt;. Otherwise, a single &lt;code&gt;Clay_RenderCommand&lt;/code&gt;s with &lt;code&gt;commandType = CLAY_RENDER_COMMAND_TYPE_RECTANGLE&lt;/code&gt; will be created, with &lt;code&gt;renderCommand-&amp;gt;elementConfig.rectangleElementConfig&lt;/code&gt; containing a pointer to the element&#39;s Clay_RectangleElementConfig.&lt;/p&gt; 
&lt;h3&gt;Clay_LayoutConfig&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Clay_LayoutConfig&lt;/strong&gt; is used for configuring &lt;em&gt;layout&lt;/em&gt; options (i.e. options that affect the final position and size of an element, its parents, siblings, and children)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Struct API (Pseudocode)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// CLAY({ .layout = { ...fields } }) supports these options
Clay_LayoutConfig {
    Clay_LayoutDirection layoutDirection = CLAY_LEFT_TO_RIGHT (default) | CLAY_TOP_TO_BOTTOM;
    Clay_Padding padding {
        u16 left; u16 right; u16 top; u16 bottom; 
    };
    uint16_t childGap;
    Clay_ChildAlignment childAlignment {
        .x = CLAY_ALIGN_X_LEFT (default) | CLAY_ALIGN_X_CENTER | CLAY_ALIGN_X_RIGHT;
        .y = CLAY_ALIGN_Y_TOP (default) | CLAY_ALIGN_Y_CENTER | CLAY_ALIGN_Y_BOTTOM;
    };
    Clay_Sizing sizing { // Recommended to use the provided macros here - see #sizing for more in depth explanation
        .width = CLAY_SIZING_FIT(float min, float max) (default) | CLAY_SIZING_GROW(float min, float max) | CLAY_SIZING_FIXED(float width) | CLAY_SIZING_PERCENT(float percent)
        .height = CLAY_SIZING_FIT(float min, float max) (default) | CLAY_SIZING_GROW(float min, float max) | CLAY_SIZING_FIXED(float height) | CLAY_SIZING_PERCENT(float percent)
    }; // See CLAY_SIZING_GROW() etc for more details
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.layoutDirection&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_LayoutDirection&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Controls the axis / direction in which child elements are laid out. Available options are &lt;code&gt;CLAY_LEFT_TO_RIGHT&lt;/code&gt; (default) and &lt;code&gt;CLAY_TOP_TO_BOTTOM&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Did you know that &quot;left to right&quot; and &quot;top to bottom&quot; both have 13 letters?&lt;/em&gt;&lt;/p&gt; 
&lt;img width=&quot;580&quot; alt=&quot;Screenshot 2024-08-22 at 11 10 27 AM&quot; src=&quot;https://github.com/user-attachments/assets/7008aa47-8826-4338-9257-8bc83f7813ce&quot;&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.padding&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Padding&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .layout = { .padding = { .left = 16, .right = 16, .top = 8, .bottom = 8 } } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Controls white-space &quot;padding&quot; around the &lt;strong&gt;outside&lt;/strong&gt; of child elements.&lt;/p&gt; 
&lt;img width=&quot;486&quot; alt=&quot;Screenshot 2024-08-22 at 10 50 49 AM&quot; src=&quot;https://github.com/user-attachments/assets/b454fa36-92d5-4b1d-bf8b-e4c25428e9de&quot;&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.childGap&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uint16_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .layout = { .childGap = 16 } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Controls the white-space &lt;strong&gt;between&lt;/strong&gt; child elements as they are laid out. When &lt;code&gt;.layoutDirection&lt;/code&gt; is &lt;code&gt;CLAY_LEFT_TO_RIGHT&lt;/code&gt; (default), this will be horizontal space, whereas for &lt;code&gt;CLAY_TOP_TO_BOTTOM&lt;/code&gt; it will be vertical space.&lt;/p&gt; 
&lt;img width=&quot;600&quot; alt=&quot;Screenshot 2024-08-22 at 11 05 15 AM&quot; src=&quot;https://github.com/user-attachments/assets/fa0dae1f-1936-47f6-a299-634bd7d40d58&quot;&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.childAlignment&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_ChildAlignment&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .layout = { .childAlignment = { .x = CLAY_ALIGN_X_LEFT, .y = CLAY_ALIGN_Y_CENTER } } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Controls the alignment of children relative to the height and width of the parent container. Available options are:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;.x = CLAY_ALIGN_X_LEFT (default) | CLAY_ALIGN_X_CENTER | CLAY_ALIGN_X_RIGHT;
.y = CLAY_ALIGN_Y_TOP (default) | CLAY_ALIGN_Y_CENTER | CLAY_ALIGN_Y_BOTTOM;
&lt;/code&gt;&lt;/pre&gt; 
&lt;img width=&quot;1030&quot; alt=&quot;Screenshot 2024-08-22 at 11 25 16 AM&quot; src=&quot;https://github.com/user-attachments/assets/be61b4a7-db4f-447c-b6d6-b2d4a91fc664&quot;&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.sizing&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Sizing&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .layout = { .sizing = { .width = CLAY_SIZING_FIXED(300), .height = CLAY_SIZING_PERCENT(0.5) } } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Controls how final width and height of element are calculated. The same configurations are available for both the &lt;code&gt;.width&lt;/code&gt; and &lt;code&gt;.height&lt;/code&gt; axis. There are several options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;CLAY_SIZING_FIT(float min, float max) (default)&lt;/code&gt; - The element will be sized to fit its children (plus padding and gaps), up to &lt;code&gt;max&lt;/code&gt;. If &lt;code&gt;max&lt;/code&gt; is left unspecified, it will default to &lt;code&gt;FLOAT_MAX&lt;/code&gt;. When elements are compressed to fit into a smaller parent, this element will not shrink below &lt;code&gt;min&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;CLAY_SIZING_GROW(float min, float max)&lt;/code&gt; - The element will grow to fill available space in its parent, up to &lt;code&gt;max&lt;/code&gt;. If &lt;code&gt;max&lt;/code&gt; is left unspecified, it will default to &lt;code&gt;FLOAT_MAX&lt;/code&gt;. When elements are compressed to fit into a smaller parent, this element will not shrink below &lt;code&gt;min&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;CLAY_SIZING_FIXED(float fixed)&lt;/code&gt; - The final size will always be exactly the provided &lt;code&gt;fixed&lt;/code&gt; value. Shorthand for &lt;code&gt;CLAY_SIZING_FIT(fixed, fixed)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;CLAY_SIZING_PERCENT(float percent)&lt;/code&gt; - Final size will be a percentage of parent size, minus padding and child gaps. &lt;code&gt;percent&lt;/code&gt; is assumed to be a float between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width=&quot;1056&quot; alt=&quot;Screenshot 2024-08-22 at 2 10 33 PM&quot; src=&quot;https://github.com/user-attachments/assets/1236efb1-77dc-44cd-a207-7944e0f5e500&quot;&gt; 
&lt;img width=&quot;1141&quot; alt=&quot;Screenshot 2024-08-22 at 2 19 04 PM&quot; src=&quot;https://github.com/user-attachments/assets/a26074ff-f155-4d35-9ca4-9278a64aac00&quot;&gt; 
&lt;p&gt;&lt;strong&gt;Example Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;CLAY({ .id = CLAY_ID(&quot;Button&quot;), .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM, .sizing = { .width = CLAY_SIZING_GROW(0) }, .padding = CLAY_PADDING_ALL(16, .childGap = 16) } }) {
    // Children will be laid out vertically with 16px of padding around and between
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_ImageElementConfig&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .image = { ...image config } }) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Clay_ImageElementConfig&lt;/strong&gt; configures a clay element to render an image as its background.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Struct API (Pseudocode)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;Clay_ImageElementConfig {
    Clay_Dimensions sourceDimensions {
        float width; float height; 
    };
    void * imageData;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.sourceDimensions&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Dimensions&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .image = { .sourceDimensions = { 1024, 768 } } }) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Used to perform &lt;strong&gt;aspect ratio scaling&lt;/strong&gt; on the image element. As of this version of clay, aspect ratio scaling only applies to the &lt;code&gt;height&lt;/code&gt; of an image (i.e. image height will scale with width growth and limitations, but width will not scale with height growth and limitations)&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.imageData&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;void *&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .image = { .imageData = &amp;amp;myImage } }) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.imageData&lt;/code&gt; is a generic void pointer that can be used to pass through image data to the renderer.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Load an image somewhere in your code
YourImage profilePicture = LoadYourImage(&quot;profilePicture.png&quot;);
// Note that when rendering, .imageData will be void* type.
CLAY({ .image = { .imageData = &amp;amp;profilePicture, .sourceDimensions = { 60, 60 } } }) {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Load an image somewhere in your code
YourImage profilePicture = LoadYourImage(&quot;profilePicture.png&quot;);
// Declare a reusable image config
Clay_ImageElementConfig imageConfig = (Clay_ImageElementConfig) { .imageData = &amp;amp;profilePicture, .sourceDimensions = {60, 60} };
// Declare an image element using a reusable config
CLAY({ .image = imageConfig }) {}
// Declare an image element using an inline config
CLAY({ .image = { .imageData = &amp;amp;profilePicture, .sourceDimensions = {60, 60} } }) {}
// Rendering example
YourImage *imageToRender = renderCommand-&amp;gt;elementConfig.imageElementConfig-&amp;gt;imageData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Rendering&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Element is subject to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#visibility-culling&quot;&gt;culling&lt;/a&gt;. Otherwise, a single &lt;code&gt;Clay_RenderCommand&lt;/code&gt;s with &lt;code&gt;commandType = CLAY_RENDER_COMMAND_TYPE_IMAGE&lt;/code&gt; will be created. The user will need to access &lt;code&gt;renderCommand-&amp;gt;renderData.image-&amp;gt;imageData&lt;/code&gt; to retrieve image data referenced during layout creation. It&#39;s also up to the user to decide how / if they wish to blend &lt;code&gt;renderCommand-&amp;gt;renderData.image-&amp;gt;backgroundColor&lt;/code&gt; with the image.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_ScrollElementConfig&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .scroll = { ...scroll config } }) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Clay_ScrollElementConfig&lt;/code&gt; configures the element as a scrolling container, enabling masking of children that extend beyond its boundaries.&lt;/p&gt; 
&lt;p&gt;Note: In order to process scrolling based on pointer position and mouse wheel or touch interactions, you must call &lt;code&gt;Clay_SetPointerState()&lt;/code&gt; and &lt;code&gt;Clay_UpdateScrollContainers()&lt;/code&gt; &lt;em&gt;before&lt;/em&gt; calling &lt;code&gt;BeginLayout&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Struct Definition (Pseudocode)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;Clay_ScrollElementConfig {
    bool horizontal;
    bool vertical;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.horizontal&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;bool&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .scroll = { .horizontal = true } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Enables or disables horizontal scrolling for this container element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.vertical&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;bool&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .scroll = { .vertical = true } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Enables or disables vertical scrolling for this container element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Rendering&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Enabling scroll for an element will result in two additional render commands:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;commandType = CLAY_RENDER_COMMAND_TYPE_SCISSOR_START&lt;/code&gt;, which should create a rectangle mask with its &lt;code&gt;boundingBox&lt;/code&gt; and is &lt;strong&gt;not&lt;/strong&gt; subject to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#visibility-culling&quot;&gt;culling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;commandType = CLAY_RENDER_COMMAND_TYPE_SCISSOR_END&lt;/code&gt;, which disables the previous rectangle mask and is &lt;strong&gt;not&lt;/strong&gt; subject to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#visibility-culling&quot;&gt;culling&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;CLAY({ .scroll = { .vertical = true } }) {
    // Create child content with a fixed height of 5000
    CLAY({ .id = CLAY_ID(&quot;ScrollInner&quot;), .layout = { .sizing = { .height = CLAY_SIZING_FIXED(5000) } } }) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_BorderElementConfig&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .border = { ...border config } }) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Clay_BorderElementConfig&lt;/code&gt; adds borders to the edges or between the children of elements. It uses Clay_BorderElementConfig to configure border specific options.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Struct Definition (Pseudocode)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct Clay_BorderElementConfig
{
    Clay_Color color {
        float r; float g; float b; float a;
    };
    Clay_BorderWidth width {
        uint16_t left;
        uint16_t right;
        uint16_t top;
        uint16_t bottom;
        uint16_t betweenChildren;  
    };
} Clay_BorderElementConfig;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.color&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Color&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .border = { .color = { 255, 0, 0, 255 } } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_color&quot;&gt;Clay_Color&lt;/a&gt;. Specifies the shared color for all borders configured by this element. Conventionally accepts &lt;code&gt;rgba&lt;/code&gt; float values between 0 and 255, but interpretation is left up to the renderer and does not affect layout.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.width&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_BorderWidth&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .border = { .width = { .left = 2, .right = 10 } } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Indicates to the renderer that a border of &lt;code&gt;.color&lt;/code&gt; should be draw at the specified edges of the bounding box, &lt;strong&gt;inset and overlapping the box contents by &lt;code&gt;.width&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;This means that border configuration does not affect layout, as the width of the border doesn&#39;t contribute to the total container width or layout position. Border containers with zero padding will be drawn over the top of child elements.&lt;/p&gt; 
&lt;p&gt;Note:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.width.betweenChildren&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .border = { .width = { .betweenChildren = 2 } }, .color = COLOR_RED })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Configures the width and color of borders to be drawn between children. These borders will be vertical lines if the parent uses &lt;code&gt;.layoutDirection = CLAY_LEFT_TO_RIGHT&lt;/code&gt; and horizontal lines if the parent uses &lt;code&gt;CLAY_TOP_TO_BOTTOM&lt;/code&gt;. Unlike &lt;code&gt;.left, .top&lt;/code&gt; etc, this option &lt;strong&gt;will generate additional rectangle render commands representing the borders between children.&lt;/strong&gt; As a result, the renderer does not need to specifically implement rendering for these border elements.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// 300x300 container with a 1px red border around all the edges
CLAY({
    .id = CLAY_ID(&quot;OuterBorder&quot;),
    .layout = { .sizing = { .width = CLAY_SIZING_FIXED(300), .height = CLAY_SIZING_FIXED(300) } },
    .border = { .width = { 1, 1, 1, 1, 0 }, .color = COLOR_RED }
}) {
    // ...
}

// Container with a 3px yellow bottom border
CLAY({
    .id = CLAY_ID(&quot;OuterBorder&quot;),
    .border = { .width = { .bottom = 3 }, .color = COLOR_YELLOW }
}) {
    // ...
}

// Container with a 5px curved border around the edges, and a 5px blue border between all children laid out top to bottom
CLAY({
    .id = CLAY_ID(&quot;OuterBorder&quot;),
    .layout = { .layoutDirection = CLAY_TOP_TO_BOTTOM },
    .border = { .width = { 5, 5, 5, 5, 5 }, .color = COLOR_BLUE }
}) {
    // Child
    // -- 5px blue border will be here --
    // Child
    // -- 5px blue border will be here --
    // Child
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Rendering&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Element is subject to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#visibility-culling&quot;&gt;culling&lt;/a&gt;. Otherwise, a single &lt;code&gt;Clay_RenderCommand&lt;/code&gt; with &lt;code&gt;commandType = CLAY_RENDER_COMMAND_TYPE_BORDER&lt;/code&gt; representing the container will be created. Rendering of borders and rounded corners is left up to the user. See the provided &lt;a href=&quot;https://github.com/nicbarker/clay/tree/main/renderers/raylib&quot;&gt;Raylib Renderer&lt;/a&gt; for examples of how to draw borders using line and curve primitives.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_FloatingElementConfig&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { ...floating config } }) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Floating Elements&lt;/strong&gt; defines an element that &quot;floats&quot; above other content. Typical use-cases include tooltips and modals.&lt;/p&gt; 
&lt;p&gt;Floating containers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;With the default configuration, attach to the top left corner of their &quot;parent&quot;&lt;/li&gt; 
 &lt;li&gt;Don&#39;t affect the width and height of their parent&lt;/li&gt; 
 &lt;li&gt;Don&#39;t affect the positioning of sibling elements&lt;/li&gt; 
 &lt;li&gt;Depending on their z-index can appear above or below other elements, partially or completely occluding them&lt;/li&gt; 
 &lt;li&gt;Apart from positioning, function just like standard elements - including expanding to fit their children, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The easiest mental model to use when thinking about floating containers is that they are a completely separate UI hierarchy, attached to a specific x,y point on their &quot;parent&quot;.&lt;/p&gt; 
&lt;p&gt;Floating elements uses &lt;code&gt;Clay_FloatingElementConfig&lt;/code&gt; to configure specific options.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Struct Definition (Pseudocode)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;Clay_FloatingElementConfig {
    Clay_Vector2 offset {
        float x, float y
    };
    Clay_Dimensions expand {
        float width, float height
    };
    uint32_t parentId;
    int16_t zIndex;
    Clay_FloatingAttachPoints attachPoint {
        .element = CLAY_ATTACH_POINT_LEFT_TOP (default) | CLAY_ATTACH_POINT_LEFT_CENTER | CLAY_ATTACH_POINT_LEFT_BOTTOM | CLAY_ATTACH_POINT_CENTER_TOP | CLAY_ATTACH_POINT_CENTER_CENTER | CLAY_ATTACH_POINT_CENTER_BOTTOM | CLAY_ATTACH_POINT_RIGHT_TOP | CLAY_ATTACH_POINT_RIGHT_CENTER | CLAY_ATTACH_POINT_RIGHT_BOTTOM
        .parent = CLAY_ATTACH_POINT_LEFT_TOP (default) | CLAY_ATTACH_POINT_LEFT_CENTER | CLAY_ATTACH_POINT_LEFT_BOTTOM | CLAY_ATTACH_POINT_CENTER_TOP | CLAY_ATTACH_POINT_CENTER_CENTER | CLAY_ATTACH_POINT_CENTER_BOTTOM | CLAY_ATTACH_POINT_RIGHT_TOP | CLAY_ATTACH_POINT_RIGHT_CENTER | CLAY_ATTACH_POINT_RIGHT_BOTTOM
    };
    Clay_FloatingAttachToElement attachTo {
        CLAY_POINTER_CAPTURE_MODE_CAPTURE (default),
        CLAY_POINTER_CAPTURE_MODE_PASSTHROUGH
    };
    Clay_FloatingAttachToElement attachTo {
        CLAY_ATTACH_TO_NONE (default),
        CLAY_ATTACH_TO_PARENT,
        CLAY_ATTACH_TO_ELEMENT_WITH_ID,
        CLAY_ATTACH_TO_ROOT,
    };
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.offset&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Vector2&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { .offset = { -24, -24 } } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Used to apply a position offset to the floating container &lt;em&gt;after&lt;/em&gt; all other layout has been calculated.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.expand&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Dimensions&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { .expand = { 16, 16 } } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Used to expand the width and height of the floating container &lt;em&gt;before&lt;/em&gt; laying out child elements.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.zIndex&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;float&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { .zIndex = 1 } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;All floating elements (as well as their entire child hierarchies) will be sorted by &lt;code&gt;.zIndex&lt;/code&gt; order before being converted to render commands. If render commands are drawn in order, elements with higher &lt;code&gt;.zIndex&lt;/code&gt; values will be drawn on top.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.parentId&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uint32_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { .parentId = Clay_GetElementId(&quot;HeaderButton&quot;).id } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;By default, floating containers will &quot;attach&quot; to the parent element that they are declared inside. However, there are cases where this limitation could cause significant performance or ergonomics problems. &lt;code&gt;.parentId&lt;/code&gt; allows you to specify a &lt;code&gt;CLAY_ID().id&lt;/code&gt; to attach the floating container to. The parent element with the matching id can be declared anywhere in the hierarchy, it doesn&#39;t need to be declared before or after the floating container in particular.&lt;/p&gt; 
&lt;p&gt;Consider the following case:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Load an image somewhere in your code
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 1) }) {
    // .. some button contents
    if (tooltip.attachedButtonIndex == 1) {
        CLAY({ /* floating config... */ })
    }
}
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 2) }) {
    // .. some button contents
    if (tooltip.attachedButtonIndex == 2) {
        CLAY({ /* floating config... */ })
    }
}
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 3) }) {
    // .. some button contents
    if (tooltip.attachedButtonIndex == 3) {
        CLAY({ /* floating config... */ })
    }
}
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 4) }) {
    // .. some button contents
    if (tooltip.attachedButtonIndex == 4) {
        CLAY({ /* floating config... */ })
    }
}
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 5) }) {
    // .. some button contents
    if (tooltip.attachedButtonIndex == 5) {
        CLAY({ /* floating config... */ })
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The definition of the above UI is significantly polluted by the need to conditionally render floating tooltips as a child of many possible elements. The alternative, using &lt;code&gt;parentId&lt;/code&gt;, looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Load an image somewhere in your code
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 1) }) {
    // .. some button contents
}
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 2) }) {
    // .. some button contents
}
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 3) }) {
    // .. some button contents
}
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 4) }) {
    // .. some button contents
}
CLAY({ .id = CLAY_IDI(&quot;SidebarButton&quot;, 5) }) {
    // .. some button contents
}

// Any other point in the hierarchy
CLAY({ .id = CLAY_ID(&quot;OptionTooltip&quot;), .floating = { .attachTo = CLAY_ATTACH_TO_ELEMENT_ID, .parentId = CLAY_IDI(&quot;SidebarButton&quot;, tooltip.attachedButtonIndex).id }) {
    // Tooltip contents...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.attachment&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_FloatingAttachPoints&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { .attachment = { .element = CLAY_ATTACH_POINT_LEFT_CENTER, .parent = CLAY_ATTACH_POINT_RIGHT_TOP } } }) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;In terms of positioning the floating container, &lt;code&gt;.attachment&lt;/code&gt; specifies&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The point on the floating container (&lt;code&gt;.element&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;The point on the parent element that it &quot;attaches&quot; to (&lt;code&gt;.parent&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/b8c6dfaa-c1b1-41a4-be55-013473e4a6ce&quot; alt=&quot;Screenshot 2024-08-23 at 11 47 21 AM&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can mentally visualise this as finding a point on the floating container, then finding a point on the parent, and lining them up over the top of one another.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;p&gt;&quot;Attach the LEFT_CENTER of the floating container to the RIGHT_TOP of the parent&quot;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { .attachment = { .element = CLAY_ATTACH_POINT_LEFT_CENTER, .parent = CLAY_ATTACH_POINT_RIGHT_TOP } } });&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/ebe75e0d-1904-46b0-982d-418f929d1516&quot; alt=&quot;Screenshot 2024-08-23 at 11 53 24 AM&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.pointerCaptureMode&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_PointerCaptureMode&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .floating = { .pointerCaptureMode = CLAY_POINTER_CAPTURE_MODE_CAPTURE } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Controls whether pointer events like hover and click should pass through to content underneath this floating element, or whether the pointer should be &quot;captured&quot; by this floating element. Defaults to &lt;code&gt;CLAY_POINTER_CAPTURE_MODE_CAPTURE&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Horizontal container with three option buttons
CLAY({ .id = CLAY_ID(&quot;OptionsList&quot;), .layout = { childGap = 16 } }) {
    CLAY({ .id = CLAY_IDI(&quot;Option&quot;, 1), .layout = { padding = CLAY_PADDING_ALL(16)), .backgroundColor = COLOR_BLUE } }) {
        CLAY_TEXT(CLAY_STRING(&quot;Option 1&quot;), CLAY_TEXT_CONFIG());
    }
    CLAY({ .id = CLAY_IDI(&quot;Option&quot;, 2), .layout = { padding = CLAY_PADDING_ALL(16)), .backgroundColor = COLOR_BLUE } }) {
        CLAY_TEXT(CLAY_STRING(&quot;Option 2&quot;), CLAY_TEXT_CONFIG());
        // Floating tooltip will attach above the &quot;Option 2&quot; container and not affect widths or positions of other elements
        CLAY({ .id = CLAY_ID(&quot;OptionTooltip&quot;), .floating = { .zIndex = 1, .attachment = { .element = CLAY_ATTACH_POINT_CENTER_BOTTOM, .parent = CLAY_ATTACH_POINT_CENTER_TOP } } }) {
            CLAY_TEXT(CLAY_STRING(&quot;Most popular!&quot;), CLAY_TEXT_CONFIG());
        }
    }
    CLAY({ .id = CLAY_IDI(&quot;Option&quot;, 3), .layout = { padding = CLAY_PADDING_ALL(16)), .backgroundColor = COLOR_BLUE } }) {
        CLAY_TEXT(CLAY_STRING(&quot;Option 3&quot;), CLAY_TEXT_CONFIG());
    }
}

// Floating containers can also be declared elsewhere in a layout, to avoid branching or polluting other UI
for (int i = 0; i &amp;lt; 1000; i++) {
    CLAY({ .id = CLAY_IDI(&quot;Option&quot;, i + 1) }) {
        // ...
    }
}
// Note the use of &quot;parentId&quot;.
// Floating tooltip will attach above the &quot;Option 2&quot; container and not affect widths or positions of other elements
CLAY({ .id = CLAY_ID(&quot;OptionTooltip&quot;), .floating = { .parentId = CLAY_IDI(&quot;Option&quot;, 2).id, .zIndex = 1, .attachment = { .element = CLAY_ATTACH_POINT_CENTER_BOTTOM, .parent = CLAY_ATTACH_POINT_TOP_CENTER } } }) {
    CLAY_TEXT(CLAY_STRING(&quot;Most popular!&quot;), CLAY_TEXT_CONFIG());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using &lt;code&gt;.parentId&lt;/code&gt;, the floating container can be declared anywhere after &lt;code&gt;BeginLayout&lt;/code&gt; and before &lt;code&gt;EndLayout&lt;/code&gt;. The target element matching the &lt;code&gt;.parentId&lt;/code&gt; doesn&#39;t need to exist when &lt;code&gt;Clay_FloatingElementConfig&lt;/code&gt; is used.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rendering&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Clay_FloatingElementConfig&lt;/code&gt; will not generate any specific render commands.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_CustomElementConfig&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .custom = { .customData = &amp;amp;something } }) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Clay_CustomElementConfig&lt;/strong&gt; allows the user to pass custom data to the renderer.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Struct Definition (Pseudocode)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct
{
    void * customData;
} Clay_CustomElementConfig;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.customData&lt;/code&gt; - &lt;code&gt;void *&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;CLAY({ .custom = { .customData = &amp;amp;myCustomData } })&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.customData&lt;/code&gt; is a generic void pointer that can be used to pass through custom data to the renderer.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;#include &quot;clay.h&quot;

typedef enum {
    CUSTOM_ELEMENT_TYPE_MODEL,
    CUSTOM_ELEMENT_TYPE_VIDEO
} CustomElementType;

// A rough example of how you could handle laying out 3d models in your UI
typedef struct {
    CustomElementType type;
    union {
        Model model;
        Video video;
        // ...
    };
} CustomElementData;

Model myModel = Load3DModel(filePath);
CustomElement modelElement = (CustomElement) { .type = CUSTOM_ELEMENT_TYPE_MODEL, .model = myModel }

typedef struct {
    void* memory;
    uintptr_t offset;
} Arena;

// During init
Arena frameArena = (Arena) { .memory = malloc(1024) };

// ...
CLAY(0) {
    // Custom elements only take a single pointer, so we need to store the data somewhere
    CustomElementData *modelData = (CustomElementData *)(frameArena.memory + frameArena.offset);
    *modelData = (CustomElementData) { .type = CUSTOM_ELEMENT_TYPE_MODEL, .model = myModel };
    frameArena.offset += sizeof(CustomElementData);
    CLAY({ .custom = { .customData = modelData } }) {}
}

// Later during your rendering
switch (renderCommand-&amp;gt;commandType) {
    // ...
    case CLAY_RENDER_COMMAND_TYPE_CUSTOM: {
        // Your extended struct is passed through
        CustomElementData *customElement = renderCommand-&amp;gt;config.customElementConfig-&amp;gt;customData;
        if (!customElement) continue;
        switch (customElement-&amp;gt;type) {
            case CUSTOM_ELEMENT_TYPE_MODEL: {
                // Render your 3d model here
                break;
            }
            case CUSTOM_ELEMENT_TYPE_VIDEO: {
                // Render your video here
                break;
            }
            // ...
        }
        break;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Rendering&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Element is subject to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#visibility-culling&quot;&gt;culling&lt;/a&gt;. Otherwise, a single &lt;code&gt;Clay_RenderCommand&lt;/code&gt; with &lt;code&gt;commandType = CLAY_RENDER_COMMAND_TYPE_CUSTOM&lt;/code&gt; will be created.&lt;/p&gt; 
&lt;h3&gt;Clay_Color&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    float r, g, b, a;
} Clay_Color;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Clay_Color&lt;/code&gt; is an RGBA color struct used in Clay&#39;s declarations and rendering. By convention the channels are represented as 0-255, but this is left up to the renderer. Note: when using the debug tools, their internal colors are represented as 0-255.&lt;/p&gt; 
&lt;h3&gt;Clay_String&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    int length;
    const char *chars;
} Clay_String;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Clay_String&lt;/code&gt; is a string container that clay uses internally to represent all strings.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.length&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;int&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The number of characters in the string, &lt;em&gt;not including an optional null terminator.&lt;/em&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.chars&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;const char *&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A pointer to the contents of the string. This data is not guaranteed to be null terminated, so if you are passing it to code that expects standard null terminated C strings, you will need to copy the data and append a null terminator.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_ElementId&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    uint32_t id;
    uint32_t offset;
    uint32_t baseId;
    Clay_String stringId;
} Clay_ElementId;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returned by &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI&lt;/a&gt;, this struct contains a hash id, as well as the source string that was used to generate it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.id&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uint32_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A unique ID derived from the string passed to &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.offset&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uint32_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If this id was generated using &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI&lt;/a&gt;, &lt;code&gt;.offset&lt;/code&gt; is the value passed as the second argument. For &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt;, this will always be &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.baseId&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uint32_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If this id was generated using &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI&lt;/a&gt;, &lt;code&gt;.baseId&lt;/code&gt; is the hash of the base string passed, &lt;strong&gt;before it is additionally hashed with &lt;code&gt;.offset&lt;/code&gt;&lt;/strong&gt;. For &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt;, this will always be the same as &lt;code&gt;.id&lt;/code&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.stringId&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_String&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Stores the original string that was passed in when &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_idi&quot;&gt;CLAY_IDI&lt;/a&gt; were called.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_RenderCommandArray&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct
{
	uint32_t capacity;
	uint32_t length;
	Clay_RenderCommand *internalArray;
} Clay_RenderCommandArray;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returned by &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_endlayout&quot;&gt;Clay_EndLayout&lt;/a&gt;, this array contains the &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rendercommand&quot;&gt;Clay_RenderCommand&lt;/a&gt;s representing the calculated layout.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.capacity&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uint32_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Represents the total capacity of the allocated memory in &lt;code&gt;.internalArray&lt;/code&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.length&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uint32_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Represents the total number of &lt;code&gt;Clay_RenderCommand&lt;/code&gt; elements stored consecutively at the address &lt;code&gt;.internalArray&lt;/code&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.internalArray&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_RenderCommand&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;An array of &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_rendercommand&quot;&gt;Clay_RenderCommand&lt;/a&gt;s representing the calculated layout. If there was at least one render command, this array will contain elements from &lt;code&gt;.internalArray[0]&lt;/code&gt; to &lt;code&gt;.internalArray[.length - 1]&lt;/code&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_RenderCommand&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    Clay_BoundingBox boundingBox;
    Clay_RenderData renderData;
    uintptr_t userData;
    uint32_t id;
    int16_t zIndex;
    Clay_RenderCommandType commandType;
} Clay_RenderCommand;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.commandType&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_RenderCommandType&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;An enum indicating how this render command should be handled. Possible values include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_RENDER_COMMAND_TYPE_NONE&lt;/code&gt; - Should be ignored by the renderer, and never emitted by clay under normal conditions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_RENDER_COMMAND_TYPE_RECTANGLE&lt;/code&gt; - A rectangle should be drawn, configured with &lt;code&gt;.config.rectangleElementConfig&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_RENDER_COMMAND_TYPE_BORDER&lt;/code&gt; - A border should be drawn, configured with &lt;code&gt;.config.borderElementConfig&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_RENDER_COMMAND_TYPE_TEXT&lt;/code&gt; - Text should be drawn, configured with &lt;code&gt;.config.textElementConfig&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_RENDER_COMMAND_TYPE_IMAGE&lt;/code&gt; - An image should be drawn, configured with &lt;code&gt;.config.imageElementConfig&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_RENDER_COMMAND_TYPE_SCISSOR_START&lt;/code&gt; - Named after &lt;a href=&quot;https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissor.xhtml&quot;&gt;glScissor&lt;/a&gt;, this indicates that the renderer should begin culling any subsequent pixels that are drawn outside the &lt;code&gt;.boundingBox&lt;/code&gt; of this render command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_RENDER_COMMAND_TYPE_SCISSOR_END&lt;/code&gt; - Only ever appears after a matching &lt;code&gt;CLAY_RENDER_COMMAND_TYPE_SCISSOR_START&lt;/code&gt; command, and indicates that the scissor has ended.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_RENDER_COMMAND_TYPE_CUSTOM&lt;/code&gt; - A custom render command controlled by the user, configured with &lt;code&gt;.config.customElementConfig&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.boundingBox&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_BoundingBox&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    float x, y, width, height;
} Clay_BoundingBox;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A rectangle representing the bounding box of this render command, with &lt;code&gt;.x&lt;/code&gt; and &lt;code&gt;.y&lt;/code&gt; representing the top left corner of the element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.id&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uint32_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The id that was originally used with the element macro that created this render command. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_id&quot;&gt;CLAY_ID&lt;/a&gt; for details.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.zIndex&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;int16_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The z index of the element, based on what was passed to the root floating configuration that this element is a child of. Higher z indexes should be rendered &lt;em&gt;on top&lt;/em&gt; of lower z indexes.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.renderData&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_RenderData&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef union {
    Clay_RectangleRenderData rectangle;
    Clay_TextRenderData text;
    Clay_ImageRenderData image;
    Clay_CustomRenderData custom;
    Clay_BorderRenderData border;
} Clay_RenderData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A C union containing various structs, with the type dependent on &lt;code&gt;.commandType&lt;/code&gt;. Possible values include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;config.rectangle&lt;/code&gt; - Used when &lt;code&gt;.commandType == CLAY_RENDER_COMMAND_TYPE_RECTANGLE&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config.text&lt;/code&gt; - Used when &lt;code&gt;.commandType == CLAY_RENDER_COMMAND_TYPE_TEXT&lt;/code&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_text&quot;&gt;Clay_Text&lt;/a&gt; for details.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config.image&lt;/code&gt; - Used when &lt;code&gt;.commandType == CLAY_RENDER_COMMAND_TYPE_IMAGE&lt;/code&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_imageelementconfig&quot;&gt;Clay_Image&lt;/a&gt; for details.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config.border&lt;/code&gt; - Used when &lt;code&gt;.commandType == CLAY_RENDER_COMMAND_TYPE_BORDER&lt;/code&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_borderelementconfig&quot;&gt;Clay_Border&lt;/a&gt; for details.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config.custom&lt;/code&gt; - Used when &lt;code&gt;.commandType == CLAY_RENDER_COMMAND_TYPE_CUSTOM&lt;/code&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_customelementconfig&quot;&gt;Clay_Custom&lt;/a&gt; for details.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Union Structs&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    Clay_StringSlice stringContents;
    Clay_Color textColor;
    uint16_t fontId;
    uint16_t fontSize;
    uint16_t letterSpacing;
    uint16_t lineHeight;
} Clay_TextRenderData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    Clay_Color backgroundColor;
    Clay_CornerRadius cornerRadius;
} Clay_RectangleRenderData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    Clay_Color backgroundColor;
    Clay_CornerRadius cornerRadius;
    Clay_Dimensions sourceDimensions;
    void* imageData;
} Clay_ImageRenderData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    Clay_Color backgroundColor;
    Clay_CornerRadius cornerRadius;
    void* customData;
} Clay_CustomRenderData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    Clay_Color color;
    Clay_CornerRadius cornerRadius;
    Clay_BorderWidth width;
} Clay_BorderRenderData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef union {
    Clay_RectangleRenderData rectangle;
    Clay_TextRenderData text;
    Clay_ImageRenderData image;
    Clay_CustomRenderData custom;
    Clay_BorderRenderData border;
} Clay_RenderData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Clay_ScrollContainerData&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Data representing the current internal state of a scrolling element.
typedef struct {
    // Note: This is a pointer to the real internal scroll position, mutating it may cause a change in final layout.
    // Intended for use with external functionality that modifies scroll position, such as scroll bars or auto scrolling.
    Clay_Vector2 *scrollPosition;
    // The bounding box of the scroll element.
    Clay_Dimensions scrollContainerDimensions;
    // The outer dimensions of the inner scroll container content, including the padding of the parent scroll container.
    Clay_Dimensions contentDimensions;
    // The config that was originally passed to the scroll element.
    Clay_ScrollElementConfig config;
    // Indicates whether an actual scroll container matched the provided ID or if the default struct was returned.
    bool found;
} Clay_ScrollContainerData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Clay_ElementData&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// Bounding box and other data for a specific UI element.
typedef struct {
    // The rectangle that encloses this UI element, with the position relative to the root of the layout.
    Clay_BoundingBox boundingBox;
    // Indicates whether an actual Element matched the provided ID or if the default struct was returned.
    bool found;
} Clay_ElementData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.scrollPosition&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Vector2 *&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A pointer to the internal scroll position of this scroll container. Mutating it will result in elements inside the scroll container shifting up / down (&lt;code&gt;.y&lt;/code&gt;) or left / right (&lt;code&gt;.x&lt;/code&gt;).&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.scrollContainerDimensions&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Dimensions&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    float width, height;
} Clay_Dimensions;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Dimensions representing the outer width and height of the scroll container itself.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.contentDimensions&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Dimensions&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct {
    float width, height;
} Clay_Dimensions;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Dimensions representing the inner width and height of the content &lt;em&gt;inside&lt;/em&gt; the scroll container. Scrolling is only possible when the &lt;code&gt;contentDimensions&lt;/code&gt; are larger in at least one dimension than the &lt;code&gt;scrollContainerDimensions&lt;/code&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.config&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_ScrollElementConfig&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_scroll&quot;&gt;Clay_ScrollElementConfig&lt;/a&gt; for the matching scroll container element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_PointerData&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct
{
    Clay_Vector2 position;
    Clay_PointerDataInteractionState state;
} Clay_PointerData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.position&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_Vector2&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A Vector2 containing the current x,y coordinates of the mouse pointer, which were originally passed into &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setpointerstate&quot;&gt;Clay_SetPointerState()&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.state&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_PointerDataInteractionState&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef enum
{
    CLAY_POINTER_DATA_PRESSED_THIS_FRAME,
    CLAY_POINTER_DATA_PRESSED,
    CLAY_POINTER_DATA_RELEASED_THIS_FRAME,
    CLAY_POINTER_DATA_RELEASED,
} Clay_PointerDataInteractionState;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An enum value representing the current &quot;state&quot; of the pointer interaction. As an example, consider the case where a user is on a desktop computer, moves the mouse pointer over a button, clicks and holds the left mouse button for a short time, then releases it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;While the mouse pointer is over (&quot;hovering&quot;) the button, but no mouse button has been pressed: &lt;code&gt;CLAY_POINTER_DATA_RELEASED&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;First frame that the user presses the left mouse button: &lt;code&gt;CLAY_POINTER_DATA_PRESSED_THIS_FRAME&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;All subsequent frames where the user is still holding the left mouse button: &lt;code&gt;CLAY_POINTER_DATA_PRESSED&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The single frame where the left mouse button goes from pressed -&amp;gt; released: &lt;code&gt;CLAY_POINTER_DATA_RELEASED_THIS_FRAME&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;All subsequent frames while the mouse pointer is still over the button: &lt;code&gt;CLAY_POINTER_DATA_RELEASED&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_ErrorHandler&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct
{
    void (*errorHandlerFunction)(Clay_ErrorData errorText);
    uintptr_t userData;
} Clay_ErrorHandler;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.errorHandlerFunction&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;void (Clay_ErrorData errorText) {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A function pointer to an error handler function, which takes &lt;code&gt;Clay_ErrorData&lt;/code&gt; as an argument. This function will be called whenever Clay encounters an internal error.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.userData&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uintptr_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A generic pointer to extra userdata that is transparently passed through from &lt;code&gt;Clay_Initialize&lt;/code&gt; to Clay&#39;s error handler callback. Defaults to NULL.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Clay_ErrorData&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef struct
{
    Clay_ErrorType errorType;
    Clay_String errorText;
    uintptr_t userData;
} Clay_ErrorData;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Fields&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.errorType&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_ErrorType&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;typedef enum {
    CLAY_ERROR_TYPE_TEXT_MEASUREMENT_FUNCTION_NOT_PROVIDED,
    CLAY_ERROR_TYPE_ARENA_CAPACITY_EXCEEDED,
    CLAY_ERROR_TYPE_ELEMENTS_CAPACITY_EXCEEDED,
    CLAY_ERROR_TYPE_TEXT_MEASUREMENT_CAPACITY_EXCEEDED,
    CLAY_ERROR_TYPE_DUPLICATE_ID,
    CLAY_ERROR_TYPE_FLOATING_CONTAINER_PARENT_NOT_FOUND,
    CLAY_ERROR_TYPE_INTERNAL_ERROR,
} Clay_ErrorType;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An enum representing the type of error Clay encountered. It&#39;s up to the user to handle on a case by case basis, but as some general guidance:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_ERROR_TYPE_TEXT_MEASUREMENT_FUNCTION_NOT_PROVIDED&lt;/code&gt; - The user is attempting to use &lt;code&gt;CLAY_TEXT&lt;/code&gt; and either forgot to call &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setmeasuretextfunction&quot;&gt;Clay_SetMeasureTextFunction&lt;/a&gt; or accidentally passed a null function pointer.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_ERROR_TYPE_ARENA_CAPACITY_EXCEEDED&lt;/code&gt; - Clay was initialized with an Arena that was too small for the configured &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setmaxelementcount&quot;&gt;Clay_SetMaxElementCount&lt;/a&gt;. Try using &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_minmemorysize&quot;&gt;Clay_MinMemorySize()&lt;/a&gt; to get the exact number of bytes required by the current configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_ERROR_TYPE_ELEMENTS_CAPACITY_EXCEEDED&lt;/code&gt; - The declared UI hierarchy has too many elements for the configured max element count. Use &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setmaxelementcount&quot;&gt;Clay_SetMaxElementCount&lt;/a&gt; to increase the max, then call &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_minmemorysize&quot;&gt;Clay_MinMemorySize()&lt;/a&gt; again and reinitialize clay&#39;s memory with the required size.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_ERROR_TYPE_ELEMENTS_CAPACITY_EXCEEDED&lt;/code&gt; - The declared UI hierarchy has too much text for the configured text measure cache size. Use &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_setmeasuretextcachesize&quot;&gt;Clay_SetMaxMeasureTextCacheWordCount&lt;/a&gt; to increase the max, then call &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_minmemorysize&quot;&gt;Clay_MinMemorySize()&lt;/a&gt; again and reinitialize clay&#39;s memory with the required size.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_ERROR_TYPE_DUPLICATE_ID&lt;/code&gt; - Two elements in Clays UI Hierarchy have been declared with exactly the same ID. Set a breakpoint in your error handler function for a stack trace back to exactly where this occured.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_ERROR_TYPE_FLOATING_CONTAINER_PARENT_NOT_FOUND&lt;/code&gt; - A &lt;code&gt;CLAY_FLOATING&lt;/code&gt; element was declared with the &lt;code&gt;.parentId&lt;/code&gt; property, but no element with that ID was found. Set a breakpoint in your error handler function for a stack trace back to exactly where this occured.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CLAY_ERROR_TYPE_INTERNAL_ERROR&lt;/code&gt; - Clay has encountered an internal logic or memory error. Please report this as a bug with a stack trace to help us fix these!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.errorText&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;Clay_String&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A &lt;a href=&quot;https://raw.githubusercontent.com/nicbarker/clay/main/#clay_string&quot;&gt;Clay_String&lt;/a&gt; that provides a human readable description of the error. May change in future and should not be relied on to detect error types.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.userData&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;uintptr_t&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A generic pointer to extra userdata that is transparently passed through from &lt;code&gt;Clay_Initialize&lt;/code&gt; to Clay&#39;s error handler callback. Defaults to NULL.&lt;/p&gt; 
&lt;hr&gt;</description>
    </item>
    
  </channel>
</rss>
