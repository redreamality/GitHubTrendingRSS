<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="data:text/xsl;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz48eHNsOnN0eWxlc2hlZXQgdmVyc2lvbj0iMy4wIiB4bWxuczp4c2w9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvWFNML1RyYW5zZm9ybSIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIj48eHNsOm91dHB1dCBtZXRob2Q9Imh0bWwiIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBpbmRlbnQ9InllcyIvPjx4c2w6dGVtcGxhdGUgbWF0Y2g9Ii8iPjx4c2w6dmFyaWFibGUgbmFtZT0idGl0bGUiPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIvcnNzL2NoYW5uZWwvdGl0bGUiLz48L3hzbDp2YXJpYWJsZT48eHNsOnZhcmlhYmxlIG5hbWU9ImRlc2NyaXB0aW9uIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iL3Jzcy9jaGFubmVsL2Rlc2NyaXB0aW9uIi8+PC94c2w6dmFyaWFibGU+PHhzbDp2YXJpYWJsZSBuYW1lPSJsaW5rIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iL3Jzcy9jaGFubmVsL2xpbmsiLz48L3hzbDp2YXJpYWJsZT48aHRtbCBjbGFzcz0iZGFyayBzY3JvbGwtc21vb3RoIj48aGVhZD48bWV0YSBjaGFyc2V0PSJ1dGYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSIvPjxtZXRhIG5hbWU9InJlZmVycmVyIiBjb250ZW50PSJ1bnNhZmUtdXJsIi8+PHRpdGxlPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkdGl0bGUiLz48L3RpdGxlPjxzdHlsZT4qLDphZnRlciw6YmVmb3Jley0tdHctYm9yZGVyLXNwYWNpbmcteDowOy0tdHctYm9yZGVyLXNwYWNpbmcteTowOy0tdHctdHJhbnNsYXRlLXg6MDstLXR3LXRyYW5zbGF0ZS15OjA7LS10dy1yb3RhdGU6MDstLXR3LXNrZXcteDowOy0tdHctc2tldy15OjA7LS10dy1zY2FsZS14OjE7LS10dy1zY2FsZS15OjE7LS10dy1wYW4teDogOy0tdHctcGFuLXk6IDstLXR3LXBpbmNoLXpvb206IDstLXR3LXNjcm9sbC1zbmFwLXN0cmljdG5lc3M6cHJveGltaXR5Oy0tdHctZ3JhZGllbnQtZnJvbS1wb3NpdGlvbjogOy0tdHctZ3JhZGllbnQtdmlhLXBvc2l0aW9uOiA7LS10dy1ncmFkaWVudC10by1wb3NpdGlvbjogOy0tdHctb3JkaW5hbDogOy0tdHctc2xhc2hlZC16ZXJvOiA7LS10dy1udW1lcmljLWZpZ3VyZTogOy0tdHctbnVtZXJpYy1zcGFjaW5nOiA7LS10dy1udW1lcmljLWZyYWN0aW9uOiA7LS10dy1yaW5nLWluc2V0OiA7LS10dy1yaW5nLW9mZnNldC13aWR0aDowcHg7LS10dy1yaW5nLW9mZnNldC1jb2xvcjojZmZmOy0tdHctcmluZy1jb2xvcjpyZ2JhKDU5LDEzMCwyNDYsLjUpOy0tdHctcmluZy1vZmZzZXQtc2hhZG93OjAgMCAjMDAwMDstLXR3LXJpbmctc2hhZG93OjAgMCAjMDAwMDstLXR3LXNoYWRvdzowIDAgIzAwMDA7LS10dy1zaGFkb3ctY29sb3JlZDowIDAgIzAwMDA7LS10dy1ibHVyOiA7LS10dy1icmlnaHRuZXNzOiA7LS10dy1jb250cmFzdDogOy0tdHctZ3JheXNjYWxlOiA7LS10dy1odWUtcm90YXRlOiA7LS10dy1pbnZlcnQ6IDstLXR3LXNhdHVyYXRlOiA7LS10dy1zZXBpYTogOy0tdHctZHJvcC1zaGFkb3c6IDstLXR3LWJhY2tkcm9wLWJsdXI6IDstLXR3LWJhY2tkcm9wLWJyaWdodG5lc3M6IDstLXR3LWJhY2tkcm9wLWNvbnRyYXN0OiA7LS10dy1iYWNrZHJvcC1ncmF5c2NhbGU6IDstLXR3LWJhY2tkcm9wLWh1ZS1yb3RhdGU6IDstLXR3LWJhY2tkcm9wLWludmVydDogOy0tdHctYmFja2Ryb3Atb3BhY2l0eTogOy0tdHctYmFja2Ryb3Atc2F0dXJhdGU6IDstLXR3LWJhY2tkcm9wLXNlcGlhOiA7LS10dy1jb250YWluLXNpemU6IDstLXR3LWNvbnRhaW4tbGF5b3V0OiA7LS10dy1jb250YWluLXBhaW50OiA7LS10dy1jb250YWluLXN0eWxlOiB9OjpiYWNrZHJvcHstLXR3LWJvcmRlci1zcGFjaW5nLXg6MDstLXR3LWJvcmRlci1zcGFjaW5nLXk6MDstLXR3LXRyYW5zbGF0ZS14OjA7LS10dy10cmFuc2xhdGUteTowOy0tdHctcm90YXRlOjA7LS10dy1za2V3LXg6MDstLXR3LXNrZXcteTowOy0tdHctc2NhbGUteDoxOy0tdHctc2NhbGUteToxOy0tdHctcGFuLXg6IDstLXR3LXBhbi15OiA7LS10dy1waW5jaC16b29tOiA7LS10dy1zY3JvbGwtc25hcC1zdHJpY3RuZXNzOnByb3hpbWl0eTstLXR3LWdyYWRpZW50LWZyb20tcG9zaXRpb246IDstLXR3LWdyYWRpZW50LXZpYS1wb3NpdGlvbjogOy0tdHctZ3JhZGllbnQtdG8tcG9zaXRpb246IDstLXR3LW9yZGluYWw6IDstLXR3LXNsYXNoZWQtemVybzogOy0tdHctbnVtZXJpYy1maWd1cmU6IDstLXR3LW51bWVyaWMtc3BhY2luZzogOy0tdHctbnVtZXJpYy1mcmFjdGlvbjogOy0tdHctcmluZy1pbnNldDogOy0tdHctcmluZy1vZmZzZXQtd2lkdGg6MHB4Oy0tdHctcmluZy1vZmZzZXQtY29sb3I6I2ZmZjstLXR3LXJpbmctY29sb3I6cmdiYSg1OSwxMzAsMjQ2LC41KTstLXR3LXJpbmctb2Zmc2V0LXNoYWRvdzowIDAgIzAwMDA7LS10dy1yaW5nLXNoYWRvdzowIDAgIzAwMDA7LS10dy1zaGFkb3c6MCAwICMwMDAwOy0tdHctc2hhZG93LWNvbG9yZWQ6MCAwICMwMDAwOy0tdHctYmx1cjogOy0tdHctYnJpZ2h0bmVzczogOy0tdHctY29udHJhc3Q6IDstLXR3LWdyYXlzY2FsZTogOy0tdHctaHVlLXJvdGF0ZTogOy0tdHctaW52ZXJ0OiA7LS10dy1zYXR1cmF0ZTogOy0tdHctc2VwaWE6IDstLXR3LWRyb3Atc2hhZG93OiA7LS10dy1iYWNrZHJvcC1ibHVyOiA7LS10dy1iYWNrZHJvcC1icmlnaHRuZXNzOiA7LS10dy1iYWNrZHJvcC1jb250cmFzdDogOy0tdHctYmFja2Ryb3AtZ3JheXNjYWxlOiA7LS10dy1iYWNrZHJvcC1odWUtcm90YXRlOiA7LS10dy1iYWNrZHJvcC1pbnZlcnQ6IDstLXR3LWJhY2tkcm9wLW9wYWNpdHk6IDstLXR3LWJhY2tkcm9wLXNhdHVyYXRlOiA7LS10dy1iYWNrZHJvcC1zZXBpYTogOy0tdHctY29udGFpbi1zaXplOiA7LS10dy1jb250YWluLWxheW91dDogOy0tdHctY29udGFpbi1wYWludDogOy0tdHctY29udGFpbi1zdHlsZTogfQ0KICAgICAgICANCiAgICAgICAgLyohIHRhaWx3aW5kY3NzIHYzLjQuMTcgfCBNSVQgTGljZW5zZSB8IGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tKi8qLDphZnRlciw6YmVmb3Jle2JveC1zaXppbmc6Ym9yZGVyLWJveDtib3JkZXI6MCBzb2xpZCAjZTdlN2YwfTphZnRlciw6YmVmb3Jley0tdHctY29udGVudDoiIn06aG9zdCxodG1se2xpbmUtaGVpZ2h0OjEuNTstd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6MTAwJTstbW96LXRhYi1zaXplOjQ7LW8tdGFiLXNpemU6NDt0YWItc2l6ZTo0O2ZvbnQtZmFtaWx5OnVpLXNhbnMtc2VyaWYsc3lzdGVtLXVpLHNhbnMtc2VyaWYsQXBwbGUgQ29sb3IgRW1vamksU2Vnb2UgVUkgRW1vamksU2Vnb2UgVUkgU3ltYm9sLE5vdG8gQ29sb3IgRW1vamk7Zm9udC1mZWF0dXJlLXNldHRpbmdzOm5vcm1hbDtmb250LXZhcmlhdGlvbi1zZXR0aW5nczpub3JtYWw7LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOnRyYW5zcGFyZW50fWJvZHl7bWFyZ2luOjA7bGluZS1oZWlnaHQ6aW5oZXJpdH1ocntoZWlnaHQ6MDtjb2xvcjppbmhlcml0O2JvcmRlci10b3Atd2lkdGg6MXB4fWFiYnI6d2hlcmUoW3RpdGxlXSl7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZDt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZH1oMSxoMixoMyxoNCxoNSxoNntmb250LXNpemU6aW5oZXJpdDtmb250LXdlaWdodDppbmhlcml0fWF7Y29sb3I6aW5oZXJpdDt0ZXh0LWRlY29yYXRpb246aW5oZXJpdH1iLHN0cm9uZ3tmb250LXdlaWdodDpib2xkZXJ9Y29kZSxrYmQscHJlLHNhbXB7Zm9udC1mYW1pbHk6dWktbW9ub3NwYWNlLFNGTW9uby1SZWd1bGFyLE1lbmxvLE1vbmFjbyxDb25zb2xhcyxMaWJlcmF0aW9uIE1vbm8sQ291cmllciBOZXcsbW9ub3NwYWNlO2ZvbnQtZmVhdHVyZS1zZXR0aW5nczpub3JtYWw7Zm9udC12YXJpYXRpb24tc2V0dGluZ3M6bm9ybWFsO2ZvbnQtc2l6ZToxZW19c21hbGx7Zm9udC1zaXplOjgwJX1zdWIsc3Vwe2ZvbnQtc2l6ZTo3NSU7bGluZS1oZWlnaHQ6MDtwb3NpdGlvbjpyZWxhdGl2ZTt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1zdWJ7Ym90dG9tOi0uMjVlbX1zdXB7dG9wOi0uNWVtfXRhYmxle3RleHQtaW5kZW50OjA7Ym9yZGVyLWNvbG9yOmluaGVyaXQ7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlfWJ1dHRvbixpbnB1dCxvcHRncm91cCxzZWxlY3QsdGV4dGFyZWF7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LWZlYXR1cmUtc2V0dGluZ3M6aW5oZXJpdDtmb250LXZhcmlhdGlvbi1zZXR0aW5nczppbmhlcml0O2ZvbnQtc2l6ZToxMDAlO2ZvbnQtd2VpZ2h0OmluaGVyaXQ7bGluZS1oZWlnaHQ6aW5oZXJpdDtsZXR0ZXItc3BhY2luZzppbmhlcml0O2NvbG9yOmluaGVyaXQ7bWFyZ2luOjA7cGFkZGluZzowfWJ1dHRvbixzZWxlY3R7dGV4dC10cmFuc2Zvcm06bm9uZX1idXR0b24saW5wdXQ6d2hlcmUoW3R5cGU9YnV0dG9uXSksaW5wdXQ6d2hlcmUoW3R5cGU9cmVzZXRdKSxpbnB1dDp3aGVyZShbdHlwZT1zdWJtaXRdKXstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9uO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7YmFja2dyb3VuZC1pbWFnZTpub25lfTotbW96LWZvY3VzcmluZ3tvdXRsaW5lOmF1dG99Oi1tb3otdWktaW52YWxpZHtib3gtc2hhZG93Om5vbmV9cHJvZ3Jlc3N7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbntoZWlnaHQ6YXV0b31bdHlwZT1zZWFyY2hdey13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7b3V0bGluZS1vZmZzZXQ6LTJweH06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9Ojotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbnstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9uO2ZvbnQ6aW5oZXJpdH1zdW1tYXJ5e2Rpc3BsYXk6bGlzdC1pdGVtfWJsb2NrcXVvdGUsZGQsZGwsZmlndXJlLGgxLGgyLGgzLGg0LGg1LGg2LGhyLHAscHJle21hcmdpbjowfWZpZWxkc2V0e21hcmdpbjowfWZpZWxkc2V0LGxlZ2VuZHtwYWRkaW5nOjB9bWVudSxvbCx1bHtsaXN0LXN0eWxlOm5vbmU7bWFyZ2luOjA7cGFkZGluZzowfWRpYWxvZ3twYWRkaW5nOjB9dGV4dGFyZWF7cmVzaXplOnZlcnRpY2FsfWlucHV0OjotbW96LXBsYWNlaG9sZGVyLHRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVye29wYWNpdHk6MTtjb2xvcjojYThhOGI4fWlucHV0OjpwbGFjZWhvbGRlcix0ZXh0YXJlYTo6cGxhY2Vob2xkZXJ7b3BhY2l0eToxO2NvbG9yOiNhOGE4Yjh9W3JvbGU9YnV0dG9uXSxidXR0b257Y3Vyc29yOnBvaW50ZXJ9OmRpc2FibGVke2N1cnNvcjpkZWZhdWx0fWF1ZGlvLGNhbnZhcyxlbWJlZCxpZnJhbWUsaW1nLG9iamVjdCxzdmcsdmlkZW97ZGlzcGxheTpibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9aW1nLHZpZGVve21heC13aWR0aDoxMDAlO2hlaWdodDphdXRvfVtoaWRkZW5dOndoZXJlKDpub3QoW2hpZGRlbj11bnRpbC1mb3VuZF0pKXtkaXNwbGF5Om5vbmV9OnJvb3R7LS1jYXJkLXJhZGl1czowLjc1cmVtOy0tYnRuLXJhZGl1czp2YXIoLS1jYXJkLXJhZGl1cyk7LS1iYWRnZS1yYWRpdXM6dmFyKC0tYnRuLXJhZGl1cyk7LS1pbnB1dC1yYWRpdXM6dmFyKC0tYnRuLXJhZGl1cyk7LS1hdmF0YXItcmFkaXVzOjk5OTlweDstLWFubm9uY2UtcmFkaXVzOnZhcigtLWF2YXRhci1yYWRpdXMpOy0tdWktYm9yZGVyLWNvbG9yOiMxZjFmMzE7LS1idG4tYm9yZGVyOiMxZjFmMzE7LS1iYWRnZS1ib3JkZXI6dmFyKC0tYnRuLWJvcmRlcik7LS1pbnB1dC1ib3JkZXI6dmFyKC0tdWktYm9yZGVyLWNvbG9yKTstLXVpLWRpc2FibGVkLWJvcmRlcjojMTIxMjIwOy0tdWktZXJyb3ItYm9yZGVyOiNlMTFkNDg7LS11aS1zdWNjZXNzLWJvcmRlcjojNjVhMzBkOy0taW5wdXQtb3V0bGluZTojNGY0NmU1Oy0tdWktYmc6cmdiKDE4IDE4IDMyL3ZhcigtLXVpLWJnLW9wYWNpdHkpKTstLXVpLXNvZnQtYmc6IzFmMWYzMTstLW92ZXJsYXktYmc6cmdiYSgyLDIsMTMsLjI1KTstLWlucHV0LWJnOnZhcigtLXVpLXNvZnQtYmcpOy0tdWktZGlzYWJsZWQtYmc6IzEyMTIyMDstLWNhcmQtcGFkZGluZzoxLjVyZW07LS1kaXNwbGF5LXRleHQtY29sb3I6I2ZmZjstLXRpdGxlLXRleHQtY29sb3I6dmFyKC0tZGlzcGxheS10ZXh0LWNvbG9yKTstLWJvZHktdGV4dC1jb2xvcjojZDZkNmUxOy0tY2FwdGlvbi10ZXh0LWNvbG9yOiM2ZTZlODE7LS1wbGFjZWhvbGRlci10ZXh0LWNvbG9yOiM0ZDRkNWY7LS11aS1iZy1vcGFjaXR5OjE7Y29sb3I6dmFyKC0tYm9keS10ZXh0LWNvbG9yKX0qLC5ib3JkZXJ7Ym9yZGVyLWNvbG9yOnZhcigtLXVpLWJvcmRlci1jb2xvcil9YnV0dG9uOmRpc2FibGVke2JvcmRlcjpub25lIWltcG9ydGFudDtiYWNrZ3JvdW5kOnZhcigtLXVpLWRpc2FibGVkLWJnKSFpbXBvcnRhbnQ7YmFja2dyb3VuZC1pbWFnZTpub25lIWltcG9ydGFudDtib3gtc2hhZG93Om5vbmUhaW1wb3J0YW50O2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLXRleHQtY29sb3IpIWltcG9ydGFudDtwb2ludGVyLWV2ZW50czpub25lIWltcG9ydGFudH1idXR0b246ZGlzYWJsZWQ6YmVmb3Jle2NvbnRlbnQ6dmFyKC0tdHctY29udGVudCk7ZGlzcGxheTpub25lfWE6Zm9jdXMtdmlzaWJsZSxidXR0b246Zm9jdXMtdmlzaWJsZXtvdXRsaW5lLXdpZHRoOjJweDtvdXRsaW5lLW9mZnNldDoycHg7b3V0bGluZS1jb2xvcjojNGY0NmU1fWE6Zm9jdXMtdmlzaWJsZTpmb2N1cy12aXNpYmxlLGJ1dHRvbjpmb2N1cy12aXNpYmxlOmZvY3VzLXZpc2libGV7b3V0bGluZS1zdHlsZTpzb2xpZH1pbnB1dDp1c2VyLWludmFsaWQsc2VsZWN0OnVzZXItaW52YWxpZCx0ZXh0YXJlYTp1c2VyLWludmFsaWR7LS1pbnB1dC1ib3JkZXI6dmFyKC0tdWktZXJyb3ItYm9yZGVyKTstLXVpLWJvcmRlci1jb2xvcjp2YXIoLS11aS1lcnJvci1ib3JkZXIpOy0taW5wdXQtb3V0bGluZTp2YXIoLS11aS1lcnJvci1ib3JkZXIpOy0tdGl0bGUtdGV4dC1jb2xvcjojZmI3MTg1fVtkYXRhLXJvdW5kZWQ9bm9uZV17LS1jYXJkLXJhZGl1czowcHg7LS1hdmF0YXItcmFkaXVzOjBweH1bZGF0YS1yb3VuZGVkPWRlZmF1bHRdey0tY2FyZC1yYWRpdXM6MC4yNXJlbX1bZGF0YS1yb3VuZGVkPXNtYWxsXXstLWNhcmQtcmFkaXVzOjAuMTI1cmVtfVtkYXRhLXJvdW5kZWQ9bWVkaXVtXXstLWNhcmQtcmFkaXVzOjAuMzc1cmVtfVtkYXRhLXJvdW5kZWQ9bGFyZ2Vdey0tY2FyZC1yYWRpdXM6MC41cmVtfVtkYXRhLXJvdW5kZWQ9eGxhcmdlXXstLWNhcmQtcmFkaXVzOjAuNzVyZW19W2RhdGEtcm91bmRlZD0iMnhsYXJnZSJdey0tY2FyZC1yYWRpdXM6MXJlbTstLWlucHV0LXJhZGl1czowLjc1cmVtfVtkYXRhLXJvdW5kZWQ9IjN4bGFyZ2UiXXstLWNhcmQtcmFkaXVzOjEuNXJlbTstLWlucHV0LXJhZGl1czowLjc1cmVtfVtkYXRhLXJvdW5kZWQ9ZnVsbF17LS1jYXJkLXJhZGl1czoxLjVyZW07LS1idG4tcmFkaXVzOjk5OTlweDstLWlucHV0LXJhZGl1czoxcmVtfVtkYXRhLXNoYWRlPWdsYXNzeV17LS11aS1iZC1ibHVyOjQwcHg7LS11aS1iZy1vcGFjaXR5OjAuNzU7LS11aS1iZzpyZ2IoNTggNTggNzUvdmFyKC0tdWktYmctb3BhY2l0eSkpOy0tdWktYm9yZGVyLWNvbG9yOnJnYmEoMjUwLDI1MCwyNTQsLjEpOy0tdWktc29mdC1iZzpyZ2JhKDc3LDc3LDk1LC41KX1bZGF0YS1zaGFkZT0iODAwIl17LS11aS1ib3JkZXItY29sb3I6IzNhM2E0YjstLXVpLWJnOiMxZjFmMzE7LS11aS1zb2Z0LWJnOiMxMjEyMjB9W2RhdGEtc2hhZGU9IjkwMCJdey0tdWktYm9yZGVyLWNvbG9yOiMxZjFmMzE7LS11aS1iZzojMTIxMjIwOy0tdWktc29mdC1iZzojMWYxZjMxfVtkYXRhLXNoYWRlPSI5NTAiXXstLXVpLWJvcmRlci1jb2xvcjojMWYxZjMxOy0tdWktYmc6IzAyMDIwZDstLXVpLXNvZnQtYmc6IzFmMWYzMX0uY29udGFpbmVye3dpZHRoOjEwMCV9QG1lZGlhIChtaW4td2lkdGg6NjQwcHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjY0MHB4fX1AbWVkaWEgKG1pbi13aWR0aDo3NjhweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6NzY4cHh9fUBtZWRpYSAobWluLXdpZHRoOjEwMjRweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6MTAyNHB4fX1AbWVkaWEgKG1pbi13aWR0aDoxMjgwcHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjEyODBweH19QG1lZGlhIChtaW4td2lkdGg6MTUzNnB4KXsuY29udGFpbmVye21heC13aWR0aDoxNTM2cHh9fS5pY29uLVxbdGFibGVyLS1yc3NcXXtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxZW07aGVpZ2h0OjFlbTtiYWNrZ3JvdW5kLWNvbG9yOmN1cnJlbnRDb2xvcjstd2Via2l0LW1hc2staW1hZ2U6dmFyKC0tc3ZnKTttYXNrLWltYWdlOnZhcigtLXN2Zyk7LXdlYmtpdC1tYXNrLXJlcGVhdDpuby1yZXBlYXQ7bWFzay1yZXBlYXQ6bm8tcmVwZWF0Oy13ZWJraXQtbWFzay1zaXplOjEwMCUgMTAwJTttYXNrLXNpemU6MTAwJSAxMDAlOy0tc3ZnOnVybCgiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmLTgsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzI0JyBoZWlnaHQ9JzI0JyUzRSUzQ3BhdGggZmlsbD0nbm9uZScgc3Ryb2tlPSclMjMwMDAnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNCAxOWExIDEgMCAxIDAgMiAwIDEgMSAwIDEgMC0yIDBNNCA0YTE2IDE2IDAgMCAxIDE2IDE2TTQgMTFhOSA5IDAgMCAxIDkgOScvJTNFJTNDL3N2ZyUzRSIpfS5saW5rey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiKDEyOSAxNDAgMjQ4L3ZhcigtLXR3LXRleHQtb3BhY2l0eSwxKSk7dHJhbnNpdGlvbi1wcm9wZXJ0eTpjb2xvcixiYWNrZ3JvdW5kLWNvbG9yLGJvcmRlci1jb2xvcix0ZXh0LWRlY29yYXRpb24tY29sb3IsZmlsbCxzdHJva2Usb3BhY2l0eSxib3gtc2hhZG93LHRyYW5zZm9ybSxmaWx0ZXIsLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI7dHJhbnNpdGlvbi1wcm9wZXJ0eTpjb2xvcixiYWNrZ3JvdW5kLWNvbG9yLGJvcmRlci1jb2xvcix0ZXh0LWRlY29yYXRpb24tY29sb3IsZmlsbCxzdHJva2Usb3BhY2l0eSxib3gtc2hhZG93LHRyYW5zZm9ybSxmaWx0ZXIsYmFja2Ryb3AtZmlsdGVyO3RyYW5zaXRpb24tcHJvcGVydHk6Y29sb3IsYmFja2dyb3VuZC1jb2xvcixib3JkZXItY29sb3IsdGV4dC1kZWNvcmF0aW9uLWNvbG9yLGZpbGwsc3Ryb2tlLG9wYWNpdHksYm94LXNoYWRvdyx0cmFuc2Zvcm0sZmlsdGVyLGJhY2tkcm9wLWZpbHRlciwtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjt0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQsMCwuMiwxKTt0cmFuc2l0aW9uLWR1cmF0aW9uOi4xNXN9LmxpbmsudmFyaWFudC1naG9zdDpob3ZlciwubGluay52YXJpYW50LXVuZGVybGluZWR7dGV4dC1kZWNvcmF0aW9uLWxpbmU6dW5kZXJsaW5lfS5saW5rLnZhcmlhbnQtYW5pbWF0ZWR7cG9zaXRpb246cmVsYXRpdmV9LmxpbmsudmFyaWFudC1hbmltYXRlZDpiZWZvcmV7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3JpZ2h0OjA7Ym90dG9tOjA7aGVpZ2h0OjFweDt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0Oy0tdHctc2NhbGUteDowO3RyYW5zZm9ybTp0cmFuc2xhdGUodmFyKC0tdHctdHJhbnNsYXRlLXgpLHZhcigtLXR3LXRyYW5zbGF0ZS15KSkgcm90YXRlKHZhcigtLXR3LXJvdGF0ZSkpIHNrZXdYKHZhcigtLXR3LXNrZXcteCkpIHNrZXdZKHZhcigtLXR3LXNrZXcteSkpIHNjYWxlWCh2YXIoLS10dy1zY2FsZS14KSkgc2NhbGVZKHZhcigtLXR3LXNjYWxlLXkpKTt0cmFuc2l0aW9uLXByb3BlcnR5OmNvbG9yLGJhY2tncm91bmQtY29sb3IsYm9yZGVyLWNvbG9yLHRleHQtZGVjb3JhdGlvbi1jb2xvcixmaWxsLHN0cm9rZSxvcGFjaXR5LGJveC1zaGFkb3csdHJhbnNmb3JtLGZpbHRlciwtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjt0cmFuc2l0aW9uLXByb3BlcnR5OmNvbG9yLGJhY2tncm91bmQtY29sb3IsYm9yZGVyLWNvbG9yLHRleHQtZGVjb3JhdGlvbi1jb2xvcixmaWxsLHN0cm9rZSxvcGFjaXR5LGJveC1zaGFkb3csdHJhbnNmb3JtLGZpbHRlcixiYWNrZHJvcC1maWx0ZXI7dHJhbnNpdGlvbi1wcm9wZXJ0eTpjb2xvcixiYWNrZ3JvdW5kLWNvbG9yLGJvcmRlci1jb2xvcix0ZXh0LWRlY29yYXRpb24tY29sb3IsZmlsbCxzdHJva2Usb3BhY2l0eSxib3gtc2hhZG93LHRyYW5zZm9ybSxmaWx0ZXIsYmFja2Ryb3AtZmlsdGVyLC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyO3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNCwwLC4yLDEpO2NvbnRlbnQ6dmFyKC0tdHctY29udGVudCk7dHJhbnNpdGlvbi1kdXJhdGlvbjouMnN9LmxpbmsudmFyaWFudC1hbmltYXRlZDpob3ZlcjpiZWZvcmV7dHJhbnNmb3JtLW9yaWdpbjpsZWZ0O2NvbnRlbnQ6dmFyKC0tdHctY29udGVudCk7LS10dy1zY2FsZS14OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZSh2YXIoLS10dy10cmFuc2xhdGUteCksdmFyKC0tdHctdHJhbnNsYXRlLXkpKSByb3RhdGUodmFyKC0tdHctcm90YXRlKSkgc2tld1godmFyKC0tdHctc2tldy14KSkgc2tld1kodmFyKC0tdHctc2tldy15KSkgc2NhbGVYKHZhcigtLXR3LXNjYWxlLXgpKSBzY2FsZVkodmFyKC0tdHctc2NhbGUteSkpfS5saW5rLmludGVudC1pbmZvey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiKDk2IDE2NSAyNTAvdmFyKC0tdHctdGV4dC1vcGFjaXR5LDEpKX0ubGluay5pbnRlbnQtbmV1dHJhbHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYigyNTUgMjU1IDI1NS92YXIoLS10dy10ZXh0LW9wYWNpdHksMSkpfS5saW5rLnZhcmlhbnQtYW5pbWF0ZWQuaW50ZW50LW5ldXRyYWw6YmVmb3Jle2NvbnRlbnQ6dmFyKC0tdHctY29udGVudCk7YmFja2dyb3VuZC1jb2xvcjpoc2xhKDAsMCUsMTAwJSwuNSl9LmxpbmsudmFyaWFudC1hbmltYXRlZC5pbnRlbnQtaW5mbzpiZWZvcmV7Y29udGVudDp2YXIoLS10dy1jb250ZW50KTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYigzNyA5OSAyMzUvdmFyKC0tdHctYmctb3BhY2l0eSwxKSl9LmxpbmsudmFyaWFudC1hbmltYXRlZC5pbnRlbnQtcHJpbWFyeTpiZWZvcmV7Y29udGVudDp2YXIoLS10dy1jb250ZW50KTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYig3OSA3MCAyMjkvdmFyKC0tdHctYmctb3BhY2l0eSwxKSl9LmxpbmsudmFyaWFudC1naG9zdC5pbnRlbnQtbmV1dHJhbCwubGluay52YXJpYW50LXVuZGVybGluZWQuaW50ZW50LW5ldXRyYWx7dGV4dC1kZWNvcmF0aW9uLWNvbG9yOmhzbGEoMCwwJSwxMDAlLC41KX0ubXgtYXV0b3ttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfS5teS0ye21hcmdpbi10b3A6LjVyZW07bWFyZ2luLWJvdHRvbTouNXJlbX0ubXktNnttYXJnaW4tdG9wOjEuNXJlbTttYXJnaW4tYm90dG9tOjEuNXJlbX0ubWItMnttYXJnaW4tYm90dG9tOi41cmVtfS5tYi02e21hcmdpbi1ib3R0b206MS41cmVtfS5tYi04e21hcmdpbi1ib3R0b206MnJlbX0ubWwtMXttYXJnaW4tbGVmdDouMjVyZW19Lm1sLTR7bWFyZ2luLWxlZnQ6MXJlbX0ubXItMnttYXJnaW4tcmlnaHQ6LjVyZW19Lm10LTF7bWFyZ2luLXRvcDouMjVyZW19Lm10LTJ7bWFyZ2luLXRvcDouNXJlbX0ubXQtM3ttYXJnaW4tdG9wOi43NXJlbX0uYmxvY2t7ZGlzcGxheTpibG9ja30uaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5pbmxpbmV7ZGlzcGxheTppbmxpbmV9LmZsZXh7ZGlzcGxheTpmbGV4fS5ncmlke2Rpc3BsYXk6Z3JpZH0uaGlkZGVue2Rpc3BsYXk6bm9uZX0uaC00e2hlaWdodDoxcmVtfS5oLTh7aGVpZ2h0OjJyZW19Lm1pbi1oLXNjcmVlbnttaW4taGVpZ2h0OjEwMHZofS5taW4taC1zdmh7bWluLWhlaWdodDoxMDBzdmh9LnctNHt3aWR0aDoxcmVtfS53LTh7d2lkdGg6MnJlbX0ubWF4LXctZnVsbHttYXgtd2lkdGg6MTAwJX0ubWF4LXctc2NyZWVuLWxne21heC13aWR0aDoxMDI0cHh9LmZsZXgtMXtmbGV4OjEgMSAwJX0uY3Vyc29yLXBvaW50ZXJ7Y3Vyc29yOnBvaW50ZXJ9Lmxpc3QtZGlzY3tsaXN0LXN0eWxlLXR5cGU6ZGlzY30uZ3JpZC1jb2xzLTF7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdCgxLG1pbm1heCgwLDFmcikpfS5mbGV4LWNvbHtmbGV4LWRpcmVjdGlvbjpjb2x1bW59Lml0ZW1zLWNlbnRlcnthbGlnbi1pdGVtczpjZW50ZXJ9Lmp1c3RpZnktYmV0d2VlbntqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0uZ2FwLTR7Z2FwOjFyZW19LmdhcC02e2dhcDoxLjVyZW19LmdhcC04e2dhcDoycmVtfS5zcGFjZS15LTI+Om5vdChbaGlkZGVuXSl+Om5vdChbaGlkZGVuXSl7LS10dy1zcGFjZS15LXJldmVyc2U6MDttYXJnaW4tdG9wOmNhbGMoLjVyZW0qKDEgLSB2YXIoLS10dy1zcGFjZS15LXJldmVyc2UpKSk7bWFyZ2luLWJvdHRvbTpjYWxjKC41cmVtKnZhcigtLXR3LXNwYWNlLXktcmV2ZXJzZSkpfS5zcGFjZS15LTM+Om5vdChbaGlkZGVuXSl+Om5vdChbaGlkZGVuXSl7LS10dy1zcGFjZS15LXJldmVyc2U6MDttYXJnaW4tdG9wOmNhbGMoLjc1cmVtKigxIC0gdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSkpO21hcmdpbi1ib3R0b206Y2FsYyguNzVyZW0qdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSl9LnNwYWNlLXktND46bm90KFtoaWRkZW5dKX46bm90KFtoaWRkZW5dKXstLXR3LXNwYWNlLXktcmV2ZXJzZTowO21hcmdpbi10b3A6Y2FsYygxcmVtKigxIC0gdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSkpO21hcmdpbi1ib3R0b206Y2FsYygxcmVtKnZhcigtLXR3LXNwYWNlLXktcmV2ZXJzZSkpfS5zcGFjZS15LTY+Om5vdChbaGlkZGVuXSl+Om5vdChbaGlkZGVuXSl7LS10dy1zcGFjZS15LXJldmVyc2U6MDttYXJnaW4tdG9wOmNhbGMoMS41cmVtKigxIC0gdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSkpO21hcmdpbi1ib3R0b206Y2FsYygxLjVyZW0qdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSl9LnNjcm9sbC1zbW9vdGh7c2Nyb2xsLWJlaGF2aW9yOnNtb290aH0udHJ1bmNhdGV7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwfS5iZy1ncmF5LTkyNXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYig5IDkgMjEvdmFyKC0tdHctYmctb3BhY2l0eSwxKSl9LmJnLWdyYWRpZW50LXRvLXJ7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsdmFyKC0tdHctZ3JhZGllbnQtc3RvcHMpKX0uZnJvbS1wcmltYXJ5LTYwMHstLXR3LWdyYWRpZW50LWZyb206IzRmNDZlNSB2YXIoLS10dy1ncmFkaWVudC1mcm9tLXBvc2l0aW9uKTstLXR3LWdyYWRpZW50LXRvOnJnYmEoNzksNzAsMjI5LDApIHZhcigtLXR3LWdyYWRpZW50LXRvLXBvc2l0aW9uKTstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLHZhcigtLXR3LWdyYWRpZW50LXRvKX0udG8tYWNjZW50LTQwMHstLXR3LWdyYWRpZW50LXRvOiNlODc5ZjkgdmFyKC0tdHctZ3JhZGllbnQtdG8tcG9zaXRpb24pfS5iZy1jbGlwLXRleHR7LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6dGV4dDtiYWNrZ3JvdW5kLWNsaXA6dGV4dH0ucC0xe3BhZGRpbmc6LjI1cmVtfS5weC00e3BhZGRpbmctbGVmdDoxcmVtO3BhZGRpbmctcmlnaHQ6MXJlbX0ucHktMntwYWRkaW5nLXRvcDouNXJlbTtwYWRkaW5nLWJvdHRvbTouNXJlbX0ucHktNHtwYWRkaW5nLXRvcDoxcmVtO3BhZGRpbmctYm90dG9tOjFyZW19LnB5LTZ7cGFkZGluZy10b3A6MS41cmVtO3BhZGRpbmctYm90dG9tOjEuNXJlbX0ucGwtNXtwYWRkaW5nLWxlZnQ6MS4yNXJlbX0ucHQtMntwYWRkaW5nLXRvcDouNXJlbX0udGV4dC1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXJ9LmZvbnQtc2Fuc3tmb250LWZhbWlseTp1aS1zYW5zLXNlcmlmLHN5c3RlbS11aSxzYW5zLXNlcmlmLEFwcGxlIENvbG9yIEVtb2ppLFNlZ29lIFVJIEVtb2ppLFNlZ29lIFVJIFN5bWJvbCxOb3RvIENvbG9yIEVtb2ppfS50ZXh0LTJ4bHtmb250LXNpemU6MS41cmVtO2xpbmUtaGVpZ2h0OjJyZW19LnRleHQtbGd7Zm9udC1zaXplOjEuMTI1cmVtO2xpbmUtaGVpZ2h0OjEuNzVyZW19LnRleHQtc217Zm9udC1zaXplOi44NzVyZW07bGluZS1oZWlnaHQ6MS4yNXJlbX0udGV4dC14c3tmb250LXNpemU6Ljc1cmVtO2xpbmUtaGVpZ2h0OjFyZW19LmZvbnQtYm9sZHtmb250LXdlaWdodDo3MDB9LmZvbnQtbWVkaXVte2ZvbnQtd2VpZ2h0OjUwMH0uZm9udC1zZW1pYm9sZHtmb250LXdlaWdodDo2MDB9LmxlYWRpbmctbm9ybWFse2xpbmUtaGVpZ2h0OjEuNX0udGV4dC1ncmF5LTQwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYigxNjggMTY4IDE4NC92YXIoLS10dy10ZXh0LW9wYWNpdHksMSkpfS50ZXh0LWdyYXktNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiKDExMCAxMTAgMTI5L3ZhcigtLXR3LXRleHQtb3BhY2l0eSwxKSl9LnRleHQtdHJhbnNwYXJlbnR7Y29sb3I6dHJhbnNwYXJlbnR9LmFudGlhbGlhc2Vkey13ZWJraXQtZm9udC1zbW9vdGhpbmc6YW50aWFsaWFzZWQ7LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlfS50cmFuc2l0aW9ue3RyYW5zaXRpb24tcHJvcGVydHk6Y29sb3IsYmFja2dyb3VuZC1jb2xvcixib3JkZXItY29sb3IsdGV4dC1kZWNvcmF0aW9uLWNvbG9yLGZpbGwsc3Ryb2tlLG9wYWNpdHksYm94LXNoYWRvdyx0cmFuc2Zvcm0sZmlsdGVyLC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyO3RyYW5zaXRpb24tcHJvcGVydHk6Y29sb3IsYmFja2dyb3VuZC1jb2xvcixib3JkZXItY29sb3IsdGV4dC1kZWNvcmF0aW9uLWNvbG9yLGZpbGwsc3Ryb2tlLG9wYWNpdHksYm94LXNoYWRvdyx0cmFuc2Zvcm0sZmlsdGVyLGJhY2tkcm9wLWZpbHRlcjt0cmFuc2l0aW9uLXByb3BlcnR5OmNvbG9yLGJhY2tncm91bmQtY29sb3IsYm9yZGVyLWNvbG9yLHRleHQtZGVjb3JhdGlvbi1jb2xvcixmaWxsLHN0cm9rZSxvcGFjaXR5LGJveC1zaGFkb3csdHJhbnNmb3JtLGZpbHRlcixiYWNrZHJvcC1maWx0ZXIsLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI7dHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40LDAsLjIsMSk7dHJhbnNpdGlvbi1kdXJhdGlvbjouMTVzfS50ZXh0LXRpdGxle2NvbG9yOnZhcigtLXRpdGxlLXRleHQtY29sb3IpfS50ZXh0LWJvZHl7Y29sb3I6dmFyKC0tYm9keS10ZXh0LWNvbG9yKX0uXCF0ZXh0LWNhcHRpb257Y29sb3I6dmFyKC0tY2FwdGlvbi10ZXh0LWNvbG9yKSFpbXBvcnRhbnR9LnRleHQtY2FwdGlvbntjb2xvcjp2YXIoLS1jYXB0aW9uLXRleHQtY29sb3IpfS5kYXJrey0tZGlzcGxheS10ZXh0LWNvbG9yOiNmZmY7LS10aXRsZS10ZXh0LWNvbG9yOnZhcigtLWRpc3BsYXktdGV4dC1jb2xvcik7LS1jYXB0aW9uLXRleHQtY29sb3I6IzZlNmU4MTstLWJvZHktdGV4dC1jb2xvcjojZDZkNmUxOy0tcGxhY2Vob2xkZXItdGV4dC1jb2xvcjojNGQ0ZDVmOy0tdWktYm9yZGVyLWNvbG9yOiMyMzIzMjN9W2RhdGEtc2hhZGU9IjkwMCJdOndoZXJlKC5kYXJrLC5kYXJrICopLFtkYXRhLXNoYWRlPSI5MjUiXTp3aGVyZSguZGFyaywuZGFyayAqKSxbZGF0YS1zaGFkZT0iOTUwIl06d2hlcmUoLmRhcmssLmRhcmsgKil7LS11aS1ib3JkZXItY29sb3I6IzM4MzgzOH0uaG92ZXJcOnRleHQtZ3JheS0zMDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2IoMjE0IDIxNCAyMjUvdmFyKC0tdHctdGV4dC1vcGFjaXR5LDEpKX0uZ3JvdXBbb3Blbl0gLmdyb3VwLW9wZW5cOnJvdGF0ZS0xODB7LS10dy1yb3RhdGU6MTgwZGVnO3RyYW5zZm9ybTp0cmFuc2xhdGUodmFyKC0tdHctdHJhbnNsYXRlLXgpLHZhcigtLXR3LXRyYW5zbGF0ZS15KSkgcm90YXRlKHZhcigtLXR3LXJvdGF0ZSkpIHNrZXdYKHZhcigtLXR3LXNrZXcteCkpIHNrZXdZKHZhcigtLXR3LXNrZXcteSkpIHNjYWxlWCh2YXIoLS10dy1zY2FsZS14KSkgc2NhbGVZKHZhcigtLXR3LXNjYWxlLXkpKX1AbWVkaWEgKG1pbi13aWR0aDo3NjhweCl7Lm1kXDpncmlkLWNvbHMtMntncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDIsbWlubWF4KDAsMWZyKSl9Lm1kXDpwLTR7cGFkZGluZzoxcmVtfS5tZFw6cHgtNntwYWRkaW5nLWxlZnQ6MS41cmVtO3BhZGRpbmctcmlnaHQ6MS41cmVtfS5tZFw6cHQtNntwYWRkaW5nLXRvcDoxLjVyZW19fUBtZWRpYSAobWluLXdpZHRoOjEwMjRweCl7LmxnXDpncmlkLWNvbHMtM3tncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDMsbWlubWF4KDAsMWZyKSl9LmxnXDpkYXJrXDpiZy1ncmF5LTkwMDppcyguZGFyayAqKXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYigxOCAxOCAzMi92YXIoLS10dy1iZy1vcGFjaXR5LDEpKX19PC9zdHlsZT48L2hlYWQ+PGJvZHkgY2xhc3M9ImJnLWdyYXktOTI1IG1pbi1oLXNjcmVlbiBtaW4taC1zdmggZm9udC1zYW5zIGxlYWRpbmctbm9ybWFsIGFudGlhbGlhc2VkIGxnOmRhcms6YmctZ3JheS05MDAiPjxtYWluIGNsYXNzPSJtaW4tdy1zY3JlZW4gY29udGFpbmVyIG14LWF1dG8gZmxleCBtaW4taC1zY3JlZW4gbWF4LXctc2NyZWVuLWxnIGZsZXgtY29sIHB4LTQgcHktNiBtZDpweC02Ij48aGVhZGVyIGNsYXNzPSJzcGFjZS15LTIgcHQtMiBtZDpwdC02Ij48YSB0aXRsZT0ieyR0aXRsZX0iIGhyZWY9InskbGlua30iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPjxoMSBjbGFzcz0iZmxleCB0ZXh0LTJ4bCI+PHNwYW4gY2xhc3M9Imljb24tW3RhYmxlci0tcnNzXSBtci0yIGgtOCB3LTgiLz48c3BhbiBjbGFzcz0ibGcyOnRleHQtM3hsIGZyb20tcHJpbWFyeS02MDAgdG8tYWNjZW50LTQwMCBpbmxpbmUtYmxvY2sgYmctZ3JhZGllbnQtdG8tciBiZy1jbGlwLXRleHQgZm9udC1ib2xkIHRleHQtdHJhbnNwYXJlbnQiPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkdGl0bGUiIGRpc2FibGUtb3V0cHV0LWVzY2FwaW5nPSJ5ZXMiLz48L3NwYW4+PC9oMT48L2E+PHAgY2xhc3M9InRleHQtYm9keSBwdC0yIHRleHQtbGcgcHktNCI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9IiRkZXNjcmlwdGlvbiIgZGlzYWJsZS1vdXRwdXQtZXNjYXBpbmc9InllcyIvPjwvcD48cCBjbGFzcz0idGV4dC1jYXB0aW9uIHRleHQtc20iPg0KICAgICAgICAgICAgICBUaGlzIFJTUyBmZWVkIGZvciB0aGUNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCAhdGV4dC1jYXB0aW9uIGZvbnQtYm9sZCIgdGl0bGU9InskdGl0bGV9IiBocmVmPSJ7JGxpbmt9IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iJHRpdGxlIi8+PC9hPg0KICAgICAgICAgICAgICB3ZWJzaXRlLg0KICAgICAgICAgICAgPC9wPjxwIGNsYXNzPSJ0ZXh0LWJvZHkgdGV4dC1zbSBoaWRkZW4iIGlkPSJzdWJzY3JpYmUtbGlua3MiPg0KICAgICAgICAgICAgICBZb3UgY2FuIHN1YnNjcmliZSB0aGlzIFJTUyBmZWVkIGJ5DQogICAgICAgICAgICAgIDxhIGNsYXNzPSJsaW5rIGludGVudC1uZXV0cmFsIHZhcmlhbnQtYW5pbWF0ZWQgZm9udC1ib2xkIiB0aXRsZT0iRmVlZGx5IiBkYXRhLWhyZWY9Imh0dHBzOi8vZmVlZGx5LmNvbS9pL3N1YnNjcmlwdGlvbi9mZWVkLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RmVlZGx5PC9hPiwNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCBmb250LWJvbGQiIHRpdGxlPSJJbm9yZWFkZXIiIGRhdGEtaHJlZj0iaHR0cHM6Ly93d3cuaW5vcmVhZGVyLmNvbS9mZWVkLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+SW5vcmVhZGVyPC9hPiwNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCBmb250LWJvbGQiIHRpdGxlPSJOZXdzYmx1ciIgZGF0YS1ocmVmPSJodHRwczovL3d3dy5uZXdzYmx1ci5jb20vP3VybD0iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPk5ld3NibHVyPC9hPiwNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCBmb250LWJvbGQiIHRpdGxlPSJGb2xsb3ciIGRhdGEtaHJlZj0iZm9sbG93Oi8vYWRkP3VybD0iIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+Rm9sbG93PC9hPiwNCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmsgaW50ZW50LW5ldXRyYWwgdmFyaWFudC1hbmltYXRlZCBmb250LWJvbGQiIHRpdGxlPSJSU1MgUmVhZGVyIiBkYXRhLWhyZWY9ImZlZWQ6IiBkYXRhLXJhdz0idHJ1ZSIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5SU1MgUmVhZGVyPC9hPg0KICAgICAgICAgICAgICBvcg0KICAgICAgICAgICAgICA8YSBjbGFzcz0ibGluayBpbnRlbnQtbmV1dHJhbCB2YXJpYW50LWFuaW1hdGVkIGZvbnQtYm9sZCIgdGl0bGU9InskdGl0bGV9ICdzIGZlZWQgc291cmNlIiBkYXRhLWhyZWY9IiIgZGF0YS1yYXc9InRydWUiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+VmlldyBTb3VyY2U8L2E+Lg0KICAgICAgICAgICAgPC9wPjxzY3JpcHQ+DQogICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYVtkYXRhLWhyZWZdJykuZm9yRWFjaChmdW5jdGlvbiAoYSkgew0KICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChsb2NhdGlvbi5ocmVmKQ0KICAgICAgICAgICAgICAgICAgY29uc3QgZmVlZCA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KCd1cmwnKSB8fCBsb2NhdGlvbi5ocmVmDQogICAgICAgICAgICAgICAgICBjb25zdCByYXcgPSBhLmdldEF0dHJpYnV0ZSgnZGF0YS1yYXcnKQ0KICAgICAgICAgICAgICAgICAgaWYgKHJhdykgew0KICAgICAgICAgICAgICAgICAgICBhLmhyZWYgPSBhLmdldEF0dHJpYnV0ZSgnZGF0YS1ocmVmJykgKyBmZWVkDQogICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBhLmhyZWYgPSBhLmdldEF0dHJpYnV0ZSgnZGF0YS1ocmVmJykgKyBlbmNvZGVVUklDb21wb25lbnQoZmVlZCkNCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJzY3JpYmUtbGlua3MnKS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKQ0KICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgPC9zY3JpcHQ+PC9oZWFkZXI+PGhyIGNsYXNzPSJteS02Ii8+PHNlY3Rpb24gY2xhc3M9ImZsZXgtMSBzcGFjZS15LTYgcC0xIG1kOnAtNCI+PHhzbDpjaG9vc2U+PHhzbDp3aGVuIHRlc3Q9Ii9yc3MvY2hhbm5lbC9pdGVtIj48eHNsOmZvci1lYWNoIHNlbGVjdD0iL3Jzcy9jaGFubmVsL2l0ZW0iPjxhcnRpY2xlIGNsYXNzPSJzcGFjZS15LTIiPjxkZXRhaWxzPjxzdW1tYXJ5IGNsYXNzPSJtYXgtdy1mdWxsIHRydW5jYXRlIj48eHNsOmlmIHRlc3Q9InRpdGxlIj48aDIgY2xhc3M9InRleHQtdGl0bGUgaW5saW5lIGN1cnNvci1wb2ludGVyIHRleHQtbGcgZm9udC1zZW1pYm9sZCI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9InRpdGxlIiBkaXNhYmxlLW91dHB1dC1lc2NhcGluZz0ieWVzIi8+PC9oMj48L3hzbDppZj48eHNsOmlmIHRlc3Q9InB1YkRhdGUiPjx0aW1lIGNsYXNzPSJ0ZXh0LWNhcHRpb24gbWwtNCBtdC0xIGJsb2NrIHRleHQtc20iPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJwdWJEYXRlIi8+PC90aW1lPjwveHNsOmlmPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LWJvZHkgcHgtNCBweS0yIj48cCBjbGFzcz0ibXktMiI+PHhzbDpjaG9vc2U+PHhzbDp3aGVuIHRlc3Q9ImRlc2NyaXB0aW9uIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iZGVzY3JpcHRpb24iIGRpc2FibGUtb3V0cHV0LWVzY2FwaW5nPSJ5ZXMiLz48L3hzbDp3aGVuPjwveHNsOmNob29zZT48L3A+PHhzbDppZiB0ZXN0PSJsaW5rIj48YSBjbGFzcz0ibGluayB2YXJpYW50LWFuaW1hdGVkIGludGVudC1uZXV0cmFsIGZvbnQtYm9sZCIgaHJlZj0ie2xpbmt9IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFkIE1vcmUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjwveHNsOmlmPjwvZGl2PjwvZGV0YWlscz48L2FydGljbGU+PC94c2w6Zm9yLWVhY2g+PC94c2w6d2hlbj48eHNsOndoZW4gdGVzdD0iL2F0b206ZmVlZC9hdG9tOmVudHJ5Ij48eHNsOmZvci1lYWNoIHNlbGVjdD0iL2F0b206ZmVlZC9hdG9tOmVudHJ5Ij48YXJ0aWNsZSBjbGFzcz0ic3BhY2UteS0yIj48ZGV0YWlscz48c3VtbWFyeSBjbGFzcz0ibWF4LXctZnVsbCB0cnVuY2F0ZSI+PHhzbDppZiB0ZXN0PSJhdG9tOnRpdGxlIj48aDIgY2xhc3M9InRleHQtdGl0bGUgaW5saW5lIGN1cnNvci1wb2ludGVyIHRleHQtbGcgZm9udC1zZW1pYm9sZCI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImF0b206dGl0bGUiIGRpc2FibGUtb3V0cHV0LWVzY2FwaW5nPSJ5ZXMiLz48L2gyPjwveHNsOmlmPjx4c2w6aWYgdGVzdD0iYXRvbTp1cGRhdGVkIj48dGltZSBjbGFzcz0idGV4dC1jYXB0aW9uIG1sLTQgbXQtMSBibG9jayB0ZXh0LXNtIj48eHNsOnZhbHVlLW9mIHNlbGVjdD0iYXRvbTp1cGRhdGVkIi8+PC90aW1lPjwveHNsOmlmPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LWJvZHkgcHgtNCBweS0yIj48cCBjbGFzcz0ibXktMiI+PHhzbDpjaG9vc2U+PHhzbDp3aGVuIHRlc3Q9ImF0b206c3VtbWFyeSI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImF0b206c3VtbWFyeSIgZGlzYWJsZS1vdXRwdXQtZXNjYXBpbmc9InllcyIvPjwveHNsOndoZW4+PHhzbDp3aGVuIHRlc3Q9ImF0b206Y29udGVudCI+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImF0b206Y29udGVudCIgZGlzYWJsZS1vdXRwdXQtZXNjYXBpbmc9InllcyIvPjwveHNsOndoZW4+PC94c2w6Y2hvb3NlPjwvcD48eHNsOmlmIHRlc3Q9ImF0b206bGluay9AaHJlZiI+PGEgY2xhc3M9ImxpbmsgdmFyaWFudC1hbmltYXRlZCBpbnRlbnQtbmV1dHJhbCBmb250LWJvbGQiIGhyZWY9InthdG9tOmxpbmsvQGhyZWZ9IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFkIE1vcmUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjwveHNsOmlmPjwvZGl2PjwvZGV0YWlscz48L2FydGljbGU+PC94c2w6Zm9yLWVhY2g+PC94c2w6d2hlbj48L3hzbDpjaG9vc2U+PC9zZWN0aW9uPjxociBjbGFzcz0ibXktNiIvPjxmb290ZXIgY2xhc3M9InRleHQtZ3JheS00MDAiPjxkaXYgY2xhc3M9ImNvbnRhaW5lciBteC1hdXRvIHB4LTQiPjxkaXYgY2xhc3M9Im1iLTgiPjxoMyBjbGFzcz0idGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtdGl0bGUgbWItNiI+UG9wdWxhciBGZWVkIENvbGxlY3Rpb25zPC9oMz48ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGxnOmdyaWQtY29scy0zIGdhcC02Ij48ZGl2IGNsYXNzPSJzcGFjZS15LTMiPjxhIGhyZWY9Imh0dHBzOi8vcmVkcmVhbWFsaXR5LmNvbS9HaXRIdWJUcmVuZGluZ1JTUy93ZWVrbHkvcHl0aG9uLnhtbCIgY2xhc3M9ImJsb2NrIGhvdmVyOnRleHQtZ3JheS0zMDAiPjxkaXYgY2xhc3M9ImZvbnQtbWVkaXVtIj7wn5CNIFB5dGhvbiBUcmVuZFdhdGNoPC9kaXY+PGRpdiBjbGFzcz0idGV4dC14cyB0ZXh0LWdyYXktNTAwIj5BSSwgTUwgJmFtcDsgRGF0YSBTY2llbmNlIElubm92YXRpb24gRmVlZDwvZGl2PjwvYT48YSBocmVmPSJodHRwczovL3JlZHJlYW1hbGl0eS5jb20vR2l0SHViVHJlbmRpbmdSU1Mvd2Vla2x5L2N1ZGEueG1sIiBjbGFzcz0iYmxvY2sgaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGRpdiBjbGFzcz0iZm9udC1tZWRpdW0iPuKaoSBDVURBIEFjY2VsZXJhdG9yPC9kaXY+PGRpdiBjbGFzcz0idGV4dC14cyB0ZXh0LWdyYXktNTAwIj5HUFUgQ29tcHV0aW5nICZhbXA7IERlZXAgTGVhcm5pbmcgVXBkYXRlczwvZGl2PjwvYT48YSBocmVmPSJodHRwczovL3JlZHJlYW1hbGl0eS5jb20vR2l0SHViVHJlbmRpbmdSU1Mvd2Vla2x5L21hdGxhYi54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+noCBNQVRMQUIgVHJlbmRQdWxzZTwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+TUVHLCBFRUcgYW5kIGlFRUcgUmVzZWFyY2ggRmVlZDwvZGl2PjwvYT48L2Rpdj48ZGl2IGNsYXNzPSJzcGFjZS15LTMiPjxhIGhyZWY9Imh0dHBzOi8vcmVkcmVhbWFsaXR5LmNvbS9HaXRIdWJUcmVuZGluZ1JTUy93ZWVrbHkvcnVzdC54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+mgCBSdXN0IFN5c3RlbXMgRmVlZDwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+SGlnaC1QZXJmb3JtYW5jZSAmYW1wOyBTYWZlIFN5c3RlbXMgUHJvZ3JhbW1pbmc8L2Rpdj48L2E+PGEgaHJlZj0iaHR0cHM6Ly9yZWRyZWFtYWxpdHkuY29tL0dpdEh1YlRyZW5kaW5nUlNTL3dlZWtseS9nby54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+agCBHbyBJbmZyYXN0cnVjdHVyZTwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+Q2xvdWQgTmF0aXZlICZhbXA7IERldk9wcyBFeGNlbGxlbmNlPC9kaXY+PC9hPjxhIGhyZWY9Imh0dHBzOi8vcmVkcmVhbWFsaXR5LmNvbS9HaXRIdWJUcmVuZGluZ1JTUy93ZWVrbHkvdHlwZXNjcmlwdC54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+TsSBUeXBlU2NyaXB0IEVjb3N5c3RlbTwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+TW9kZXJuIFdlYiAmYW1wOyBBcHAgRGV2ZWxvcG1lbnQ8L2Rpdj48L2E+PC9kaXY+PGRpdiBjbGFzcz0ic3BhY2UteS0zIj48YSBocmVmPSJodHRwczovL3JlZHJlYW1hbGl0eS5jb20vR2l0SHViVHJlbmRpbmdSU1MvZGFpbHkvYWRibG9jay1maWx0ZXItbGlzdC54bWwiIGNsYXNzPSJibG9jayBob3Zlcjp0ZXh0LWdyYXktMzAwIj48ZGl2IGNsYXNzPSJmb250LW1lZGl1bSI+8J+boe+4jyBQcml2YWN5IFNoaWVsZDwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+QWRCbG9jayAmYW1wOyBTZWN1cml0eSBVcGRhdGVzPC9kaXY+PC9hPjxhIGhyZWY9Imh0dHBzOi8vcmVkcmVhbWFsaXR5LmNvbS9HaXRIdWJUcmVuZGluZ1JTUy9kYWlseS9hbGwueG1sIiBjbGFzcz0iYmxvY2sgaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGRpdiBjbGFzcz0iZm9udC1tZWRpdW0iPvCfjJ8gR2xvYmFsIFRlY2hSYWRhcjwvZGl2PjxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+Q3Jvc3MtTGFuZ3VhZ2UgSW5ub3ZhdGlvbiBQdWxzZSwgYWRkIGl0IHRvIHlvdXIgUlNTIHJlYWRlciByc3NodWI6Ly9naXRodWIvdHJlbmRpbmcvbW9udGhseS9hbnkvemg8L2Rpdj48L2E+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtOCBtYi04Ij48ZGl2IGNsYXNzPSJzcGFjZS15LTQiPjxoMyBjbGFzcz0idGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtdGl0bGUiPkdldHRpbmcgU3RhcnRlZDwvaDM+PGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtMSBnYXAtNCI+PGRldGFpbHMgY2xhc3M9Imdyb3VwIj48c3VtbWFyeSBjbGFzcz0iZmxleCBjdXJzb3ItcG9pbnRlciBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIGhvdmVyOnRleHQtZ3JheS0zMDAiPjxoNCBjbGFzcz0iZm9udC1tZWRpdW0iPvCfk5YgRmVlZCBJbnRlZ3JhdGlvbiBHdWlkZTwvaDQ+PHNwYW4gY2xhc3M9InRyYW5zaXRpb24gZ3JvdXAtb3Blbjpyb3RhdGUtMTgwIj48c3ZnIGZpbGw9Im5vbmUiIGhlaWdodD0iMjQiIHNoYXBlLXJlbmRlcmluZz0iZ2VvbWV0cmljUHJlY2lzaW9uIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjEuNSIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPjxwYXRoIGQ9Ik02IDlsNiA2IDYtNiIvPjwvc3ZnPjwvc3Bhbj48L3N1bW1hcnk+PGRpdiBjbGFzcz0idGV4dC1zbSB0ZXh0LWdyYXktNTAwIG10LTMgZ3JvdXAtb3BlbjphbmltYXRlLWZhZGVJbiI+PHAgY2xhc3M9Im1iLTIiPjEuIENob29zZSBZb3VyIFJTUyBSZWFkZXI6PC9wPjx1bCBjbGFzcz0ibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0yIj48bGk+RmVlZGx5OiBQcm9mZXNzaW9uYWwgY2hvaWNlIGZvciBjcm9zcy1wbGF0Zm9ybSBzeW5jPC9saT48bGk+SW5vcmVhZGVyOiBBZHZhbmNlZCBmaWx0ZXJpbmcgY2FwYWJpbGl0aWVzPC9saT48bGk+TmV0TmV3c1dpcmU6IFBlcmZlY3QgZm9yIG1hY09TL2lPUyB1c2VyczwvbGk+PGxpPkZyZXNoUlNTOiBTZWxmLWhvc3RlZCBvcHRpb24gd2l0aCBmdWxsIGNvbnRyb2w8L2xpPjwvdWw+PHAgY2xhc3M9Im10LTMgbWItMiI+Mi4gQWRkIE91ciBGZWVkczo8L3A+PHVsIGNsYXNzPSJsaXN0LWRpc2MgcGwtNSBzcGFjZS15LTIiPjxsaT5Db3B5IHRoZSBmZWVkIFVSTCAoZS5nLiwgcnNzaHViOi8vZ2l0aHViL3RyZW5kaW5nL21vbnRobHkvYW55L3poKTwvbGk+PGxpPkluIHlvdXIgUlNTIHJlYWRlciwgbG9vayBmb3IgIkFkZCBGZWVkIiBvciAiU3Vic2NyaWJlIjwvbGk+PGxpPlBhc3RlIHRoZSBVUkwgYW5kIGN1c3RvbWl6ZSB1cGRhdGUgZnJlcXVlbmN5PC9saT48L3VsPjwvZGl2PjwvZGV0YWlscz48ZGV0YWlscyBjbGFzcz0iZ3JvdXAiPjxzdW1tYXJ5IGNsYXNzPSJmbGV4IGN1cnNvci1wb2ludGVyIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGg0IGNsYXNzPSJmb250LW1lZGl1bSI+8J+OryBDdXN0b20gRmVlZCBDcmVhdGlvbjwvaDQ+PHNwYW4gY2xhc3M9InRyYW5zaXRpb24gZ3JvdXAtb3Blbjpyb3RhdGUtMTgwIj48c3ZnIGZpbGw9Im5vbmUiIGhlaWdodD0iMjQiIHNoYXBlLXJlbmRlcmluZz0iZ2VvbWV0cmljUHJlY2lzaW9uIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjEuNSIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPjxwYXRoIGQ9Ik02IDlsNiA2IDYtNiIvPjwvc3ZnPjwvc3Bhbj48L3N1bW1hcnk+PGRpdiBjbGFzcz0idGV4dC1zbSB0ZXh0LWdyYXktNTAwIG10LTMgZ3JvdXAtb3BlbjphbmltYXRlLWZhZGVJbiI+PHAgY2xhc3M9Im1iLTIiPkNyZWF0ZSBZb3VyIFBlcmZlY3QgRmVlZDo8L3A+PHVsIGNsYXNzPSJsaXN0LWRpc2MgcGwtNSBzcGFjZS15LTIiPjxsaT5MYW5ndWFnZS1zcGVjaWZpYzogL0dpdEh1YlRyZW5kaW5nUlNTL1tmcmVxdWVuY3ldL1tsYW5ndWFnZV0ueG1sPC9saT48bGk+VG9waWMtZm9jdXNlZDogQ29tYmluZSBtdWx0aXBsZSBsYW5ndWFnZSBmZWVkczwvbGk+PGxpPkN1c3RvbSB0aW1lIHJhbmdlczogZGFpbHksIHdlZWtseSwgb3IgbW9udGhseSB1cGRhdGVzPC9saT48bGk+UmVnaW9uYWwgZmVlZHM6IEZvY3VzIG9uIHNwZWNpZmljIGRldmVsb3BlciBjb21tdW5pdGllczwvbGk+PC91bD48cCBjbGFzcz0ibXQtMyI+UHJvIHRpcDogVXNlIHRhZ3MgaW4geW91ciBSU1MgcmVhZGVyIHRvIG9yZ2FuaXplIGZlZWRzIGJ5IHRvcGljLCBsYW5ndWFnZSwgb3IgcHJpb3JpdHkuPC9wPjwvZGl2PjwvZGV0YWlscz48ZGV0YWlscyBjbGFzcz0iZ3JvdXAiPjxzdW1tYXJ5IGNsYXNzPSJmbGV4IGN1cnNvci1wb2ludGVyIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGg0IGNsYXNzPSJmb250LW1lZGl1bSI+4pqhIEZlZWQgTWFuYWdlbWVudCBUaXBzPC9oND48c3BhbiBjbGFzcz0idHJhbnNpdGlvbiBncm91cC1vcGVuOnJvdGF0ZS0xODAiPjxzdmcgZmlsbD0ibm9uZSIgaGVpZ2h0PSIyNCIgc2hhcGUtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNCI+PHBhdGggZD0iTTYgOWw2IDYgNi02Ii8+PC9zdmc+PC9zcGFuPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgbXQtMyBncm91cC1vcGVuOmFuaW1hdGUtZmFkZUluIj48cCBjbGFzcz0ibWItMiI+T3B0aW1pemUgWW91ciBGZWVkIFJlYWRpbmc6PC9wPjx1bCBjbGFzcz0ibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0yIj48bGk+U2V0IHVwZGF0ZSBmcmVxdWVuY2llcyBiYXNlZCBvbiBmZWVkIGltcG9ydGFuY2U8L2xpPjxsaT5Vc2UgZm9sZGVycyB0byBncm91cCByZWxhdGVkIGZlZWRzIChlLmcuLCBBSS9NTCwgV2ViIERldik8L2xpPjxsaT5FbmFibGUgbm90aWZpY2F0aW9ucyBvbmx5IGZvciBoaWdoLXByaW9yaXR5IGZlZWRzPC9saT48bGk+QXJjaGl2ZSB2YWx1YWJsZSByZXNvdXJjZXMgZm9yIGZ1dHVyZSByZWZlcmVuY2U8L2xpPjwvdWw+PHAgY2xhc3M9Im10LTMiPkFkdmFuY2VkIEZlYXR1cmVzOjwvcD48dWwgY2xhc3M9Imxpc3QtZGlzYyBwbC01IHNwYWNlLXktMiI+PGxpPkZpbHRlciBmZWVkcyB1c2luZyBrZXl3b3JkcyB0byBmb2N1cyBvbiBzcGVjaWZpYyB0b3BpY3M8L2xpPjxsaT5TZXQgdXAgSUZUVFQgaW50ZWdyYXRpb25zIGZvciBhdXRvbWF0ZWQgd29ya2Zsb3dzPC9saT48bGk+RXhwb3J0L2JhY2t1cCB5b3VyIGZlZWQgY29sbGVjdGlvbiByZWd1bGFybHk8L2xpPjwvdWw+PC9kaXY+PC9kZXRhaWxzPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InNwYWNlLXktNCI+PGgzIGNsYXNzPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC10aXRsZSI+Q29tbW9uIFF1ZXN0aW9uczwvaDM+PGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtMSBnYXAtNCI+PGRldGFpbHMgY2xhc3M9Imdyb3VwIj48c3VtbWFyeSBjbGFzcz0iZmxleCBjdXJzb3ItcG9pbnRlciBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIGhvdmVyOnRleHQtZ3JheS0zMDAiPjxoNCBjbGFzcz0iZm9udC1tZWRpdW0iPvCfpJQgQWJvdXQgR2l0aHViIFJhZGFyPC9oND48c3BhbiBjbGFzcz0idHJhbnNpdGlvbiBncm91cC1vcGVuOnJvdGF0ZS0xODAiPjxzdmcgZmlsbD0ibm9uZSIgaGVpZ2h0PSIyNCIgc2hhcGUtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNCI+PHBhdGggZD0iTTYgOWw2IDYgNi02Ii8+PC9zdmc+PC9zcGFuPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgbXQtMyBncm91cC1vcGVuOmFuaW1hdGUtZmFkZUluIj48cCBjbGFzcz0ibWItMiI+R2l0aHViIFJhZGFyIGlzIHlvdXIgaW50ZWxsaWdlbnQgY3VyYXRvciBmb3I6PC9wPjx1bCBjbGFzcz0ibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0yIj48bGk+VHJlbmRpbmcgcmVwb3NpdG9yaWVzIGFjcm9zcyBhbGwgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzPC9saT48bGk+TGFuZ3VhZ2Utc3BlY2lmaWMgaW5ub3ZhdGlvbiBhbmQgdXBkYXRlczwvbGk+PGxpPlJlZ2lvbmFsIGRldmVsb3BtZW50IHRyZW5kcyBhbmQgcGF0dGVybnM8L2xpPjxsaT5PcGVuIHNvdXJjZSBjb21tdW5pdHkgbW92ZW1lbnRzPC9saT48L3VsPjxwIGNsYXNzPSJtdC0zIj5PdXIgbWlzc2lvbiBpcyB0byBoZWxwIGRldmVsb3BlcnMgc3RheSB1cGRhdGVkIHdpdGggbWluaW1hbCBlZmZvcnQgdGhyb3VnaCBzbWFydCBmZWVkIGN1cmF0aW9uIGFuZCBvcmdhbml6YXRpb24uPC9wPjwvZGl2PjwvZGV0YWlscz48ZGV0YWlscyBjbGFzcz0iZ3JvdXAiPjxzdW1tYXJ5IGNsYXNzPSJmbGV4IGN1cnNvci1wb2ludGVyIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGg0IGNsYXNzPSJmb250LW1lZGl1bSI+8J+TiiBGZWVkIEZyZXF1ZW5jeSBPcHRpb25zPC9oND48c3BhbiBjbGFzcz0idHJhbnNpdGlvbiBncm91cC1vcGVuOnJvdGF0ZS0xODAiPjxzdmcgZmlsbD0ibm9uZSIgaGVpZ2h0PSIyNCIgc2hhcGUtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNCI+PHBhdGggZD0iTTYgOWw2IDYgNi02Ii8+PC9zdmc+PC9zcGFuPjwvc3VtbWFyeT48ZGl2IGNsYXNzPSJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgbXQtMyBncm91cC1vcGVuOmFuaW1hdGUtZmFkZUluIj48cCBjbGFzcz0ibWItMiI+Q2hvb3NlIFlvdXIgVXBkYXRlIFJoeXRobTo8L3A+PHVsIGNsYXNzPSJsaXN0LWRpc2MgcGwtNSBzcGFjZS15LTIiPjxsaT5EYWlseTogUGVyZmVjdCBmb3IgZmFzdC1tb3ZpbmcgdGVjaG5vbG9naWVzIGFuZCBzZWN1cml0eSB1cGRhdGVzPC9saT48bGk+V2Vla2x5OiBJZGVhbCBmb3IgbWFpbnRhaW5pbmcgYXdhcmVuZXNzIHdpdGhvdXQgb3ZlcndoZWxtPC9saT48bGk+TW9udGhseTogQmVzdCBmb3IgbG9uZy10ZXJtIHRyZW5kIGFuYWx5c2lzIGFuZCBzdHJhdGVnaWMgcGxhbm5pbmc8L2xpPjwvdWw+PHAgY2xhc3M9Im10LTMiPkN1c3RvbWl6ZSBieSBjb21iaW5pbmcgZGlmZmVyZW50IGZyZXF1ZW5jaWVzIGZvciBkaWZmZXJlbnQgdG9waWNzIGJhc2VkIG9uIHlvdXIgbmVlZHMuPC9wPjwvZGl2PjwvZGV0YWlscz48ZGV0YWlscyBjbGFzcz0iZ3JvdXAiPjxzdW1tYXJ5IGNsYXNzPSJmbGV4IGN1cnNvci1wb2ludGVyIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ncmF5LTMwMCI+PGg0IGNsYXNzPSJmb250LW1lZGl1bSI+8J+UpyBUZWNobmljYWwgU3VwcG9ydDwvaDQ+PHNwYW4gY2xhc3M9InRyYW5zaXRpb24gZ3JvdXAtb3Blbjpyb3RhdGUtMTgwIj48c3ZnIGZpbGw9Im5vbmUiIGhlaWdodD0iMjQiIHNoYXBlLXJlbmRlcmluZz0iZ2VvbWV0cmljUHJlY2lzaW9uIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjEuNSIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPjxwYXRoIGQ9Ik02IDlsNiA2IDYtNiIvPjwvc3ZnPjwvc3Bhbj48L3N1bW1hcnk+PGRpdiBjbGFzcz0idGV4dC1zbSB0ZXh0LWdyYXktNTAwIG10LTMgZ3JvdXAtb3BlbjphbmltYXRlLWZhZGVJbiI+PHAgY2xhc3M9Im1iLTIiPlN1cHBvcnRlZCBSU1MgUmVhZGVyczo8L3A+PHVsIGNsYXNzPSJsaXN0LWRpc2MgcGwtNSBzcGFjZS15LTIiPjxsaT5EZXNrdG9wOiBOZXROZXdzV2lyZSwgUmVlZGVyLCBGZWVkUmVhZGVyPC9saT48bGk+TW9iaWxlOiBGZWVkbHksIElub3JlYWRlciwgTmV3c0JsdXI8L2xpPjxsaT5TZWxmLWhvc3RlZDogRnJlc2hSU1MsIFRpbnkgVGlueSBSU1M8L2xpPjxsaT5Ccm93c2VyLWJhc2VkOiBGZWVkYnJvLCBSU1MgRmVlZCBSZWFkZXI8L2xpPjwvdWw+PHAgY2xhc3M9Im10LTMiPkNvbW1vbiBJc3N1ZXM6PC9wPjx1bCBjbGFzcz0ibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0yIj48bGk+RmVlZCBub3QgdXBkYXRpbmc/IENoZWNrIHlvdXIgcmVhZGVyJ3MgcmVmcmVzaCBzZXR0aW5nczwvbGk+PGxpPk1pc3NpbmcgY29udGVudD8gVmVyaWZ5IHlvdXIgaW50ZXJuZXQgY29ubmVjdGlvbjwvbGk+PGxpPkZvcm1hdCBpc3N1ZXM/IFRyeSByZS1zdWJzY3JpYmluZyB0byB0aGUgZmVlZDwvbGk+PC91bD48L2Rpdj48L2RldGFpbHM+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgdGV4dC1zbSI+PHAgY2xhc3M9Im10LTIiPkFja25vd2xlZGdlbWVudDogUGFnZSBkZWNvcmF0ZWQgYnkgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2NjYmlrYWkvUlNTLkJlYXV0eSI+PHN2ZyBjbGFzcz0iaW5saW5lLWJsb2NrIHctNCBoLTQgbWwtMSIgdmlld0JveD0iMCAwIDE2IDE2IiBmaWxsPSJjdXJyZW50Q29sb3IiPjxwYXRoIGQ9Ik04IDBDMy41OCAwIDAgMy41OCAwIDhjMCAzLjU0IDIuMjkgNi41MyA1LjQ3IDcuNTkuNC4wNy41NS0uMTcuNTUtLjM4IDAtLjE5LS4wMS0uODItLjAxLTEuNDktMi4wMS4zNy0yLjUzLS40OS0yLjY5LS45NC0uMDktLjIzLS40OC0uOTQtLjgyLTEuMTMtLjI4LS4xNS0uNjgtLjUyLS4wMS0uNTMuNjMtLjAxIDEuMDguNTggMS4yMy44Mi43MiAxLjIxIDEuODcuODcgMi4zMy42Ni4wNy0uNTIuMjgtLjg3LjUxLTEuMDctMS43OC0uMi0zLjY0LS44OS0zLjY0LTMuOTUgMC0uODcuMzEtMS41OS44Mi0yLjE1LS4wOC0uMi0uMzYtMS4wMi4wOC0yLjEyIDAgMCAuNjctLjIxIDIuMi44Mi42NC0uMTggMS4zMi0uMjcgMi0uMjcuNjggMCAxLjM2LjA5IDIgLjI3IDEuNTMtMS4wNCAyLjItLjgyIDIuMi0uODIuNDQgMS4xLjE2IDEuOTIuMDggMi4xMi41MS41Ni44MiAxLjI3LjgyIDIuMTUgMCAzLjA3LTEuODcgMy43NS0zLjY1IDMuOTUuMjkuMjUuNTQuNzMuNTQgMS40OCAwIDEuMDctLjAxIDEuOTMtLjAxIDIuMiAwIC4yMS4xNS40Ni41NS4zOEE4LjAxMyA4LjAxMyAwIDAwMTYgOGMwLTQuNDItMy41OC04LTgtOHoiLz48L3N2Zz48L2E+IFJTUy5CZWF1dHk8L3A+PC9kaXY+PC9kaXY+PC9mb290ZXI+PC9tYWluPjwvYm9keT48L2h0bWw+PC94c2w6dGVtcGxhdGU+PC94c2w6c3R5bGVzaGVldD4="?>
<rss version="2.0">
  <channel>
    <title>GitHub C# Weekly Trending</title>
    <description>Weekly Trending of C# in GitHub</description>
    <pubDate>Sat, 29 Mar 2025 02:31:42 GMT</pubDate>
    <link>http://redreamality.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>dotnet/maui</title>
      <link>https://github.com/dotnet/maui</link>
      <description>&lt;p&gt;.NET MAUI is the .NET Multi-platform App UI, a framework for building native device applications spanning mobile, tablet, and desktop.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Multi-platform App UI (.NET MAUI)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/xamarin/public/_build/latest?definitionId=57&amp;amp;repoName=dotnet%2Fmaui&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/xamarin/public/_apis/build/status/MAUI-public?repoName=dotnet%2Fmaui&amp;amp;branchName=main&amp;amp;label=Public&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://devdiv.visualstudio.com/DevDiv/_build/latest?definitionId=13330&amp;amp;repoName=dotnet%2Fmaui&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://devdiv.visualstudio.com/DevDiv/_apis/build/status/MAUI?repoName=dotnet%2Fmaui&amp;amp;branchName=main&amp;amp;label=Private&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dotnet.microsoft.com/en-us/apps/maui&quot;&gt;.NET Multi-platform App UI (.NET MAUI)&lt;/a&gt; is a cross-platform framework for creating mobile and desktop apps with C# and XAML. Using .NET MAUI, you can develop apps that can run on Android, iOS, iPadOS, macOS, and Windows from a single shared codebase.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dot.net/maui&quot;&gt;Install .NET MAUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/dotnet/maui&quot;&gt;.NET MAUI Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/maui-samples&quot;&gt;.NET MAUI Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/DEVELOPMENT.md&quot;&gt;Development Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;.NET Multi-platform App UI (.NET MAUI) is the evolution of Xamarin.Forms that expand capabilities beyond mobile Android and iOS into desktop apps for Windows and macOS. With .NET MAUI, you can build apps that perform great on any device that runs Windows, macOS, Android, &amp;amp; iOS from a single codebase. Coupled with Visual Studio productivity tools and emulators, .NET and Visual Studio significantly speed up the development process for building apps that target the widest possible set of devices. Use a single development stack that supports the best-of-breed solutions for all modern workloads with a unified SDK, base class libraries, and a toolchain. &lt;a href=&quot;https://docs.microsoft.com/dotnet/maui/what-is-maui&quot;&gt;Read More&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotnet/maui/main/Assets/maui-weather-hero-sm.png&quot; alt=&quot;.NET MAUI Weather App on all platforms&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Current News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;November 13, 2024 - &lt;a href=&quot;https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-9&quot;&gt;What&#39;s new in .NET MAUI for .NET 9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;November 12, 2024 - &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-dotnet-9/#.net-maui-%E2%80%93-enhancing-multi-platform-app-development&quot;&gt;Announcing .NET 9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;October 22, 2024 - &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/dotnet-maui-welcomes-syncfusion-open-source-contributions/&quot;&gt;.NET MAUI Welcomes Syncfusion Open-source Contributions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/category/net-maui/&quot;&gt;.NET MAUI Blog&lt;/a&gt; and visit the &lt;a href=&quot;https://github.com/dotnet/maui/wiki/News&quot;&gt;News&lt;/a&gt; wiki page for more news and updates.&lt;/p&gt; 
&lt;h2&gt;FAQs&lt;/h2&gt; 
&lt;p&gt;Do you have questions? Do not worry; we have prepared a complete &lt;a href=&quot;https://github.com/dotnet/maui/wiki/FAQs&quot;&gt;FAQ&lt;/a&gt; answering the most common questions.&lt;/p&gt; 
&lt;h2&gt;How to Engage, Contribute, and Give Feedback&lt;/h2&gt; 
&lt;p&gt;Some of the best ways to &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt; are to try things out, file issues, join in design conversations, and make pull-requests. Proposals for changes specific to MAUI can be found &lt;a href=&quot;https://github.com/dotnet/maui/issues&quot;&gt;here for discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/CODE_OF_CONDUCT.md&quot;&gt;CODE-OF-CONDUCT&lt;/a&gt; and the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/DEVELOPMENT.md&quot;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lostindark/DriverStoreExplorer</title>
      <link>https://github.com/lostindark/DriverStoreExplorer</link>
      <description>&lt;p&gt;Driver Store Explorer [RAPR]&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Driver Store Explorer [RAPR]&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://ci.appveyor.com/project/lostindark/driverstoreexplorer/branch/master&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/kqtvhfq23am2gq26/branch/master?svg=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Driver Store Explorer [RAPR] makes it easier to deal with Windows &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ff544868(VS.85).aspx&quot;&gt;driver store&lt;/a&gt;. Supported operations include list/add/install/delete/export third-party driver packages.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support online (local machine) and offline driver store.&lt;/li&gt; 
 &lt;li&gt;Enumerate / list all third-party driver packages in the driver store. Showing device associated with drivers. Export the driver package list as CSV.&lt;/li&gt; 
 &lt;li&gt;Add a driver package to the driver store.&lt;/li&gt; 
 &lt;li&gt;Delete one or multiple driver packages from the store.&lt;/li&gt; 
 &lt;li&gt;Detect old and not used driver packages (best effort).&lt;/li&gt; 
 &lt;li&gt;Export all / selected driver packages.&lt;/li&gt; 
 &lt;li&gt;Full-fledged GUI Supports grouping / sorting on any column. Supports re-arranging of / selecting specific columns.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/2d7df896-494d-4bcd-b064-5f05696cd0d3&quot; alt=&quot;Screenshot of DriverStoreExplorer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;This tool requires:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;.NET Framework 4.6.2 or newer&lt;/li&gt; 
 &lt;li&gt;Windows 7 or newer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To build the code yourself, open Rapr.sln in Visual Studio 2022. Older Visual Studio versions may also work but it is not guaranteed.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;Download the latest version here: &lt;a href=&quot;https://github.com/lostindark/DriverStoreExplorer/releases/latest&quot;&gt;https://github.com/lostindark/DriverStoreExplorer/releases/latest&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;The project was originally hosted on &lt;a href=&quot;https://driverstoreexplorer.codeplex.com/&quot;&gt;https://driverstoreexplorer.codeplex.com/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://objectlistview.sourceforge.net/&quot;&gt;ObjectListView&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jeffkl/ManagedDism&quot;&gt;Managed DismApi Wrapper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/601900/FlexibleMessageBox-A-Flexible-Replacement-for-the&quot;&gt;FlexibleMessageBox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0xced/resource-embedder&quot;&gt;Resource Embedder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bluegrams/SettingsProviders&quot;&gt;PortableSettingsProvider&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dsplaisted/strongnamer&quot;&gt;Strong Namer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Free code signing on Windows provided by &lt;a href=&quot;https://signpath.io&quot;&gt;SignPath.io&lt;/a&gt;, certificate by &lt;a href=&quot;https://signpath.org&quot;&gt;SignPath Foundation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cysharp/UniTask</title>
      <link>https://github.com/Cysharp/UniTask</link>
      <description>&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniTask&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Cysharp/UniTask/actions&quot;&gt;&lt;img src=&quot;https://github.com/Cysharp/UniTask/workflows/Build-Debug/badge.svg?sanitize=true&quot; alt=&quot;GitHub Actions&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Cysharp/UniTask.svg?sanitize=true&quot; alt=&quot;Releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/raw/master/README_CN.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/UniTask-%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-red&quot; alt=&quot;Readme_CN&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Struct based &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; and custom AsyncMethodBuilder to achieve zero allocation&lt;/li&gt; 
 &lt;li&gt;Makes all Unity AsyncOperations and Coroutines awaitable&lt;/li&gt; 
 &lt;li&gt;PlayerLoop based task(&lt;code&gt;UniTask.Yield&lt;/code&gt;, &lt;code&gt;UniTask.Delay&lt;/code&gt;, &lt;code&gt;UniTask.DelayFrame&lt;/code&gt;, etc..) that enable replacing all coroutine operations&lt;/li&gt; 
 &lt;li&gt;MonoBehaviour Message Events and uGUI Events as awaitable/async-enumerable&lt;/li&gt; 
 &lt;li&gt;Runs completely on Unity&#39;s PlayerLoop so doesn&#39;t use threads and runs on WebGL, wasm, etc.&lt;/li&gt; 
 &lt;li&gt;Asynchronous LINQ, with Channel and AsyncReactiveProperty&lt;/li&gt; 
 &lt;li&gt;TaskTracker window to prevent memory leaks&lt;/li&gt; 
 &lt;li&gt;Highly compatible behaviour with Task/ValueTask/IValueTaskSource&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For technical details, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ &lt;/a&gt;&lt;br&gt; For advanced tips, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846&quot;&gt;Extends UnityWebRequest via async decorator pattern — Advanced Techniques of UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#basics-of-unitask-and-asyncoperation&quot;&gt;Basics of UniTask and AsyncOperation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#timeout-handling&quot;&gt;Timeout handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#progress&quot;&gt;Progress&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#async-void-vs-async-unitaskvoid&quot;&gt;async void vs async UniTaskVoid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasktracker&quot;&gt;UniTaskTracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#external-assets&quot;&gt;External Assets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#asyncenumerable-and-async-linq&quot;&gt;AsyncEnumerable and Async LINQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#awaitable-events&quot;&gt;Awaitable Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#channel&quot;&gt;Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#vs-awaitable&quot;&gt;vs Awaitable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unit-testing&quot;&gt;For Unit Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#threadpool-limitation&quot;&gt;ThreadPool limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#ienumeratortounitask-limitation&quot;&gt;IEnumerator.ToUniTask limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unityeditor&quot;&gt;For UnityEditor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#compare-with-standard-task-api&quot;&gt;Compare with Standard Task API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#pooling-configuration&quot;&gt;Pooling Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#allocation-on-profiler&quot;&gt;Allocation on Profiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasksynchronizationcontext&quot;&gt;UniTaskSynchronizationContext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#api-references&quot;&gt;API References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM Package&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-git-url&quot;&gt;Install via git URL&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#net-core&quot;&gt;.NET Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Install via &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM package&lt;/a&gt; with git reference or asset package(&lt;code&gt;UniTask.*.*.*.unitypackage&lt;/code&gt;) available in &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;UniTask/releases&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// extension awaiter/methods can be used by this namespace
using Cysharp.Threading.Tasks;

// You can return type as struct UniTask&amp;lt;T&amp;gt;(or UniTask), it is unity specialized lightweight alternative of Task&amp;lt;T&amp;gt;
// zero allocation and fast excution for zero overhead async/await integrate with Unity
async UniTask&amp;lt;string&amp;gt; DemoAsync()
{
    // You can await Unity&#39;s AsyncObject
    var asset = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;foo&quot;);
    var txt = (await UnityWebRequest.Get(&quot;https://...&quot;).SendWebRequest()).downloadHandler.text;
    await SceneManager.LoadSceneAsync(&quot;scene2&quot;);

    // .WithCancellation enables Cancel, GetCancellationTokenOnDestroy synchornizes with lifetime of GameObject
    // after Unity 2022.2, you can use `destroyCancellationToken` in MonoBehaviour
    var asset2 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;bar&quot;).WithCancellation(this.GetCancellationTokenOnDestroy());

    // .ToUniTask accepts progress callback(and all options), Progress.Create is a lightweight alternative of IProgress&amp;lt;T&amp;gt;
    var asset3 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;baz&quot;).ToUniTask(Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x)));

    // await frame-based operation like a coroutine
    await UniTask.DelayFrame(100); 

    // replacement of yield return new WaitForSeconds/WaitForSecondsRealtime
    await UniTask.Delay(TimeSpan.FromSeconds(10), ignoreTimeScale: false);
    
    // yield any playerloop timing(PreUpdate, Update, LateUpdate, etc...)
    await UniTask.Yield(PlayerLoopTiming.PreLateUpdate);

    // replacement of yield return null
    await UniTask.Yield();
    await UniTask.NextFrame();

    // replacement of WaitForEndOfFrame
#if UNITY_2023_1_OR_NEWER
    await UniTask.WaitForEndOfFrame();
#else
    // requires MonoBehaviour(CoroutineRunner))
    await UniTask.WaitForEndOfFrame(this); // this is MonoBehaviour
#endif

    // replacement of yield return new WaitForFixedUpdate(same as UniTask.Yield(PlayerLoopTiming.FixedUpdate))
    await UniTask.WaitForFixedUpdate();
    
    // replacement of yield return WaitUntil
    await UniTask.WaitUntil(() =&amp;gt; isActive == false);

    // special helper of WaitUntil
    await UniTask.WaitUntilValueChanged(this, x =&amp;gt; x.isActive);

    // You can await IEnumerator coroutines
    await FooCoroutineEnumerator();

    // You can await a standard task
    await Task.Run(() =&amp;gt; 100);

    // Multithreading, run on ThreadPool under this code
    await UniTask.SwitchToThreadPool();

    /* work on ThreadPool */

    // return to MainThread(same as `ObserveOnMainThread` in UniRx)
    await UniTask.SwitchToMainThread();

    // get async webrequest
    async UniTask&amp;lt;string&amp;gt; GetTextAsync(UnityWebRequest req)
    {
        var op = await req.SendWebRequest();
        return op.downloadHandler.text;
    }

    var task1 = GetTextAsync(UnityWebRequest.Get(&quot;http://google.com&quot;));
    var task2 = GetTextAsync(UnityWebRequest.Get(&quot;http://bing.com&quot;));
    var task3 = GetTextAsync(UnityWebRequest.Get(&quot;http://yahoo.com&quot;));

    // concurrent async-wait and get results easily by tuple syntax
    var (google, bing, yahoo) = await UniTask.WhenAll(task1, task2, task3);

    // shorthand of WhenAll, tuple can await directly
    var (google2, bing2, yahoo2) = await (task1, task2, task3);

    // return async-value.(or you can use `UniTask`(no result), `UniTaskVoid`(fire and forget)).
    return (asset as TextAsset)?.text ?? throw new InvalidOperationException(&quot;Asset not found&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basics of UniTask and AsyncOperation&lt;/h2&gt; 
&lt;p&gt;UniTask features rely on C# 7.0(&lt;a href=&quot;https://github.com/dotnet/roslyn/raw/master/docs/features/task-types.md&quot;&gt;task-like custom async method builder feature&lt;/a&gt;) so the required Unity version is after &lt;code&gt;Unity 2018.3&lt;/code&gt;, the official lowest version supported is &lt;code&gt;Unity 2018.4.13f1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Why is UniTask(custom task-like object) required? Because Task is too heavy and not matched to Unity threading (single-thread). UniTask does not use threads and SynchronizationContext/ExecutionContext because Unity&#39;s asynchronous object is automaticaly dispatched by Unity&#39;s engine layer. It achieves faster and lower allocation, and is completely integrated with Unity.&lt;/p&gt; 
&lt;p&gt;You can await &lt;code&gt;AsyncOperation&lt;/code&gt;, &lt;code&gt;ResourceRequest&lt;/code&gt;, &lt;code&gt;AssetBundleRequest&lt;/code&gt;, &lt;code&gt;AssetBundleCreateRequest&lt;/code&gt;, &lt;code&gt;UnityWebRequestAsyncOperation&lt;/code&gt;, &lt;code&gt;AsyncGPUReadbackRequest&lt;/code&gt;, &lt;code&gt;IEnumerator&lt;/code&gt; and others when &lt;code&gt;using Cysharp.Threading.Tasks;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;UniTask provides three pattern of extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;* await asyncOperation;
* .WithCancellation(CancellationToken);
* .ToUniTask(IProgress, PlayerLoopTiming, CancellationToken);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;WithCancellation&lt;/code&gt; is a simple version of &lt;code&gt;ToUniTask&lt;/code&gt;, both return &lt;code&gt;UniTask&lt;/code&gt;. For details of cancellation, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt; section.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: await directly is returned from native timing of PlayerLoop but WithCancellation and ToUniTask are returned from specified PlayerLoopTiming. For details of timing, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt; section.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: AssetBundleRequest has &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;allAssets&lt;/code&gt;, default await returns &lt;code&gt;asset&lt;/code&gt;. If you want to get &lt;code&gt;allAssets&lt;/code&gt;, you can use &lt;code&gt;AwaitForAllAssets()&lt;/code&gt; method.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The type of &lt;code&gt;UniTask&lt;/code&gt; can use utilities like &lt;code&gt;UniTask.WhenAll&lt;/code&gt;, &lt;code&gt;UniTask.WhenAny&lt;/code&gt;, &lt;code&gt;UniTask.WhenEach&lt;/code&gt;. They are like &lt;code&gt;Task.WhenAll&lt;/code&gt;/&lt;code&gt;Task.WhenAny&lt;/code&gt; but the return type is more useful. They return value tuples so you can deconstruct each result and pass multiple types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid LoadManyAsync()
{
    // parallel load.
    var (a, b, c) = await UniTask.WhenAll(
        LoadAsSprite(&quot;foo&quot;),
        LoadAsSprite(&quot;bar&quot;),
        LoadAsSprite(&quot;baz&quot;));
}

async UniTask&amp;lt;Sprite&amp;gt; LoadAsSprite(string path)
{
    var resource = await Resources.LoadAsync&amp;lt;Sprite&amp;gt;(path);
    return (resource as Sprite);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to convert a callback to UniTask, you can use &lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; which is a lightweight edition of &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public UniTask&amp;lt;int&amp;gt; WrapByUniTaskCompletionSource()
{
    var utcs = new UniTaskCompletionSource&amp;lt;int&amp;gt;();

    // when complete, call utcs.TrySetResult();
    // when failed, call utcs.TrySetException();
    // when cancel, call utcs.TrySetCanceled();

    return utcs.Task; //return UniTask&amp;lt;int&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can convert Task -&amp;gt; UniTask: &lt;code&gt;AsUniTask&lt;/code&gt;, &lt;code&gt;UniTask&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&amp;lt;AsyncUnit&amp;gt;&lt;/code&gt;: &lt;code&gt;AsAsyncUnitUniTask&lt;/code&gt;, &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;: &lt;code&gt;AsUniTask&lt;/code&gt;. &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;&#39;s conversion cost is free.&lt;/p&gt; 
&lt;p&gt;If you want to convert async to coroutine, you can use &lt;code&gt;.ToCoroutine()&lt;/code&gt;, this is useful if you want to only allow using the coroutine system.&lt;/p&gt; 
&lt;p&gt;UniTask can not await twice. This is a similar constraint to the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1?view=netcore-3.1&quot;&gt;ValueTask/IValueTaskSource&lt;/a&gt; introduced in .NET Standard 2.1.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The following operations should never be performed on a ValueTask
  &lt;tresult&gt;
    instance:
  &lt;/tresult&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Awaiting the instance multiple times.&lt;/li&gt; 
  &lt;li&gt;Calling AsTask multiple times.&lt;/li&gt; 
  &lt;li&gt;Using .Result or .GetAwaiter().GetResult() when the operation hasn&#39;t yet completed, or using them multiple times.&lt;/li&gt; 
  &lt;li&gt;Using more than one of these techniques to consume the instance.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you do any of the above, the results are undefined.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var task = UniTask.DelayFrame(10);
await task;
await task; // NG, throws Exception
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store to the class field, you can use &lt;code&gt;UniTask.Lazy&lt;/code&gt; that supports calling multiple times. &lt;code&gt;.Preserve()&lt;/code&gt; allows for multiple calls (internally cached results). This is useful when there are multiple calls in a function scope.&lt;/p&gt; 
&lt;p&gt;Also &lt;code&gt;UniTaskCompletionSource&lt;/code&gt; can await multiple times and await from many callers.&lt;/p&gt; 
&lt;h2&gt;Cancellation and Exception handling&lt;/h2&gt; 
&lt;p&gt;Some UniTask factory methods have a &lt;code&gt;CancellationToken cancellationToken = default&lt;/code&gt; parameter. Also some async operations for Unity have &lt;code&gt;WithCancellation(CancellationToken)&lt;/code&gt; and &lt;code&gt;ToUniTask(..., CancellationToken cancellation = default)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;p&gt;You can pass &lt;code&gt;CancellationToken&lt;/code&gt; to parameter by standard &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource&quot;&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();

cancelButton.onClick.AddListener(() =&amp;gt;
{
    cts.Cancel();
});

await UnityWebRequest.Get(&quot;http://google.co.jp&quot;).SendWebRequest().WithCancellation(cts.Token);

await UniTask.DelayFrame(1000, cancellationToken: cts.Token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CancellationToken can be created by &lt;code&gt;CancellationTokenSource&lt;/code&gt; or MonoBehaviour&#39;s extension method &lt;code&gt;GetCancellationTokenOnDestroy&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// this CancellationToken lifecycle is same as GameObject.
await UniTask.DelayFrame(1000, cancellationToken: this.GetCancellationTokenOnDestroy());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For propagate Cancellation, all async method recommend to accept &lt;code&gt;CancellationToken cancellationToken&lt;/code&gt; at last argument, and pass &lt;code&gt;CancellationToken&lt;/code&gt; from root to end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await FooAsync(this.GetCancellationTokenOnDestroy());

// ---

async UniTask FooAsync(CancellationToken cancellationToken)
{
    await BarAsync(cancellationToken);
}

async UniTask BarAsync(CancellationToken cancellationToken)
{
    await UniTask.Delay(TimeSpan.FromSeconds(3), cancellationToken);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CancellationToken&lt;/code&gt; means lifecycle of async. You can hold your own lifecycle insteadof default CancellationTokenOnDestroy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class MyBehaviour : MonoBehaviour
{
    CancellationTokenSource disableCancellation = new CancellationTokenSource();
    CancellationTokenSource destroyCancellation = new CancellationTokenSource();

    private void OnEnable()
    {
        if (disableCancellation != null)
        {
            disableCancellation.Dispose();
        }
        disableCancellation = new CancellationTokenSource();
    }

    private void OnDisable()
    {
        disableCancellation.Cancel();
    }

    private void OnDestroy()
    {
        destroyCancellation.Cancel();
        destroyCancellation.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After Unity 2022.2, Unity adds CancellationToken in &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour-destroyCancellationToken.html&quot;&gt;MonoBehaviour.destroyCancellationToken&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-exitCancellationToken.html&quot;&gt;Application.exitCancellationToken&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When cancellation is detected, all methods throw &lt;code&gt;OperationCanceledException&lt;/code&gt; and propagate upstream. When exception(not limited to &lt;code&gt;OperationCanceledException&lt;/code&gt;) is not handled in async method, it is propagated finally to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. The default behaviour of received unhandled exception is to write log as exception. Log level can be changed using &lt;code&gt;UniTaskScheduler.UnobservedExceptionWriteLogType&lt;/code&gt;. If you want to use custom behaviour, set an action to &lt;code&gt;UniTaskScheduler.UnobservedTaskException.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;And also &lt;code&gt;OperationCanceledException&lt;/code&gt; is a special exception, this is silently ignored at &lt;code&gt;UnobservedTaskException&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to cancel behaviour in an async UniTask method, throw &lt;code&gt;OperationCanceledException&lt;/code&gt; manually.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; FooAsync()
{
    await UniTask.Yield();
    throw new OperationCanceledException();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you handle an exception but want to ignore(propagate to global cancellation handling), use an exception filter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; BarAsync()
{
    try
    {
        var x = await FooAsync();
        return x * 2;
    }
    catch (Exception ex) when (!(ex is OperationCanceledException)) // when (ex is not OperationCanceledException) at C# 9.0
    {
        return -1;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;throws/catch &lt;code&gt;OperationCanceledException&lt;/code&gt; is slightly heavy, so if performance is a concern, use &lt;code&gt;UniTask.SuppressCancellationThrow&lt;/code&gt; to avoid OperationCanceledException throw. It returns &lt;code&gt;(bool IsCanceled, T Result)&lt;/code&gt; instead of throwing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var (isCanceled, _) = await UniTask.DelayFrame(10, cancellationToken: cts.Token).SuppressCancellationThrow();
if (isCanceled)
{
    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Only suppress throws if you call directly into the most source method. Otherwise, the return value will be converted, but the entire pipeline will not suppress throws.&lt;/p&gt; 
&lt;p&gt;Some features that use Unity&#39;s player loop, such as &lt;code&gt;UniTask.Yield&lt;/code&gt; and &lt;code&gt;UniTask.Delay&lt;/code&gt; etc, determines CancellationToken state on the player loop. This means it does not cancel immediately upon &lt;code&gt;CancellationToken&lt;/code&gt; fired.&lt;/p&gt; 
&lt;p&gt;If you want to change this behaviour, the cancellation to be immediate, set the &lt;code&gt;cancelImmediately&lt;/code&gt; flag as an argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await UniTask.Yield(cancellationToken, cancelImmediately: true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Setting &lt;code&gt;cancelImmediately&lt;/code&gt; to true and detecting an immediate cancellation is more costly than the default behavior. This is because it uses &lt;code&gt;CancellationToken.Register&lt;/code&gt;; it is heavier than checking CancellationToken on the player loop.&lt;/p&gt; 
&lt;h2&gt;Timeout handling&lt;/h2&gt; 
&lt;p&gt;Timeout is a variation of cancellation. You can set timeout by &lt;code&gt;CancellationTokenSouce.CancelAfterSlim(TimeSpan)&lt;/code&gt; and pass CancellationToken to async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();
cts.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(cts.Token);
}
catch (OperationCanceledException ex)
{
    if (ex.CancellationToken == cts.Token)
    {
        UnityEngine.Debug.Log(&quot;Timeout&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;CancellationTokenSouce.CancelAfter&lt;/code&gt; is a standard api. However in Unity you should not use it because it depends threading timer. &lt;code&gt;CancelAfterSlim&lt;/code&gt; is UniTask&#39;s extension methods, it uses PlayerLoop instead.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;CancellationTokenSource.CreateLinkedTokenSource&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cancelToken = new CancellationTokenSource();
cancelButton.onClick.AddListener(() =&amp;gt;
{
    cancelToken.Cancel(); // cancel from button click.
});

var timeoutToken = new CancellationTokenSource();
timeoutToken.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    // combine token
    var linkedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancelToken.Token, timeoutToken.Token);

    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(linkedTokenSource.Token);
}
catch (OperationCanceledException ex)
{
    if (timeoutToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Timeout.&quot;);
    }
    else if (cancelToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Cancel clicked.&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optimize for reduce allocation of CancellationTokenSource for timeout per call async method, you can use UniTask&#39;s &lt;code&gt;TimeoutController&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController = new TimeoutController(); // setup to field for reuse.

async UniTask FooAsync()
{
    try
    {
        // you can pass timeoutController.Timeout(TimeSpan) to cancellationToken.
        await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest()
            .WithCancellation(timeoutController.Timeout(TimeSpan.FromSeconds(5)));
        timeoutController.Reset(); // call Reset(Stop timeout timer and ready for reuse) when succeed.
    }
    catch (OperationCanceledException ex)
    {
        if (timeoutController.IsTimeout())
        {
            UnityEngine.Debug.Log(&quot;timeout&quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;new TimeoutController(CancellationToken)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController;
CancellationTokenSource clickCancelSource;

void Start()
{
    this.clickCancelSource = new CancellationTokenSource();
    this.timeoutController = new TimeoutController(clickCancelSource);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: UniTask has &lt;code&gt;.Timeout&lt;/code&gt;, &lt;code&gt;.TimeoutWithoutException&lt;/code&gt; methods however, if possible, do not use these, please pass &lt;code&gt;CancellationToken&lt;/code&gt;. Because &lt;code&gt;.Timeout&lt;/code&gt; work from external of task, can not stop timeoutted task. &lt;code&gt;.Timeout&lt;/code&gt; means ignore result when timeout. If you pass a &lt;code&gt;CancellationToken&lt;/code&gt; to the method, it will act from inside of the task, so it is possible to stop a running task.&lt;/p&gt; 
&lt;h2&gt;Progress&lt;/h2&gt; 
&lt;p&gt;Some async operations for unity have &lt;code&gt;ToUniTask(IProgress&amp;lt;float&amp;gt; progress = null, ...)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var progress = Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x));

var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
    .SendWebRequest()
    .ToUniTask(progress: progress);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should not use standard &lt;code&gt;new System.Progress&amp;lt;T&amp;gt;&lt;/code&gt;, because it causes allocation every time. Use &lt;code&gt;Cysharp.Threading.Tasks.Progress&lt;/code&gt; instead. This progress factory has two methods, &lt;code&gt;Create&lt;/code&gt; and &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt;. &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt; calls only when the progress value has changed.&lt;/p&gt; 
&lt;p&gt;Implementing IProgress interface to caller is better as there is no lambda allocation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Foo : MonoBehaviour, IProgress&amp;lt;float&amp;gt;
{
    public void Report(float value)
    {
        UnityEngine.Debug.Log(value);
    }

    public async UniTaskVoid WebRequest()
    {
        var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
            .SendWebRequest()
            .ToUniTask(progress: this); // pass this
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;PlayerLoop&lt;/h2&gt; 
&lt;p&gt;UniTask is run on a custom &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/LowLevel.PlayerLoop.html&quot;&gt;PlayerLoop&lt;/a&gt;. UniTask&#39;s playerloop based methods (such as &lt;code&gt;Delay&lt;/code&gt;, &lt;code&gt;DelayFrame&lt;/code&gt;, &lt;code&gt;asyncOperation.ToUniTask&lt;/code&gt;, etc...) accept this &lt;code&gt;PlayerLoopTiming&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public enum PlayerLoopTiming
{
    Initialization = 0,
    LastInitialization = 1,

    EarlyUpdate = 2,
    LastEarlyUpdate = 3,

    FixedUpdate = 4,
    LastFixedUpdate = 5,

    PreUpdate = 6,
    LastPreUpdate = 7,

    Update = 8,
    LastUpdate = 9,

    PreLateUpdate = 10,
    LastPreLateUpdate = 11,

    PostLateUpdate = 12,
    LastPostLateUpdate = 13
    
#if UNITY_2020_2_OR_NEWER
    TimeUpdate = 14,
    LastTimeUpdate = 15,
#endif
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It indicates when to run, you can check &lt;a href=&quot;https://gist.github.com/neuecc/bc3a1cfd4d74501ad057e49efcd7bdae&quot;&gt;PlayerLoopList.md&lt;/a&gt; to Unity&#39;s default playerloop and injected UniTask&#39;s custom loop.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is similar to &lt;code&gt;yield return null&lt;/code&gt; in a coroutine, but it is called before Update(Update and uGUI events(button.onClick, etc...) are called on &lt;code&gt;ScriptRunBehaviourUpdate&lt;/code&gt;, yield return null is called on &lt;code&gt;ScriptRunDelayedDynamicFrameRate&lt;/code&gt;). &lt;code&gt;PlayerLoopTiming.FixedUpdate&lt;/code&gt; is similar to &lt;code&gt;WaitForFixedUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;PlayerLoopTiming.LastPostLateUpdate&lt;/code&gt; is not equivalent to coroutine&#39;s &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;. Coroutine&#39;s WaitForEndOfFrame seems to run after the PlayerLoop is done. Some methods that require coroutine&#39;s end of frame(&lt;code&gt;Texture2D.ReadPixels&lt;/code&gt;, &lt;code&gt;ScreenCapture.CaptureScreenshotAsTexture&lt;/code&gt;, &lt;code&gt;CommandBuffer&lt;/code&gt;, etc) do not work correctly when replaced with async/await. In these cases, pass MonoBehaviour(coroutine runnner) to &lt;code&gt;UniTask.WaitForEndOfFrame&lt;/code&gt;. For example, &lt;code&gt;await UniTask.WaitForEndOfFrame(this);&lt;/code&gt; is lightweight allocation free alternative of &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Note: In Unity 2023.1 or newer, &lt;code&gt;await UniTask.WaitForEndOfFrame();&lt;/code&gt; no longer requires MonoBehaviour. It uses &lt;code&gt;UnityEngine.Awaitable.EndOfFrameAsync&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;yield return null&lt;/code&gt; and &lt;code&gt;UniTask.Yield&lt;/code&gt; are similar but different. &lt;code&gt;yield return null&lt;/code&gt; always returns next frame but &lt;code&gt;UniTask.Yield&lt;/code&gt; returns next called. That is, call &lt;code&gt;UniTask.Yield(PlayerLoopTiming.Update)&lt;/code&gt; on &lt;code&gt;PreUpdate&lt;/code&gt;, it returns same frame. &lt;code&gt;UniTask.NextFrame()&lt;/code&gt; guarantees return next frame, you can expect this to behave exactly the same as &lt;code&gt;yield return null&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;UniTask.Yield(without CancellationToken) is a special type, returns &lt;code&gt;YieldAwaitable&lt;/code&gt; and runs on YieldRunner. It is the most lightweight and fastest.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;AsyncOperation&lt;/code&gt; is returned from native timing. For example, await &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.UpdatePreloading&lt;/code&gt; and after being called, the loaded scene&#39;s &lt;code&gt;Start&lt;/code&gt; is called from &lt;code&gt;EarlyUpdate.ScriptRunDelayedStartupFrame&lt;/code&gt;. Also &lt;code&gt;await UnityWebRequest&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.ExecuteMainThreadJobs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In UniTask, await directly uses native timing, while &lt;code&gt;WithCancellation&lt;/code&gt; and &lt;code&gt;ToUniTask&lt;/code&gt; use specified timing. This is usually not a particular problem, but with &lt;code&gt;LoadSceneAsync&lt;/code&gt;, it causes a different order of Start and continuation after await. So it is recommended not to use &lt;code&gt;LoadSceneAsync.ToUniTask&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using Unity 2023.1 or newer, ensure you have &lt;code&gt;using UnityEngine;&lt;/code&gt; in the using statements of your file when working with new &lt;code&gt;UnityEngine.Awaitable&lt;/code&gt; methods like &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt;. This prevents compilation errors by avoiding the use of the &lt;code&gt;UnityEngine.AsyncOperation&lt;/code&gt; version.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;In the stacktrace, you can check where it is running in playerloop.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83735571-83caea80-a68b-11ea-8d22-5e22864f0d24.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;By default, UniTask&#39;s PlayerLoop is initialized at &lt;code&gt;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The order in which methods are called in BeforeSceneLoad is nondeterministic, so if you want to use UniTask in other BeforeSceneLoad methods, you should try to initialize it before this.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// AfterAssembliesLoaded is called before BeforeSceneLoad
[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]
public static void InitUniTaskLoop()
{
    var loop = PlayerLoop.GetCurrentPlayerLoop();
    Cysharp.Threading.Tasks.PlayerLoopHelper.Initialize(ref loop);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you import Unity&#39;s &lt;code&gt;Entities&lt;/code&gt; package, that resets the custom player loop to default at &lt;code&gt;BeforeSceneLoad&lt;/code&gt; and injects ECS&#39;s loop. When Unity calls ECS&#39;s inject method after UniTask&#39;s initialize method, UniTask will no longer work.&lt;/p&gt; 
&lt;p&gt;To solve this issue, you can re-initialize the UniTask PlayerLoop after ECS is initialized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Get ECS Loop.
var playerLoop = ScriptBehaviourUpdateOrder.CurrentPlayerLoop;

// Setup UniTask&#39;s PlayerLoop.
PlayerLoopHelper.Initialize(ref playerLoop);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can diagnose whether UniTask&#39;s player loop is ready by calling &lt;code&gt;PlayerLoopHelper.IsInjectedUniTaskPlayerLoop()&lt;/code&gt;. And also &lt;code&gt;PlayerLoopHelper.DumpCurrentPlayerLoop&lt;/code&gt; logs all current playerloops to console.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;void Start()
{
    UnityEngine.Debug.Log(&quot;UniTaskPlayerLoop ready? &quot; + PlayerLoopHelper.IsInjectedUniTaskPlayerLoop());
    PlayerLoopHelper.DumpCurrentPlayerLoop();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can optimize loop cost slightly by remove unuse PlayerLoopTiming injection. You can call &lt;code&gt;PlayerLoopHelper.Initialize(InjectPlayerLoopTimings)&lt;/code&gt; on initialize.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var loop = PlayerLoop.GetCurrentPlayerLoop();
PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum); // minimum is Update | FixedUpdate | LastPostLateUpdate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;InjectPlayerLoopTimings&lt;/code&gt; has three preset, &lt;code&gt;All&lt;/code&gt; and &lt;code&gt;Standard&lt;/code&gt;(All without last except LastPostLateUpdate), &lt;code&gt;Minimum&lt;/code&gt;(&lt;code&gt;Update | FixedUpdate | LastPostLateUpdate&lt;/code&gt;). Default is All and you can combine custom inject timings like &lt;code&gt;InjectPlayerLoopTimings.Update | InjectPlayerLoopTimings.FixedUpdate | InjectPlayerLoopTimings.PreLateUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can make error to use uninjected &lt;code&gt;PlayerLoopTiming&lt;/code&gt; by &lt;a href=&quot;https://github.com/dotnet/roslyn-analyzers/raw/master/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md&quot;&gt;Microsoft.CodeAnalysis.BannedApiAnalyzers&lt;/a&gt;. For example, you can setup &lt;code&gt;BannedSymbols.txt&lt;/code&gt; like this for &lt;code&gt;InjectPlayerLoopTimings.Minimum&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;F:Cysharp.Threading.Tasks.PlayerLoopTiming.Initialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastInitialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.EarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastEarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.d
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastFixedUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PostLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.TimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastTimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can configure &lt;code&gt;RS0030&lt;/code&gt; severity to error.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/109150837-bb933880-77ac-11eb-85ba-4fd15819dbd0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;async void vs async UniTaskVoid&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;async void&lt;/code&gt; is a standard C# task system so it does not run on UniTask systems. It is better not to use it. &lt;code&gt;async UniTaskVoid&lt;/code&gt; is a lightweight version of &lt;code&gt;async UniTask&lt;/code&gt; because it does not have awaitable completion and reports errors immediately to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. If you don&#39;t require awaiting (fire and forget), using &lt;code&gt;UniTaskVoid&lt;/code&gt; is better. Unfortunately to dismiss warning, you&#39;re required to call &lt;code&gt;Forget()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid FireAndForgetMethod()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    FireAndForgetMethod().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also UniTask has the &lt;code&gt;Forget&lt;/code&gt; method, it is similar to &lt;code&gt;UniTaskVoid&lt;/code&gt; and has the same effects. However &lt;code&gt;UniTaskVoid&lt;/code&gt; is more efficient if you completely don&#39;t use &lt;code&gt;await&lt;/code&gt;。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask DoAsync()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    DoAsync().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use an async lambda registered to an event, don&#39;t use &lt;code&gt;async void&lt;/code&gt;. Instead you can use &lt;code&gt;UniTask.Action&lt;/code&gt; or &lt;code&gt;UniTask.UnityAction&lt;/code&gt;, both of which create a delegate via &lt;code&gt;async UniTaskVoid&lt;/code&gt; lambda.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Action actEvent;
UnityAction unityEvent; // especially used in uGUI

// Bad: async void
actEvent += async () =&amp;gt; { };
unityEvent += async () =&amp;gt; { };

// Ok: create Action delegate by lambda
actEvent += UniTask.Action(async () =&amp;gt; { await UniTask.Yield(); });
unityEvent += UniTask.UnityAction(async () =&amp;gt; { await UniTask.Yield(); });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTaskVoid&lt;/code&gt; can also be used in MonoBehaviour&#39;s &lt;code&gt;Start&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;class Sample : MonoBehaviour
{
    async UniTaskVoid Start()
    {
        // async init code.
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;UniTaskTracker&lt;/h2&gt; 
&lt;p&gt;useful for checking (leaked) UniTasks. You can open tracker window in &lt;code&gt;Window -&amp;gt; UniTask Tracker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83527073-4434bf00-a522-11ea-86e9-3b3975b26266.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable AutoReload(Toggle) - Reload automatically.&lt;/li&gt; 
 &lt;li&gt;Reload - Reload view.&lt;/li&gt; 
 &lt;li&gt;GC.Collect - Invoke GC.Collect.&lt;/li&gt; 
 &lt;li&gt;Enable Tracking(Toggle) - Start to track async/await UniTask. Performance impact: low.&lt;/li&gt; 
 &lt;li&gt;Enable StackTrace(Toggle) - Capture StackTrace when task is started. Performance impact: high.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;UniTaskTracker is intended for debugging use only as enabling tracking and capturing stacktraces is useful but has a heavy performance impact. Recommended usage is to enable both tracking and stacktraces to find task leaks and to disable them both when done.&lt;/p&gt; 
&lt;h2&gt;External Assets&lt;/h2&gt; 
&lt;p&gt;By default, UniTask supports TextMeshPro(&lt;code&gt;BindTo(TMP_Text)&lt;/code&gt; and &lt;code&gt;TMP_InputField&lt;/code&gt; event extensions like standard uGUI &lt;code&gt;InputField&lt;/code&gt;), DOTween(&lt;code&gt;Tween&lt;/code&gt; as awaitable) and Addressables(&lt;code&gt;AsyncOperationHandle&lt;/code&gt; and &lt;code&gt;AsyncOperationHandle&amp;lt;T&amp;gt;&lt;/code&gt; as awaitable).&lt;/p&gt; 
&lt;p&gt;There are defined in separated asmdefs like &lt;code&gt;UniTask.TextMeshPro&lt;/code&gt;, &lt;code&gt;UniTask.DOTween&lt;/code&gt;, &lt;code&gt;UniTask.Addressables&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;TextMeshPro and Addressables support are automatically enabled when importing their packages from package manager. However for DOTween support, after importing from the &lt;a href=&quot;https://assetstore.unity.com/packages/tools/animation/dotween-hotween-v2-27676r&quot;&gt;DOTWeen assets&lt;/a&gt; and define the scripting define symbol &lt;code&gt;UNITASK_DOTWEEN_SUPPORT&lt;/code&gt; to enable it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// sequential
await transform.DOMoveX(2, 10);
await transform.DOMoveZ(5, 20);

// parallel with cancellation
var ct = this.GetCancellationTokenOnDestroy();

await UniTask.WhenAll(
    transform.DOMoveX(10, 3).WithCancellation(ct),
    transform.DOScale(10, 3).WithCancellation(ct));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DOTween support&#39;s default behaviour(&lt;code&gt;await&lt;/code&gt;, &lt;code&gt;WithCancellation&lt;/code&gt;, &lt;code&gt;ToUniTask&lt;/code&gt;) awaits tween is killed. It works on both Complete(true/false) and Kill(true/false). But if you want to reuse tweens (&lt;code&gt;SetAutoKill(false)&lt;/code&gt;), it does not work as expected. If you want to await for another timing, the following extension methods exist in Tween, &lt;code&gt;AwaitForComplete&lt;/code&gt;, &lt;code&gt;AwaitForPause&lt;/code&gt;, &lt;code&gt;AwaitForPlay&lt;/code&gt;, &lt;code&gt;AwaitForRewind&lt;/code&gt;, &lt;code&gt;AwaitForStepComplete&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;AsyncEnumerable and Async LINQ&lt;/h2&gt; 
&lt;p&gt;Unity 2020.2 supports C# 8.0 so you can use &lt;code&gt;await foreach&lt;/code&gt;. This is the new Update notation in the async era.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Unity 2020.2, C# 8.0
await foreach (var _ in UniTaskAsyncEnumerable.EveryUpdate().WithCancellation(token))
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In a C# 7.3 environment, you can use the &lt;code&gt;ForEachAsync&lt;/code&gt; method to work in almost the same way.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// C# 7.3(Unity 2018.3~)
await UniTaskAsyncEnumerable.EveryUpdate().ForEachAsync(_ =&amp;gt;
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}, token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt; that is similar to .NET 9&#39;s &lt;code&gt;Task.WhenEach&lt;/code&gt; can consume new way for await multiple tasks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await foreach (var result in UniTask.WhenEach(task1, task2, task3))
{
    // The result is of type WhenEachResult&amp;lt;T&amp;gt;.
    // It contains either `T Result` or `Exception Exception`.
    // You can check `IsCompletedSuccessfully` or `IsFaulted` to determine whether to access `.Result` or `.Exception`.
    // If you want to throw an exception when `IsFaulted` and retrieve the result when successful, use `GetResult()`.
    Debug.Log(result.GetResult());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTaskAsyncEnumerable implements asynchronous LINQ, similar to LINQ in &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; or Rx in &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;. All standard LINQ query operators can be applied to asynchronous streams. For example, the following code shows how to apply a Where filter to a button-click asynchronous stream that runs once every two clicks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).ForEachAsync(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fire and Forget style(for example, event handling), you can also use &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).Subscribe(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Async LINQ is enabled when &lt;code&gt;using Cysharp.Threading.Tasks.Linq;&lt;/code&gt;, and &lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is defined in &lt;code&gt;UniTask.Linq&lt;/code&gt; asmdef.&lt;/p&gt; 
&lt;p&gt;It&#39;s closer to UniRx (Reactive Extensions), but UniTaskAsyncEnumerable is a pull-based asynchronous stream, whereas Rx was a push-based asynchronous stream. Note that although similar, the characteristics are different and the details behave differently along with them.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is the entry point like &lt;code&gt;Enumerable&lt;/code&gt;. In addition to the standard query operators, there are other generators for Unity such as &lt;code&gt;EveryUpdate&lt;/code&gt;, &lt;code&gt;Timer&lt;/code&gt;, &lt;code&gt;TimerFrame&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;IntervalFrame&lt;/code&gt;, and &lt;code&gt;EveryValueChanged&lt;/code&gt;. And also added additional UniTask original query operators like &lt;code&gt;Append&lt;/code&gt;, &lt;code&gt;Prepend&lt;/code&gt;, &lt;code&gt;DistinctUntilChanged&lt;/code&gt;, &lt;code&gt;ToHashSet&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;CombineLatest&lt;/code&gt;,&lt;code&gt;Merge&lt;/code&gt; &lt;code&gt;Do&lt;/code&gt;, &lt;code&gt;Never&lt;/code&gt;, &lt;code&gt;ForEachAsync&lt;/code&gt;, &lt;code&gt;Pairwise&lt;/code&gt;, &lt;code&gt;Publish&lt;/code&gt;, &lt;code&gt;Queue&lt;/code&gt;, &lt;code&gt;Return&lt;/code&gt;, &lt;code&gt;SkipUntil&lt;/code&gt;, &lt;code&gt;TakeUntil&lt;/code&gt;, &lt;code&gt;SkipUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeLast&lt;/code&gt;, &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The method with Func as an argument has three additional overloads, &lt;code&gt;***Await&lt;/code&gt;, &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Select(Func&amp;lt;T, TR&amp;gt; selector)
SelectAwait(Func&amp;lt;T, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
SelectAwaitWithCancellation(Func&amp;lt;T, CancellationToken, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use the &lt;code&gt;async&lt;/code&gt; method inside the func, use the &lt;code&gt;***Await&lt;/code&gt; or &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How to create an async iterator: C# 8.0 supports async iterator(&lt;code&gt;async yield return&lt;/code&gt;) but it only allows &lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; and of course requires C# 8.0. UniTask supports &lt;code&gt;UniTaskAsyncEnumerable.Create&lt;/code&gt; method to create custom async iterator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// IAsyncEnumerable, C# 8.0 version of async iterator. ( do not use this style, IAsyncEnumerable is not controled in UniTask).
public async IAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate([EnumeratorCancellation]CancellationToken cancelationToken = default)
{
    var frameCount = 0;
    await UniTask.Yield();
    while (!token.IsCancellationRequested)
    {
        yield return frameCount++;
        await UniTask.Yield();
    }
}

// UniTaskAsyncEnumerable.Create and use `await writer.YieldAsync` instead of `yield return`.
public IUniTaskAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate()
{
    // writer(IAsyncWriter&amp;lt;T&amp;gt;) has `YieldAsync(value)` method.
    return UniTaskAsyncEnumerable.Create&amp;lt;int&amp;gt;(async (writer, token) =&amp;gt;
    {
        var frameCount = 0;
        await UniTask.Yield();
        while (!token.IsCancellationRequested)
        {
            await writer.YieldAsync(frameCount++); // instead of `yield return`
            await UniTask.Yield();
        }
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Awaitable Events&lt;/h2&gt; 
&lt;p&gt;All uGUI component implements &lt;code&gt;***AsAsyncEnumerable&lt;/code&gt; to convert asynchronous streams of events.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;async UniTask TripleClick()
{
    // In default, used button.GetCancellationTokenOnDestroy to manage lieftime of async
    await button.OnClickAsync();
    await button.OnClickAsync();
    await button.OnClickAsync();
    Debug.Log(&quot;Three times clicked&quot;);
}

// more efficient way
async UniTask TripleClick()
{
    using (var handler = button.GetAsyncClickEventHandler())
    {
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        Debug.Log(&quot;Three times clicked&quot;);
    }
}

// use async LINQ
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).Last();
    Debug.Log(&quot;Three times clicked&quot;);
}

// use async LINQ2
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).ForEachAsync(_ =&amp;gt;
    {
        Debug.Log(&quot;Every clicked&quot;);
    });
    Debug.Log(&quot;Three times clicked, complete.&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All MonoBehaviour message events can convert async-streams by &lt;code&gt;AsyncTriggers&lt;/code&gt; that can be enabled by &lt;code&gt;using Cysharp.Threading.Tasks.Triggers;&lt;/code&gt;. AsyncTrigger can be created using &lt;code&gt;GetAsync***Trigger&lt;/code&gt; and triggers itself as UniTaskAsyncEnumerable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var trigger = this.GetOnCollisionEnterAsyncHandler();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();

// every moves.
await this.GetAsyncMoveTrigger().ForEachAsync(axisEventData =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AsyncReactiveProperty&lt;/code&gt;, &lt;code&gt;AsyncReadOnlyReactiveProperty&lt;/code&gt; is UniTask&#39;s version of ReactiveProperty. &lt;code&gt;BindTo&lt;/code&gt; extension method of &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for binding asynchronous stream values to Unity components(Text/Selectable/TMP/Text).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var rp = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);

// AsyncReactiveProperty itself is IUniTaskAsyncEnumerable, you can query by LINQ
rp.ForEachAsync(x =&amp;gt;
{
    Debug.Log(x);
}, this.GetCancellationTokenOnDestroy()).Forget();

rp.Value = 10; // push 10 to all subscriber
rp.Value = 11; // push 11 to all subscriber

// WithoutCurrent ignore initial value
// BindTo bind stream value to unity components.
rp.WithoutCurrent().BindTo(this.textComponent);

await rp.WaitAsync(); // wait until next value set

// also exists ToReadOnlyAsyncReactiveProperty
var rp2 = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);
var rorp = rp.CombineLatest(rp2, (x, y) =&amp;gt; (x, y)).ToReadOnlyAsyncReactiveProperty(CancellationToken.None);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A pull-type asynchronous stream does not get the next values until the asynchronous processing in the sequence is complete. This could spill data from push-type events such as buttons.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// can not get click event during 3 seconds complete.
await button.OnClickAsAsyncEnumerable().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is useful (prevent double-click) but not useful sometimes.&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;Queue()&lt;/code&gt; method will also queue events during asynchronous processing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// queued message in asynchronous processing
await button.OnClickAsAsyncEnumerable().Queue().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use &lt;code&gt;Subscribe&lt;/code&gt;, fire and forget style.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;button.OnClickAsAsyncEnumerable().Subscribe(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Channel&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt; is the same as &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.channels?view=netcore-3.1&quot;&gt;System.Threading.Tasks.Channels&lt;/a&gt; which is similar to a GoLang Channel.&lt;/p&gt; 
&lt;p&gt;Currently it only supports multiple-producer, single-consumer unbounded channels. It can create by &lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For producer(&lt;code&gt;.Writer&lt;/code&gt;), use &lt;code&gt;TryWrite&lt;/code&gt; to push value and &lt;code&gt;TryComplete&lt;/code&gt; to complete channel. For consumer(&lt;code&gt;.Reader&lt;/code&gt;), use &lt;code&gt;TryRead&lt;/code&gt;, &lt;code&gt;WaitToReadAsync&lt;/code&gt;, &lt;code&gt;ReadAsync&lt;/code&gt;, &lt;code&gt;Completion&lt;/code&gt; and &lt;code&gt;ReadAllAsync&lt;/code&gt; to read queued messages.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ReadAllAsync&lt;/code&gt; returns &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; so query LINQ operators. Reader only allows single-consumer but uses &lt;code&gt;.Publish()&lt;/code&gt; query operator to enable multicast message. For example, make pub/sub utility.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class AsyncMessageBroker&amp;lt;T&amp;gt; : IDisposable
{
    Channel&amp;lt;T&amp;gt; channel;

    IConnectableUniTaskAsyncEnumerable&amp;lt;T&amp;gt; multicastSource;
    IDisposable connection;

    public AsyncMessageBroker()
    {
        channel = Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;();
        multicastSource = channel.Reader.ReadAllAsync().Publish();
        connection = multicastSource.Connect(); // Publish returns IConnectableUniTaskAsyncEnumerable.
    }

    public void Publish(T value)
    {
        channel.Writer.TryWrite(value);
    }

    public IUniTaskAsyncEnumerable&amp;lt;T&amp;gt; Subscribe()
    {
        return multicastSource;
    }

    public void Dispose()
    {
        channel.Writer.TryComplete();
        connection.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;vs Awaitable&lt;/h2&gt; 
&lt;p&gt;Unity 6 introduces the awaitable type, &lt;a href=&quot;https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Awaitable.html&quot;&gt;Awaitable&lt;/a&gt;. To put it simply, Awaitable can be considered a subset of UniTask, and in fact, Awaitable&#39;s design was influenced by UniTask. It should be able to handle PlayerLoop-based awaits, pooled Tasks, and support for cancellation with &lt;code&gt;CancellationToken&lt;/code&gt; in a similar way. With its inclusion in the standard library, you may wonder whether to continue using UniTask or migrate to Awaitable. Here&#39;s a brief guide.&lt;/p&gt; 
&lt;p&gt;First, the functionality provided by Awaitable is equivalent to what coroutines offer. Instead of &lt;code&gt;yield return&lt;/code&gt;, you use await; &lt;code&gt;await NextFrameAsync()&lt;/code&gt; replaces &lt;code&gt;yield return null&lt;/code&gt;; and there are equivalents for &lt;code&gt;WaitForSeconds&lt;/code&gt; and &lt;code&gt;EndOfFrame&lt;/code&gt;. However, that&#39;s the extent of it. Being coroutine-based in terms of functionality, it lacks Task-based features. In practical application development using async/await, operations like &lt;code&gt;WhenAll&lt;/code&gt; are essential. Additionally, UniTask enables many frame-based operations (such as &lt;code&gt;DelayFrame&lt;/code&gt;) and more flexible PlayerLoopTiming control, which are not available in Awaitable. Of course, there&#39;s no Tracker Window either.&lt;/p&gt; 
&lt;p&gt;Therefore, I recommend using UniTask for application development. UniTask is a superset of Awaitable and includes many essential features. For library development, where you want to avoid external dependencies, using Awaitable as a return type for methods would be appropriate. Awaitable can be converted to UniTask using &lt;code&gt;AsUniTask&lt;/code&gt;, so there&#39;s no issue in handling Awaitable-based functionality within the UniTask library. Of course, if you don&#39;t need to worry about dependencies, using UniTask would be the best choice even for library development.&lt;/p&gt; 
&lt;h2&gt;For Unit Testing&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s &lt;code&gt;[UnityTest]&lt;/code&gt; attribute can test coroutine(IEnumerator) but can not test async. &lt;code&gt;UniTask.ToCoroutine&lt;/code&gt; bridges async/await to coroutine so you can test async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[UnityTest]
public IEnumerator DelayIgnore() =&amp;gt; UniTask.ToCoroutine(async () =&amp;gt;
{
    var time = Time.realtimeSinceStartup;

    Time.timeScale = 0.5f;
    try
    {
        await UniTask.Delay(TimeSpan.FromSeconds(3), ignoreTimeScale: true);

        var elapsed = Time.realtimeSinceStartup - time;
        Assert.AreEqual(3, (int)Math.Round(TimeSpan.FromSeconds(elapsed).TotalSeconds, MidpointRounding.ToEven));
    }
    finally
    {
        Time.timeScale = 1.0f;
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTask&#39;s own unit tests are written using Unity Test Runner and &lt;a href=&quot;https://github.com/Cysharp/RuntimeUnitTestToolkit&quot;&gt;Cysharp/RuntimeUnitTestToolkit&lt;/a&gt; to integrate with CI and check if IL2CPP is working.&lt;/p&gt; 
&lt;h2&gt;ThreadPool limitation&lt;/h2&gt; 
&lt;p&gt;Most UniTask methods run on a single thread (PlayerLoop), with only &lt;code&gt;UniTask.Run&lt;/code&gt;(&lt;code&gt;Task.Run&lt;/code&gt; equivalent) and &lt;code&gt;UniTask.SwitchToThreadPool&lt;/code&gt; running on a thread pool. If you use a thread pool, it won&#39;t work with WebGL and so on.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTask.Run&lt;/code&gt; is now deprecated. You can use &lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt; instead. And also consider whether you can use &lt;code&gt;UniTask.Create&lt;/code&gt; or &lt;code&gt;UniTask.Void&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;IEnumerator.ToUniTask limitation&lt;/h2&gt; 
&lt;p&gt;You can convert coroutine(IEnumerator) to UniTask(or await directly) but it has some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;WaitForEndOfFrame&lt;/code&gt;/&lt;code&gt;WaitForFixedUpdate&lt;/code&gt;/&lt;code&gt;Coroutine&lt;/code&gt; is not supported.&lt;/li&gt; 
 &lt;li&gt;Consuming loop timing is not the same as &lt;code&gt;StartCoroutine&lt;/code&gt;, it uses the specified &lt;code&gt;PlayerLoopTiming&lt;/code&gt; and the default &lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is run before MonoBehaviour&#39;s &lt;code&gt;Update&lt;/code&gt; and &lt;code&gt;StartCoroutine&lt;/code&gt;&#39;s loop.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you want fully compatible conversion from coroutine to async, use the &lt;code&gt;IEnumerator.ToUniTask(MonoBehaviour coroutineRunner)&lt;/code&gt; overload. It executes StartCoroutine on an instance of the argument MonoBehaviour and waits for it to complete in UniTask.&lt;/p&gt; 
&lt;h2&gt;For UnityEditor&lt;/h2&gt; 
&lt;p&gt;UniTask can run on Unity Editor like an Editor Coroutine. However, there are some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UniTask.Delay&#39;s DelayType.DeltaTime, UnscaledDeltaTime do not work correctly because they can not get deltaTime in editor. Therefore run on EditMode, automatically change DelayType to &lt;code&gt;DelayType.Realtime&lt;/code&gt; that wait for the right time.&lt;/li&gt; 
 &lt;li&gt;All PlayerLoopTiming run on the timing &lt;code&gt;EditorApplication.update&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-batchmode&lt;/code&gt; with &lt;code&gt;-quit&lt;/code&gt; does not work because Unity does not run &lt;code&gt;EditorApplication.update&lt;/code&gt; and quit after a single frame. Instead, don&#39;t use &lt;code&gt;-quit&lt;/code&gt; and quit manually with &lt;code&gt;EditorApplication.Exit(0)&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compare with Standard Task API&lt;/h2&gt; 
&lt;p&gt;UniTask has many standard Task-like APIs. This table shows what the alternative apis are.&lt;/p&gt; 
&lt;p&gt;Use standard type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Use UniTask type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;/&lt;code&gt;ValueTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;ValueTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;async void&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;async UniTaskVoid&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;+= async () =&amp;gt; { }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Void&lt;/code&gt;, &lt;code&gt;UniTask.Action&lt;/code&gt;, &lt;code&gt;UniTask.UnityAction&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;---&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;AutoResetUniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ManualResetValueTaskSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask&amp;lt;T&amp;gt;.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;new Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Progress.Create&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.Register(UnsafeRegister)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.RegisterWithoutCaptureExecutionContext&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfterSlim&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateUnbounded&amp;lt;T&amp;gt;(false){ SingleReader = true }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Delay&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Delay&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Yield&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Yield&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAll&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAll&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAny&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAny&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenEach&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.CompletedTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.CompletedTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromResult&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromResult&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromCanceled&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromCanceled&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.ContinueWith&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.ContinueWith&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Pooling Configuration&lt;/h2&gt; 
&lt;p&gt;UniTask aggressively caches async promise objects to achieve zero allocation (for technical details, see blog post &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ&lt;/a&gt;). By default, it caches all promises but you can configure &lt;code&gt;TaskPool.SetMaxPoolSize&lt;/code&gt; to your value, the value indicates cache size per type. &lt;code&gt;TaskPool.GetCacheSizeInfo&lt;/code&gt; returns currently cached objects in pool.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;foreach (var (type, size) in TaskPool.GetCacheSizeInfo())
{
    Debug.Log(type + &quot;:&quot; + size);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Allocation on Profiler&lt;/h2&gt; 
&lt;p&gt;In UnityEditor the profiler shows allocation of compiler generated AsyncStateMachine but it only occurs in debug(development) build. C# Compiler generates AsyncStateMachine as class on Debug build and as struct on Release build.&lt;/p&gt; 
&lt;p&gt;Unity supports Code Optimization option starting in 2020.1 (right, footer).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/89967342-2f944600-dc8c-11ea-99fc-0b74527a16f6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can change C# compiler optimization to release to remove AsyncStateMachine allocation in development builds. This optimization option can also be set via &lt;code&gt;Compilation.CompilationPipeline-codeOptimization&lt;/code&gt;, and &lt;code&gt;Compilation.CodeOptimization&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;UniTaskSynchronizationContext&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s default SynchronizationContext(&lt;code&gt;UnitySynchronizationContext&lt;/code&gt;) is a poor implementation for performance. UniTask bypasses &lt;code&gt;SynchronizationContext&lt;/code&gt;(and &lt;code&gt;ExecutionContext&lt;/code&gt;) so it does not use it but if exists in &lt;code&gt;async Task&lt;/code&gt;, still used it. &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is a replacement of &lt;code&gt;UnitySynchronizationContext&lt;/code&gt; which is better for performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SyncContextInjecter
{
    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
    public static void Inject()
    {
        SynchronizationContext.SetSynchronizationContext(new UniTaskSynchronizationContext());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an optional choice and is not always recommended; &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is less performant than &lt;code&gt;async UniTask&lt;/code&gt; and is not a complete UniTask replacement. It also does not guarantee full behavioral compatibility with the &lt;code&gt;UnitySynchronizationContext&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;API References&lt;/h2&gt; 
&lt;p&gt;UniTask&#39;s API References are hosted at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.html&quot;&gt;cysharp.github.io/UniTask&lt;/a&gt; by &lt;a href=&quot;https://dotnet.github.io/docfx/&quot;&gt;DocFX&lt;/a&gt; and &lt;a href=&quot;https://github.com/Cysharp/DocfxTemplate&quot;&gt;Cysharp/DocfXTemplate&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For example, UniTask&#39;s factory methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.UniTask.html#methods-1&quot;&gt;UniTask#methods&lt;/a&gt;. UniTaskAsyncEnumerable&#39;s factory/extension methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.Linq.UniTaskAsyncEnumerable.html#methods-1&quot;&gt;UniTaskAsyncEnumerable#methods&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;UPM Package&lt;/h2&gt; 
&lt;h3&gt;Install via git URL&lt;/h3&gt; 
&lt;p&gt;Requires a version of unity that supports path query parameter for git packages (Unity &amp;gt;= 2019.3.4f1, Unity &amp;gt;= 2020.1a21). You can add &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&lt;/code&gt; to Package Manager&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/79450714-3aadd100-8020-11ea-8aae-b8d87fc4d7be.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83702872-e0f17c80-a648-11ea-8183-7469dcd4f810.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;or add &lt;code&gt;&quot;com.cysharp.unitask&quot;: &quot;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&quot;&lt;/code&gt; to &lt;code&gt;Packages/manifest.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to set a target version, UniTask uses the &lt;code&gt;*.*.*&lt;/code&gt; release tag so you can specify a version like &lt;code&gt;#2.1.0&lt;/code&gt;. For example &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask#2.1.0&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;.NET Core&lt;/h2&gt; 
&lt;p&gt;For .NET Core, use NuGet.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/UniTask&quot;&gt;UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;UniTask of .NET Core version is a subset of Unity UniTask with PlayerLoop dependent methods removed.&lt;/p&gt; 
&lt;p&gt;It runs at higher performance than the standard Task/ValueTask, but you should be careful to ignore the ExecutionContext/SynchronizationContext when using it. &lt;code&gt;AsyncLocal&lt;/code&gt; also does not work because it ignores ExecutionContext.&lt;/p&gt; 
&lt;p&gt;If you use UniTask internally, but provide ValueTask as an external API, you can write it like the following(Inspired by &lt;a href=&quot;https://github.com/mgravell/PooledAwait&quot;&gt;PooledAwait&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ZeroAllocAsyncAwaitInDotNetCore
{
    public ValueTask&amp;lt;int&amp;gt; DoAsync(int x, int y)
    {
        return Core(this, x, y);

        static async UniTask&amp;lt;int&amp;gt; Core(ZeroAllocAsyncAwaitInDotNetCore self, int x, int y)
        {
            // do anything...
            await Task.Delay(TimeSpan.FromSeconds(x + y));
            await UniTask.Yield();

            return 10;
        }
    }
}

// UniTask does not return to original SynchronizationContext but you can use helper `ReturnToCurrentSynchronizationContext`.
public ValueTask TestAsync()
{
    await using (UniTask.ReturnToCurrentSynchronizationContext())
    {
        await UniTask.SwitchToThreadPool();
        // do anything..
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.NET Core version is intended to allow users to use UniTask as an interface when sharing code with Unity (such as &lt;a href=&quot;https://github.com/Cysharp/MagicOnion/&quot;&gt;Cysharp/MagicOnion&lt;/a&gt;). .NET Core version of UniTask enables smooth code sharing.&lt;/p&gt; 
&lt;p&gt;Utility methods such as WhenAll which are equivalent to UniTask are provided as &lt;a href=&quot;https://github.com/Cysharp/ValueTaskSupplement&quot;&gt;Cysharp/ValueTaskSupplement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/aspnetcore</title>
      <link>https://github.com/dotnet/aspnetcore</link>
      <description>&lt;p&gt;ASP.NET Core is a cross-platform .NET framework for building modern cloud-based web applications on Windows, Mac, or Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ASP.NET Core&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.dotnetfoundation.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/.NET%20Foundation-blueviolet.svg?sanitize=true&quot; alt=&quot;.NET Foundation&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/raw/main/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dotnet/aspnetcore?color=%230b0&amp;amp;style=flat-square&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspnetcore/help%20wanted?color=%232EA043&amp;amp;label=help%20wanted&amp;amp;style=flat-square&quot; alt=&quot;Help Wanted&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspnetcore/good%20first%20issue?color=%23512BD4&amp;amp;label=good%20first%20issue&amp;amp;style=flat-square&quot; alt=&quot;Good First Issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ASP.NET Core is an open-source and cross-platform framework for building modern cloud-based internet-connected applications, such as web apps, IoT apps, and mobile backends. ASP.NET Core apps run on &lt;a href=&quot;https://dot.net&quot;&gt;.NET&lt;/a&gt;, a free, cross-platform, and open-source application runtime. It was architected to provide an optimized development framework for apps that are deployed to the cloud or run on-premises. It consists of modular components with minimal overhead, so you retain flexibility while constructing your solutions. You can develop and run your ASP.NET Core apps cross-platform on Windows, Mac, and Linux. &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/&quot;&gt;Learn more about ASP.NET Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/getting-started&quot;&gt;Getting Started&lt;/a&gt; instructions.&lt;/p&gt; 
&lt;p&gt;Also check out the &lt;a href=&quot;https://www.microsoft.com/net&quot;&gt;.NET Homepage&lt;/a&gt; for released versions of .NET, getting started guides, and learning resources.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/dotnet/aspnetcore/raw/main/docs/TriageProcess.md&quot;&gt;Triage Process&lt;/a&gt; document for more information on how we handle incoming issues.&lt;/p&gt; 
&lt;h2&gt;How to engage, contribute, and give feedback&lt;/h2&gt; 
&lt;p&gt;Some of the best ways to contribute are to try things out, file issues, join in design conversations, and make pull-requests.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/DailyBuilds.md&quot;&gt;Download our latest daily builds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow along with the development of ASP.NET Core: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://live.asp.net&quot;&gt;Community Standup&lt;/a&gt;: The community standup is held every week and streamed live on YouTube. You can view past standups in the linked playlist.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://aka.ms/aspnet/roadmap&quot;&gt;Roadmap&lt;/a&gt;: The schedule and milestone themes for ASP.NET Core.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/BuildFromSource.md&quot;&gt;Build ASP.NET Core source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; page to see the best places to log issues and start discussions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting security issues and bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://technet.microsoft.com/en-us/security/ff852094.aspx&quot;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;These are some other repos for related projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aspnet/Docs&quot;&gt;Documentation&lt;/a&gt; - documentation sources for &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/&quot;&gt;https://learn.microsoft.com/aspnet/core/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/efcore&quot;&gt;Entity Framework Core&lt;/a&gt; - data access technology&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/runtime&quot;&gt;Runtime&lt;/a&gt; - cross-platform runtime for cloud, mobile, desktop, and IoT apps&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/razor&quot;&gt;Razor&lt;/a&gt; - the Razor compiler and tooling for working with Razor syntax (.cshtml, .razor)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CODE-OF-CONDUCT.md&quot;&gt;CODE-OF-CONDUCT&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Nightly builds&lt;/h2&gt; 
&lt;p&gt;This table includes links to download the latest builds of the ASP.NET Core Shared Framework. Also included are links to download the Windows Hosting Bundle, which includes the ASP.NET Core Shared Framework, the .NET Runtime Shared Framework, and the IIS plugin (ASP.NET Core Module). You can download the latest .NET Runtime builds &lt;a href=&quot;https://github.com/dotnet/runtime/raw/main/docs/project/dogfooding.md#nightly-builds-table&quot;&gt;here&lt;/a&gt;, and the latest .NET SDK builds &lt;a href=&quot;https://github.com/dotnet/installer#table&quot;&gt;here&lt;/a&gt;. &lt;strong&gt;If you&#39;re unsure what you need, then install the SDK; it has everything except the IIS plugin.&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Platform&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Shared Framework (Installer)&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Shared Framework (Binaries)&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Hosting Bundle (Installer)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-x64.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-x64.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows x86&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-x86.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-x86.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-arm64.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-arm64.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;macOS x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-osx-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;macOS arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-osx-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-x64.deb&quot;&gt;Deb Installer&lt;/a&gt; - &lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-x64.rpm&quot;&gt;RPM Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux arm&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-arm.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-aarch64.rpm&quot;&gt;RPM Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-musl-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-arm&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-musl-arm.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-musl-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>dnSpy/dnSpy</title>
      <link>https://github.com/dnSpy/dnSpy</link>
      <description>&lt;p&gt;.NET debugger and assembly editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dnSpy - &lt;a href=&quot;https://github.com/dnSpy/dnSpy/releases&quot;&gt;Latest release&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;dnSpy is a debugger and .NET assembly editor. You can use it to edit and debug assemblies even if you don&#39;t have any source code available. Main features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Debug .NET and Unity assemblies&lt;/li&gt; 
 &lt;li&gt;Edit .NET and Unity assemblies&lt;/li&gt; 
 &lt;li&gt;Light and dark themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See below for more features&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dnSpy/dnSpy/master/images/debug-animated.gif&quot; alt=&quot;debug-animated&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dnSpy/dnSpy/master/images/edit-code-animated.gif&quot; alt=&quot;edit-code-animated&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Binaries&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dnSpy/dnSpy/releases&quot;&gt;https://github.com/dnSpy/dnSpy/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PS&quot;&gt;git clone --recursive https://github.com/dnSpy/dnSpy.git
cd dnSpy
# or dotnet build
./build.ps1 -NoMsbuild
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To debug Unity games, you need this repo too: &lt;a href=&quot;https://github.com/dnSpy/dnSpy-Unity-mono&quot;&gt;https://github.com/dnSpy/dnSpy-Unity-mono&lt;/a&gt; (or get the binaries from &lt;a href=&quot;https://github.com/dnSpy/dnSpy/releases/unity&quot;&gt;https://github.com/dnSpy/dnSpy/releases/unity&lt;/a&gt;)&lt;/p&gt; 
&lt;h1&gt;Debugger&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Debug .NET Framework, .NET and Unity game assemblies, no source code required&lt;/li&gt; 
 &lt;li&gt;Set breakpoints and step into any assembly&lt;/li&gt; 
 &lt;li&gt;Locals, watch, autos windows&lt;/li&gt; 
 &lt;li&gt;Variables windows support saving variables (eg. decrypted byte arrays) to disk or view them in the hex editor (memory window)&lt;/li&gt; 
 &lt;li&gt;Object IDs&lt;/li&gt; 
 &lt;li&gt;Multiple processes can be debugged at the same time&lt;/li&gt; 
 &lt;li&gt;Break on module load&lt;/li&gt; 
 &lt;li&gt;Tracepoints and conditional breakpoints&lt;/li&gt; 
 &lt;li&gt;Export/import breakpoints and tracepoints&lt;/li&gt; 
 &lt;li&gt;Call stack, threads, modules, processes windows&lt;/li&gt; 
 &lt;li&gt;Break on thrown exceptions (1st chance)&lt;/li&gt; 
 &lt;li&gt;Variables windows support evaluating C# / Visual Basic expressions&lt;/li&gt; 
 &lt;li&gt;Dynamic modules can be debugged (but not dynamic methods due to CLR limitations)&lt;/li&gt; 
 &lt;li&gt;Output window logs various debugging events, and it shows timestamps by default :)&lt;/li&gt; 
 &lt;li&gt;Assemblies that decrypt themselves at runtime can be debugged, dnSpy will use the in-memory image. You can also force dnSpy to always use in-memory images instead of disk files.&lt;/li&gt; 
 &lt;li&gt;Public API, you can write an extension or use the C# Interactive window to control the debugger&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Assembly Editor&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;All metadata can be edited&lt;/li&gt; 
 &lt;li&gt;Edit methods and classes in C# or Visual Basic with IntelliSense, no source code required&lt;/li&gt; 
 &lt;li&gt;Add new methods, classes or members in C# or Visual Basic&lt;/li&gt; 
 &lt;li&gt;IL editor for low-level IL method body editing&lt;/li&gt; 
 &lt;li&gt;Low-level metadata tables can be edited. This uses the hex editor internally.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Hex Editor&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click on an address in the decompiled code to go to its IL code in the hex editor&lt;/li&gt; 
 &lt;li&gt;The reverse of the above, press F12 in an IL body in the hex editor to go to the decompiled code or other high-level representation of the bits. It&#39;s great to find out which statement a patch modified.&lt;/li&gt; 
 &lt;li&gt;Highlights .NET metadata structures and PE structures&lt;/li&gt; 
 &lt;li&gt;Tooltips show more info about the selected .NET metadata / PE field&lt;/li&gt; 
 &lt;li&gt;Go to position, file, RVA&lt;/li&gt; 
 &lt;li&gt;Go to .NET metadata token, method body, #Blob / #Strings / #US heap offset or #GUID heap index&lt;/li&gt; 
 &lt;li&gt;Follow references (Ctrl+F12)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Other&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;BAML decompiler&lt;/li&gt; 
 &lt;li&gt;Blue, light and dark themes (and a dark high contrast theme)&lt;/li&gt; 
 &lt;li&gt;Bookmarks&lt;/li&gt; 
 &lt;li&gt;C# Interactive window can be used to script dnSpy&lt;/li&gt; 
 &lt;li&gt;Search assemblies for classes, methods, strings, etc&lt;/li&gt; 
 &lt;li&gt;Analyze class and method usage, find callers, etc&lt;/li&gt; 
 &lt;li&gt;Multiple tabs and tab groups&lt;/li&gt; 
 &lt;li&gt;References are highlighted, use Tab / Shift+Tab to move to the next reference&lt;/li&gt; 
 &lt;li&gt;Go to the entry point and module initializer commands&lt;/li&gt; 
 &lt;li&gt;Go to metadata token or metadata row commands&lt;/li&gt; 
 &lt;li&gt;Code tooltips (C# and Visual Basic)&lt;/li&gt; 
 &lt;li&gt;Export to project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;List of other open source libraries used by dnSpy&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/icsharpcode/ILSpy&quot;&gt;ILSpy decompiler engine&lt;/a&gt; (C# and Visual Basic decompilers)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/roslyn&quot;&gt;Roslyn&lt;/a&gt; (C# and Visual Basic compilers)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0xd4d/dnlib&quot;&gt;dnlib&lt;/a&gt; (.NET metadata reader/writer which can also read obfuscated assemblies)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/vs-mef&quot;&gt;VS MEF&lt;/a&gt; (Faster MEF equals faster startup)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/clrmd&quot;&gt;ClrMD&lt;/a&gt; (Access to lower level debugging info not provided by the CorDebug API)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0xd4d/iced&quot;&gt;Iced&lt;/a&gt; (x86/x64 disassembler)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Translating dnSpy&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://crowdin.com/project/dnspy&quot;&gt;Click here&lt;/a&gt; if you want to help with translating dnSpy to your native language.&lt;/p&gt; 
&lt;h1&gt;Wiki&lt;/h1&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/dnSpy/dnSpy/wiki&quot;&gt;Wiki&lt;/a&gt; for build instructions and other documentation.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;dnSpy is licensed under &lt;a href=&quot;https://raw.githubusercontent.com/dnSpy/dnSpy/master/dnSpy/dnSpy/LicenseInfo/GPLv3.txt&quot;&gt;GPLv3&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dnSpy/dnSpy/master/dnSpy/dnSpy/LicenseInfo/CREDITS.txt&quot;&gt;Credits&lt;/a&gt;&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>MonoGame/MonoGame</title>
      <link>https://github.com/MonoGame/MonoGame</link>
      <description>&lt;p&gt;One framework for creating powerful cross-platform games.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://monogame.net/&quot;&gt; &lt;img height=&quot;128&quot; alt=&quot;MonoGame&quot; src=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame.Logo/refs/heads/master/FullColorOnLight/LogoOnly_128px.png&quot;&gt; &lt;/a&gt; 
 &lt;h1&gt;MonoGame&lt;/h1&gt; 
 &lt;p&gt;&lt;a href=&quot;https://discord.gg/monogame&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/355231098122272778?style=flat-square&amp;amp;color=%237289DA&amp;amp;label=Discord%20server&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Join the chat at https://discord.gg/monogame&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/monogame/monogame/main.yml?style=flat-square&quot; alt=&quot;GitHub Actions Workflow Status&quot;&gt; &lt;a href=&quot;https://monogame.net/donate/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/donate-F1465A?style=flat-square&amp;amp;logo=monogame&amp;amp;logoColor=FFFFFF&quot; alt=&quot;Donate&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;One framework for creating powerful cross-platfrom games&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/#supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/#resources&quot;&gt;Resources&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/#samples&quot;&gt;Samples&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/#support-and-contributions&quot;&gt;Support and Contributions&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/#source-code&quot;&gt;Source Code&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/#helpful-links&quot;&gt;Helpful Links&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/#license&quot;&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;MonoGame&lt;/strong&gt; is a simple and powerful .NET framework for creating games for desktop PCs, video game consoles, and mobile devices using the C# programming language. It has been successfully used to create games such as &lt;a href=&quot;https://store.steampowered.com/app/985890/Streets_of_Rage_4/&quot;&gt;Streets of Rage 4&lt;/a&gt;, &lt;a href=&quot;https://store.steampowered.com/app/953490/CARRION/&quot;&gt;Carrion&lt;/a&gt;, &lt;a href=&quot;https://store.steampowered.com/app/504230/Celeste/&quot;&gt;Celeste&lt;/a&gt;, &lt;a href=&quot;https://store.steampowered.com/app/413150/Stardew_Valley/&quot;&gt;Stardew Valley&lt;/a&gt;, and &lt;a href=&quot;https://monogame.net/showcase/&quot;&gt;many others&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It is an open-source re-implementation of the discontinued &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb200104.aspx&quot;&gt;Microsoft&#39;s XNA Framework&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;p&gt;We support a growing list of platforms across the desktop, mobile, and console space. If there is a platform we don&#39;t support, please &lt;a href=&quot;https://github.com/MonoGame/MonoGame/issues&quot;&gt;make a request&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/CONTRIBUTING.md&quot;&gt;come help us&lt;/a&gt; add it.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Desktop PCs 
  &lt;ul&gt; 
   &lt;li&gt;Windows 8.1 and up (OpenGL &amp;amp; DirectX)&lt;/li&gt; 
   &lt;li&gt;Linux (OpenGL)&lt;/li&gt; 
   &lt;li&gt;macOS 10.15 and up (OpenGL)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mobile/Tablet Devices 
  &lt;ul&gt; 
   &lt;li&gt;Android 6.0 and up (OpenGL)&lt;/li&gt; 
   &lt;li&gt;iPhone/iPad 10.0 and up (OpenGL)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.monogame.net/articles/console_access.html&quot;&gt;Consoles (for registered developers)&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;PlayStation 4&lt;/li&gt; 
   &lt;li&gt;PlayStation 5&lt;/li&gt; 
   &lt;li&gt;Xbox One (XDK only) (GDK coming soon)&lt;/li&gt; 
   &lt;li&gt;Nintendo Switch&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.monogame.net/articles/getting_started/index.html&quot;&gt;Getting started →&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.monogame.net/articles/getting_to_know/howto/&quot;&gt;&quot;How To&quot; Guides →&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.monogame.net/&quot;&gt;Documentation Hub →&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.monogame.net/api/index.html&quot;&gt;API Reference →&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.monogame.net/articles/tutorials.html&quot;&gt;Community Tutorials →&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Samples&lt;/h2&gt; 
&lt;p&gt;Check out the awesome &lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples&quot;&gt;game samples&lt;/a&gt; maintained by the MonoGame team:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/Platformer2D/README.md&quot;&gt;Platformer 2D Sample&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/NeonShooter/README.md&quot;&gt;NeonShooter&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Supported on all platforms&lt;/td&gt; 
   &lt;td&gt;Supported on all platforms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/Platformer2D/README.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame.Samples/refs/heads/3.8.2/Images/Platformer2D-Sample.png&quot; alt=&quot;Platformer 2D Sample&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/NeonShooter/README.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame.Samples/refs/heads/3.8.2/Images/NeonShooter-Sample.png&quot; alt=&quot;NeonShooter Sample&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;The &lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/Platformer2D/README.md&quot;&gt;Platformer 2D&lt;/a&gt; sample is a basic 2D platformer pulled from the original XNA samples and upgraded for MonoGame.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/NeonShooter/README.md&quot;&gt;Neon Shooter&lt;/a&gt; Is a graphically intensive twin-stick shooter with particle effects and save data from Michael Hoffman&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/AutoPong/README.md&quot;&gt;Auto Pong Sample&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/ShipGame/README.md&quot;&gt;Ship Game 3D&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Supported on all platforms&lt;/td&gt; 
   &lt;td&gt;GL / DX / iOS / Android&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/AutoPong/README.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame.Samples/refs/heads/3.8.2/Images/AutoPong_1.gif&quot; alt=&quot;Auto Pong Sample&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/ShipGame/README.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame.Samples/refs/heads/3.8.2/Images/ShipGame.png&quot; alt=&quot;ShipGame 3D Sample&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;A short &lt;a href=&quot;https://github.com/MonoGame/MonoGame.Samples/raw/3.8.2/AutoPong/README.md&quot;&gt;sample project&lt;/a&gt; showing you how to make the classic game of pong, with generated soundfx, in 300 lines of code.&lt;/td&gt; 
   &lt;td&gt;3D Ship Game (Descent clone) sample, pulled from the XNA archives and updated for MonoGame&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Support and Contributions&lt;/h2&gt; 
&lt;p&gt;If you think you have found a bug or have a feature request, use our &lt;a href=&quot;https://github.com/MonoGame/MonoGame/issues&quot;&gt;issue tracker&lt;/a&gt;. Before opening a new issue, please search to see if your problem has already been reported. Try to be as detailed as possible in your issue reports.&lt;/p&gt; 
&lt;p&gt;If you need help using MonoGame or have other questions we suggest you post on &lt;a href=&quot;https://github.com/MonoGame/MonoGame/discussions&quot;&gt;GitHub discussions&lt;/a&gt; page or &lt;a href=&quot;https://discord.gg/monogame&quot;&gt;Discord server&lt;/a&gt;. Please do not use the issue tracker for personal support requests.&lt;/p&gt; 
&lt;p&gt;If you are interested in contributing fixes or features to MonoGame, please read our &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/CONTRIBUTING.md&quot;&gt;contributors guide&lt;/a&gt; first.&lt;/p&gt; 
&lt;h3&gt;Subscription&lt;/h3&gt; 
&lt;p&gt;If you&#39;d like to help the project by supporting us financially, consider supporting us via a subscription for the price of a monthly coffee.&lt;/p&gt; 
&lt;p&gt;Money goes towards hosting, new hardware and if enough people subscribe a dedicated developer.&lt;/p&gt; 
&lt;p&gt;There are several options on our &lt;a href=&quot;https://monogame.net/donate/&quot;&gt;Donation Page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Source Code&lt;/h2&gt; 
&lt;p&gt;The full source code is available here from GitHub:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the source: &lt;code&gt;git clone https://github.com/MonoGame/MonoGame.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Set up the submodules: &lt;code&gt;git submodule update --init&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the solution for your target platform to build the game framework.&lt;/li&gt; 
 &lt;li&gt;Open the Tools solution for your development platform to build the pipeline and content tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the prerequisites for building from source, please look at the &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/REQUIREMENTS.md&quot;&gt;Requirements&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;A high level breakdown of the components of the framework:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The game framework is found in &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/MonoGame.Framework&quot;&gt;MonoGame.Framework&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The content pipeline is located in &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/MonoGame.Framework.Content.Pipeline&quot;&gt;MonoGame.Framework.Content.Pipeline&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Project templates are in &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/Templates&quot;&gt;Templates&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/Tests&quot;&gt;Tests&lt;/a&gt; for the framework unit tests.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/Tools/MonoGame.Tools.Tests&quot;&gt;Tools/Tests&lt;/a&gt; for the content pipeline and other tool tests.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/Tools/MonoGame.Content.Builder&quot;&gt;mgcb&lt;/a&gt; is a command line tool for content processing.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/Tools/MonoGame.Effect.Compiler&quot;&gt;mgfxc&lt;/a&gt; is a command line effect compiler tool.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/Tools/MonoGame.Content.Builder.Editor&quot;&gt;mgcb-editor&lt;/a&gt; tool is a GUI frontend for content processing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helpful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The official website is &lt;a href=&quot;http://www.monogame.net&quot;&gt;monogame.net&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Our &lt;a href=&quot;https://github.com/MonoGame/MonoGame/issues&quot;&gt;issue tracker&lt;/a&gt; is on GitHub.&lt;/li&gt; 
 &lt;li&gt;You can &lt;a href=&quot;https://discord.gg/monogame&quot;&gt;join the Discord server&lt;/a&gt; and chat live with the core developers and other users.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://docs.monogame.net/articles/index.html&quot;&gt;official documentation&lt;/a&gt; is on our website.&lt;/li&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://github.com/MonoGame/MonoGame/releases&quot;&gt;release&lt;/a&gt; and &lt;a href=&quot;https://github.com/orgs/MonoGame/packages&quot;&gt;development&lt;/a&gt; packages.&lt;/li&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://twitter.com/monogameteam&quot;&gt;@MonoGameTeam&lt;/a&gt; on Twitter.&lt;/li&gt; 
 &lt;li&gt;Get premium content on &lt;a href=&quot;https://www.patreon.com/bePatron?u=3142012&quot;&gt;Patreon&lt;/a&gt; (coming soon)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The MonoGame project is under the &lt;a href=&quot;https://opensource.org/licenses/MS-PL&quot;&gt;Microsoft Public License&lt;/a&gt; except for a few portions of the code. See the &lt;a href=&quot;https://raw.githubusercontent.com/MonoGame/MonoGame/develop/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; file for more details. Third-party libraries used by MonoGame are under their own licenses. Please refer to those libraries for details on the license they use.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cysharp/ZLinq</title>
      <link>https://github.com/Cysharp/ZLinq</link>
      <description>&lt;p&gt;Zero allocation LINQ with Span and LINQ to SIMD, LINQ to Tree (FileSystem, Json, GameObject, etc.) for all .NET platforms and Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ZLinq&lt;/h1&gt; 
&lt;p&gt;Zero allocation LINQ with Span and LINQ to SIMD, LINQ to Tree (FileSystem, Json, GameObject, etc.) for all .NET platforms(netstandard2.0, 2.1, net8, net9) and Unity, Godot.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] This library is currently in preview. All methods have been implemented, but testing is not complete so operation is not guaranteed. The official release will be soon, but please wait until then for official use in production.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Cysharp/ZLinq/main/Images/title_bench.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using ZLinq;

var seq = source
    .AsValueEnumerable() // only add this line
    .Where(x =&amp;gt; x % 2 == 0)
    .Select(x =&amp;gt; x * 3);

foreach (var item in seq) { }
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;99% compatibility&lt;/strong&gt; with .NET 10&#39;s LINQ (including new &lt;code&gt;Shuffle&lt;/code&gt;, &lt;code&gt;RightJoin&lt;/code&gt;, &lt;code&gt;LeftJoin&lt;/code&gt; operators)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zero allocation&lt;/strong&gt; for method chains through struct-based Enumerable via &lt;code&gt;ValueEnumerable&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Full support for LINQ operations on &lt;strong&gt;Span&lt;/strong&gt; using .NET 9/C# 13&#39;s &lt;code&gt;allows ref struct&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LINQ to Tree&lt;/strong&gt; to extend tree-structured objects (built-in support for FileSystem, JSON, GameObject)&lt;/li&gt; 
 &lt;li&gt;Automatic application of SIMD where possible and customizable &lt;strong&gt;LINQ to SIMD&lt;/strong&gt; for arbitrary operations&lt;/li&gt; 
 &lt;li&gt;Optional &lt;strong&gt;Drop-in replacement&lt;/strong&gt; Source Generator to automatically accelerate all LINQ methods&lt;/li&gt; 
 &lt;li&gt;Fusion of my past LINQ (&lt;a href=&quot;https://github.com/neuecc/linq.js/&quot;&gt;linq.js&lt;/a&gt;, &lt;a href=&quot;https://github.com/Cysharp/SimdLinq/&quot;&gt;SimdLinq&lt;/a&gt;, &lt;a href=&quot;https://github.com/neuecc/UniRx&quot;&gt;UniRx&lt;/a&gt;, &lt;a href=&quot;https://github.com/Cysharp/R3&quot;&gt;R3&lt;/a&gt;) and zero alloc (&lt;a href=&quot;https://github.com/Cysharp/ZString&quot;&gt;ZString&lt;/a&gt;, &lt;a href=&quot;https://github.com/Cysharp/ZLogger&quot;&gt;ZLogger&lt;/a&gt;) impls&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;I aimed to create not just an experimental library but a practical one. It&#39;s also designed to handle high-load requirements, such as those found in games.&lt;/p&gt; 
&lt;p&gt;You can install it from &lt;a href=&quot;https://www.nuget.org/packages/ZLinq&quot;&gt;NuGet/ZLinq&lt;/a&gt;. For Unity usage, refer to the &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/ZLinq/main/#unity&quot;&gt;Unity section&lt;/a&gt;. For Godot usage, refer to the &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/ZLinq/main/#godot&quot;&gt;Godot section&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet add package ZLinq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ZLinq chains internally use the following interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public readonly ref struct ValueEnumerable&amp;lt;TEnumerator, T&amp;gt;(TEnumerator enumerator)
    where TEnumerator : struct, IValueEnumerator&amp;lt;T&amp;gt;, allows ref struct
{
    public readonly TEnumerator Enumerator = enumerator;
}

public interface IValueEnumerator&amp;lt;T&amp;gt; : IDisposable
{
    bool TryGetNext(out T current); // as MoveNext + Current

    // Optimization helper
    bool TryGetNonEnumeratedCount(out int count);
    bool TryGetSpan(out ReadOnlySpan&amp;lt;T&amp;gt; span);
    bool TryCopyTo(Span&amp;lt;T&amp;gt; destination, Index offset);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Besides changing to a struct-based approach, we&#39;ve integrated MoveNext and Current to reduce the number of iterator calls. Also, since structs automatically copy internal state, we&#39;ve simplified the type complexity by unifying Enumerable and Enumerator(almostly types only implements custom enumerator).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static ValueEnumerable&amp;lt;Where&amp;lt;TEnumerator, TSource&amp;gt;, TSource&amp;gt; Where&amp;lt;TEnumerator, TSource&amp;gt;(in this ValueEnumerable&amp;lt;TEnumerator, TSource&amp;gt; source, Func&amp;lt;TSource, Boolean&amp;gt; predicate)
    where TEnumerator : struct, IValueEnumerator&amp;lt;TSource&amp;gt;, allows ref struct
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Operators have this method signature. C# cannot infer types from generic constraints(&lt;a href=&quot;https://github.com/dotnet/csharplang/discussions/6930&quot;&gt;dotnet/csharplang#6930&lt;/a&gt;). Therefore, the traditional Struct LINQ approach required implementing all operator combinations as instance methods, resulting in &lt;a href=&quot;https://kevinmontrose.com/2018/01/17/linqaf-replacing-linq-and-not-allocating/&quot;&gt;100,000+ methods and massive assembly sizes&lt;/a&gt;. However, in ZLinq, we&#39;ve successfully avoided all the boilerplate method implementations by devising an approach that properly conveys types to C# compiler. There are approaches focusing on instance methods to aim for local maximum performance, or generating everything with Source Generator, but ZLinq style has been chosen to balance usability with assembly size and other factors.&lt;/p&gt; 
&lt;p&gt;Additionally, &lt;code&gt;TryGetNonEnumeratedCount(out int count)&lt;/code&gt;, &lt;code&gt;TryGetSpan(out ReadOnlySpan&amp;lt;T&amp;gt; span)&lt;/code&gt;, and &lt;code&gt;TryCopyTo(Span&amp;lt;T&amp;gt; destination)&lt;/code&gt; defined in the interface itself enable flexible optimizations. For example, Take+Skip can be expressed entirely as Span slices, so if the original source can be converted to a Span, Span slices are passed through TryGetSpan chains. For ToArray, if the sequence length can be calculated, a fixed-length array is prepared in advance, and operators that can write directly to the final array via TryCopyTo will do so. Some methods automatically use SIMD-based optimization if a Span can be obtained.&lt;/p&gt; 
&lt;h2&gt;Gettting Started&lt;/h2&gt; 
&lt;p&gt;Use &lt;code&gt;using ZLinq;&lt;/code&gt; and call &lt;code&gt;AsValueEnumerable()&lt;/code&gt; on any iterable type to use ZLinq&#39;s zero-allocation LINQ. Also, &lt;code&gt;Range&lt;/code&gt;, &lt;code&gt;Repeat&lt;/code&gt;, and &lt;code&gt;Empty&lt;/code&gt; are defined in &lt;code&gt;ValueEnumerable&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using ZLinq;

var source = new int[] { 1, 2, 3, 4, 5 };

// Call AsValueEnumerable to apply ZLinq
var seq1 = source.AsValueEnumerable().Where(x =&amp;gt; x % 2 == 0);

// Can also be applied to Span (only in .NET 9/C# 13 environments that support allows ref struct)
Span&amp;lt;int&amp;gt; span = stackalloc int[5] { 1, 2, 3, 4, 5 };
var seq2 = span.AsValueEnumerable().Select(x =&amp;gt; x * x);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Drop-in replacement&lt;/h2&gt; 
&lt;p&gt;When introducing &lt;code&gt;ZLinq.DropInGenerator&lt;/code&gt;, you can automatically use ZLinq for all LINQ methods without calling &lt;code&gt;AsValueEnumerable()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet add package ZLinq.DropInGenerator
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Cysharp/ZLinq/main/Images/dropin.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;It works by using a Source Generator to add extension methods for each type that take priority, making &lt;code&gt;ZLinq&lt;/code&gt; methods be selected instead of System.Linq when the same name and arguments are used. After installing the package, you need to configure it with an assembly attribute.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[assembly: ZLinq.ZLinqDropInAttribute(&quot;ZLinq.DropIn&quot;, ZLinq.DropInGenerateTypes.Array)]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;generateNamespace&lt;/code&gt; is the namespace for the generated code, and &lt;code&gt;DropInGenerateTypes&lt;/code&gt; selects the target types. &lt;code&gt;DropInGenerateTypes&lt;/code&gt; allows you to choose from &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Span&lt;/code&gt; (Span/ReadOnlySpan), &lt;code&gt;Memory&lt;/code&gt; (Memory/ReadOnlyMemory), &lt;code&gt;List&lt;/code&gt;, and &lt;code&gt;Enumerable&lt;/code&gt; (IEnumerable). These are Flags, so you can combine them, such as &lt;code&gt;DropInGenerateTypes.Array | DropInGenerateTypes.Span&lt;/code&gt;. There are also predefined combinations: &lt;code&gt;Collection = Array | Span | Memory | List&lt;/code&gt; and &lt;code&gt;Everything = Array | Span | Memory | List | Enumerable&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can enable it for all files by global using the generated namespace:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;global using ZLinq.Dropin;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using &lt;code&gt;DropInGenerateTypes.Enumerable&lt;/code&gt;, which generates extension methods for &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;, you need to make &lt;code&gt;generateNamespace&lt;/code&gt; global as a namespace priority. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[assembly: ZLinq.ZLinqDropInAttribute(&quot;&quot;, ZLinq.DropInGenerateTypes.Everything)]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the most aggressive configuration, causing all LINQ methods to be processed by ZLinq, and making it impossible to use normal LINQ methods (if Enumerable is not included, you can call AsEnumerable() to execute with System.Linq).&lt;/p&gt; 
&lt;p&gt;While ZLinq offers superior performance, there are some differences from System.Linq. For instance, be aware that you cannot store it in fields or pass it as method arguments. For example, you cannot pass LINQ operations to &lt;code&gt;string.Join&lt;/code&gt;. In such cases, you need to use &lt;code&gt;ToArray&lt;/code&gt; (if you want to minimize allocations, you can use &lt;code&gt;ToArrayPool&lt;/code&gt; and return it to the Pool after the Join operation).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;I recommend considering &lt;code&gt;Everything&lt;/code&gt; to have too strong of side effects, so it would be better to try using namespaces and &lt;code&gt;DropInGenerateTypes.Collection&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Other options for &lt;code&gt;ZLinqDropInAttribute&lt;/code&gt; include &lt;code&gt;GenerateAsPublic&lt;/code&gt;, &lt;code&gt;ConditionalCompilationSymbols&lt;/code&gt;, and &lt;code&gt;DisableEmitSource&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;LINQ to Tree&lt;/h2&gt; 
&lt;p&gt;LINQ to XML introduced the concept of querying around axes to C#. Even if you don&#39;t use XML, similar APIs are incorporated into Roslyn and effectively used for exploring SyntaxTrees. ZLinq extends this concept to make it applicable to anything that can be considered a Tree, allowing &lt;code&gt;Ancestors&lt;/code&gt;, &lt;code&gt;Children&lt;/code&gt;, &lt;code&gt;Descendants&lt;/code&gt;, &lt;code&gt;BeforeSelf&lt;/code&gt;, and &lt;code&gt;AfterSelf&lt;/code&gt; to be applied.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Cysharp/ZLinq/main/Images/axis.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Specifically, by defining a struct that implements the following interface, it becomes iterable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public interface ITraverser&amp;lt;TTraverser, T&amp;gt; : IDisposable
    where TTraverser : struct, ITraverser&amp;lt;TTraverser, T&amp;gt; // self
{
    T Origin { get; }
    TTraverser ConvertToTraverser(T next); // for Descendants
    bool TryGetHasChild(out bool hasChild); // optional: optimize use for Descendants
    bool TryGetChildCount(out int count);   // optional: optimize use for Children
    bool TryGetParent(out T parent); // for Ancestors
    bool TryGetNextChild(out T child); // for Children | Descendants
    bool TryGetNextSibling(out T next); // for AfterSelf
    bool TryGetPreviousSibling(out T previous); // BeforeSelf
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Standard packages are available for FileSystemInfo and JsonNode. For Unity, it&#39;s applicable to GameObject and Transform.&lt;/p&gt; 
&lt;h3&gt;FileSystem&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet add package ZLinq.FileSystem
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using ZLinq;

var root = new DirectoryInfo(&quot;C:\\Program Files (x86)\\Steam&quot;);

// FileSystemInfo(FileInfo/DirectoryInfo) can call `Ancestors`, `Children`, `Descendants`, `BeforeSelf`, `AfterSelf`
var allDlls = root
    .Descendants()
    .OfType&amp;lt;FileInfo&amp;gt;()
    .Where(x =&amp;gt; x.Extension == &quot;.dll&quot;);

var grouped = allDlls
    .GroupBy(x =&amp;gt; x.Name)
    .Select(x =&amp;gt; new { FileName = x.Key, Count = x.Count() })
    .OrderByDescending(x =&amp;gt; x.Count);

foreach (var item in grouped)
{
    Console.WriteLine(item);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JSON(System.Text.Json)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet add package ZLinq.Json
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using ZLinq;

// System.Text.Json&#39;s JsonNode is the target of LINQ to JSON(not JsonDocument/JsonElement).
var json = JsonNode.Parse(&quot;&quot;&quot;
{
    &quot;nesting&quot;: {
      &quot;level1&quot;: {
        &quot;description&quot;: &quot;First level of nesting&quot;,
        &quot;value&quot;: 100,
        &quot;level2&quot;: {
          &quot;description&quot;: &quot;Second level of nesting&quot;,
          &quot;flags&quot;: [true, false, true],
          &quot;level3&quot;: {
            &quot;description&quot;: &quot;Third level of nesting&quot;,
            &quot;coordinates&quot;: {
              &quot;x&quot;: 10.5,
              &quot;y&quot;: 20.75,
              &quot;z&quot;: -5.0
            },
            &quot;level4&quot;: {
              &quot;description&quot;: &quot;Fourth level of nesting&quot;,
              &quot;metadata&quot;: {
                &quot;created&quot;: &quot;2025-02-15T14:30:00Z&quot;,
                &quot;modified&quot;: null,
                &quot;version&quot;: 2.1
              },
              &quot;level5&quot;: {
                &quot;description&quot;: &quot;Fifth level of nesting&quot;,
                &quot;settings&quot;: {
                  &quot;enabled&quot;: true,
                  &quot;threshold&quot;: 0.85,
                  &quot;options&quot;: [&quot;fast&quot;, &quot;accurate&quot;, &quot;balanced&quot;],
                  &quot;config&quot;: {
                    &quot;timeout&quot;: 30000,
                    &quot;retries&quot;: 3,
                    &quot;deepSetting&quot;: {
                      &quot;algorithm&quot;: &quot;advanced&quot;,
                      &quot;parameters&quot;: [1, 1, 2, 3, 5, 8, 13]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
}
&quot;&quot;&quot;);

// JsonNode
var origin = json![&quot;nesting&quot;]![&quot;level1&quot;]![&quot;level2&quot;]!;

// JsonNode axis, Children, Descendants, Anestors, BeforeSelf, AfterSelf and ***Self.
foreach (var item in origin.Descendants().Select(x =&amp;gt; x.Node).OfType&amp;lt;JsoArray&amp;gt;())
{
    // [true, false, true], [&quot;fast&quot;, &quot;accurate&quot;, &quot;balanced&quot;], [1, 1, 2, 3, 5, 8, 13]
    Console.WriteLine(item.ToJsonString(JsonSerializerOptions.Web));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GameObject/Transfrom(Unity)&lt;/h3&gt; 
&lt;p&gt;see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/ZLinq/main/#unity&quot;&gt;unity&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;LINQ to SIMD&lt;/h2&gt; 
&lt;p&gt;WIP&lt;/p&gt; 
&lt;h2&gt;Unity&lt;/h2&gt; 
&lt;p&gt;The minimum supported Unity version will be &lt;code&gt;2022.3.12f1&lt;/code&gt;, as it is necessary to support C# Incremental Source Generator(Compiler Version, 4.3.0).&lt;/p&gt; 
&lt;p&gt;There are two installation steps required to use it in Unity.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;code&gt;ZLinq&lt;/code&gt; from NuGet using &lt;a href=&quot;https://github.com/GlitchEnzo/NuGetForUnity&quot;&gt;NuGetForUnity&lt;/a&gt;&lt;br&gt; Open Window from NuGet -&amp;gt; Manage NuGet Packages, Search &quot;ZLinq&quot; and Press Install.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install the &lt;code&gt;ZLinq.Unity&lt;/code&gt; package by referencing the git URL&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;https://github.com/Cysharp/ZLinq.git?path=src/ZLinq.Unity/Assets/ZLinq.Unity
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the help of the Unity package, in addition to the standard ZLinq, LINQ to GameObject functionality becomes available for exploring GameObject/Transform.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Cysharp/ZLinq/main/Images/axis.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using ZLinq;

public class SampleScript : MonoBehaviour
{
    public Transform Origin;

    void Start()
    {
        Debug.Log(&quot;Ancestors--------------&quot;);  // Container, Root
        foreach (var item in Origin.Ancestors()) Debug.Log(item.name);

        Debug.Log(&quot;Children--------------&quot;); // Sphere_A, Sphere_B, Group, Sphere_A, Sphere_B
        foreach (var item in Origin.Children()) Debug.Log(item.name);

        Debug.Log(&quot;Descendants--------------&quot;); // Sphere_A, Sphere_B, Group, P1, Group, Sphere_B, P2, Sphere_A, Sphere_B
        foreach (var item in Origin.Descendants()) Debug.Log(item.name);

        Debug.Log(&quot;BeforeSelf--------------&quot;); // C1, C2
        foreach (var item in Origin.BeforeSelf()) Debug.Log(item.name);

        Debug.Log(&quot;AfterSelf--------------&quot;);  // C3, C4
        foreach (var item in Origin.AfterSelf()) Debug.Log(item.name);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can chain query(LINQ to Objects). Also, you can filter by component using the &lt;code&gt;OfComponent&amp;lt;T&amp;gt;&lt;/code&gt; helper.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// all filtered(tag == &quot;foobar&quot;) objects
var foobars = root.Descendants().Where(x =&amp;gt; x.tag == &quot;foobar&quot;);

// get FooScript under self childer objects and self
var fooScripts = root.ChildrenAndSelf().OfComponent&amp;lt;FooScript&amp;gt;(); 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In .NET 9, &lt;code&gt;ValueEnumerable&lt;/code&gt; is a &lt;code&gt;ref struct&lt;/code&gt;, so it cannot be converted to &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;. However, in Unity it&#39;s a regular &lt;code&gt;struct&lt;/code&gt;, making it possible to convert to &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;. You can improve interoperability by preparing an extension method like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static class ZLinqExtensions
{
    public static IEnumerable&amp;lt;T&amp;gt; AsEnumerable&amp;lt;TEnumerator, T&amp;gt;(this ValueEnumerable&amp;lt;TEnumerator, T&amp;gt; valueEnumerable)
        where TEnumerator : struct, IValueEnumerator&amp;lt;T&amp;gt;
    {
        using (var e = valueEnumerable.Enumerator)
        {
            while (e.TryGetNext(out var current))
            {
                yield return current;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Godot&lt;/h2&gt; 
&lt;p&gt;The minimum supported Godot version will be &lt;code&gt;4.0.0&lt;/code&gt;. You can install ZLinq.Godot package via NuGet.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet add package ZLinq.Godot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the standard ZLinq, LINQ to Node functionality is available.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Cysharp/ZLinq/main/Images/godot.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Godot;
using ZLinq;

public partial class SampleScript : Node2D
{
    public override void _Ready()
    {
        var origin = GetNode&amp;lt;Node2D&amp;gt;(&quot;Container/Origin&quot;);

        GD.Print(&quot;Ancestors--------------&quot;); // Container, Root, root (Root Window)
        foreach (var item in origin.Ancestors()) GD.Print(item.Name);

        GD.Print(&quot;Children--------------&quot;); // Sphere_A, Sphere_B, Group, Sphere_A, Sphere_B
        foreach (var item in origin.Children()) GD.Print(item.Name);

        GD.Print(&quot;Descendants--------------&quot;); // Sphere_A, Sphere_B, Group, P1, Group, Sphere_B, P2, Sphere_A, Sphere_B
        foreach (var item in origin.Descendants()) GD.Print(item.Name);

        GD.Print(&quot;BeforeSelf--------------&quot;); // C1, C2
        foreach (var item in origin.BeforeSelf()) GD.Print(item.Name);

        GD.Print(&quot;AfterSelf--------------&quot;); // C3, C4
        foreach (var item in origin.AfterSelf()) GD.Print(item.Name);
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can chain query(LINQ to Objects). Also, you can filter by node type using the &lt;code&gt;OfType()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// get ancestors under a Window
var ancestors = root.Ancestors().TakeWhile(x =&amp;gt; x is not Window);
// get FooScript under self childer objects and self
var fooScripts = root.ChildrenAndSelf().OfType(default(FooScript));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;Since the preview version release, we have received multiple ideas for fundamental interface revisions leading to performance improvements from &lt;a href=&quot;https://github.com/Akeit0&quot;&gt;@Akeit0&lt;/a&gt;, and test and benchmark infrastructure from &lt;a href=&quot;https://github.com/filzrev&quot;&gt;@filzrev&lt;/a&gt;. We are grateful for their many contributions.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is under MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZGGSONG/STranslate</title>
      <link>https://github.com/ZGGSONG/STranslate</link>
      <description>&lt;p&gt;A ready-to-go translation ocr tool developed with WPF/WPF 开发的一款即用即走的翻译、OCR工具&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt; &lt;a href=&quot;https://github.com/zggsong/STranslate&quot; target=&quot;_blank&quot;&gt; &lt;img align=&quot;center&quot; alt=&quot;STranslate&quot; width=&quot;200&quot; src=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/attachments/imgs/favicon.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href=&quot;https://github.com/ZGGSONG/STranslate/raw/main/LICENSE&quot; target=&quot;_self&quot;&gt; &lt;img alt=&quot;Latest GitHub release&quot; src=&quot;https://img.shields.io/github/license/ZGGSONG/STranslate&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/ZGGSONG/STranslate/releases/latest&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Latest GitHub release&quot; src=&quot;https://img.shields.io/github/release/ZGGSONG/STranslate.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/ZGGSONG/STranslate/releases&quot; target=&quot;_self&quot;&gt; &lt;img alt=&quot;Downloads&quot; src=&quot;https://img.shields.io/github/downloads/ZGGSONG/STranslate/total&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/ZGGSONG/STranslate/discussions&quot; target=&quot;_self&quot;&gt; &lt;img alt=&quot;Discussions&quot; src=&quot;https://img.shields.io/github/discussions/ZGGSONG/STranslate&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;h1 align=&quot;center&quot;&gt;STranslate&lt;/h1&gt; 
 &lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/README_ZH.md&quot;&gt;&lt;strong&gt;简体中文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/6979&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/6979&quot; alt=&quot;ZGGSONG%2FSTranslate | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p align=&quot;center&quot;&gt;A &lt;strong&gt;ready-to-go&lt;/strong&gt; translation and OCR tool developed with WPF.&lt;/p&gt; 
 &lt;p&gt;&lt;small&gt;With the update of features and the limitations of free services, it is recommended to apply for the service and make the corresponding configurations to obtain a better user experience.&lt;/small&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;h2&gt;Access&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Overseas&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Domestic&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/ZGGSONG/STranslate&quot;&gt;Github&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/zggsong/STranslate&quot;&gt;Gitee&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Download the latest &lt;a href=&quot;https://github.com/ZGGSONG/STranslate/releases&quot;&gt;Release&lt;/a&gt; version and extract it to use.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://stranslate.zggsong.com&quot;&gt;Document&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Discussion&lt;/h2&gt; 
&lt;p&gt;If you have questions, please go to &lt;a href=&quot;https://github.com/ZGGSONG/STranslate/discussions&quot;&gt;Discussions&lt;/a&gt; for discussion.&lt;/p&gt; 
&lt;p&gt;Or group discussion&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/attachments/imgs/qq.jpeg&quot; height=&quot;200&quot;&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Special thanks to &lt;a href=&quot;https://github.com/zu1k&quot;&gt;zu1k&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;a href=&quot;https://bobtranslate.com/guide/&quot;&gt;Bob&lt;/a&gt; for inspiration&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;a href=&quot;https://github.com/lxgw/LxgwWenKai&quot;&gt;LxgwWenKai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;a href=&quot;https://gitee.com/raoyutian/paddle-ocrsharp&quot;&gt;PaddleOCRSharp&lt;/a&gt; for packing &lt;code&gt;PaddleOCR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;a href=&quot;https://github.com/Planshit/Tai&quot;&gt;Tai&lt;/a&gt; for upgrade functionality&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;a href=&quot;https://pot-app.com/&quot;&gt;pot-desktop&lt;/a&gt; for &lt;code&gt;Prompt&lt;/code&gt; design ideas&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;a href=&quot;https://github.com/d4n3436/GTranslate&quot;&gt;GTranslate&lt;/a&gt; Microsoft/Yandex service source code&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;code&gt;ChatGPT&lt;/code&gt;、&lt;code&gt;Github Copilot&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Thanks to JetBrains for providing open-source project free License&lt;/li&gt; 
 &lt;li&gt;Thanks for &lt;a href=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/Sponsor.md#%E5%88%86%E4%BA%AB%E6%94%AF%E6%8C%81&quot;&gt;Posting Sharing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://jb.gg/OpenSourceSupport&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/attachments/imgs/jb_beam.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you like it, you can buy the author a cup of coffee.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Thank you to those who rewarded me &lt;a href=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/Sponsor.md&quot;&gt;Sponsor List&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;WeChat&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Alipay&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/attachments/imgs/wechatpay.jpg&quot; alt=&quot;wehcatpay&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/attachments/imgs/alipay.jpg&quot; alt=&quot;alipay&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Others&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;The software is open source and free of charge. If there are special customization needs, I accept paid development &lt;a href=&quot;https://raw.githubusercontent.com/ZGGSONG/STranslate/main/zggsong@foxmail.com&quot;&gt;email&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;STranslate&lt;/strong&gt; © &lt;a href=&quot;https://github.com/zggsong&quot;&gt;zggsong&lt;/a&gt;, Released under the &lt;a href=&quot;https://github.com/ZGGSONG/STranslate/raw/main/LICENSE&quot;&gt;MIT&lt;/a&gt; License.&lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Website &lt;a href=&quot;https://www.zggsong.com&quot;&gt;Blog&lt;/a&gt; · GitHub &lt;a href=&quot;https://github.com/zggsong&quot;&gt;@zggsong&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#ZGGSONG/STranslate&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=ZGGSONG/STranslate&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Unity-Technologies/ml-agents</title>
      <link>https://github.com/Unity-Technologies/ml-agents</link>
      <description>&lt;p&gt;The Unity Machine Learning Agents Toolkit (ML-Agents) is an open-source project that enables games and simulations to serve as environments for training intelligent agents using deep reinforcement learning and imitation learning.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unity ML-Agents Toolkit&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/release_22_docs/docs/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-reference-blue.svg?sanitize=true&quot; alt=&quot;docs badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/LICENSE.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-Apache--2.0-green.svg?sanitize=true&quot; alt=&quot;license badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;(&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases/tag/latest_release&quot;&gt;latest release&lt;/a&gt;) (&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases&quot;&gt;all releases&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Unity Machine Learning Agents Toolkit&lt;/strong&gt; (ML-Agents) is an open-source project that enables games and simulations to serve as environments for training intelligent agents. We provide implementations (based on PyTorch) of state-of-the-art algorithms to enable game developers and hobbyists to easily train intelligent agents for 2D, 3D and VR/AR games. Researchers can also use the provided simple-to-use Python API to train Agents using reinforcement learning, imitation learning, neuroevolution, or any other methods. These trained agents can be used for multiple purposes, including controlling NPC behavior (in a variety of settings such as multi-agent and adversarial), automated testing of game builds and evaluating different game design decisions pre-release. The ML-Agents Toolkit is mutually beneficial for both game developers and AI researchers as it provides a central platform where advances in AI can be evaluated on Unity’s rich environments and then made accessible to the wider research and game developer communities.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;17+ &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Learning-Environment-Examples.md&quot;&gt;example Unity environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Support for multiple environment configurations and training scenarios&lt;/li&gt; 
 &lt;li&gt;Flexible Unity SDK that can be integrated into your game or custom Unity scene&lt;/li&gt; 
 &lt;li&gt;Support for training single-agent, multi-agent cooperative, and multi-agent competitive scenarios via several Deep Reinforcement Learning algorithms (PPO, SAC, MA-POCA, self-play).&lt;/li&gt; 
 &lt;li&gt;Support for learning from demonstrations through two Imitation Learning algorithms (BC and GAIL).&lt;/li&gt; 
 &lt;li&gt;Quickly and easily add your own &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Python-Custom-Trainer-Plugin.md&quot;&gt;custom training algorithm&lt;/a&gt; and/or components.&lt;/li&gt; 
 &lt;li&gt;Easily definable Curriculum Learning scenarios for complex tasks&lt;/li&gt; 
 &lt;li&gt;Train robust agents using environment randomization&lt;/li&gt; 
 &lt;li&gt;Flexible agent control with On Demand Decision Making&lt;/li&gt; 
 &lt;li&gt;Train using multiple concurrent Unity environment instances&lt;/li&gt; 
 &lt;li&gt;Utilizes the &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Sentis.md&quot;&gt;Sentis&lt;/a&gt; to provide native cross-platform support&lt;/li&gt; 
 &lt;li&gt;Unity environment &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Python-LLAPI.md&quot;&gt;control from Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Wrap Unity learning environments as a &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Python-Gym-API.md&quot;&gt;gym&lt;/a&gt; environment&lt;/li&gt; 
 &lt;li&gt;Wrap Unity learning environments as a &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Python-PettingZoo-API.md&quot;&gt;PettingZoo&lt;/a&gt; environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/ML-Agents-Overview.md&quot;&gt;ML-Agents Overview&lt;/a&gt; page for detailed descriptions of all these features. Or go straight to our &lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;web docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases &amp;amp; Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Our latest, stable release is &lt;code&gt;Release 22&lt;/code&gt;. Click &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Getting-Started.md&quot;&gt;here&lt;/a&gt; to get started with the latest release of ML-Agents.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You can also check out our new &lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;web docs&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The table below lists all our releases, including our &lt;code&gt;main&lt;/code&gt; branch which is under active development and may be unstable. A few helpful guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Versioning.md&quot;&gt;Versioning page&lt;/a&gt; overviews how we manage our GitHub releases and the versioning process for each of the ML-Agents components.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases&quot;&gt;Releases page&lt;/a&gt; contains details of the changes between releases.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Migrating.md&quot;&gt;Migration page&lt;/a&gt; contains details on how to upgrade from earlier releases of the ML-Agents Toolkit.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;Documentation&lt;/strong&gt; links in the table below include installation and usage instructions specific to each release. Remember to always use the documentation that corresponds to the release version you&#39;re using.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;com.unity.ml-agents&lt;/code&gt; package is &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/Manual/pack-safe.html&quot;&gt;verified&lt;/a&gt; for Unity 2020.1 and later. Verified packages releases are numbered 1.0.x.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Release Date&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Python Package&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Unity Package&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Release 22&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;October 5, 2024&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/release_22&quot;&gt;source&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;docs&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/archive/release_22.zip&quot;&gt;download&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://pypi.org/project/mlagents/1.1.0/&quot;&gt;1.1.0&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@3.0/manual/index.html&quot;&gt;3.0.0&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;develop (unstable)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/develop&quot;&gt;source&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/archive/develop.zip&quot;&gt;download&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you are a researcher interested in a discussion of Unity as an AI platform, see a pre-print of our &lt;a href=&quot;https://arxiv.org/abs/1809.02627&quot;&gt;reference paper on Unity and the ML-Agents Toolkit&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you use Unity or the ML-Agents Toolkit to conduct research, we ask that you cite the following paper as a reference:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@article{juliani2020,
  title={Unity: A general platform for intelligent agents},
  author={Juliani, Arthur and Berges, Vincent-Pierre and Teng, Ervin and Cohen, Andrew and Harper, Jonathan and Elion, Chris and Goy, Chris and Gao, Yuan and Henry, Hunter and Mattar, Marwan and Lange, Danny},
  journal={arXiv preprint arXiv:1809.02627},
  url={https://arxiv.org/pdf/1809.02627.pdf},
  year={2020}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, if you use the MA-POCA trainer in your research, we ask that you cite the following paper as a reference:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@article{cohen2022,
  title={On the Use and Misuse of Absorbing States in Multi-agent Reinforcement Learning},
  author={Cohen, Andrew and Teng, Ervin and Berges, Vincent-Pierre and Dong, Ruo-Ping and Henry, Hunter and Mattar, Marwan and Zook, Alexander and Ganguly, Sujoy},
  journal={RL in Games Workshop AAAI 2022},
  url={http://aaai-rlg.mlanctot.info/papers/AAAI22-RLG_paper_32.pdf},
  year={2022}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;p&gt;We have a Unity Learn course, &lt;a href=&quot;https://learn.unity.com/course/ml-agents-hummingbirds&quot;&gt;ML-Agents: Hummingbirds&lt;/a&gt;, that provides a gentle introduction to Unity and the ML-Agents Toolkit.&lt;/p&gt; 
&lt;p&gt;We&#39;ve also partnered with &lt;a href=&quot;https://www.youtube.com/c/CodeMonkeyUnity&quot;&gt;CodeMonkeyUnity&lt;/a&gt; to create a &lt;a href=&quot;https://www.youtube.com/playlist?list=PLzDRvYVwl53vehwiN_odYJkPBzcqFw110&quot;&gt;series of tutorial videos&lt;/a&gt; on how to implement and use the ML-Agents Toolkit.&lt;/p&gt; 
&lt;p&gt;We have also published a series of blog posts that are relevant for ML-Agents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;(July 12, 2021) &lt;a href=&quot;https://blog.unity.com/technology/ml-agents-plays-dodgeball&quot;&gt;ML-Agents plays Dodgeball&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(May 5, 2021) &lt;a href=&quot;https://blogs.unity3d.com/2021/05/05/ml-agents-v2-0-release-now-supports-training-complex-cooperative-behaviors/&quot;&gt;ML-Agents v2.0 release: Now supports training complex cooperative behaviors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(December 28, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/12/28/happy-holidays-from-the-unity-ml-agents-team/&quot;&gt;Happy holidays from the Unity ML-Agents team!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(November 20, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/11/20/how-eidos-montreal-created-grid-sensors-to-improve-observations-for-training-agents/&quot;&gt;How Eidos-Montréal created Grid Sensors to improve observations for training agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(November 11, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/11/11/2020-aiunity-interns-shoutout/&quot;&gt;2020 AI@Unity interns shoutout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(May 12, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/05/12/announcing-ml-agents-unity-package-v1-0/&quot;&gt;Announcing ML-Agents Unity Package v1.0!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(February 28, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/02/28/training-intelligent-adversaries-using-self-play-with-ml-agents/&quot;&gt;Training intelligent adversaries using self-play with ML-Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(November 11, 2019) &lt;a href=&quot;https://blogs.unity3d.com/2019/11/11/training-your-agents-7-times-faster-with-ml-agents/&quot;&gt;Training your agents 7 times faster with ML-Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(October 21, 2019) &lt;a href=&quot;https://blogs.unity3d.com/2019/10/21/the-aiunity-interns-help-shape-the-world/&quot;&gt;The AI@Unity interns help shape the world&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(April 15, 2019) &lt;a href=&quot;https://blogs.unity3d.com/2019/04/15/unity-ml-agents-toolkit-v0-8-faster-training-on-real-games/&quot;&gt;Unity ML-Agents Toolkit v0.8: Faster training on real games&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(March 1, 2019) &lt;a href=&quot;https://blogs.unity3d.com/2019/03/01/unity-ml-agents-toolkit-v0-7-a-leap-towards-cross-platform-inference/&quot;&gt;Unity ML-Agents Toolkit v0.7: A leap towards cross-platform inference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(December 17, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/12/17/ml-agents-toolkit-v0-6-improved-usability-of-brains-and-imitation-learning/&quot;&gt;ML-Agents Toolkit v0.6: Improved usability of Brains and Imitation Learning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(October 2, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/10/02/puppo-the-corgi-cuteness-overload-with-the-unity-ml-agents-toolkit/&quot;&gt;Puppo, The Corgi: Cuteness Overload with the Unity ML-Agents Toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(September 11, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/09/11/ml-agents-toolkit-v0-5-new-resources-for-ai-researchers-available-now/&quot;&gt;ML-Agents Toolkit v0.5, new resources for AI researchers available now&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(June 26, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/06/26/solving-sparse-reward-tasks-with-curiosity/&quot;&gt;Solving sparse-reward tasks with Curiosity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(June 19, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/06/19/unity-ml-agents-toolkit-v0-4-and-udacity-deep-reinforcement-learning-nanodegree/&quot;&gt;Unity ML-Agents Toolkit v0.4 and Udacity Deep Reinforcement Learning Nanodegree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(May 24, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/05/24/imitation-learning-in-unity-the-workflow/&quot;&gt;Imitation Learning in Unity: The Workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(March 15, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/03/15/ml-agents-v0-3-beta-released-imitation-learning-feedback-driven-features-and-more/&quot;&gt;ML-Agents Toolkit v0.3 Beta released: Imitation Learning, feedback-driven features, and more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(December 11, 2017) &lt;a href=&quot;https://blogs.unity3d.com/2017/12/11/using-machine-learning-agents-in-a-real-game-a-beginners-guide/&quot;&gt;Using Machine Learning Agents in a real game: a beginner’s guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(December 8, 2017) &lt;a href=&quot;https://blogs.unity3d.com/2017/12/08/introducing-ml-agents-v0-2-curriculum-learning-new-environments-and-more/&quot;&gt;Introducing ML-Agents Toolkit v0.2: Curriculum Learning, new environments, and more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(September 19, 2017) &lt;a href=&quot;https://blogs.unity3d.com/2017/09/19/introducing-unity-machine-learning-agents/&quot;&gt;Introducing: Unity Machine Learning Agents Toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Overviewing reinforcement learning concepts (&lt;a href=&quot;https://blogs.unity3d.com/2017/06/26/unity-ai-themed-blog-entries/&quot;&gt;multi-armed bandit&lt;/a&gt; and &lt;a href=&quot;https://blogs.unity3d.com/2017/08/22/unity-ai-reinforcement-learning-with-q-learning/&quot;&gt;Q-learning&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;More from Unity&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unity.com/products/sentis&quot;&gt;Unity Sentis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.unity.com/engine-platform/introducing-unity-muse-and-unity-sentis-ai&quot;&gt;Introducing Unity Muse and Sentis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community and Feedback&lt;/h2&gt; 
&lt;p&gt;The ML-Agents Toolkit is an open-source project and we encourage and welcome contributions. If you wish to contribute, be sure to review our &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For problems with the installation and setup of the ML-Agents Toolkit, or discussions about how to best setup or train your agents, please create a new thread on the &lt;a href=&quot;https://forum.unity.com/forums/ml-agents.453/&quot;&gt;Unity ML-Agents forum&lt;/a&gt; and make sure to include as much detail as possible. If you run into any other problems using the ML-Agents Toolkit or have a specific feature request, please &lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/issues&quot;&gt;submit a GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please tell us which samples you would like to see shipped with the ML-Agents Unity package by replying to &lt;a href=&quot;https://forum.unity.com/threads/feedback-wanted-shipping-sample-s-with-the-ml-agents-package.1073468/&quot;&gt;this forum thread&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Your opinion matters a great deal to us. Only by hearing your thoughts on the Unity ML-Agents Toolkit can we continue to improve and grow. Please take a few minutes to &lt;a href=&quot;https://unitysoftware.co1.qualtrics.com/jfe/form/SV_55pQKCZ578t0kbc&quot;&gt;let us know about it&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For any other questions or feedback, connect directly with the ML-Agents team at &lt;a href=&quot;mailto:ml-agents@unity3d.com&quot;&gt;ml-agents@unity3d.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;In order to improve the developer experience for Unity ML-Agents Toolkit, we have added in-editor analytics. Please refer to &quot;Information that is passively collected by Unity&quot; in the &lt;a href=&quot;https://unity3d.com/legal/privacy-policy&quot;&gt;Unity Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cysharp/R3</title>
      <link>https://github.com/Cysharp/R3</link>
      <description>&lt;p&gt;The new future of dotnet/reactive and UniRx.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;R3&lt;/h1&gt; 
&lt;p&gt;The new future of &lt;a href=&quot;https://github.com/dotnet/reactive/&quot;&gt;dotnet/reactive&lt;/a&gt; and &lt;a href=&quot;https://github.com/neuecc/UniRx&quot;&gt;UniRx&lt;/a&gt;, which support many platforms including &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#unity&quot;&gt;Unity&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#godot&quot;&gt;Godot&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#avalonia&quot;&gt;Avalonia&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#wpf&quot;&gt;WPF&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#winforms&quot;&gt;WinForms&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#winui3&quot;&gt;WinUI3&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#stride&quot;&gt;Stride&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#logiclooper&quot;&gt;LogicLooper&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#maui&quot;&gt;MAUI&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#monogame&quot;&gt;MonoGame&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#blazor&quot;&gt;Blazor&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#uno&quot;&gt;Uno&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I have over 10 years of experience with Rx, experience in implementing a custom Rx runtime (&lt;a href=&quot;https://github.com/neuecc/UniRx&quot;&gt;UniRx&lt;/a&gt;) for game engine, and experience in implementing an asynchronous runtime (&lt;a href=&quot;https://github.com/Cysharp/UniTask/&quot;&gt;UniTask&lt;/a&gt;) for game engine. Based on those experiences, I came to believe that there is a need to implement a new Reactive Extensions for .NET, one that reflects modern C# and returns to the core values of Rx.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stopping the pipeline at OnError is a mistake.&lt;/li&gt; 
 &lt;li&gt;IScheduler is the root of poor performance.&lt;/li&gt; 
 &lt;li&gt;Frame-based operations, a missing feature in Rx, are especially important in game engines.&lt;/li&gt; 
 &lt;li&gt;Single asynchronous operations should be entirely left to async/await.&lt;/li&gt; 
 &lt;li&gt;Synchronous APIs should not be implemented.&lt;/li&gt; 
 &lt;li&gt;Query syntax is a bad notation except for SQL.&lt;/li&gt; 
 &lt;li&gt;The Necessity of a subscription list to prevent subscription leaks (similar to a Parallel Debugger)&lt;/li&gt; 
 &lt;li&gt;Backpressure should be left to &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/csharp/asynchronous-programming/generate-consume-asynchronous-stream&quot;&gt;IAsyncEnumerable&lt;/a&gt; and &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/an-introduction-to-system-threading-channels/&quot;&gt;Channels&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For distributed processing and queries, there are &lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt;, &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/orleans/&quot;&gt;Orleans&lt;/a&gt;, &lt;a href=&quot;https://getakka.net/&quot;&gt;Akka.NET&lt;/a&gt;, &lt;a href=&quot;https://grpc.io/&quot;&gt;gRPC&lt;/a&gt;, &lt;a href=&quot;https://github.com/Cysharp/MagicOnion&quot;&gt;MagicOnion&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In other words, LINQ is not for EveryThing, and we believe that the essence of Rx lies in the processing of in-memory messaging (LINQ to Events), which will be our focus. We are not concerned with communication processes like &lt;a href=&quot;https://www.reactive-streams.org/&quot;&gt;Reactive Streams&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To address the shortcomings of dotnet/reactive, we have made changes to the core interfaces. In recent years, Rx-like frameworks optimized for language features, such as &lt;a href=&quot;https://kotlinlang.org/docs/flow.html&quot;&gt;Kotlin Flow&lt;/a&gt; and &lt;a href=&quot;https://developer.apple.com/documentation/combine&quot;&gt;Swift Combine&lt;/a&gt;, have been standardized. C# has also evolved significantly, now at C# 12, and we believe there is a need for an Rx that aligns with the latest C#.&lt;/p&gt; 
&lt;p&gt;Improving performance was also a theme in the reimplementation. For example, this is the result of the terrible performance of IScheduler and the performance difference caused by its removal.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/ZLogger/assets/46207/68a12664-a840-4725-a87c-8fdbb03b4a02&quot; alt=&quot;image&quot;&gt; &lt;code&gt;Observable.Range(1, 10000).Subscribe()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can also see interesting results in allocations with the addition and deletion to Subject.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/ZLogger/assets/46207/2194c086-37a3-44d6-8642-5fd0fa91b168&quot; alt=&quot;image&quot;&gt; &lt;code&gt;x10000 subject.Subscribe() -&amp;gt; x10000 subscription.Dispose()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This is because dotnet/reactive has adopted ImmutableArray (or its equivalent) for Subject, which results in the allocation of a new array every time one is added or removed. Depending on the design of the application, a large number of subscriptions can occur (we have seen this especially in the complexity of games), which can be a critical issue. In R3, we have devised a way to achieve high performance while avoiding ImmutableArray.&lt;/p&gt; 
&lt;p&gt;For those interested in learning more about the implementation philosophy and comparisons, please refer to my blog article &lt;a href=&quot;https://neuecc.medium.com/r3-a-new-modern-reimplementation-of-reactive-extensions-for-c-cf29abcc5826&quot;&gt;R3 — A New Modern Reimplementation of Reactive Extensions for C#&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Core Interface&lt;/h2&gt; 
&lt;p&gt;This library is distributed via &lt;a href=&quot;https://www.nuget.org/packages/R3&quot;&gt;NuGet packages/R3&lt;/a&gt;, supporting .NET Standard 2.0, .NET Standard 2.1, .NET 6(.NET 7) and .NET 8 or above.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet add package R3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some platforms(WPF, Avalonia, Unity, Godot, etc...) requires additional step to install. Please see &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#platform-supports&quot;&gt;Platform Supports&lt;/a&gt; section in below.&lt;/p&gt; 
&lt;p&gt;R3 code is mostly the same as standard Rx. Make the Observable via factory methods(Timer, Interval, FromEvent, Subject, etc...) and chain operator via LINQ methods. Therefore, your knowledge about Rx and documentation on Rx can be almost directly applied. If you are new to Rx, the &lt;a href=&quot;https://reactivex.io/intro.html&quot;&gt;ReactiveX&lt;/a&gt; website and &lt;a href=&quot;https://introtorx.com/&quot;&gt;Introduction to Rx.NET&lt;/a&gt; would be useful resources for reference.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using R3;

var subscription = Observable.Interval(TimeSpan.FromSeconds(1))
    .Select((_, i) =&amp;gt; i)
    .Where(x =&amp;gt; x % 2 == 0)
    .Subscribe(x =&amp;gt; Console.WriteLine($&quot;Interval:{x}&quot;));

var cts = new CancellationTokenSource();
_ = Task.Run(() =&amp;gt; { Console.ReadLine(); cts.Cancel(); });

await Observable.Timer(TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(3))
    .TakeUntil(cts.Token)
    .ForEachAsync(x =&amp;gt; Console.WriteLine($&quot;Timer&quot;));

subscription.Dispose();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The surface API remains the same as normal Rx, but the interfaces used internally are different and are not &lt;code&gt;IObservable&amp;lt;T&amp;gt;/IObserver&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt; being the dual of &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; is a beautiful definition, but it was not very practical in use.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public abstract class Observable&amp;lt;T&amp;gt;
{
    public IDisposable Subscribe(Observer&amp;lt;T&amp;gt; observer);
}

public abstract class Observer&amp;lt;T&amp;gt; : IDisposable
{
    public void OnNext(T value);
    public void OnErrorResume(Exception error);
    public void OnCompleted(Result result); // Result is (Success | Failure)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The biggest difference is that in normal Rx, when an exception occurs in the pipeline, it flows to &lt;code&gt;OnError&lt;/code&gt; and the subscription is unsubscribed, but in R3, it flows to &lt;code&gt;OnErrorResume&lt;/code&gt; and the subscription is not unsubscribed.&lt;/p&gt; 
&lt;p&gt;I consider the automatic unsubscription by OnError to be a bad design for event handling. It&#39;s very difficult and risky to resolve it within an operator like Retry, and it also led to poor performance (there are many questions and complex answers about stopping and resubscribing all over the world). Also, converting OnErrorResume to OnError(OnCompleted(Result.Failure)) is easy and does not degrade performance, but the reverse is impossible. Therefore, the design was changed to not stop by default and give users the choice to stop.&lt;/p&gt; 
&lt;p&gt;Since the original Rx contract was &lt;code&gt;OnError | OnCompleted&lt;/code&gt;, it was changed to &lt;code&gt;OnCompleted(Result result)&lt;/code&gt; to consolidate into one method. Result is a readonly struct with two states: &lt;code&gt;Success() | Failure(Exception)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The reason for changing to an abstract class instead of an interface is that Rx has implicit complex contracts that interfaces do not guarantee. By making it an abstract class, we fully controlled the behavior of Subscribe, OnNext, and Dispose. This made it possible to manage the list of all subscriptions and prevent subscription leaks.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/ZLogger/assets/46207/149abca5-6d84-44ea-8373-b0e8cd2dc46a&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Subscription leaks are a common problem in applications with long lifecycles, such as GUIs or games. Tracking all subscriptions makes it easy to prevent leaks.&lt;/p&gt; 
&lt;p&gt;Internally, when subscribing, an Observer is always linked to the target Observable and doubles as a Subscription. This ensures that Observers are reliably connected from top to bottom, making tracking certain and clear that they are released on OnCompleted/Dispose. In terms of performance, because the Observer itself always becomes a Subscription, there is no need for unnecessary IDisposable allocations.&lt;/p&gt; 
&lt;h2&gt;TimeProvider instead of IScheduler&lt;/h2&gt; 
&lt;p&gt;In traditional Rx, &lt;code&gt;IScheduler&lt;/code&gt; was used as an abstraction for time-based processing, but in R3, we have discontinued its use and instead opted for the &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.timeprovider?view=net-8.0&quot;&gt;TimeProvider&lt;/a&gt; introduced in .NET 8. For example, the operators are defined as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static Observable&amp;lt;Unit&amp;gt; Interval(TimeSpan period, TimeProvider timeProvider);
public static Observable&amp;lt;T&amp;gt; Delay&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source, TimeSpan dueTime, TimeProvider timeProvider)
public static Observable&amp;lt;T&amp;gt; Debounce&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source, TimeSpan timeSpan, TimeProvider timeProvider) // same as Throttle in dotnet/reactive
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Originally, &lt;code&gt;IScheduler&lt;/code&gt; had performance issues, and the internal implementation of dotnet/reactive was peppered with code that circumvented these issues using &lt;code&gt;PeriodicTimer&lt;/code&gt; and &lt;code&gt;IStopwatch&lt;/code&gt;, leading to unnecessary complexity. These can be better expressed with TimeProvider (&lt;code&gt;TimeProvider.CreateTimer()&lt;/code&gt;, &lt;code&gt;TimeProvider.GetTimestamp()&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;While TimeProvider is an abstraction for asynchronous operations, excluding the Fake for testing purposes, &lt;code&gt;IScheduler&lt;/code&gt; included synchronous schedulers like &lt;code&gt;ImmediateScheduler&lt;/code&gt; and &lt;code&gt;CurrentThreadScheduler&lt;/code&gt;. However, these were also meaningless as applying them to time-based operators would cause blocking, and &lt;code&gt;CurrentThreadScheduler&lt;/code&gt; had poor performance.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/ZLogger/assets/46207/68a12664-a840-4725-a87c-8fdbb03b4a02&quot; alt=&quot;image&quot;&gt; &lt;code&gt;Observable.Range(1, 10000).Subscribe()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;In R3, anything that requires synchronous execution (like Range) is treated as Immediate, and everything else is considered asynchronous and handled through TimeProvider.&lt;/p&gt; 
&lt;p&gt;As for the implementation of TimeProvider, the standard TimeProvider.System using the ThreadPool is the default. For unit testing, FakeTimeProvider (Microsoft.Extensions.TimeProvider.Testing) is available. Additionally, many TimeProvider implementations are provided for different platforms, such as DispatcherTimeProvider for WPF and UpdateTimeProvider for Unity, enhancing ease of use tailored to each platform.&lt;/p&gt; 
&lt;h2&gt;Frame based operations&lt;/h2&gt; 
&lt;p&gt;In GUI applications, there&#39;s the message loop, and in game engines, there&#39;s the game loop. Platforms that operate based on loops are not uncommon. The idea of executing something after a few seconds or frames fits very well with Rx. Just as time has been abstracted through TimeProvider, we introduced a layer of abstraction for frames called FrameProvider, and added frame-based operators corresponding to all methods that accept TimeProvider.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static Observable&amp;lt;Unit&amp;gt; IntervalFrame(int periodFrame, FrameProvider frameProvider);
public static Observable&amp;lt;T&amp;gt; DelayFrame&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source, int frameCount, FrameProvider frameProvider)
public static Observable&amp;lt;T&amp;gt; DebounceFrame&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source, int frameCount, FrameProvider frameProvider)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The effectiveness of frame-based processing has been proven in Unity&#39;s Rx implementation, &lt;a href=&quot;https://github.com/neuecc/UniRx&quot;&gt;neuecc/UniRx&lt;/a&gt;, which is one of the reasons why UniRx has gained strong support.&lt;/p&gt; 
&lt;p&gt;There are also several operators unique to frame-based processing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// push OnNext every frame.
Observable.EveryUpdate().Subscribe(x =&amp;gt; Console.WriteLine(x));

// take value until next frame
eventSoure.TakeUntil(Observable.NextFrame()).Subscribe();

// polling value changed
Observable.EveryValueChanged(this, x =&amp;gt; x.Width).Subscribe(x =&amp;gt; WidthText.Text = x.ToString());
Observable.EveryValueChanged(this, x =&amp;gt; x.Height).Subscribe(x =&amp;gt; HeightText.Text = x.ToString());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;EveryValueChanged&lt;/code&gt; could be interesting, as it converts properties without Push-based notifications like &lt;code&gt;INotifyPropertyChanged&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/46207/15827886/1573ff16-2c48-11e6-9876-4e4455d7eced.gif&quot; alt=&quot;&quot;&gt;`&lt;/p&gt; 
&lt;h2&gt;Subjects(ReactiveProperty)&lt;/h2&gt; 
&lt;p&gt;In R3, there are five types of Subjects: &lt;code&gt;Subject&lt;/code&gt;, &lt;code&gt;BehaviorSubject&lt;/code&gt;, &lt;code&gt;ReactiveProperty&lt;/code&gt;, &lt;code&gt;ReplaySubject&lt;/code&gt;, and &lt;code&gt;ReplayFrameSubject&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Subject&lt;/code&gt; is an event in Rx. Just as an event can register multiple Actions and distribute values using Invoke, a &lt;code&gt;Subject&lt;/code&gt; can register multiple &lt;code&gt;Observer&lt;/code&gt;s and distribute values using OnNext, OnErrorResume, and OnCompleted. There are variations of Subject, such as &lt;code&gt;BehaviorSubject&lt;/code&gt; and &lt;code&gt;ReactiveProperty&lt;/code&gt;, which holds a single value internally, &lt;code&gt;ReplaySubject&lt;/code&gt;, which holds multiple values based on count or time, and &lt;code&gt;ReplayFrameSubject&lt;/code&gt;, which holds multiple values based on frame time. The internally recorded values are distributed when Subscribe is called.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ReactiveProperty&lt;/code&gt; corresponds to what would be a &lt;code&gt;BehaviorSubject&lt;/code&gt;, but with the added functionality of eliminating duplicate values. In addition, since the value can be set with &lt;code&gt;.Value&lt;/code&gt;, it can be utilized for binding on XAML platforms, etc.&lt;/p&gt; 
&lt;p&gt;Here&#39;s an example of creating an observable model using &lt;code&gt;ReactiveProperty&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Reactive Notification Model
public class Enemy
{
    public ReactiveProperty&amp;lt;long&amp;gt; CurrentHp { get; private set; }

    public ReactiveProperty&amp;lt;bool&amp;gt; IsDead { get; private set; }

    public Enemy(int initialHp)
    {
        // Declarative Property
        CurrentHp = new ReactiveProperty&amp;lt;long&amp;gt;(initialHp);
        IsDead = CurrentHp.Select(x =&amp;gt; x &amp;lt;= 0).ToReactiveProperty();
    }
}

// ---

// Click button, HP decrement
MyButton.OnClickAsObservable().Subscribe(_ =&amp;gt; enemy.CurrentHp.Value -= 99);

// subscribe from notification model.
enemy.CurrentHp.Subscribe(x =&amp;gt; Console.WriteLine(&quot;HP:&quot; + x));
enemy.IsDead.Where(isDead =&amp;gt; isDead == true)
    .Subscribe(_ =&amp;gt;
    {
        // when dead, disable button
        MyButton.SetDisable();
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;code&gt;ReactiveProperty&lt;/code&gt;, the value is updated by &lt;code&gt;.Value&lt;/code&gt; and if it is identical to the current value, no notification is issued. If you want to force notification of a value even if it is the same, call &lt;code&gt;.OnNext(value)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ReactiveProperty&lt;/code&gt; has equivalents in other frameworks as well, such as &lt;a href=&quot;https://developer.android.com/topic/libraries/architecture/livedata&quot;&gt;Android LiveData&lt;/a&gt; and &lt;a href=&quot;https://developer.android.com/kotlin/flow/stateflow-and-sharedflow&quot;&gt;Kotlin StateFlow&lt;/a&gt;, particularly effective for data binding in UI contexts. In .NET, there is a library called &lt;a href=&quot;https://github.com/runceel/ReactiveProperty&quot;&gt;runceel/ReactiveProperty&lt;/a&gt;, which I originally created.&lt;/p&gt; 
&lt;p&gt;Unlike dotnet/reactive&#39;s Subject, all Subjects in R3 (Subject, BehaviorSubject, ReactiveProperty, ReplaySubject, ReplayFrameSubject) are designed to call OnCompleted upon disposal. This is because R3 is designed with a focus on subscription management and unsubscription. By calling OnCompleted, it ensures that all subscriptions are unsubscribed from the Subject, the upstream source of events, by default. If you wish to avoid calling OnCompleted, you can do so by calling &lt;code&gt;Dispose(false)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ReactiveProperty&lt;/code&gt; is mutable, but it can be converted to a read-only &lt;code&gt;ReadOnlyReactiveProperty&lt;/code&gt;. Following the &lt;a href=&quot;https://developer.android.com/topic/architecture/ui-layer&quot;&gt;guidance for the Android UI Layer&lt;/a&gt;, the Kotlin code below is&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;class NewsViewModel(...) : ViewModel() {

    private val _uiState = MutableStateFlow(NewsUiState())
    val uiState: StateFlow&amp;lt;NewsUiState&amp;gt; = _uiState.asStateFlow()
    ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;can be adapted to the following R3 code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;class NewsViewModel
{
    ReactiveProperty&amp;lt;NewsUiState&amp;gt; _uiState = new(new NewsUiState());
    public ReadOnlyReactiveProperty&amp;lt;NewsUiState&amp;gt; UiState =&amp;gt; _uiState;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In R3, we use a combination of a mutable private field and a readonly public property.&lt;/p&gt; 
&lt;p&gt;By inheriting &lt;code&gt;ReactiveProperty&lt;/code&gt; and overriding &lt;code&gt;OnValueChanging&lt;/code&gt; and &lt;code&gt;OnValueChanged&lt;/code&gt;, you can customize behavior, such as adding validation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Since the primary constructor sets values to fields before calling base, it is safe to call OnValueChanging in the base constructor.
public sealed class ClampedReactiveProperty&amp;lt;T&amp;gt;(T initialValue, T min, T max)
    : ReactiveProperty&amp;lt;T&amp;gt;(initialValue) where T : IComparable&amp;lt;T&amp;gt;
{
    private static IComparer&amp;lt;T&amp;gt; Comparer { get; } = Comparer&amp;lt;T&amp;gt;.Default;

    protected override void OnValueChanging(ref T value)
    {
        if (Comparer.Compare(value, min) &amp;lt; 0)
        {
            value = min;
        }
        else if (Comparer.Compare(value, max) &amp;gt; 0)
        {
            value = max;
        }
    }
}

// For regular constructors, please set `callOnValueChangeInBaseConstructor` to false and manually call it once to correct the value.
public sealed class ClampedReactiveProperty2&amp;lt;T&amp;gt;
    : ReactiveProperty&amp;lt;T&amp;gt; where T : IComparable&amp;lt;T&amp;gt;
{
    private static IComparer&amp;lt;T&amp;gt; Comparer { get; } = Comparer&amp;lt;T&amp;gt;.Default;

    readonly T min, max;

    // callOnValueChangeInBaseConstructor to avoid OnValueChanging call before min, max set.
    public ClampedReactiveProperty2(T initialValue, T min, T max)
        : base(initialValue, EqualityComparer&amp;lt;T&amp;gt;.Default, callOnValueChangeInBaseConstructor: false)
    {
        this.min = min;
        this.max = max;

        // modify currentValue manually
        OnValueChanging(ref GetValueRef());
    }

    protected override void OnValueChanging(ref T value)
    {
        if (Comparer.Compare(value, min) &amp;lt; 0)
        {
            value = min;
        }
        else if (Comparer.Compare(value, max) &amp;gt; 0)
        {
            value = max;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, &lt;code&gt;ReactiveProperty&lt;/code&gt; supports serialization with &lt;code&gt;System.Text.JsonSerializer&lt;/code&gt; in .NET 6 and above. For earlier versions, you need to implement &lt;code&gt;ReactivePropertyJsonConverterFactory&lt;/code&gt; under the existing implementation and add it to the Converter.&lt;/p&gt; 
&lt;p&gt;As an internal implementation, &lt;code&gt;Subject&lt;/code&gt; and &lt;code&gt;ReactiveProperty&lt;/code&gt; has a lightweight implementation that consumes less memory. However, in exchange, its behavior differs slightly, especially in multi-threaded environments. For precautions related to multi-threading, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#concurrency-policy&quot;&gt;Concurrency Policy&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;Disposable&lt;/h2&gt; 
&lt;p&gt;To bundle multiple IDisposables (Subscriptions), it&#39;s good to use Disposable&#39;s methods. In R3, depending on the performance,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Disposable.Combine(IDisposable d1, ..., IDisposable d8);
Disposable.Combine(params IDisposable[]);
Disposable.CreateBuilder();
CompositeDisposable
DisposableBag
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;five types are available for use. In terms of performance advantages, the order is &lt;code&gt;Combine(d1,...,d8) (&amp;gt;= CreateBuilder) &amp;gt; Combine(IDisposable[]) &amp;gt;= CreateBuilder &amp;gt; DisposableBag &amp;gt; CompositeDisposable&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When the number of subscriptions is statically determined, Combine offers the best performance. Internally, for less than 8 arguments, it uses fields, and for 9 or more arguments, it uses an array, making Combine especially efficient for 8 arguments or less.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class MainWindow : Window
{
    IDisposable disposable;

    public MainWindow()
    {
        var d1 = Observable.IntervalFrame(1).Subscribe();
        var d2 = Observable.IntervalFrame(1).Subscribe();
        var d3 = Observable.IntervalFrame(1).Subscribe();

        disposable = Disposable.Combine(d1, d2, d3);
    }

    protected override void OnClosed(EventArgs e)
    {
        disposable.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If there are many subscriptions and it&#39;s cumbersome to hold each one in a variable, &lt;code&gt;CreateBuilder&lt;/code&gt; can be used instead. At build time, it combines according to the number of items added to it. Since the Builder itself is a struct, there are no allocations.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class MainWindow : Window
{
    IDisposable disposable;

    public MainWindow()
    {
        var d = Disposable.CreateBuilder();
        Observable.IntervalFrame(1).Subscribe().AddTo(ref d);
        Observable.IntervalFrame(1).Subscribe().AddTo(ref d);
        Observable.IntervalFrame(1).Subscribe().AddTo(ref d);

        disposable = d.Build();
    }

    protected override void OnClosed(EventArgs e)
    {
        disposable.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For dynamically added items, using &lt;code&gt;DisposableBag&lt;/code&gt; is advisable. This is an add-only struct with only &lt;code&gt;Add/Clear/Dispose&lt;/code&gt; methods. It can be used relatively quickly and with low allocation by holding it in a class field and passing it around by reference. However, it is not thread-safe.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class MainWindow : Window
{
    DisposableBag disposable; // DisposableBag is struct, no need new and don&#39;t copy

    public MainWindow()
    {
        Observable.IntervalFrame(1).Subscribe().AddTo(ref disposable);
        Observable.IntervalFrame(1).Subscribe().AddTo(ref disposable);
        Observable.IntervalFrame(1).Subscribe().AddTo(ref disposable);
    }

    void OnClick()
    {
        Observable.IntervalFrame(1).Subscribe().AddTo(ref disposable);
    }

    protected override void OnClosed(EventArgs e)
    {
        disposable.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CompositeDisposable&lt;/code&gt; is a class that also supports &lt;code&gt;Remove&lt;/code&gt; and is thread-safe. It is the most feature-rich, but comparatively, it has the lowest performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class MainWindow : Window
{
    CompositeDisposable disposable = new CompositeDisposable();

    public MainWindow()
    {
        Observable.IntervalFrame(1).Subscribe().AddTo(disposable);
        Observable.IntervalFrame(1).Subscribe().AddTo(disposable);
        Observable.IntervalFrame(1).Subscribe().AddTo(disposable);
    }

    void OnClick()
    {
        Observable.IntervalFrame(1).Subscribe().AddTo(disposable);
    }

    protected override void OnClosed(EventArgs e)
    {
        disposable.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, there are other utilities for Disposables as follows.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Disposable.Create(Action);
Disposable.Dispose(...);
SingleAssignmentDisposable
SingleAssignmentDisposableCore // struct
SerialDisposable
SerialDisposableCore // struct
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Subscription Management&lt;/h2&gt; 
&lt;p&gt;Managing subscriptions is one of the most crucial aspects of Rx, and inadequate management can lead to memory leaks. There are two patterns for unsubscribing in Rx. One is by disposing of the IDisposable (Subscription) returned by Subscribe. The other is by receiving OnCompleted.&lt;/p&gt; 
&lt;p&gt;In R3, to enhance subscription cancellation on both fronts, it&#39;s now possible to bundle subscriptions using a variety of Disposable classes for Subscriptions, and for OnCompleted, the upstream side of events (such as Subject or Factory) has been made capable of emitting OnCompleted. Especially, Factories that receive a TimeProvider or FrameProvider can now take a CancellationToken.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static Observable&amp;lt;Unit&amp;gt; Interval(TimeSpan period, TimeProvider timeProvider, CancellationToken cancellationToken)
public static Observable&amp;lt;Unit&amp;gt; EveryUpdate(FrameProvider frameProvider, CancellationToken cancellationToken)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When cancelled, OnCompleted is sent, and all subscriptions are unsubscribed.&lt;/p&gt; 
&lt;h3&gt;ObservableTracker&lt;/h3&gt; 
&lt;p&gt;R3 incorporates a system called ObservableTracker. When activated, it allows you to view all subscription statuses.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ObservableTracker.EnableTracking = true; // default is false
ObservableTracker.EnableStackTrace = true;

using var d = Observable.Interval(TimeSpan.FromSeconds(1))
    .Where(x =&amp;gt; true)
    .Take(10000)
    .Subscribe();

// check subscription
ObservableTracker.ForEachActiveTask(x =&amp;gt;
{
    Console.WriteLine(x);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TrackingState { TrackingId = 1, FormattedType = Timer._Timer, AddTime = 2024/01/09 4:11:39, StackTrace =... }
TrackingState { TrackingId = 2, FormattedType = Where`1._Where&amp;lt;Unit&amp;gt;, AddTime = 2024/01/09 4:11:39, StackTrace =... }
TrackingState { TrackingId = 3, FormattedType = Take`1._Take&amp;lt;Unit&amp;gt;, AddTime = 2024/01/09 4:11:39, StackTrace =... }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Besides directly calling &lt;code&gt;ForEachActiveTask&lt;/code&gt;, making it more accessible through a GUI can make it easier to check for subscription leaks. Currently, there is an integrated GUI for Unity, and there are plans to provide a screen using Blazor for other platforms.&lt;/p&gt; 
&lt;h2&gt;ObservableSystem, UnhandledExceptionHandler&lt;/h2&gt; 
&lt;p&gt;For time-based operators that do not specify a TimeProvider or FrameProvider, the default Provider of ObservableSystem is used. This is settable, so if there is a platform-specific Provider (for example, DispatcherTimeProvider in WPF), you can swap it out to create a more user-friendly environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static class ObservableSystem
{
    public static TimeProvider DefaultTimeProvider { get; set; } = TimeProvider.System;
    public static FrameProvider DefaultFrameProvider { get; set; } = new NotSupportedFrameProvider();

    static Action&amp;lt;Exception&amp;gt; unhandledException = DefaultUnhandledExceptionHandler;

    // Prevent +=, use Set and Get method.
    public static void RegisterUnhandledExceptionHandler(Action&amp;lt;Exception&amp;gt; unhandledExceptionHandler)
    {
        unhandledException = unhandledExceptionHandler;
    }

    public static Action&amp;lt;Exception&amp;gt; GetUnhandledExceptionHandler()
    {
        return unhandledException;
    }

    static void DefaultUnhandledExceptionHandler(Exception exception)
    {
        Console.WriteLine(&quot;R3 UnhandledException: &quot; + exception.ToString());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In CUI environments, by default, the FrameProvider will throw an exception. If you want to use FrameProvider in a CUI environment, you can set either &lt;code&gt;NewThreadSleepFrameProvider&lt;/code&gt;, which sleeps in a new thread for a specified number of seconds, or &lt;code&gt;TimerFrameProvider&lt;/code&gt;, which executes every specified number of seconds.&lt;/p&gt; 
&lt;h3&gt;UnhandledExceptionHandler&lt;/h3&gt; 
&lt;p&gt;When an exception passes through OnErrorResume and is not ultimately handled by Subscribe, the UnhandledExceptionHandler of ObservableSystem is called. This can be set with &lt;code&gt;RegisterUnhandledExceptionHandler&lt;/code&gt;. By default, it writes to &lt;code&gt;Console.WriteLine&lt;/code&gt;, but it may need to be changed to use &lt;code&gt;ILogger&lt;/code&gt; or something else as required.&lt;/p&gt; 
&lt;h2&gt;Result Handling&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;Result&lt;/code&gt; received by OnCompleted has a field &lt;code&gt;Exception?&lt;/code&gt;, where it&#39;s null in case of success and contains the Exception in case of failure.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Typical processing code example
void OnCompleted(Result result)
{
    if (result.IsFailure)
    {
        // do failure
        _ = result.Exception;
    }
    else // result.IsSuccess
    {
        // do success
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To generate a &lt;code&gt;Result&lt;/code&gt;, in addition to using &lt;code&gt;Result.Success&lt;/code&gt; and &lt;code&gt;Result.Failure(exception)&lt;/code&gt;, Observer has OnCompleted() and OnCompleted(exception) as shortcuts for Success and Failure, respectively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;observer.OnCompleted(Result.Success);
observer.OnCompleted(Result.Failure(exception));

observer.OnCompleted(); // same as Result.Success
observer.OnCompleted(exception); // same as Result.Failure(exception)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Unit Testing&lt;/h2&gt; 
&lt;p&gt;For unit testing, you can use &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/microsoft.extensions.time.testing.faketimeprovider&quot;&gt;FakeTimeProvider&lt;/a&gt; of Microsoft.Extensions.TimeProvider.Testing.&lt;/p&gt; 
&lt;p&gt;Additionally, in R3, there is a collection called LiveList, which allows you to obtain subscription statuses as a list. Combining these two features can be very useful for unit testing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var fakeTime = new FakeTimeProvider();

var list = Observable.Timer(TimeSpan.FromSeconds(5), fakeTime).ToLiveList();

fakeTime.Advance(TimeSpan.FromSeconds(4));
list.AssertIsNotCompleted();

fakeTime.Advance(TimeSpan.FromSeconds(1));
list.AssertIsCompleted();
list.AssertEqual([Unit.Default]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For FrameProvider, a &lt;code&gt;FakeFrameProvider&lt;/code&gt; is provided as standard, and it can be used in the same way as &lt;code&gt;FakeTimeProvider&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();
var frameProvider = new FakeFrameProvider();

var list = Observable.EveryUpdate(frameProvider, cts.Token)
    .Select(_ =&amp;gt; frameProvider.GetFrameCount())
    .ToLiveList();

list.AssertEqual([]); // list.ShouldBe(expected);

frameProvider.Advance();
list.AssertEqual([0]);

frameProvider.Advance(3);
list.AssertEqual([0, 1, 2, 3]);

cts.Cancel();
list.AssertIsCompleted(); // list.IsCompleted.ShouldBeTrue();

frameProvider.Advance();
list.AssertEqual([0, 1, 2, 3]);
list.AssertIsCompleted();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AssertEqual&lt;/code&gt; is a test helper. You can create your own helper to use with the test library.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static class LiveListExtensions
{
    // Shouldbe() is xUnit + Shouldly
    public static void AssertEqual&amp;lt;T&amp;gt;(this LiveList&amp;lt;T&amp;gt; list, params T[] expected)
    {
        list.ShouldBe(expected);
    }

    public static void AssertEqual&amp;lt;T&amp;gt;(this LiveList&amp;lt;T[]&amp;gt; list, params T[][] expected)
    {
        list.Count.ShouldBe(expected.Length);

        for (int i = 0; i &amp;lt; expected.Length; i++)
        {
            list[i].ShouldBe(expected[i]);
        }
    }

    public static void AssertEmpty&amp;lt;T&amp;gt;(this LiveList&amp;lt;T&amp;gt; list)
    {
        list.Count.ShouldBe(0);
    }

    public static void AssertIsCompleted&amp;lt;T&amp;gt;(this LiveList&amp;lt;T&amp;gt; list)
    {
        list.IsCompleted.ShouldBeTrue();
    }

    public static void AssertIsNotCompleted&amp;lt;T&amp;gt;(this LiveList&amp;lt;T&amp;gt; list)
    {
        list.IsCompleted.ShouldBeFalse();
    }

    public static void Advance(this FakeTimeProvider timeProvider, int seconds)
    {
        timeProvider.Advance(TimeSpan.FromSeconds(seconds));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Interoperability with &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; is not &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;. You can convert both by these methods.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;public static Observable&amp;lt;T&amp;gt; ToObservable&amp;lt;T&amp;gt;(this IObservable&amp;lt;T&amp;gt; source)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;public static IObservable&amp;lt;T&amp;gt; AsSystemObservable&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source)&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Interoperability with &lt;code&gt;async/await&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;R3 has special integration with &lt;code&gt;async/await&lt;/code&gt;. First, all methods that return a single asynchronous operation have now become ***Async methods, returning &lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Methods that convert to such &lt;code&gt;Task&lt;/code&gt; (for example &lt;code&gt;FirstAsync&lt;/code&gt;, &lt;code&gt;LastAsync&lt;/code&gt;) transform OnErrorResume&#39;s Exception into a Faulted Task, similar to OnCompleted(Exception). Note that since the Catch operator does not capture OnErrorResume, if you want integrated error handling, please use &lt;code&gt;OnErrorResumeAsFailure()&lt;/code&gt; to convert &lt;code&gt;OnErrorResume(Exception)&lt;/code&gt; to &lt;code&gt;OnCompleted(Exception)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Furthermore, you can specify special behaviors when asynchronous methods are provided to Where/Select/Subscribe.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;ReturnType&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SelectAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;lt;TResult&amp;gt;&amp;gt;&lt;/code&gt; selector, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;bool&lt;/code&gt; configureAwait = true, &lt;code&gt;bool&lt;/code&gt; cancelOnCompleted = true, &lt;code&gt;int&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhereAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;lt;Boolean&amp;gt;&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;bool&lt;/code&gt; configureAwait = true, &lt;code&gt;bool&lt;/code&gt; cancelOnCompleted = true, &lt;code&gt;int&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;bool&lt;/code&gt; configureAwait = true, &lt;code&gt;bool&lt;/code&gt; cancelOnCompleted = true, &lt;code&gt;int&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;Action&amp;lt;Result&amp;gt;&lt;/code&gt; onCompleted, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;bool&lt;/code&gt; configureAwait = true, &lt;code&gt;bool&lt;/code&gt; cancelOnCompleted = true, &lt;code&gt;int&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;Action&amp;lt;Exception&amp;gt;&lt;/code&gt; onErrorResume, &lt;code&gt;Action&amp;lt;Result&amp;gt;&lt;/code&gt; onCompleted, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;bool&lt;/code&gt; configureAwait = true, &lt;code&gt;bool&lt;/code&gt; cancelOnCompleted = true, &lt;code&gt;int&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public enum AwaitOperation
{
    /// &amp;lt;summary&amp;gt;All values are queued, and the next value waits for the completion of the asynchronous method.&amp;lt;/summary&amp;gt;
    Sequential,
    /// &amp;lt;summary&amp;gt;Drop new value when async operation is running.&amp;lt;/summary&amp;gt;
    Drop,
    /// &amp;lt;summary&amp;gt;If the previous asynchronous method is running, it is cancelled and the next asynchronous method is executed.&amp;lt;/summary&amp;gt;
    Switch,
    /// &amp;lt;summary&amp;gt;All values are sent immediately to the asynchronous method.&amp;lt;/summary&amp;gt;
    Parallel,
    /// &amp;lt;summary&amp;gt;All values are sent immediately to the asynchronous method, but the results are queued and passed to the next operator in order.&amp;lt;/summary&amp;gt;
    SequentialParallel,
    /// &amp;lt;summary&amp;gt;Send the first value and the last value while the asynchronous method is running.&amp;lt;/summary&amp;gt;
    ThrottleFirstLast
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// for example...
// Drop enables prevention of execution by multiple clicks
button.OnClickAsObservable()
    .SelectAwait(async (_, ct) =&amp;gt;
    {
        var req = await UnityWebRequest.Get(&quot;https://google.com/&quot;).SendWebRequest().WithCancellation(ct);
        return req.downloadHandler.text;
    }, AwaitOperation.Drop)
    .SubscribeToText(text);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;maxConcurrent&lt;/code&gt; is only effective for &lt;code&gt;Parallel&lt;/code&gt; and &lt;code&gt;SequentialParallel&lt;/code&gt;, allowing control over the number of parallel operations. By default, it allows unlimited parallelization.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cancelOnCompleted&lt;/code&gt; lets you choose whether to cancel the ongoing asynchronous method (by setting CancellationToken to Cancel) when the &lt;code&gt;OnCompleted&lt;/code&gt; event is received. The default is true, meaning it will be cancelled. If set to false, it waits for the completion of the asynchronous method before calling the subsequent &lt;code&gt;OnCompleted&lt;/code&gt; (potentially after issuing OnNext, depending on the case).&lt;/p&gt; 
&lt;p&gt;Additionally, the following time-related filtering/aggregating methods can also accept asynchronous methods.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;ReturnType&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Debounce&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; throttleDurationSelector, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirst&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; sampler, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; sampler, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; sampler, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Task&lt;/code&gt; task)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; asyncFunc, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Task&lt;/code&gt; task)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; asyncFunc, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; asyncWindow, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;For example, by using the asynchronous function version of Chunk, you can naturally and easily write complex processes such as generating chunks at random times instead of fixed times.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Observable.Interval(TimeSpan.FromSeconds(1))
    .Index()
    .Chunk(async (_, ct) =&amp;gt;
    {
        await Task.Delay(TimeSpan.FromSeconds(Random.Shared.Next(0, 5)), ct);
    })
    .Subscribe(xs =&amp;gt;
    {
        Console.WriteLine(string.Join(&quot;, &quot;, xs));
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These asynchronous methods are immediately canceled when &lt;code&gt;OnCompleted&lt;/code&gt; is issued, and the subsequent &lt;code&gt;OnCompleted&lt;/code&gt; is executed.&lt;/p&gt; 
&lt;p&gt;By utilizing async/await for Retry-related operations, you can achieve better handling. For instance, whereas the previous version of Rx could only retry the entire pipeline, with R3, which accepts async/await, it is possible to retry on a per asynchronous method execution basis.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;button.OnClickAsObservable()
    .SelectAwait(async (_, ct) =&amp;gt;
    {
        var retry = 0;
    AGAIN:
        try
        {
            var req = await UnityWebRequest.Get(&quot;https://google.com/&quot;).SendWebRequest().WithCancellation(ct);
            return req.downloadHandler.text;
        }
        catch
        {
            if (retry++ &amp;lt; 3) goto AGAIN;
            throw;
        }
    }, AwaitOperation.Drop)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Repeat can also be implemented in combination with async/await. In this case, handling complex conditions for Repeat might be easier than completing it with Rx alone.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;while (!ct.IsCancellationRequested)
{
    await button.OnClickAsObservable()
        .Take(1)
        .ForEachAsync(_ =&amp;gt;
        {
            // do something
        });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Concurrency Policy&lt;/h2&gt; 
&lt;p&gt;The composition of operators is thread-safe, and it is expected that the values flowing through OnNext are on a single thread. In other words, if OnNext is issued on multiple threads, the operators may behave unexpectedly. This is the same as with dotnet/reactive.&lt;/p&gt; 
&lt;p&gt;For example, while Subject itself is thread-safe, the operators are not thread-safe.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// dotnet/reactive
var subject = new System.Reactive.Subjects.Subject&amp;lt;int&amp;gt;();

// single execution shows 100 but actually 9* multiple times(broken)
subject.Take(100).Count().Subscribe(x =&amp;gt; Console.WriteLine(x));

Parallel.For(0, 1000, new ParallelOptions { MaxDegreeOfParallelism = 10 }, x =&amp;gt; subject.OnNext(x));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This means that the issuance of OnNext must always be done on a single thread. For converting external inputs into Observables, such as with &lt;code&gt;FromEvent&lt;/code&gt;, and when the source of input issues in a multi-threaded manner, it is necessary to synchronize using &lt;code&gt;Synchronize&lt;/code&gt; to construct the correct operator chain.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;subject.Synchronize(gate).Take(100).Count().Subscribe();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unlike dotnet/reactive, R3.Subject.OnNext is not ThreadSafe. If you are calling OnNext from multiple threads, please use a lock.&lt;/p&gt; 
&lt;p&gt;In R3, ReplaySubject and BehaviorSubject do not require Synchronize and are thread-safe, including OnNext.&lt;/p&gt; 
&lt;p&gt;ReactiveProperty is not thread-safe and OnNext, set Value and Subscribe cannot be called simultaneously. If you need to use it in such a situation, use &lt;code&gt;SynchronizedReactiveProperty&lt;/code&gt; instead.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;class MyClass
{
    public SynchronizedReactiveProperty&amp;lt;int&amp;gt; Prop { get; } = new();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sampling Timing&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;Sample(TimeSpan)&lt;/code&gt; in dotnet/reactive starts a timer in the background when subscribed to, and uses that interval for filtering. Additionally, the timer continues to run in the background indefinitely.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ThrottleFirst/Last/FirstLast(TimeSpan)&lt;/code&gt; in R3 behaves differently; the timer is stopped upon subscription and only starts when a value arrives. If the timer is stopped at that time, it starts, and then stops the timer after the specified duration.&lt;/p&gt; 
&lt;p&gt;Also, overloads that accept an asynchronous function &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt;, such as &lt;code&gt;ThrottleFirst/Last/FirstLast&lt;/code&gt;, &lt;code&gt;Chunk&lt;/code&gt;, &lt;code&gt;SkipUntil&lt;/code&gt;, &lt;code&gt;TakeUntil&lt;/code&gt;), behave in such a way that if the asynchronous function is not running when a value arrives, the execution of the asynchronous function begins.&lt;/p&gt; 
&lt;p&gt;This change is expected to result in consistent behavior across all operators.&lt;/p&gt; 
&lt;h2&gt;ObservableCollections&lt;/h2&gt; 
&lt;p&gt;As a special collection for monitoring changes in collections and handling them in R3, the &lt;a href=&quot;https://github.com/Cysharp/ObservableCollections&quot;&gt;ObservableCollections&lt;/a&gt;&#39;s &lt;code&gt;ObservableCollections.R3&lt;/code&gt; package is available.&lt;/p&gt; 
&lt;p&gt;It has &lt;code&gt;ObservableList&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;ObservableDictionary&amp;lt;TKey, TValue&amp;gt;&lt;/code&gt;, &lt;code&gt;ObservableHashSet&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;ObservableQueue&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;ObservableStack&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;ObservableRingBuffer&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;ObservableFixedSizeRingBuffer&amp;lt;T&amp;gt;&lt;/code&gt; and these observe methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Observable&amp;lt;CollectionAddEvent&amp;lt;T&amp;gt;&amp;gt; IObservableCollection&amp;lt;T&amp;gt;.ObserveAdd()
Observable&amp;lt;CollectionRemoveEvent&amp;lt;T&amp;gt;&amp;gt; IObservableCollection&amp;lt;T&amp;gt;.ObserveRemove()
Observable&amp;lt;CollectionReplaceEvent&amp;lt;T&amp;gt;&amp;gt; IObservableCollection&amp;lt;T&amp;gt;.ObserveReplace()
Observable&amp;lt;CollectionMoveEvent&amp;lt;T&amp;gt;&amp;gt; IObservableCollection&amp;lt;T&amp;gt;.ObserveMove()
Observable&amp;lt;CollectionResetEvent&amp;lt;T&amp;gt;&amp;gt; IObservableCollection&amp;lt;T&amp;gt;.ObserveReset()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;XAML Platforms(&lt;code&gt;BindableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt;)&lt;/h2&gt; 
&lt;p&gt;For XAML based application platforms, R3 provides &lt;code&gt;BindableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt; that can bind observable property to view like &lt;a href=&quot;https://developer.android.com/topic/libraries/architecture/livedata&quot;&gt;Android LiveData&lt;/a&gt; and &lt;a href=&quot;https://developer.android.com/kotlin/flow/.stateflow-and-sharedflow&quot;&gt;Kotlin StateFlow&lt;/a&gt;. It implements &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.inotifypropertychanged&quot;&gt;INotifyPropertyChanged&lt;/a&gt; and &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.inotifydataerrorinfo&quot;&gt;INotifyDataErrorInfo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Simple usage, expose &lt;code&gt;BindableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt; via &lt;code&gt;new&lt;/code&gt; or &lt;code&gt;ToBindableReactiveProperty&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Here is the simple In and Out BindableReactiveProperty ViewModel, Xaml and code-behind. In xaml, &lt;code&gt;.Value&lt;/code&gt; to bind property.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class BasicUsagesViewModel : IDisposable
{
    public BindableReactiveProperty&amp;lt;string&amp;gt; Input { get; }
    public BindableReactiveProperty&amp;lt;string&amp;gt; Output { get; }

    public BasicUsagesViewModel()
    {
        Input = new BindableReactiveProperty&amp;lt;string&amp;gt;(&quot;&quot;);
        Output = Input.Select(x =&amp;gt; x.ToUpper()).ToBindableReactiveProperty(&quot;&quot;);
    }

    public void Dispose()
    {
        Disposable.Dispose(Input, Output);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;Window x:Class=&quot;WpfApp1.MainWindow&quot;
        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
        xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;
        xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;
        xmlns:local=&quot;clr-namespace:WpfApp1&quot;
        mc:Ignorable=&quot;d&quot;
        Title=&quot;MainWindow&quot; Height=&quot;450&quot; Width=&quot;800&quot;&amp;gt;
    &amp;lt;Window.DataContext&amp;gt;
        &amp;lt;local:BasicUsagesViewModel /&amp;gt;
    &amp;lt;/Window.DataContext&amp;gt;
    &amp;lt;StackPanel&amp;gt;
        &amp;lt;TextBlock Text=&quot;Basic usages&quot; FontSize=&quot;24&quot; /&amp;gt;

        &amp;lt;Label Content=&quot;Input&quot; /&amp;gt;
        &amp;lt;TextBox Text=&quot;{Binding Input.Value, UpdateSourceTrigger=PropertyChanged}&quot; /&amp;gt;

        &amp;lt;Label Content=&quot;Output&quot; /&amp;gt;
        &amp;lt;TextBlock Text=&quot;{Binding Output.Value}&quot; /&amp;gt;
    &amp;lt;/StackPanel&amp;gt;
&amp;lt;/Window&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;namespace WpfApp1;

public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();
    }

    protected override void OnClosed(EventArgs e)
    {
        (this.DataContext as IDisposable)?.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/R3/assets/46207/01c3738f-e941-412e-b517-8e7867d6f709&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;BindableReactiveProperty also supports validation via DataAnnotation or custom logic. If you want to use DataAnnotation attribute, require to call &lt;code&gt;EnableValidation&amp;lt;T&amp;gt;()&lt;/code&gt; in field initializer or &lt;code&gt;EnableValidation(Expression selfSelector)&lt;/code&gt; in constructor.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ValidationViewModel : IDisposable
{
    // Pattern 1. use EnableValidation&amp;lt;T&amp;gt; to enable DataAnnotation validation in field initializer
    [Range(0.0, 300.0)]
    public BindableReactiveProperty&amp;lt;double&amp;gt; Height { get; } = new BindableReactiveProperty&amp;lt;double&amp;gt;().EnableValidation&amp;lt;ValidationViewModel&amp;gt;();

    [Range(0.0, 300.0)]
    public BindableReactiveProperty&amp;lt;double&amp;gt; Weight { get; }

    IDisposable customValidation1Subscription;
    public BindableReactiveProperty&amp;lt;double&amp;gt; CustomValidation1 { get; set; }

    public BindableReactiveProperty&amp;lt;double&amp;gt; CustomValidation2 { get; set; }

    public ValidationViewModel()
    {
        // Pattern 2. use EnableValidation(Expression) to enable DataAnnotation validation
        Weight = new BindableReactiveProperty&amp;lt;double&amp;gt;().EnableValidation(() =&amp;gt; Weight);

        // Pattern 3. EnableValidation() and call OnErrorResume to set custom error message
        CustomValidation1 = new BindableReactiveProperty&amp;lt;double&amp;gt;().EnableValidation();
        customValidation1Subscription = CustomValidation1.Subscribe(x =&amp;gt;
        {
            if (0.0 &amp;lt;= x &amp;amp;&amp;amp; x &amp;lt;= 300.0) return;

            CustomValidation1.OnErrorResume(new Exception(&quot;value is not in range.&quot;));
        });

        // Pattern 4. simplified version of Pattern3, EnableValidation(Func&amp;lt;T, Exception?&amp;gt;)
        CustomValidation2 = new BindableReactiveProperty&amp;lt;double&amp;gt;().EnableValidation(x =&amp;gt;
        {
            if (0.0 &amp;lt;= x &amp;amp;&amp;amp; x &amp;lt;= 300.0) return null; // null is no validate result
            return new Exception(&quot;value is not in range.&quot;);
        });
    }

    public void Dispose()
    {
        Disposable.Dispose(Height, Weight, CustomValidation1, customValidation1Subscription, CustomValidation2);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;Window x:Class=&quot;WpfApp1.MainWindow&quot;
        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
        xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;
        xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;
        xmlns:local=&quot;clr-namespace:WpfApp1&quot;
        mc:Ignorable=&quot;d&quot;
        Title=&quot;MainWindow&quot; Height=&quot;450&quot; Width=&quot;800&quot;&amp;gt;
    &amp;lt;Window.DataContext&amp;gt;
        &amp;lt;local:ValidationViewModel /&amp;gt;
    &amp;lt;/Window.DataContext&amp;gt;

    &amp;lt;StackPanel Margin=&quot;10&quot;&amp;gt;
        &amp;lt;Label Content=&quot;Validation&quot; /&amp;gt;
        &amp;lt;TextBox Text=&quot;{Binding Height.Value, UpdateSourceTrigger=PropertyChanged}&quot;  /&amp;gt;
        &amp;lt;TextBox  Text=&quot;{Binding Weight.Value, UpdateSourceTrigger=PropertyChanged}&quot; /&amp;gt;
        &amp;lt;TextBox  Text=&quot;{Binding CustomValidation1.Value, UpdateSourceTrigger=PropertyChanged}&quot; /&amp;gt;
        &amp;lt;TextBox  Text=&quot;{Binding CustomValidation2.Value, UpdateSourceTrigger=PropertyChanged}&quot; /&amp;gt;
    &amp;lt;/StackPanel&amp;gt;
&amp;lt;/Window&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/R3/assets/46207/f80149e6-1573-46b5-9a77-b78776dd3527&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Validation using &lt;code&gt;EnableValidation&lt;/code&gt; does not trigger for initial values by default. This means that even if you don&#39;t allow empty strings, the validation error won&#39;t appear for an initially empty value. If you want to perform validation on initial values, you can call &lt;code&gt;ForceValidate()&lt;/code&gt; after &lt;code&gt;EnableValidation&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Weight = new BindableReactiveProperty&amp;lt;double&amp;gt;()
    .EnableValidation(() =&amp;gt; Weight)
    .ForceValidate();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is also &lt;code&gt;IReadOnlyBindableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt;, which is preferable when ReadOnly is required in binding, can create from &lt;code&gt;IObservable&amp;lt;T&amp;gt;.ToReadOnlyBindableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;ReactiveCommand&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ReactiveCommand&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;ReactiveCommand&lt;/code&gt; are observable &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.windows.input.icommand&quot;&gt;ICommand&lt;/a&gt; implementation. It can create from &lt;code&gt;Observable&amp;lt;bool&amp;gt; canExecuteSource&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class CommandViewModel : IDisposable
{
    public BindableReactiveProperty&amp;lt;bool&amp;gt; OnCheck { get; } // bind to CheckBox
    public ReactiveCommand ShowMessageBox { get; }   // bind to Button, non generics ReactiveCommand is ReactiveCommand&amp;lt;Unit&amp;gt;

    public CommandViewModel()
    {
        OnCheck = new BindableReactiveProperty&amp;lt;bool&amp;gt;();
        ShowMessageBox = OnCheck.ToReactiveCommand(_ =&amp;gt;
        {
            MessageBox.Show(&quot;clicked&quot;);
        });
    }

    public void Dispose()
    {
        Disposable.Dispose(OnCheck, ShowMessageBox);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;Window x:Class=&quot;WpfApp1.MainWindow&quot;
        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
        xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;
        xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;
        xmlns:local=&quot;clr-namespace:WpfApp1&quot;
        mc:Ignorable=&quot;d&quot;
        Title=&quot;MainWindow&quot; Height=&quot;450&quot; Width=&quot;800&quot;&amp;gt;
    &amp;lt;Window.DataContext&amp;gt;
        &amp;lt;local:CommandViewModel /&amp;gt;
    &amp;lt;/Window.DataContext&amp;gt;
    &amp;lt;StackPanel Margin=&quot;10&quot;&amp;gt;
        &amp;lt;Label Content=&quot;Command&quot; /&amp;gt;
        &amp;lt;CheckBox IsChecked=&quot;{Binding OnCheck.Value}&quot; /&amp;gt;
        &amp;lt;Button Content=&quot;Btn&quot; Command=&quot;{Binding ShowMessageBox}&quot; /&amp;gt;
    &amp;lt;/StackPanel&amp;gt;
&amp;lt;/Window&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/R3/assets/46207/c456829e-1493-446d-831b-425f05be5d05&quot; alt=&quot;rpcommand&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;INotifyPropertyChanged to Observable&lt;/h3&gt; 
&lt;p&gt;To convert properties of &lt;code&gt;INotifyPropertyChanged&lt;/code&gt; and &lt;code&gt;INotifyPropertyChanging&lt;/code&gt; into Observables, you can use &lt;code&gt;ObservePropertyChanged&lt;/code&gt; and &lt;code&gt;ObservePropertyChanging&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var person = new Person { Name = &quot;foo&quot; };

person.ObservePropertyChanged(x =&amp;gt; x.Name)
      .Subscribe(x =&amp;gt; Console.WriteLine($&quot;Changed:{x}&quot;));

p.Name = &quot;bar&quot;;
p.Name = &quot;baz&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Func&amp;lt;T, TProperty&amp;gt; propertySelector&lt;/code&gt; only supports simple property name lambda. This is because, in R3, &lt;code&gt;CallerArgumentExpression&lt;/code&gt; is used to extract, for example from &lt;code&gt;x =&amp;gt; x.Name&lt;/code&gt; to &quot;Name&quot;.&lt;/p&gt; 
&lt;h3&gt;FromEvent&lt;/h3&gt; 
&lt;p&gt;To convert existing events into Observables, use FromEvent. Because it requires the conversion of delegates and has a unique way of calling, please refer to the following sample.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Observable.FromEvent&amp;lt;RoutedEventHandler, RoutedEventArgs&amp;gt;(
    h =&amp;gt; (sender, e) =&amp;gt; h(e),
    e =&amp;gt; button.Click += e,
    e =&amp;gt; button.Click -= e);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Platform Supports&lt;/h2&gt; 
&lt;p&gt;Even without adding specific platform support, it is possible to use only the core library. However, Rx becomes more user-friendly by replacing the standard &lt;code&gt;TimeProvider&lt;/code&gt; and &lt;code&gt;FrameProvider&lt;/code&gt; with those optimized for each platform. For example, while the standard &lt;code&gt;TimeProvider&lt;/code&gt; is thread-based, using a UI thread-based &lt;code&gt;TimeProvider&lt;/code&gt; for each platform can eliminate the need for dispatch through &lt;code&gt;ObserveOn&lt;/code&gt;, enhancing usability. Additionally, since message loops differ across platforms, the use of individual &lt;code&gt;FrameProvider&lt;/code&gt; is essential.&lt;/p&gt; 
&lt;p&gt;Although standard support is provided for the following platforms, by implementing &lt;code&gt;TimeProvider&lt;/code&gt; and &lt;code&gt;FrameProvider&lt;/code&gt;, it is possible to support any environment, including in-house game engine or other frameworks.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#wpf&quot;&gt;WPF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#avalonia&quot;&gt;Avalonia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#uno&quot;&gt;Uno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#mau&quot;&gt;MAUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#winforms&quot;&gt;WinForms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#winui3&quot;&gt;WinUI3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#unity&quot;&gt;Unity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#godot&quot;&gt;Godot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#stride&quot;&gt;Stride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#monogame&quot;&gt;MonoGame&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#logiclooper&quot;&gt;LogicLooper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#blazor&quot;&gt;Blazor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;WPF&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.WPF&quot;&gt;R3Extensions.WPF&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;R3Extensions.WPF package has two providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WpfDispatcherTimeProvider&lt;/li&gt; 
 &lt;li&gt;WpfRenderingFrameProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Calling &lt;code&gt;WpfProviderInitializer.SetDefaultObservableSystem()&lt;/code&gt; at startup will replace &lt;code&gt;ObservableSystem.DefaultTimeProvider&lt;/code&gt; and &lt;code&gt;ObservableSystem.DefaultFrameProvider&lt;/code&gt; with the aforementioned providers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class App : Application
{
    protected override void OnStartup(StartupEventArgs e)
    {
        // You need to set UnhandledExceptionHandler
        WpfProviderInitializer.SetDefaultObservableSystem(ex =&amp;gt; Trace.WriteLine($&quot;R3 UnhandledException:{ex}&quot;));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, time based operations are replaced with &lt;code&gt;DispatcherTimer&lt;/code&gt;, allowing you to reflect time based operations on the UI without having to use &lt;code&gt;ObserveOn&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;WpfRenderingFrameProvider&lt;/code&gt; is a frame-based loop system synchronized with the &lt;code&gt;CompositionTarget.Rendering&lt;/code&gt; event. This allows for writing code that, for example, reads and reflects changes in values that do not implement &lt;code&gt;INotifyPropertyChanged&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class MainWindow : Window
{
    IDisposable disposable;

    public MainWindow()
    {
        InitializeComponent();

        var d1 = Observable.EveryValueChanged(this, x =&amp;gt; x.Width).Subscribe(x =&amp;gt; WidthText.Text = x.ToString());
        var d2 = Observable.EveryValueChanged(this, x =&amp;gt; x.Height).Subscribe(x =&amp;gt; HeightText.Text = x.ToString());

        disposable = Disposable.Combine(d1, d2);
    }

    protected override void OnClosed(EventArgs e)
    {
        disposable.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/46207/15827886/1573ff16-2c48-11e6-9876-4e4455d7eced.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;In addition to the above, the following &lt;code&gt;ObserveOn&lt;/code&gt;/&lt;code&gt;SubscribeOn&lt;/code&gt; methods have been added.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ObserveOnDispatcher&lt;/li&gt; 
 &lt;li&gt;ObserveOnCurrentDispatcher&lt;/li&gt; 
 &lt;li&gt;SubscribeOnDispatcher&lt;/li&gt; 
 &lt;li&gt;SubscribeOnCurrentDispatcher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ViewModel binding support, see &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#xaml-platformsbindablereactivepropertyt&quot;&gt;&lt;code&gt;BindableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; section.&lt;/p&gt; 
&lt;h3&gt;Avalonia&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.Avalonia&quot;&gt;R3Extensions.Avalonia&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;R3Extensions.Avalonia package has these providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AvaloniaDispatcherTimeProvider&lt;/li&gt; 
 &lt;li&gt;AvaloniaDispatcherFrameProvider&lt;/li&gt; 
 &lt;li&gt;AvaloniaRenderingFrameProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Calling &lt;code&gt;AvaloniaProviderInitializer.SetDefaultObservableSystem()&lt;/code&gt; at startup will replace &lt;code&gt;ObservableSystem.DefaultTimeProvider&lt;/code&gt; and &lt;code&gt;ObservableSystem.DefaultFrameProvider&lt;/code&gt; with &lt;code&gt;AvaloniaDispatcherTimeProvider&lt;/code&gt; and &lt;code&gt;AvaloniaDispatcherFrameProvider&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, calling &lt;code&gt;UseR3()&lt;/code&gt; in &lt;code&gt;AppBuilder&lt;/code&gt; sets the default providers, making it a recommended approach.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static AppBuilder BuildAvaloniaApp()
    =&amp;gt; AppBuilder.Configure&amp;lt;App&amp;gt;()
        .UsePlatformDetect()
        .WithInterFont()
        .LogToTrace()
        .UseR3(); // add this line
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, time based operations are replaced with &lt;code&gt;DispatcherTimer&lt;/code&gt;, allowing you to reflect time based operations on the UI without having to use &lt;code&gt;ObserveOn&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the case of methods without arguments, integrate the following method into &lt;code&gt;ObservableSystem.RegisterUnhandledExceptionHandler&lt;/code&gt;. Please customize this as necessary.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ex =&amp;gt; Logger.Sink?.Log(LogEventLevel.Error, &quot;R3&quot;, null, &quot;R3 Unhandled Exception {0}&quot;, ex);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AvaloniaDispatcherFrameProvider&lt;/code&gt; calculates a frame by polling with &lt;code&gt;DispatcherTimer&lt;/code&gt;. By default, it updates at 60fps.&lt;/p&gt; 
&lt;p&gt;Using &lt;code&gt;AvaloniaRenderingFrameProvider&lt;/code&gt; is more performant however it needs &lt;code&gt;TopLevel&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class MainWindow : Window
{
    AvaloniaRenderingFrameProvider frameProvider;

    public MainWindow()
    {
        InitializeComponent();

        // initialize RenderingFrameProvider
        var topLevel = TopLevel.GetTopLevel(this);
        this.frameProvider = new AvaloniaRenderingFrameProvider(topLevel!);
    }

    protected override void OnLoaded(RoutedEventArgs e)
    {
        // pass frameProvider
        Observable.EveryValueChanged(this, x =&amp;gt; x.Width, frameProvider)
            .Subscribe(x =&amp;gt; textBlock.Text = x.ToString());
    }

    protected override void OnClosed(EventArgs e)
    {
        frameProvider.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the above, the following &lt;code&gt;ObserveOn&lt;/code&gt;/&lt;code&gt;SubscribeOn&lt;/code&gt; methods have been added.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ObserveOnDispatcher&lt;/li&gt; 
 &lt;li&gt;ObserveOnUIThreadDispatcher&lt;/li&gt; 
 &lt;li&gt;SubscribeOnDispatcher&lt;/li&gt; 
 &lt;li&gt;SubscribeOnUIThreadDispatcher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Uno&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.Uno&quot;&gt;R3Extensions.Uno&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;R3Extensions.Uno package has two providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UnoDispatcherTimeProvider&lt;/li&gt; 
 &lt;li&gt;UnoRenderingFrameProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Calling &lt;code&gt;UnoProviderInitializer.SetDefaultObservableSystem()&lt;/code&gt; at startup will replace &lt;code&gt;ObservableSystem.DefaultTimeProvider&lt;/code&gt; and &lt;code&gt;ObservableSystem.DefaultFrameProvider&lt;/code&gt; with &lt;code&gt;UnoDispatcherTimeProvider&lt;/code&gt; and &lt;code&gt;UnoRenderingFrameProvider&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, calling &lt;code&gt;UseR3()&lt;/code&gt; in &lt;code&gt;ApplicationBuilder&lt;/code&gt; sets the default providers, making it a recommended approach.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class App : Application
{
    protected async override void OnLaunched(LaunchActivatedEventArgs args)
    {
        var builder = this.CreateBuilder(args)
            .UseR3() // add this line
            ...
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, time based operations are replaced with &lt;code&gt;DispatcherTimer&lt;/code&gt;, allowing you to reflect time based operations on the UI without having to use &lt;code&gt;ObserveOn&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the case of methods without arguments, integrate the following method into &lt;code&gt;ObservableSystem.RegisterUnhandledExceptionHandler&lt;/code&gt;. Please customize this as necessary.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ex =&amp;gt; builder.Log().LogError(&quot;R3 Unhandled Exception {0}&quot;, ex));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the above, the following &lt;code&gt;ObserveOn&lt;/code&gt;/&lt;code&gt;SubscribeOn&lt;/code&gt; methods have been added.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ObserveOnDispatcher&lt;/li&gt; 
 &lt;li&gt;ObserveOnCurrentWindowDispatcher&lt;/li&gt; 
 &lt;li&gt;SubscribeOnDispatcher&lt;/li&gt; 
 &lt;li&gt;SubscribeOnCurrentWindowDispatcher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MAUI&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.Maui&quot;&gt;R3Extensions.Maui&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;R3Extensions.Maui package has these providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MauiDispatcherTimeProvider&lt;/li&gt; 
 &lt;li&gt;MauiTickerFrameProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And ViewModel binding is supported, see &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/R3/main/#xaml-platformsbindablereactivepropertyt&quot;&gt;&lt;code&gt;BindableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; section.&lt;/p&gt; 
&lt;p&gt;Calling &lt;code&gt;UseR3()&lt;/code&gt; in &lt;code&gt;MauiAppBuilder&lt;/code&gt; sets the default providers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static MauiApp CreateMauiApp()
{
    var builder = MauiApp.CreateBuilder();
    builder
        .UseMauiApp&amp;lt;App&amp;gt;()
        .ConfigureFonts(fonts =&amp;gt;
        {
            fonts.AddFont(&quot;OpenSans-Regular.ttf&quot;, &quot;OpenSansRegular&quot;);
            fonts.AddFont(&quot;OpenSans-Semibold.ttf&quot;, &quot;OpenSansSemibold&quot;);
        })
        .UseR3(); // add this line

    return builder.Build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UseR3()&lt;/code&gt; configures the following.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Time based operations are replaced with &lt;code&gt;IDispatcher&lt;/code&gt;, allowing you to reflect time based operations on the UI without having to use &lt;code&gt;ObserveOn&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Frame based operations are replaced with &lt;code&gt;Ticker&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ObservableSystem.RegisterUnhandledExceptionHandler&lt;/code&gt; is set to &lt;code&gt;R3MauiDefaultExceptionHandler&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt; &lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class R3MauiDefaultExceptionHandler(IServiceProvider serviceProvider) : IR3MauiExceptionHandler
{
    public void HandleException(Exception ex)
    {
        System.Diagnostics.Trace.TraceError(&quot;R3 Unhandled Exception {0}&quot;, ex);

        var logger = serviceProvider.GetService&amp;lt;ILogger&amp;lt;R3MauiDefaultExceptionHandler&amp;gt;&amp;gt;();
        logger?.LogError(ex, &quot;R3 Unhandled Exception&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you want to customize the ExceptionHandler, there are two ways.&lt;/p&gt; 
&lt;p&gt;One is to pass a callback to `UseR3e&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;builder.UseR3(ex =&amp;gt; Console.WriteLine($&quot;R3 UnhandledException:{ex}&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The second is to create an implementation of the &lt;code&gt;IR3MAuiExceptionHandler&lt;/code&gt; interface and DI it. Since MAUI is a DI-based framework, this method will make it easier to access the various functions in the DI container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;builder.Services.AddSingleton&amp;lt;IR3MauiExceptionHandler, YourCustomExceptionHandler&amp;gt;();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WinForms&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.WinForms&quot;&gt;R3Extensions.WinForms&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;R3Extensions.WinForms package has these providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WinFormsFrameProvider&lt;/li&gt; 
 &lt;li&gt;WinFormsTimeProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Calling &lt;code&gt;WinFormsProviderInitializer.SetDefaultObservableSystem()&lt;/code&gt; at startup(Program.Main) will replace &lt;code&gt;ObservableSystem.DefaultTimeProvider&lt;/code&gt; and &lt;code&gt;ObservableSystem.DefaultFrameProvider&lt;/code&gt; with &lt;code&gt;WinFormsFrameProvider&lt;/code&gt; and &lt;code&gt;WinFormsTimeProvider&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using R3.WinForms;

internal static class Program
{
    [STAThread]
    static void Main()
    {
        ApplicationConfiguration.Initialize();

        var form = new Form1();

        // add this line
        WinFormsProviderInitializer.SetDefaultObservableSystem(ex =&amp;gt; Trace.WriteLine($&quot;R3 UnhandledException:{ex}&quot;), form);

        Application.Run(form);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;SetDefaultObservableSystem&lt;/code&gt; takes ISynchronizeInvoke (such as Form or Control). This makes the Timer operate on the thread to which it belongs.&lt;/p&gt; 
&lt;p&gt;FrameProvider is executed as one frame using the hook of MessageFilter.&lt;/p&gt; 
&lt;h3&gt;WinUI3&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.WinUI3&quot;&gt;R3Extensions.WinUI3&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;R3Extensions.WinUI3 package has these providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WinUI3DispatcherTimeProvider&lt;/li&gt; 
 &lt;li&gt;WinUI3RenderingFrameProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Calling &lt;code&gt;WinUI3ProviderInitializer.SetDefaultObservableSystem()&lt;/code&gt; at startup will replace &lt;code&gt;ObservableSystem.DefaultTimeProvider&lt;/code&gt; and &lt;code&gt;ObservableSystem.DefaultFrameProvider&lt;/code&gt; with the aforementioned providers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class App : Application
{
    public App()
    {
        this.InitializeComponent();

        // Add this line.
        // You need to set UnhandledExceptionHandler
        WinUI3ProviderInitializer.SetDefaultObservableSystem(ex =&amp;gt; Trace.WriteLine(ex.ToString()));
    }

    // OnLaunched...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unity&lt;/h3&gt; 
&lt;p&gt;The minimum Unity support for R3 is &lt;strong&gt;Unity 2021.3&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;There are two installation steps required to use it in Unity.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;code&gt;R3&lt;/code&gt; from NuGet using &lt;a href=&quot;https://github.com/GlitchEnzo/NuGetForUnity&quot;&gt;NuGetForUnity&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Open Window from NuGet -&amp;gt; Manage NuGet Packages, Search &quot;R3&quot; and Press Install. &lt;img src=&quot;https://github.com/Cysharp/ZLogger/assets/46207/dbad9bf7-28e3-4856-b0a8-0ff8a2a01d67&quot; alt=&quot;&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you encounter version conflict errors, please disable version validation in Player Settings(Edit -&amp;gt; Project Settings -&amp;gt; Player -&amp;gt; Scroll down and expand &quot;Other Settings&quot; than uncheck &quot;Assembly Version Validation&quot; under the &quot;Configuration&quot; section).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Install the &lt;code&gt;R3.Unity&lt;/code&gt; package by referencing the git URL&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;https://github.com/Cysharp/R3.git?path=src/R3.Unity/Assets/R3.Unity
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/ZLogger/assets/46207/7325d266-05b4-47c9-b06a-a67a40368dd2&quot; alt=&quot;image&quot;&gt; &lt;img src=&quot;https://github.com/Cysharp/ZLogger/assets/46207/29bf5636-4d6a-4e75-a3d8-3f8408bd8c51&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;R3 uses the &lt;em&gt;.&lt;/em&gt;.* release tag, so you can specify a version like #1.0.0. For example: &lt;code&gt;https://github.com/Cysharp/R3.git?path=src/R3.Unity/Assets/R3.Unity#1.0.0&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Unity&#39;s TimeProvider and FrameProvider is PlayerLoop based. Additionally, there are variations of TimeProvider that correspond to the TimeScale.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;UnityTimeProvider.Initialization
UnityTimeProvider.EarlyUpdate
UnityTimeProvider.FixedUpdate
UnityTimeProvider.PreUpdate
UnityTimeProvider.Update
UnityTimeProvider.PreLateUpdate
UnityTimeProvider.PostLateUpdate
UnityTimeProvider.TimeUpdate

UnityTimeProvider.InitializationIgnoreTimeScale
UnityTimeProvider.EarlyUpdateIgnoreTimeScale
UnityTimeProvider.FixedUpdateIgnoreTimeScale
UnityTimeProvider.PreUpdateIgnoreTimeScale
UnityTimeProvider.UpdateIgnoreTimeScale
UnityTimeProvider.PreLateUpdateIgnoreTimeScale
UnityTimeProvider.PostLateUpdateIgnoreTimeScale
UnityTimeProvider.TimeUpdateIgnoreTimeScale

UnityTimeProvider.InitializationRealtime
UnityTimeProvider.EarlyUpdateRealtime
UnityTimeProvider.FixedUpdateRealtime
UnityTimeProvider.PreUpdateRealtime
UnityTimeProvider.UpdateRealtime
UnityTimeProvider.PreLateUpdateRealtime
UnityTimeProvider.PostLateUpdateRealtime
UnityTimeProvider.TimeUpdateRealtime
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;UnityFrameProvider.Initialization
UnityFrameProvider.EarlyUpdate
UnityFrameProvider.FixedUpdate
UnityFrameProvider.PreUpdate
UnityFrameProvider.Update
UnityFrameProvider.PreLateUpdate
UnityFrameProvider.PostLateUpdate
UnityFrameProvider.TimeUpdate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can write it like this using these:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// ignore-timescale based interval
Observable.Interval(TimeSpan.FromSeconds(5), UnityTimeProvider.UpdateIgnoreTimeScale);

// fixed-update loop
Observable.EveryUpdate(UnityFrameProvider.FixedUpdate);

// observe PostLateUpdate
Observable.Return(42).ObserveOn(UnityFrameProvider.PostLateUpdate);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the case of Unity, &lt;code&gt;UnityTimeProvider.Update&lt;/code&gt; and &lt;code&gt;UnityFrameProvider.Update&lt;/code&gt; are automatically set at startup by default.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static class UnityProviderInitializer
{
    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]
    public static void SetDefaultObservableSystem()
    {
        SetDefaultObservableSystem(static ex =&amp;gt; UnityEngine.Debug.LogException(ex));
    }

    public static void SetDefaultObservableSystem(Action&amp;lt;Exception&amp;gt; unhandledExceptionHandler)
    {
        ObservableSystem.RegisterUnhandledExceptionHandler(unhandledExceptionHandler);
        ObservableSystem.DefaultTimeProvider = UnityTimeProvider.Update;
        ObservableSystem.DefaultFrameProvider = UnityFrameProvider.Update;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A method has been added to convert from UnityEvent to AsObservable. If a CancellationToken is passed, it allows the event source to call for event unsubscription by issuing OnCompleted when Cancel is invoked. For example, if you pass &lt;code&gt;MonoBehaviour.destroyCancellationToken&lt;/code&gt;, it will be reliably unsubscribed in conjunction with the GameObject&#39;s lifecycle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static Observable&amp;lt;Unit&amp;gt; AsObservable(this UnityEngine.Events.UnityEvent unityEvent, CancellationToken cancellationToken = default)
public static Observable&amp;lt;T&amp;gt; AsObservable&amp;lt;T&amp;gt;(this UnityEngine.Events.UnityEvent&amp;lt;T&amp;gt; unityEvent, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0 Arg0, T1 Arg1)&amp;gt; AsObservable&amp;lt;T0, T1&amp;gt;(this UnityEngine.Events.UnityEvent&amp;lt;T0, T1&amp;gt; unityEvent, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0 Arg0, T1 Arg1, T2 Arg2)&amp;gt; AsObservable&amp;lt;T0, T1, T2&amp;gt;(this UnityEngine.Events.UnityEvent&amp;lt;T0, T1, T2&amp;gt; unityEvent, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0 Arg0, T1 Arg1, T2 Arg2, T3 Arg3)&amp;gt; AsObservable&amp;lt;T0, T1, T2, T3&amp;gt;(this UnityEngine.Events.UnityEvent&amp;lt;T0, T1, T2, T3&amp;gt; unityEvent, CancellationToken cancellationToken = default)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, with extension methods for uGUI, uGUI events can be easily converted to Observables. OnValueChangedAsObservable starts the subscription by first emitting the latest value at the time of subscription. Also when the associated component is destroyed, it emits an OnCompleted event to ensure the subscription is reliably cancelled.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static IDisposable SubscribeToText(this Observable&amp;lt;string&amp;gt; source, Text text)
public static IDisposable SubscribeToText&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source, Text text)
public static IDisposable SubscribeToText&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source, Text text, Func&amp;lt;T, string&amp;gt; selector)
public static IDisposable SubscribeToInteractable(this Observable&amp;lt;bool&amp;gt; source, Selectable selectable)
public static Observable&amp;lt;Unit&amp;gt; OnClickAsObservable(this Button button)
public static Observable&amp;lt;bool&amp;gt; OnValueChangedAsObservable(this Toggle toggle)
public static Observable&amp;lt;float&amp;gt; OnValueChangedAsObservable(this Scrollbar scrollbar)
public static Observable&amp;lt;Vector2&amp;gt; OnValueChangedAsObservable(this ScrollRect scrollRect)
public static Observable&amp;lt;float&amp;gt; OnValueChangedAsObservable(this Slider slider)
public static Observable&amp;lt;string&amp;gt; OnEndEditAsObservable(this InputField inputField)
public static Observable&amp;lt;string&amp;gt; OnValueChangedAsObservable(this InputField inputField)
public static Observable&amp;lt;int&amp;gt; OnValueChangedAsObservable(this Dropdown dropdown)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the above, the following &lt;code&gt;ObserveOn&lt;/code&gt;/&lt;code&gt;SubscribeOn&lt;/code&gt; methods have been added.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ObserveOnMainThread&lt;/li&gt; 
 &lt;li&gt;SubscribeOnMainThread&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When using &lt;code&gt;AddTo(Component / GameObject)&lt;/code&gt; in Unity, it attaches a special component called ObservableDestroyTrigger if gameObject is not active yet, which monitors for destruction. Unity has a characteristic where components that have never been activated do not fire OnDestroy, and the destroyCancellationToken does not get canceled. ObservableDestroyTrigger is designed to monitor for destruction and reliably issue OnDestroy regardless of the active state. It would be wise to use destroyCancellationToken effectively if needed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// simple pattern
Observable.EveryUpdate().Subscribe().AddTo(this);
Observable.EveryUpdate().Subscribe().AddTo(this);
Observable.EveryUpdate().Subscribe().AddTo(this);

// better performance
var d = Disposable.CreateBuilder();
Observable.EveryUpdate().Subscribe().AddTo(ref d);
Observable.EveryUpdate().Subscribe().AddTo(ref d);
Observable.EveryUpdate().Subscribe().AddTo(ref d);
d.RegisterTo(this.destroyCancellationToken); // Build and Register
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You open tracker window in &lt;code&gt;Window -&amp;gt; Observable Tracker&lt;/code&gt;. It enables watch &lt;code&gt;ObservableTracker&lt;/code&gt; list in editor window.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/ZLogger/assets/46207/149abca5-6d84-44ea-8373-b0e8cd2dc46a&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable AutoReload(Toggle) - Reload automatically.&lt;/li&gt; 
 &lt;li&gt;Reload - Reload view.&lt;/li&gt; 
 &lt;li&gt;GC.Collect - Invoke GC.Collect.&lt;/li&gt; 
 &lt;li&gt;Enable Tracking(Toggle) - Start to track subscription. Performance impact: low.&lt;/li&gt; 
 &lt;li&gt;Enable StackTrace(Toggle) - Capture StackTrace when observable is subscribed. Performance impact: high.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Observable Tracker is intended for debugging use only as enabling tracking and capturing stacktraces is useful but has a heavy performance impact. Recommended usage is to enable both tracking and stacktraces to find subscription leaks and to disable them both when done.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;SerializableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;ReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt; can not use on &lt;code&gt;[SerializeField]&lt;/code&gt;. However you can use &lt;code&gt;SerializableReactiveProperty&amp;lt;T&amp;gt;&lt;/code&gt; instead.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class NewBehaviourScript : MonoBehaviour
{
    public SerializableReactiveProperty&amp;lt;int&amp;gt; rpInt;
    public SerializableReactiveProperty&amp;lt;long&amp;gt; rpLong;
    public SerializableReactiveProperty&amp;lt;byte&amp;gt; rpByte;
    public SerializableReactiveProperty&amp;lt;float&amp;gt; rpFloat;
    public SerializableReactiveProperty&amp;lt;double&amp;gt; rpDouble;
    public SerializableReactiveProperty&amp;lt;string&amp;gt; rpString;
    public SerializableReactiveProperty&amp;lt;bool&amp;gt; rpBool;
    public SerializableReactiveProperty&amp;lt;Vector2&amp;gt; rpVector2;
    public SerializableReactiveProperty&amp;lt;Vector2Int&amp;gt; rpVector2Int;
    public SerializableReactiveProperty&amp;lt;Vector3&amp;gt; rpVector3;
    public SerializableReactiveProperty&amp;lt;Vector3Int&amp;gt; rpVector3Int;
    public SerializableReactiveProperty&amp;lt;Vector4&amp;gt; rpVector4;
    public SerializableReactiveProperty&amp;lt;Color&amp;gt; rpColor;
    public SerializableReactiveProperty&amp;lt;Rect&amp;gt; rpRect;
    public SerializableReactiveProperty&amp;lt;Bounds&amp;gt; rpBounds;
    public SerializableReactiveProperty&amp;lt;BoundsInt&amp;gt; rpBoundsInt;
    public SerializableReactiveProperty&amp;lt;Quaternion&amp;gt; rpQuaternion;
    public SerializableReactiveProperty&amp;lt;Matrix4x4&amp;gt; rpMatrix4x4;
    public SerializableReactiveProperty&amp;lt;FruitEnum&amp;gt; rpEnum;
    public SerializableReactiveProperty&amp;lt;FruitFlagsEnum&amp;gt; rpFlagsEnum;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/R3/assets/46207/31be9378-846e-4635-8cc6-0b6e3954e918&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Triggers&lt;/h4&gt; 
&lt;p&gt;R3 can handle &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour.html&quot;&gt;MonoBehaviour messages&lt;/a&gt; with R3.Triggers:&lt;/p&gt; 
&lt;p&gt;These can also be handled more easily by directly subscribing to observables returned by extension methods on Component/GameObject. These methods inject ObservableTrigger automatically.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using R3;
using R3.Triggers;

// when using R3.Triggers, Component or GameObject has [MonoBehaviour Messages]AsObservable extension methods.
this.OnCollisionEnterAsObservable()
    .Subscribe(x =&amp;gt;
    {
        Debug.Log(&quot;collision enter&quot;);
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Godot&lt;/h3&gt; 
&lt;p&gt;Godot support is for Godot 4.x.&lt;/p&gt; 
&lt;p&gt;There are some installation steps required to use it in Godot.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;code&gt;R3&lt;/code&gt; from NuGet.&lt;/li&gt; 
 &lt;li&gt;Download(or clone git submodule) the repository and move the &lt;code&gt;src/R3.Godot/addons/R3.Godot&lt;/code&gt; directory to your project.&lt;/li&gt; 
 &lt;li&gt;Enable the &lt;code&gt;R3.Godot&lt;/code&gt; plugin from the plugins menu.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/R3/assets/46207/56bfbb3b-8e7c-4af3-b762-35e4de8a2e83&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Godot support has these TimeProvider and FrameProvider.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GodotTimeProvider.Process
GodotTimeProvider.PhysicsProcess
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;GodotFrameProvider.Process
GodotFrameProvider.PhysicsProcess
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;autoloaded &lt;code&gt;FrameProviderDispatcher&lt;/code&gt; set &lt;code&gt;GodotTimeProvider.Process&lt;/code&gt; and &lt;code&gt;GodotFrameProvider.Process&lt;/code&gt; as default providers. Additionally, UnhandledException is written to &lt;code&gt;GD.PrintErr&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This is the minimal sample to use R3.Godot.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Godot;
using R3;
using System;

public partial class Node2D : Godot.Node2D
{
    IDisposable subscription;

    public override void _Ready()
    {
        subscription = Observable.EveryUpdate()
            .ThrottleLastFrame(10)
            .Subscribe(x =&amp;gt;
            {
                GD.Print($&quot;Observable.EveryUpdate: {GodotFrameProvider.Process.GetFrameCount()}&quot;);
            });
    }

    public override void _ExitTree()
    {
        subscription?.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the UI event observe/subscribe extension are also available.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static IDisposable SubscribeToLabel(this Observable&amp;lt;string&amp;gt; source, Label label)
public static IDisposable SubscribeToLabel&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source, Label label)
public static IDisposable SubscribeToLabel&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source, Label label, Func&amp;lt;T, string&amp;gt; selector)
public static Observable&amp;lt;Unit&amp;gt; OnPressedAsObservable(this BaseButton button, CancellationToken cancellationToken = default)
public static Observable&amp;lt;bool&amp;gt; OnToggledAsObservable(this BaseButton button, CancellationToken cancellationToken = default)
public static Observable&amp;lt;double&amp;gt; OnValueChangedAsObservable(this Godot.Range range, CancellationToken cancellationToken = default)
public static Observable&amp;lt;string&amp;gt; OnTextSubmittedAsObservable(this LineEdit lineEdit, CancellationToken cancellationToken = default)
public static Observable&amp;lt;string&amp;gt; OnTextChangedAsObservable(this LineEdit lineEdit, CancellationToken cancellationToken = default)
public static Observable&amp;lt;Unit&amp;gt; OnTextChangedAsObservable(this TextEdit textEdit, CancellationToken cancellationToken = default)
public static Observable&amp;lt;long&amp;gt; OnItemSelectedAsObservable(this OptionButton optionButton, CancellationToken cancellationToken = default)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, there is support for Sigal.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static CancellationToken CancelOnSignal(this GodotObject obj, StringName signalName, bool oneShot = true)
public static Observable&amp;lt;Unit&amp;gt; SignalAsObservable(this Node node, StringName signalName)
public static Observable&amp;lt;T&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;(T0, T1)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;(T0, T1, T2)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;(T0, T1, T2, T3)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;(T0, T1, T2, T3, T4)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;(T0, T1, T2, T3, T4, T5)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4, [MustBeVariant] T5&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;(T0, T1, T2, T3, T4, T5, T6)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4, [MustBeVariant] T5, [MustBeVariant] T6&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;(T0, T1, T2, T3, T4, T5, T6, T7)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4, [MustBeVariant] T5, [MustBeVariant] T6, [MustBeVariant] T7&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;(T0, T1, T2, T3, T4, T5, T6, T7, T8)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4, [MustBeVariant] T5, [MustBeVariant] T6, [MustBeVariant] T7, [MustBeVariant] T8&amp;gt;(this Node node, StringName signalName)
public static Observable&amp;lt;Unit&amp;gt; SignalAsObservable(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;T&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0, T1)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0, T1, T2)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0, T1, T2, T3)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0, T1, T2, T3, T4)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0, T1, T2, T3, T4, T5)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4, [MustBeVariant] T5&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0, T1, T2, T3, T4, T5, T6)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4, [MustBeVariant] T5, [MustBeVariant] T6&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0, T1, T2, T3, T4, T5, T6, T7)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4, [MustBeVariant] T5, [MustBeVariant] T6, [MustBeVariant] T7&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
public static Observable&amp;lt;(T0, T1, T2, T3, T4, T5, T6, T7, T8)&amp;gt; SignalAsObservable&amp;lt;[MustBeVariant] T0, [MustBeVariant] T1, [MustBeVariant] T2, [MustBeVariant] T3, [MustBeVariant] T4, [MustBeVariant] T5, [MustBeVariant] T6, [MustBeVariant] T7, [MustBeVariant] T8&amp;gt;(this GodotObject obj, StringName signalName, CancellationToken cancellationToken = default)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can watch subscription status in &lt;code&gt;Debugger -&amp;gt; ObservableTracker&lt;/code&gt; view.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Cysharp/R3/assets/46207/8b5258a5-8124-4123-a837-79c31427c1d3&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Stride&lt;/h3&gt; 
&lt;p&gt;R3 extensions for &lt;a href=&quot;https://stride3d.net&quot;&gt;Stride&lt;/a&gt; game engine.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.Stride&quot;&gt;R3Extensions.Stride&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Usage&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Reference R3.Stride&lt;/li&gt; 
 &lt;li&gt;add empty Entity by Stride editor&lt;/li&gt; 
 &lt;li&gt;add &quot;R3/StrideFrameProviderComponent&quot;&lt;/li&gt; 
 &lt;li&gt;set Stride Frame Provider Component&#39;s priority to lower than other scripts which use R3 API&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;R3Extensions.Stride provides these providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;StrideTimeProvider&lt;/li&gt; 
 &lt;li&gt;StrideFrameProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the UI event observe/subscribe extension are also available.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static Observable&amp;lt;(object? sender, PropertyChangedArgs&amp;lt;MouseOverState&amp;gt; arg)&amp;gt; MouseOverStateChangedAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, TouchEventArgs)&amp;gt; PreviewTouchDownAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, TouchEventArgs)&amp;gt; PreviewTouchMoveAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, TouchEventArgs)&amp;gt; PreviewTouchUpAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, TouchEventArgs)&amp;gt; TouchDownAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, TouchEventArgs)&amp;gt; TouchMoveAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, TouchEventArgs)&amp;gt; TouchUpAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, TouchEventArgs)&amp;gt; TouchEnterAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, TouchEventArgs)&amp;gt; TouchLeaveAsObservable(this UIElement element, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, RoutedEventArgs arg)&amp;gt; ClickAsObservable(this ButtonBase btn, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, RoutedEventArgs arg)&amp;gt; ValueChangedAsObservable(this Slider slider, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, RoutedEventArgs arg)&amp;gt; TextChangedAsObservable(this EditText editText, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, RoutedEventArgs arg)&amp;gt; CheckedAsObservable(this ToggleButton toggleButton, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, RoutedEventArgs arg)&amp;gt; IndeterminateAsObservable(this ToggleButton button, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, RoutedEventArgs arg)&amp;gt; UncheckedAsObservable(this ToggleButton toggleButton, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, RoutedEventArgs arg)&amp;gt; OutsideClickAsObservable(this ModalElement modalElement, CancellationToken token = default)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And event extensions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static Observable&amp;lt;(object? sender, TrackingCollectionChangedEventArgs arg)&amp;gt; CollectionChangedAsObservable(this ITrackingCollectionChanged hashset, CancellationToken token = default)
public static Observable&amp;lt;(object? sender, FastTrackingCollectionChangedEventArgs arg)&amp;gt; CollectionChangedAsObservable&amp;lt;T&amp;gt;(this FastTrackingCollection&amp;lt;T&amp;gt; collection, CancellationToken token = default)
public static Observable&amp;lt;T&amp;gt; AsObservable&amp;lt;T&amp;gt;(this EventKey&amp;lt;T&amp;gt; eventKey, CancellationToken token = default)
public static Observable&amp;lt;Unit&amp;gt; AsObservable(this EventKey eventKey, CancellationToken token = default)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MonoGame&lt;/h3&gt; 
&lt;p&gt;R3 extensions for &lt;a href=&quot;https://monogame.net&quot;&gt;MonoGame&lt;/a&gt; game engine.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.MonoGame&quot;&gt;R3Extensions.MonoGame&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Set up as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Reference R3.MonoGame&lt;/li&gt; 
 &lt;li&gt;Add an instance of &lt;code&gt;ObservableSystemComponent&lt;/code&gt; to your Game class.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Game1 : Game
{
    public Game1()
    {
        var observableSystemComponent = new ObservableSystemComponent(this);
        Components.Add(observableSystemComponent);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ObservableSystemComponent configure the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setup TimeProvider and FrameProvider. 
  &lt;ul&gt; 
   &lt;li&gt;Time based operations are replaced with &lt;code&gt;Game.Update(GameTime)&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Frame based operations are replaced with &lt;code&gt;Game.Update(GameTime)&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Set UnhandledExceptionHandler. By default, the unhandled exception handler simply flows to System.Diagnostics.Trace. 
  &lt;ul&gt; 
   &lt;li&gt;If you want to change this, do the following: 
    &lt;ul&gt; 
     &lt;li&gt; &lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;new ObservableSystemComponent(this, ex =&amp;gt; Console.WriteLine($&quot;R3 UnhandledException: {ex}&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;R3Extensions.MonoGame provides these providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MonoGameTimeProvider&lt;/li&gt; 
 &lt;li&gt;MonoGameFrameProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And provides these custom operators.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Observe the current GameTime value.
public static Observable&amp;lt;GameTime&amp;gt; GameTime(this Observable&amp;lt;Unit&amp;gt; source)

// observe the current GameTime and the value of the source observable.
public static Observable&amp;lt;(GameTime GameTime, T Item)&amp;gt; GameTime&amp;lt;T&amp;gt;(this Observable&amp;lt;T&amp;gt; source)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LogicLooper&lt;/h3&gt; 
&lt;p&gt;R3 extensions for &lt;a href=&quot;https://github.com/Cysharp/LogicLooper/&quot;&gt;LogicLooper&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.LogicLooper&quot;&gt;R3Extensions.LogicLooper&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;That supports two special providers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;LogicLooperFrameProvider&lt;/li&gt; 
 &lt;li&gt;LogicLooperTimeProvider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Blazor&lt;/h3&gt; 
&lt;p&gt;R3 extensions for Blazor.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.Blazor&quot;&gt;R3Extensions.Blazor&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If project target is WebAssembly Blazor, import &lt;code&gt;R3Extensions.BlazorWebAssembly&lt;/code&gt; instead.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/R3Extensions.BlazorWebAssembly&quot;&gt;R3Extensions.BlazorWebAssembly&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Add this line before Build()
// for WebAssembly use AddBlazorWebAssemblyR3() instead.
builder.Services.AddBlazorR3();

var app = builder.Build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you call &lt;code&gt;AddBlazorR3/AddBlazorWebAssemblyR3&lt;/code&gt; on IServiceCollection, a TimeProvider corresponding to the request scope is implicitly used and automatically marshaled to the current request. This eliminates the need for InvokeAsync when calling time-related methods within Blazor.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class Counter : IDisposable
{
    int currentCount = 0;
    IDisposable? subscription;

    protected override void OnInitialized()
    {
        subscription = Observable.Interval(TimeSpan.FromSeconds(1))
            .Subscribe(_ =&amp;gt;
            {
                // no needs InvokeAsync
                currentCount++;
                StateHasChanged();
            });
    }

    public void Dispose()
    {
        subscription?.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this case, since all default TimeProviders are tied to the request, you must explicitly pass &lt;code&gt;TimeProvider.System&lt;/code&gt; for executions that are not related to a request.&lt;/p&gt; 
&lt;p&gt;There is also a way to utilize R3 in Blazor without using &lt;code&gt;AddBlazorR3/AddBlazorWebAssemblyR3&lt;/code&gt;. One method is to use &lt;code&gt;ObserveOnCurrentSynchronizationContext&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;subscription = Observable.Interval(TimeSpan.FromSeconds(1)) // default TimeProvider is TimeProvider.System
    .ObserveOnCurrentSynchronizationContext() // uses Blazor RendererSynchronizationContext
    .Subscribe(_ =&amp;gt;
    {
        currentCount++;
        StateHasChanged();
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another method is to inject the TimeProvider. By manually setting up a &lt;code&gt;SynchronizationContextTimeProvider&lt;/code&gt; tied to the request scope, you can use a custom TimeProvider without changing the default TimeProvider. Also, in this case, it is easy to substitute a &lt;code&gt;FakeTimeProvider&lt;/code&gt; for unit testing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// use AddScoped instead of AddBlazorR3
builder.Services.AddScoped&amp;lt;TimeProvider, SynchronizationContextTimeProvider&amp;gt;();

var app = builder.Build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public partial class Counter : IDisposable
{
    int currentCount = 0;
    IDisposable? subscription;

    // Inject scoped TimeProvider manually(in bUnit testing, inject FakeTimeProvider)
    [Inject]
    public required TimeProvider TimeProvider { get; init; }

    protected override void OnInitialized()
    {
        subscription = Observable.Interval(TimeSpan.FromSeconds(1), TimeProvider)
            .Subscribe(_ =&amp;gt;
            {
                currentCount++;
                StateHasChanged();
            });
    }

    public void Dispose()
    {
        subscription?.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Operator Reference&lt;/h2&gt; 
&lt;p&gt;The standard operators in ReactiveX follow the behavior described in the &lt;a href=&quot;https://reactivex.io/documentation/operators.html&quot;&gt;Reactive X Operator documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Methods that accept a Scheduler will take a &lt;code&gt;TimeProvider&lt;/code&gt;. Additionally, methods that receive a &lt;code&gt;TimeProvider&lt;/code&gt; have an added method called &lt;code&gt;***Frame&lt;/code&gt; that accepts a &lt;code&gt;FrameProvider&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For default time based operations that do not take a provider, &lt;code&gt;ObservableSystem.DefaultTimeProvider&lt;/code&gt; is used, and for frame based operations without provider, &lt;code&gt;ObservableSystem.DefaultFrameProvider&lt;/code&gt; is used.&lt;/p&gt; 
&lt;h3&gt;Factory&lt;/h3&gt; 
&lt;p&gt;Factory methods are defined as static methods in the static class &lt;code&gt;Observable&lt;/code&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name(Parameter)&lt;/th&gt; 
   &lt;th&gt;ReturnType&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(params &lt;code&gt;Observable&amp;lt;T&amp;gt;[]&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(&lt;code&gt;IEnumerable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Func&amp;lt;T1, T2, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Func&amp;lt;T1, T2, T3, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Observable&amp;lt;T14&amp;gt;&lt;/code&gt; source14, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CombineLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Observable&amp;lt;T14&amp;gt;&lt;/code&gt; source14, &lt;code&gt;Observable&amp;lt;T15&amp;gt;&lt;/code&gt; source15, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Concat&lt;/strong&gt;(params &lt;code&gt;Observable&amp;lt;T&amp;gt;[]&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Concat&lt;/strong&gt;(&lt;code&gt;IEnumerable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Concat&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Create&lt;/strong&gt;(&lt;code&gt;Func&amp;lt;Observer&amp;lt;T&amp;gt;, IDisposable&amp;gt;&lt;/code&gt; subscribe, &lt;code&gt;Boolean&lt;/code&gt; rawObserver = false)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Create&lt;/strong&gt;(&lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;Observer&amp;lt;T&amp;gt;, TState, IDisposable&amp;gt;&lt;/code&gt; subscribe, &lt;code&gt;Boolean&lt;/code&gt; rawObserver = false)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Create&lt;/strong&gt;(&lt;code&gt;Func&amp;lt;Observer&amp;lt;T&amp;gt;, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; subscribe, &lt;code&gt;Boolean&lt;/code&gt; rawObserver = false)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Create&lt;/strong&gt;(&lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;Observer&amp;lt;T&amp;gt;, TState, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; subscribe, &lt;code&gt;Boolean&lt;/code&gt; rawObserver = false)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CreateFrom&lt;/strong&gt;(&lt;code&gt;Func&amp;lt;CancellationToken, IAsyncEnumerable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; factory)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CreateFrom&lt;/strong&gt;(&lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;CancellationToken, TState, IAsyncEnumerable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; factory)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Defer&lt;/strong&gt;(&lt;code&gt;Func&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; observableFactory, &lt;code&gt;Boolean&lt;/code&gt; rawObserver = false)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Empty&lt;/strong&gt;()&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Empty&lt;/strong&gt;(&lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Empty&lt;/strong&gt;(&lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;EveryUpdate&lt;/strong&gt;()&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;EveryUpdate&lt;/strong&gt;(&lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;EveryUpdate&lt;/strong&gt;(&lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;EveryUpdate&lt;/strong&gt;(&lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;EveryValueChanged&lt;/strong&gt;(&lt;code&gt;TSource&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TProperty&amp;gt;&lt;/code&gt; propertySelector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;EveryValueChanged&lt;/strong&gt;(&lt;code&gt;TSource&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TProperty&amp;gt;&lt;/code&gt; propertySelector, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;EveryValueChanged&lt;/strong&gt;(&lt;code&gt;TSource&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TProperty&amp;gt;&lt;/code&gt; propertySelector, &lt;code&gt;EqualityComparer&amp;lt;TProperty&amp;gt;&lt;/code&gt; equalityComparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;EveryValueChanged&lt;/strong&gt;(&lt;code&gt;TSource&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TProperty&amp;gt;&lt;/code&gt; propertySelector, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;EqualityComparer&amp;lt;TProperty&amp;gt;&lt;/code&gt; equalityComparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FromAsync&lt;/strong&gt;(&lt;code&gt;Func&amp;lt;CancellationToken, ValueTask&amp;gt;&lt;/code&gt; asyncFactory, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FromAsync&lt;/strong&gt;(&lt;code&gt;Func&amp;lt;CancellationToken, ValueTask&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; asyncFactory, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FromEvent&lt;/strong&gt;(&lt;code&gt;Action&amp;lt;Action&amp;gt;&lt;/code&gt; addHandler, &lt;code&gt;Action&amp;lt;Action&amp;gt;&lt;/code&gt; removeHandler, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FromEvent&lt;/strong&gt;(&lt;code&gt;Action&amp;lt;Action&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; addHandler, &lt;code&gt;Action&amp;lt;Action&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; removeHandler, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FromEvent&lt;/strong&gt;(&lt;code&gt;Func&amp;lt;Action, TDelegate&amp;gt;&lt;/code&gt; conversion, &lt;code&gt;Action&amp;lt;TDelegate&amp;gt;&lt;/code&gt; addHandler, &lt;code&gt;Action&amp;lt;TDelegate&amp;gt;&lt;/code&gt; removeHandler, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FromEvent&lt;/strong&gt;(&lt;code&gt;Func&amp;lt;Action&amp;lt;T&amp;gt;, TDelegate&amp;gt;&lt;/code&gt; conversion, &lt;code&gt;Action&amp;lt;TDelegate&amp;gt;&lt;/code&gt; addHandler, &lt;code&gt;Action&amp;lt;TDelegate&amp;gt;&lt;/code&gt; removeHandler, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FromEventHandler&lt;/strong&gt;(&lt;code&gt;Action&amp;lt;EventHandler&amp;gt;&lt;/code&gt; addHandler, &lt;code&gt;Action&amp;lt;EventHandler&amp;gt;&lt;/code&gt; removeHandler, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Object, EventArgs&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FromEventHandler&lt;/strong&gt;(&lt;code&gt;Action&amp;lt;EventHandler&amp;lt;TEventArgs&amp;gt;&amp;gt;&lt;/code&gt; addHandler, &lt;code&gt;Action&amp;lt;EventHandler&amp;lt;TEventArgs&amp;gt;&amp;gt;&lt;/code&gt; removeHandler, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Object, TEventArgs&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Interval&lt;/strong&gt;(&lt;code&gt;TimeSpan&lt;/code&gt; period, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Interval&lt;/strong&gt;(&lt;code&gt;TimeSpan&lt;/code&gt; period, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;IntervalFrame&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; periodFrame, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;IntervalFrame&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; periodFrame, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge&lt;/strong&gt;(params &lt;code&gt;Observable&amp;lt;T&amp;gt;[]&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge&lt;/strong&gt;(this &lt;code&gt;IEnumerable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Never&lt;/strong&gt;()&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;NextFrame&lt;/strong&gt;(&lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;NextFrame&lt;/strong&gt;(&lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObservePropertyChanged&lt;/strong&gt;(this &lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Func&amp;lt;T, TProperty&amp;gt;&lt;/code&gt; propertySelector, &lt;code&gt;Boolean&lt;/code&gt; pushCurrentValueOnSubscribe = true, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default, &lt;code&gt;String&lt;/code&gt; expr = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObservePropertyChanged&lt;/strong&gt;(this &lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Func&amp;lt;T, TProperty1&amp;gt;&lt;/code&gt; propertySelector1, &lt;code&gt;Func&amp;lt;TProperty1, TProperty2&amp;gt;&lt;/code&gt; propertySelector2, &lt;code&gt;Boolean&lt;/code&gt; pushCurrentValueOnSubscribe = true, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default, &lt;code&gt;String&lt;/code&gt; propertySelector1Expr = default, &lt;code&gt;String&lt;/code&gt; propertySelector2Expr = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty2&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObservePropertyChanged&lt;/strong&gt;(this &lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Func&amp;lt;T, TProperty1&amp;gt;&lt;/code&gt; propertySelector1, &lt;code&gt;Func&amp;lt;TProperty1, TProperty2&amp;gt;&lt;/code&gt; propertySelector2, &lt;code&gt;Func&amp;lt;TProperty2, TProperty3&amp;gt;&lt;/code&gt; propertySelector3, &lt;code&gt;Boolean&lt;/code&gt; pushCurrentValueOnSubscribe = true, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default, &lt;code&gt;String&lt;/code&gt; propertySelector1Expr = default, &lt;code&gt;String&lt;/code&gt; propertySelector2Expr = default, &lt;code&gt;String&lt;/code&gt; propertySelector3Expr = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty3&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObservePropertyChanging&lt;/strong&gt;(this &lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Func&amp;lt;T, TProperty&amp;gt;&lt;/code&gt; propertySelector, &lt;code&gt;Boolean&lt;/code&gt; pushCurrentValueOnSubscribe = true, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default, &lt;code&gt;String&lt;/code&gt; expr = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObservePropertyChanging&lt;/strong&gt;(this &lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Func&amp;lt;T, TProperty1&amp;gt;&lt;/code&gt; propertySelector1, &lt;code&gt;Func&amp;lt;TProperty1, TProperty2&amp;gt;&lt;/code&gt; propertySelector2, &lt;code&gt;Boolean&lt;/code&gt; pushCurrentValueOnSubscribe = true, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default, &lt;code&gt;String&lt;/code&gt; propertySelector1Expr = default, &lt;code&gt;String&lt;/code&gt; propertySelector2Expr = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty2&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObservePropertyChanging&lt;/strong&gt;(this &lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Func&amp;lt;T, TProperty1&amp;gt;&lt;/code&gt; propertySelector1, &lt;code&gt;Func&amp;lt;TProperty1, TProperty2&amp;gt;&lt;/code&gt; propertySelector2, &lt;code&gt;Func&amp;lt;TProperty2, TProperty3&amp;gt;&lt;/code&gt; propertySelector3, &lt;code&gt;Boolean&lt;/code&gt; pushCurrentValueOnSubscribe = true, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default, &lt;code&gt;String&lt;/code&gt; propertySelector1Expr = default, &lt;code&gt;String&lt;/code&gt; propertySelector2Expr = default, &lt;code&gt;String&lt;/code&gt; propertySelector3Expr = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TProperty3&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Race&lt;/strong&gt;(params &lt;code&gt;Observable&amp;lt;T&amp;gt;[]&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Race&lt;/strong&gt;(&lt;code&gt;IEnumerable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Range&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; start, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Int32&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Range&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; start, &lt;code&gt;Int32&lt;/code&gt; count, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Int32&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Repeat&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Repeat&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Int32&lt;/code&gt; count, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Return&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Return&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Return&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Return&lt;/strong&gt;(&lt;code&gt;Unit&lt;/code&gt; value)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Return&lt;/strong&gt;(&lt;code&gt;Boolean&lt;/code&gt; value)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Return&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; value)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Int32&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReturnFrame&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReturnFrame&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReturnFrame&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Int32&lt;/code&gt; dueTimeFrame, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReturnFrame&lt;/strong&gt;(&lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;Int32&lt;/code&gt; dueTimeFrame, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReturnOnCompleted&lt;/strong&gt;(&lt;code&gt;Result&lt;/code&gt; result)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReturnOnCompleted&lt;/strong&gt;(&lt;code&gt;Result&lt;/code&gt; result, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReturnOnCompleted&lt;/strong&gt;(&lt;code&gt;Result&lt;/code&gt; result, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReturnUnit&lt;/strong&gt;()&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Throw&lt;/strong&gt;(&lt;code&gt;Exception&lt;/code&gt; exception)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Throw&lt;/strong&gt;(&lt;code&gt;Exception&lt;/code&gt; exception, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Throw&lt;/strong&gt;(&lt;code&gt;Exception&lt;/code&gt; exception, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timer&lt;/strong&gt;(&lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timer&lt;/strong&gt;(&lt;code&gt;DateTimeOffset&lt;/code&gt; dueTime, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timer&lt;/strong&gt;(&lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeSpan&lt;/code&gt; period, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timer&lt;/strong&gt;(&lt;code&gt;DateTimeOffset&lt;/code&gt; dueTime, &lt;code&gt;TimeSpan&lt;/code&gt; period, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timer&lt;/strong&gt;(&lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timer&lt;/strong&gt;(&lt;code&gt;DateTimeOffset&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timer&lt;/strong&gt;(&lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeSpan&lt;/code&gt; period, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timer&lt;/strong&gt;(&lt;code&gt;DateTimeOffset&lt;/code&gt; dueTime, &lt;code&gt;TimeSpan&lt;/code&gt; period, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TimerFrame&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; dueTimeFrame, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TimerFrame&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; dueTimeFrame, &lt;code&gt;Int32&lt;/code&gt; periodFrame, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TimerFrame&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; dueTimeFrame, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TimerFrame&lt;/strong&gt;(&lt;code&gt;Int32&lt;/code&gt; dueTimeFrame, &lt;code&gt;Int32&lt;/code&gt; periodFrame, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToObservable&lt;/strong&gt;(this &lt;code&gt;Task&lt;/code&gt; task, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToObservable&lt;/strong&gt;(this &lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt; task, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToObservable&lt;/strong&gt;(this &lt;code&gt;ValueTask&lt;/code&gt; task, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToObservable&lt;/strong&gt;(this &lt;code&gt;ValueTask&amp;lt;T&amp;gt;&lt;/code&gt; task, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToObservable&lt;/strong&gt;(this &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToObservable&lt;/strong&gt;(this &lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToObservable&lt;/strong&gt;(this &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Yield&lt;/strong&gt;(&lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Yield&lt;/strong&gt;(&lt;code&gt;TimeProvider&lt;/code&gt; timeProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;YieldFrame&lt;/strong&gt;(&lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;YieldFrame&lt;/strong&gt;(&lt;code&gt;FrameProvider&lt;/code&gt; frameProvider, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(params &lt;code&gt;Observable&amp;lt;T&amp;gt;[]&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(&lt;code&gt;IEnumerable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Func&amp;lt;T1, T2, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Func&amp;lt;T1, T2, T3, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Observable&amp;lt;T14&amp;gt;&lt;/code&gt; source14, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Observable&amp;lt;T14&amp;gt;&lt;/code&gt; source14, &lt;code&gt;Observable&amp;lt;T15&amp;gt;&lt;/code&gt; source15, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(params &lt;code&gt;Observable&amp;lt;T&amp;gt;[]&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(&lt;code&gt;IEnumerable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Func&amp;lt;T1, T2, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Func&amp;lt;T1, T2, T3, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Observable&amp;lt;T14&amp;gt;&lt;/code&gt; source14, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ZipLatest&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T1&amp;gt;&lt;/code&gt; source1, &lt;code&gt;Observable&amp;lt;T2&amp;gt;&lt;/code&gt; source2, &lt;code&gt;Observable&amp;lt;T3&amp;gt;&lt;/code&gt; source3, &lt;code&gt;Observable&amp;lt;T4&amp;gt;&lt;/code&gt; source4, &lt;code&gt;Observable&amp;lt;T5&amp;gt;&lt;/code&gt; source5, &lt;code&gt;Observable&amp;lt;T6&amp;gt;&lt;/code&gt; source6, &lt;code&gt;Observable&amp;lt;T7&amp;gt;&lt;/code&gt; source7, &lt;code&gt;Observable&amp;lt;T8&amp;gt;&lt;/code&gt; source8, &lt;code&gt;Observable&amp;lt;T9&amp;gt;&lt;/code&gt; source9, &lt;code&gt;Observable&amp;lt;T10&amp;gt;&lt;/code&gt; source10, &lt;code&gt;Observable&amp;lt;T11&amp;gt;&lt;/code&gt; source11, &lt;code&gt;Observable&amp;lt;T12&amp;gt;&lt;/code&gt; source12, &lt;code&gt;Observable&amp;lt;T13&amp;gt;&lt;/code&gt; source13, &lt;code&gt;Observable&amp;lt;T14&amp;gt;&lt;/code&gt; source14, &lt;code&gt;Observable&amp;lt;T15&amp;gt;&lt;/code&gt; source15, &lt;code&gt;Func&amp;lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Methods that accept a &lt;code&gt;CancellationToken&lt;/code&gt; will emit &lt;code&gt;OnCompleted&lt;/code&gt; when a Cancel is issued. This allows you to unsubscribe all subscriptions from the event source.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Range&lt;/code&gt;, &lt;code&gt;Repeat&lt;/code&gt;, &lt;code&gt;Return/Empty/Throw&lt;/code&gt; (which do not take a &lt;code&gt;TimeProvider&lt;/code&gt;) issue values immediately. This means that even if disposed of midway, the emission of values cannot be stopped. For example,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Observable.Range(0, int.MaxValue)
    .Do(onNext: x =&amp;gt; Console.WriteLine($&quot;Do:{x}&quot;))
    .Take(10)
    .Subscribe(x =&amp;gt; Console.WriteLine($&quot;Subscribe:{x}&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this case, since the disposal of &lt;code&gt;Take(10)&lt;/code&gt; is conveyed after the emission of &lt;code&gt;Range&lt;/code&gt;, the stream does not stop. In dotnet/reactive, this could be avoided by specifying &lt;code&gt;CurrentThreadScheduler&lt;/code&gt;, but it was not adopted in R3 due to a significant performance decrease.&lt;/p&gt; 
&lt;p&gt;If you want to avoid such cases, you can stop the Range by conveying a cancellation command through a &lt;code&gt;CancellationToken&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();

Observable.Range(0, int.MaxValue, cts.Token)
    .Do(onNext: x =&amp;gt; Console.WriteLine($&quot;Do:{x}&quot;))
    .Take(10)
    .DoCancelOnCompleted(cts)
    .Subscribe(x =&amp;gt; Console.WriteLine($&quot;Subscribe:{x}&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Among our custom frame-based methods, &lt;code&gt;EveryUpdate&lt;/code&gt; emits values every frame. &lt;code&gt;Yield&lt;/code&gt; and &lt;code&gt;NextFrame&lt;/code&gt; are similar, but &lt;code&gt;Yield&lt;/code&gt; emits on the first frame loop after subscribing, while &lt;code&gt;NextFrame&lt;/code&gt; delays emission to the next frame if it&#39;s in the same frame as the &lt;code&gt;FrameProvider.GetFrameCount()&lt;/code&gt; value obtained at the time of subscription. &lt;code&gt;EveryValueChanged&lt;/code&gt; compares values every frame and notifies when there is a change.&lt;/p&gt; 
&lt;h3&gt;Operator&lt;/h3&gt; 
&lt;p&gt;Operator methods are defined as extension methods to &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; in the static class &lt;code&gt;ObservableExtensions&lt;/code&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name(Parameter)&lt;/th&gt; 
   &lt;th&gt;ReturnType&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AggregateAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, T, T&amp;gt;&lt;/code&gt; func, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AggregateAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TResult&lt;/code&gt; seed, &lt;code&gt;Func&amp;lt;TResult, T, TResult&amp;gt;&lt;/code&gt; func, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AggregateAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TAccumulate&lt;/code&gt; seed, &lt;code&gt;Func&amp;lt;TAccumulate, T, TAccumulate&amp;gt;&lt;/code&gt; func, &lt;code&gt;Func&amp;lt;TAccumulate, TResult&amp;gt;&lt;/code&gt; resultSelector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AggregateByAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;TAccumulate&lt;/code&gt; seed, &lt;code&gt;Func&amp;lt;TAccumulate, TSource, TAccumulate&amp;gt;&lt;/code&gt; func, &lt;code&gt;IEqualityComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; keyComparer = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;IEnumerable&amp;lt;KeyValuePair&amp;lt;TKey, TAccumulate&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AggregateByAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;Func&amp;lt;TKey, TAccumulate&amp;gt;&lt;/code&gt; seedSelector, &lt;code&gt;Func&amp;lt;TAccumulate, TSource, TAccumulate&amp;gt;&lt;/code&gt; func, &lt;code&gt;IEqualityComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; keyComparer = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;IEnumerable&amp;lt;KeyValuePair&amp;lt;TKey, TAccumulate&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AllAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AnyAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AnyAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Append&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; value)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Append&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Append&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T&amp;gt;&lt;/code&gt; valueFactory)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Append&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;TState, T&amp;gt;&lt;/code&gt; valueFactory)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AsObservable&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AsSystemObservable&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AsUnitObservable&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Int32&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Int32&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Int64&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Int64&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Single&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Single&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Double&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Double&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Decimal&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Decimal&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AverageAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TResult&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Cast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Catch&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; second)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Catch&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TException, Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; errorHandler)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; count, &lt;code&gt;Int32&lt;/code&gt; skip)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan, &lt;code&gt;Int32&lt;/code&gt; count, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;TWindowBoundary&amp;gt;&lt;/code&gt; windowBoundaries)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TSource[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Chunk&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; asyncWindow, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ChunkFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ChunkFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ChunkFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ChunkFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ChunkFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;Int32&lt;/code&gt; count, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ChunkUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ChunkUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Int32, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Concat&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; second)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ContainsAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ContainsAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; value, &lt;code&gt;IEqualityComparer&amp;lt;T&amp;gt;&lt;/code&gt; equalityComparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CountAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Int32&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CountAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Int32&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Debounce&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Debounce&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Debounce&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; throttleDurationSelector, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DebounceFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DebounceFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DefaultIfEmpty&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DefaultIfEmpty&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; defaultValue)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Delay&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Delay&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DelayFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DelayFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DelaySubscription&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DelaySubscription&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DelaySubscriptionFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DelaySubscriptionFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Dematerialize&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Notification&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Distinct&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Distinct&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;IEqualityComparer&amp;lt;T&amp;gt;&lt;/code&gt; comparer)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DistinctBy&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TKey&amp;gt;&lt;/code&gt; keySelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DistinctBy&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;IEqualityComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; comparer)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DistinctUntilChanged&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DistinctUntilChanged&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;IEqualityComparer&amp;lt;T&amp;gt;&lt;/code&gt; comparer)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DistinctUntilChangedBy&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DistinctUntilChangedBy&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;IEqualityComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; comparer)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Do&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Action&amp;lt;T&amp;gt;&lt;/code&gt; onNext = default, &lt;code&gt;Action&amp;lt;Exception&amp;gt;&lt;/code&gt; onErrorResume = default, &lt;code&gt;Action&amp;lt;Result&amp;gt;&lt;/code&gt; onCompleted = default, &lt;code&gt;Action&lt;/code&gt; onDispose = default, &lt;code&gt;Action&lt;/code&gt; onSubscribe = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Do&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Action&amp;lt;T, TState&amp;gt;&lt;/code&gt; onNext = default, &lt;code&gt;Action&amp;lt;Exception, TState&amp;gt;&lt;/code&gt; onErrorResume = default, &lt;code&gt;Action&amp;lt;Result, TState&amp;gt;&lt;/code&gt; onCompleted = default, &lt;code&gt;Action&amp;lt;TState&amp;gt;&lt;/code&gt; onDispose = default, &lt;code&gt;Action&amp;lt;TState&amp;gt;&lt;/code&gt; onSubscribe = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DoCancelOnCompleted&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationTokenSource&lt;/code&gt; cancellationTokenSource)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ElementAtAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; index, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ElementAtAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Index&lt;/code&gt; index, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ElementAtOrDefaultAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; index, &lt;code&gt;T&lt;/code&gt; defaultValue = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ElementAtOrDefaultAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Index&lt;/code&gt; index, &lt;code&gt;T&lt;/code&gt; defaultValue = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FirstAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FirstAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FirstOrDefaultAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; defaultValue = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FirstOrDefaultAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;T&lt;/code&gt; defaultValue = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ForEachAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Action&amp;lt;T&amp;gt;&lt;/code&gt; action, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ForEachAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Action&amp;lt;T, Int32&amp;gt;&lt;/code&gt; action, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FrameCount&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Int64, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FrameCount&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Int64, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FrameInterval&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Int64, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FrameInterval&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Int64, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;IgnoreElements&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;IgnoreElements&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Action&amp;lt;T&amp;gt;&lt;/code&gt; doOnNext)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;IgnoreOnErrorResume&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;IgnoreOnErrorResume&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Action&amp;lt;Exception&amp;gt;&lt;/code&gt; doOnErrorResume)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Index&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Unit&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Int32&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Index&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Int32, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;IsEmptyAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LastAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LastAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LastOrDefaultAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; defaultValue = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LastOrDefaultAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;T&lt;/code&gt; defaultValue = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LongCountAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Int64&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LongCountAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Int64&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Materialize&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;Notification&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MaxAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MaxAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;IComparer&amp;lt;T&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MaxAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TResult&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MaxAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TResult&amp;gt;&lt;/code&gt; selector, &lt;code&gt;IComparer&amp;lt;TResult&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MaxByAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MaxByAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;IComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; second)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;IComparer&amp;lt;T&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TResult&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TResult&amp;gt;&lt;/code&gt; selector, &lt;code&gt;IComparer&amp;lt;TResult&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinByAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinByAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;IComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinMaxAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;ValueTuple&amp;lt;T, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinMaxAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;IComparer&amp;lt;T&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;ValueTuple&amp;lt;T, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinMaxAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TResult&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;ValueTuple&amp;lt;TResult, TResult&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MinMaxAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TResult&amp;gt;&lt;/code&gt; selector, &lt;code&gt;IComparer&amp;lt;TResult&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;ValueTuple&amp;lt;TResult, TResult&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Multicast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;ISubject&amp;lt;T&amp;gt;&lt;/code&gt; subject)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObserveOn&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;SynchronizationContext&lt;/code&gt; synchronizationContext)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObserveOn&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObserveOn&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObserveOnCurrentSynchronizationContext&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ObserveOnThreadPool&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;OfType&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;OnErrorResumeAsFailure&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Pairwise&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;T, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Prepend&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; value)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Prepend&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Prepend&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T&amp;gt;&lt;/code&gt; valueFactory)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Prepend&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;TState, T&amp;gt;&lt;/code&gt; valueFactory)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Publish&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Publish&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; initialValue)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Race&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; second)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;RefCount&lt;/strong&gt;(this &lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Replay&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Replay&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; bufferSize)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Replay&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; window)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Replay&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; window, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Replay&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; bufferSize, &lt;code&gt;TimeSpan&lt;/code&gt; window)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Replay&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; bufferSize, &lt;code&gt;TimeSpan&lt;/code&gt; window, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReplayFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; window)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReplayFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; window, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReplayFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; bufferSize, &lt;code&gt;Int32&lt;/code&gt; window)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ReplayFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; bufferSize, &lt;code&gt;Int32&lt;/code&gt; window, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ConnectableObservable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Scan&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TSource, TSource&amp;gt;&lt;/code&gt; accumulator)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Scan&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;TAccumulate&lt;/code&gt; seed, &lt;code&gt;Func&amp;lt;TAccumulate, TSource, TAccumulate&amp;gt;&lt;/code&gt; accumulator)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TAccumulate&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Select&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TResult&amp;gt;&lt;/code&gt; selector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Select&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Int32, TResult&amp;gt;&lt;/code&gt; selector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Select&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;T, TState, TResult&amp;gt;&lt;/code&gt; selector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Select&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;T, Int32, TState, TResult&amp;gt;&lt;/code&gt; selector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SelectAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;lt;TResult&amp;gt;&amp;gt;&lt;/code&gt; selector, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true, &lt;code&gt;Boolean&lt;/code&gt; cancelOnCompleted = false, &lt;code&gt;Int32&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SelectMany&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Observable&amp;lt;TResult&amp;gt;&amp;gt;&lt;/code&gt; selector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SelectMany&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Observable&amp;lt;TCollection&amp;gt;&amp;gt;&lt;/code&gt; collectionSelector, &lt;code&gt;Func&amp;lt;TSource, TCollection, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SelectMany&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Int32, Observable&amp;lt;TResult&amp;gt;&amp;gt;&lt;/code&gt; selector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SelectMany&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Int32, Observable&amp;lt;TCollection&amp;gt;&amp;gt;&lt;/code&gt; collectionSelector, &lt;code&gt;Func&amp;lt;TSource, Int32, TCollection, Int32, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SequenceEqualAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; second, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SequenceEqualAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; second, &lt;code&gt;IEqualityComparer&amp;lt;T&amp;gt;&lt;/code&gt; equalityComparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Boolean&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Share&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SingleAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SingleAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SingleOrDefaultAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;T&lt;/code&gt; defaultValue = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SingleOrDefaultAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;T&lt;/code&gt; defaultValue = default, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Skip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Skip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; duration)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Skip&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; duration, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; duration)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; duration, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipLastFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipLastFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;TOther&amp;gt;&lt;/code&gt; other)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Task&lt;/code&gt; task, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; asyncFunc, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipWhile&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SkipWhile&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Int32, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true, &lt;code&gt;Boolean&lt;/code&gt; cancelOnCompleted = false, &lt;code&gt;Int32&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;Action&amp;lt;Result&amp;gt;&lt;/code&gt; onCompleted, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true, &lt;code&gt;Boolean&lt;/code&gt; cancelOnCompleted = false, &lt;code&gt;Int32&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;Action&amp;lt;Exception&amp;gt;&lt;/code&gt; onErrorResume, &lt;code&gt;Action&amp;lt;Result&amp;gt;&lt;/code&gt; onCompleted, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true, &lt;code&gt;Boolean&lt;/code&gt; cancelOnCompleted = false, &lt;code&gt;Int32&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;T, TState, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true, &lt;code&gt;Boolean&lt;/code&gt; cancelOnCompleted = false, &lt;code&gt;Int32&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;T, TState, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;Action&amp;lt;Result, TState&amp;gt;&lt;/code&gt; onCompleted, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true, &lt;code&gt;Boolean&lt;/code&gt; cancelOnCompleted = false, &lt;code&gt;Int32&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;T, TState, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; onNextAsync, &lt;code&gt;Action&amp;lt;Exception, TState&amp;gt;&lt;/code&gt; onErrorResume, &lt;code&gt;Action&amp;lt;Result, TState&amp;gt;&lt;/code&gt; onCompleted, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true, &lt;code&gt;Boolean&lt;/code&gt; cancelOnCompleted = false, &lt;code&gt;Int32&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeOn&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;SynchronizationContext&lt;/code&gt; synchronizationContext)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeOn&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeOn&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeOnCurrentSynchronizationContext&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeOnSynchronize&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Object&lt;/code&gt; gate, &lt;code&gt;Boolean&lt;/code&gt; rawObserver = false)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SubscribeOnThreadPool&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Int32&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Int32&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Int32&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Int32&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Int64&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Int64&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Int64&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Int64&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Single&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Single&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Single&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Single&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Double&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Double&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Double&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Decimal&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Decimal&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, Decimal&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Decimal&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;SumAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TSource&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;TSource, TResult&amp;gt;&lt;/code&gt; selector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Switch&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;Observable&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; sources)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Synchronize&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Synchronize&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Object&lt;/code&gt; gate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Take&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Take&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; duration)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Take&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; duration, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; count)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; duration)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; duration, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeLastFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeLastFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;TOther&amp;gt;&lt;/code&gt; other)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Task&lt;/code&gt; task, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; asyncFunc, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeUntil&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Int32, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeWhile&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TakeWhile&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Int32, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirst&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirst&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirst&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;TSample&amp;gt;&lt;/code&gt; sampler)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirst&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; sampler, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;TSample&amp;gt;&lt;/code&gt; sampler)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; sampler, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstLastFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleFirstLastFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; timeSpan, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Observable&amp;lt;TSample&amp;gt;&lt;/code&gt; sampler)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleLast&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;gt;&lt;/code&gt; sampler, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleLastFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ThrottleLastFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TimeInterval&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;TimeSpan, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TimeInterval&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;TimeSpan, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timeout&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timeout&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeSpan&lt;/code&gt; dueTime, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TimeoutFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TimeoutFrame&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; frameCount, &lt;code&gt;FrameProvider&lt;/code&gt; frameProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timestamp&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Int64, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Timestamp&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TimeProvider&lt;/code&gt; timeProvider)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;ValueTuple&amp;lt;Int64, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToArrayAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T[]&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToAsyncEnumerable&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToDictionaryAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Dictionary&amp;lt;TKey, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToDictionaryAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;IEqualityComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; keyComparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Dictionary&amp;lt;TKey, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToDictionaryAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;Func&amp;lt;T, TElement&amp;gt;&lt;/code&gt; elementSelector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Dictionary&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToDictionaryAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;Func&amp;lt;T, TElement&amp;gt;&lt;/code&gt; elementSelector, &lt;code&gt;IEqualityComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; keyComparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;Dictionary&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToHashSetAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;HashSet&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToHashSetAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;IEqualityComparer&amp;lt;T&amp;gt;&lt;/code&gt; comparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;HashSet&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToListAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToLiveList&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LiveList&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToLiveList&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Int32&lt;/code&gt; bufferSize)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LiveList&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToLookupAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;ILookup&amp;lt;TKey, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToLookupAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;IEqualityComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; keyComparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;ILookup&amp;lt;TKey, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToLookupAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;Func&amp;lt;T, TElement&amp;gt;&lt;/code&gt; elementSelector, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;ILookup&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ToLookupAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, TKey&amp;gt;&lt;/code&gt; keySelector, &lt;code&gt;Func&amp;lt;T, TElement&amp;gt;&lt;/code&gt; elementSelector, &lt;code&gt;IEqualityComparer&amp;lt;TKey&amp;gt;&lt;/code&gt; keyComparer, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;ILookup&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Trampoline&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WaitAsync&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;CancellationToken&lt;/code&gt; cancellationToken = default)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Where&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Where&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, Int32, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Where&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;T, TState, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Where&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;TState&lt;/code&gt; state, &lt;code&gt;Func&amp;lt;T, Int32, TState, Boolean&amp;gt;&lt;/code&gt; predicate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhereAwait&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; source, &lt;code&gt;Func&amp;lt;T, CancellationToken, ValueTask&amp;lt;Boolean&amp;gt;&amp;gt;&lt;/code&gt; predicate, &lt;code&gt;AwaitOperation&lt;/code&gt; awaitOperation = AwaitOperation.Sequential, &lt;code&gt;Boolean&lt;/code&gt; configureAwait = true, &lt;code&gt;Boolean&lt;/code&gt; cancelOnCompleted = false, &lt;code&gt;Int32&lt;/code&gt; maxConcurrent = -1)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhereNotNull&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt; source)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WithLatestFrom&lt;/strong&gt;(this &lt;code&gt;Observable&amp;lt;TFirst&amp;gt;&lt;/code&gt; first, &lt;code&gt;Observable&amp;lt;TSecond&amp;gt;&lt;/code&gt; second, &lt;code&gt;Func&amp;lt;TFirst, TSecond, TResult&amp;gt;&lt;/code&gt; resultSelector)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&amp;lt;TResult&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;In dotnet/reactive, methods that return a single &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt; (such as &lt;code&gt;First&lt;/code&gt;) are all provided only as &lt;code&gt;***Async&lt;/code&gt;, returning &lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;. Additionally, to align with the naming of Enumerable, &lt;code&gt;Buffer&lt;/code&gt; has been changed to &lt;code&gt;Chunk&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Throttle&lt;/code&gt; has been changed to &lt;code&gt;Debounce&lt;/code&gt;, and &lt;code&gt;Sample&lt;/code&gt; has been changed to &lt;code&gt;ThrottleLast&lt;/code&gt;. Originally in dotnet/reactive, there were only &lt;code&gt;Throttle&lt;/code&gt; and &lt;code&gt;Sample&lt;/code&gt;. But &lt;code&gt;Sample&lt;/code&gt; needs both first and last, and many Rx libraries defined it as &lt;code&gt;ThrottleFirst&lt;/code&gt;, the behavior of &lt;code&gt;ThrottleFirst&lt;/code&gt; is similar to &lt;code&gt;Sample&lt;/code&gt; (which is &lt;code&gt;ThrottleLast&lt;/code&gt;), whereas &lt;code&gt;Throttle&lt;/code&gt; has a completely different behavior. Therefore, &lt;code&gt;Throttle&lt;/code&gt; was changed to the more commonly used &lt;code&gt;Debounce&lt;/code&gt;, and &lt;code&gt;Sample&lt;/code&gt; was changed to &lt;code&gt;ThrottleLast&lt;/code&gt; for symmetry with &lt;code&gt;ThrottleFirst&lt;/code&gt;. Additionally, I am opposed to keeping &lt;code&gt;Sample&lt;/code&gt; as an alias for &lt;code&gt;ThrottleLast&lt;/code&gt;. As a result of such methods being maintained, other libraries often receive questions like &quot;What is the difference between &lt;code&gt;ThrottleLast&lt;/code&gt; and &lt;code&gt;Sample&lt;/code&gt;?&quot;&lt;/p&gt; 
&lt;h2&gt;Class/Method name changes from dotnet/reactive and neuecc/UniRx&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Amb&lt;/code&gt; -&amp;gt; &lt;code&gt;Race&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Buffer&lt;/code&gt; -&amp;gt; &lt;code&gt;Chunk&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BatchFrame&lt;/code&gt; -&amp;gt; &lt;code&gt;ChunkFrame&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Throttle&lt;/code&gt; -&amp;gt; &lt;code&gt;Debounce&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ThrottleFrame&lt;/code&gt; -&amp;gt; &lt;code&gt;DebounceFrame&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Sample&lt;/code&gt; -&amp;gt; &lt;code&gt;ThrottleLast&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SampleFrame&lt;/code&gt; -&amp;gt; &lt;code&gt;ThrottleLastFrame&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;StartWith&lt;/code&gt; -&amp;gt; &lt;code&gt;Prepend&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ObserveEveryValueChanged(this T value)&lt;/code&gt; -&amp;gt; &lt;code&gt;Observable.EveryValueChanged(T value)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Distinct(selector)&lt;/code&gt; -&amp;gt; &lt;code&gt;DistinctBy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DistinctUntilChanged(selector)&lt;/code&gt; -&amp;gt; &lt;code&gt;DistinctUntilChangedBy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Finally&lt;/code&gt; -&amp;gt; &lt;code&gt;Do(onDisposed:)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Do***&lt;/code&gt; -&amp;gt; &lt;code&gt;Do(on***:)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AsyncSubject&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;StableCompositeDisposable&lt;/code&gt; -&amp;gt; &lt;code&gt;Disposable.Combine&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IScheduler&lt;/code&gt; -&amp;gt; &lt;code&gt;TimeProvider&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Return single value methods -&amp;gt; &lt;code&gt;***Async&lt;/code&gt; (or &lt;code&gt;Take(1)&lt;/code&gt;, &lt;code&gt;TakeLast(1)&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ToTask()&lt;/code&gt;, &lt;code&gt;ToUniTask()&lt;/code&gt; -&amp;gt; &lt;code&gt;LastAsync()&lt;/code&gt; or &lt;code&gt;FirstAsync()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IReadOnlyReactiveProperty.Value&lt;/code&gt; -&amp;gt; &lt;code&gt;ReadOnlyReactiveProperty.CurrentValue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReactiveProperty.SkipLatestValueOnSubscribe()&lt;/code&gt; → &lt;code&gt;.Skip(1)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MainThreadDispatcher.OnApplicationQuitAsObservable&lt;/code&gt; → &lt;code&gt;Application.exitCancellationToken&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReactiveCollection&lt;/code&gt; / &lt;code&gt;ReactiveDictionary&lt;/code&gt; -&amp;gt; &lt;a href=&quot;https://github.com/Cysharp/ObservableCollections&quot;&gt;ObservableCollections.R3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ObjectPool&lt;/code&gt; in UniRx -&amp;gt; use &lt;a href=&quot;https://github.com/Cysharp/UniTask&quot;&gt;UniTask&lt;/a&gt; and make yourself&lt;/li&gt; 
 &lt;li&gt;MessageBroker in UniRx -&amp;gt; &lt;a href=&quot;https://github.com/Cysharp/MessagePipe&quot;&gt;MessagePipe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Logger in UniRx -&amp;gt; &lt;a href=&quot;https://github.com/Cysharp/ZLogger/&quot;&gt;ZLogger&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Similar to &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;, if you want to stop the stream when an &lt;code&gt;OnErrorResume&lt;/code&gt; occurs, you connect &lt;code&gt;OnErrorResumeAsFailure&lt;/code&gt; in the method chain.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aras-p/UnityGaussianSplatting</title>
      <link>https://github.com/aras-p/UnityGaussianSplatting</link>
      <description>&lt;p&gt;Toy Gaussian Splatting visualization in Unity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gaussian Splatting playground in Unity&lt;/h1&gt; 
&lt;p&gt;SIGGRAPH 2023 had a paper &quot;&lt;a href=&quot;https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/&quot;&gt;&lt;strong&gt;3D Gaussian Splatting for Real-Time Radiance Field Rendering&lt;/strong&gt;&lt;/a&gt;&quot; by Kerbl, Kopanas, Leimkühler, Drettakis that is really cool! Check out their website, source code repository, data sets and so on. I&#39;ve decided to try to implement the realtime visualization part (i.e. the one that takes already-produced gaussian splat &quot;model&quot; file) in Unity.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/Images/shotOverview.jpg?raw=true&quot; alt=&quot;Screenshot&quot; title=&quot;Screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Everything in this repository is based on that &quot;OG&quot; gaussian splatting paper. Towards end of 2023, there&#39;s a ton of &lt;a href=&quot;https://github.com/MrNeRF/awesome-3D-gaussian-splatting&quot;&gt;new gaussian splatting research&lt;/a&gt; coming out; &lt;em&gt;none&lt;/em&gt; of that is in this project.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Status as of 2023 December: I&#39;m not planning any significant further developments.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; The only platforms where this is known to work are the ones that use D3D12, Metal or Vulkan graphics APIs. PC (Windows on D3D12 or Vulkan), Mac (Metal), Linux (Vulkan) should work. Anything else I have not actually tested; it might work or it might not.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Some virtual reality devices work (reportedly HTC Vive, Varjo Aero, Quest 3 and Quest Pro). Some others might not work, e.g. Apple Vision Pro. See &lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/17&quot;&gt;#17&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Anything using OpenGL or OpenGL ES: &lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/26&quot;&gt;#26&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WebGPU might work someday, but seems that today it does not quite have all the required graphics features yet: &lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/65&quot;&gt;#65&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mobile may or might not work. Some iOS devices definitely do not work (&lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/72&quot;&gt;#72&lt;/a&gt;), some Androids do not work either (&lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/issues/112&quot;&gt;#112&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Download or clone this repository, open &lt;code&gt;projects/GaussianExample&lt;/code&gt; as a Unity project (I use Unity 2022.3, other versions might also work), and open &lt;code&gt;GSTestScene&lt;/code&gt; scene in there.&lt;/p&gt; 
&lt;p&gt;Note that the project requires DX12 or Vulkan on Windows, i.e. &lt;strong&gt;DX11 will not work&lt;/strong&gt;. This is &lt;strong&gt;not tested at all on mobile/web&lt;/strong&gt;, and probably does not work there.&lt;/p&gt; 
&lt;img align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/Images/shotAssetCreator.png&quot; width=&quot;250px&quot;&gt; 
&lt;p&gt;Next up, &lt;strong&gt;create some GaussianSplat assets&lt;/strong&gt;: open &lt;code&gt;Tools -&amp;gt; Gaussian Splats -&amp;gt; Create GaussianSplatAsset&lt;/code&gt; menu within Unity. In the dialog, point &lt;code&gt;Input PLY/SPZ File&lt;/code&gt; to your Gaussian Splat file. Currently two file formats are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;PLY format from the original 3DGS paper (in the official paper models, the correct files are under &lt;code&gt;point_cloud/iteration_*/point_cloud.ply&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scaniverse.com/spz&quot;&gt;Scaniverse SPZ&lt;/a&gt; format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optionally there can be &lt;code&gt;cameras.json&lt;/code&gt; next to it or somewhere in parent folders.&lt;/p&gt; 
&lt;p&gt;Pick desired compression options and output folder, and press &quot;Create Asset&quot; button. The compression even at &quot;very low&quot; quality setting is decently usable, e.g. this capture at Very Low preset is under 8MB of total size (click to see the video): &lt;br&gt; &lt;a href=&quot;https://youtu.be/iccfV0YlWVI&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/iccfV0YlWVI/0.jpg&quot; alt=&quot;Watch the video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If everything was fine, there should be a GaussianSplat asset that has several data files next to it.&lt;/p&gt; 
&lt;p&gt;Since the gaussian splat models are quite large, I have not included any in this Github repo. The original &lt;a href=&quot;https://github.com/graphdeco-inria/gaussian-splatting&quot;&gt;paper github page&lt;/a&gt; has a a link to &lt;a href=&quot;https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/datasets/pretrained/models.zip&quot;&gt;14GB zip&lt;/a&gt; of their models.&lt;/p&gt; 
&lt;p&gt;In the game object that has a &lt;code&gt;GaussianSplatRenderer&lt;/code&gt; script, &lt;strong&gt;point the Asset field to&lt;/strong&gt; one of your created assets. There are various controls on the script to debug/visualize the data, as well as a slider to move game camera into one of asset&#39;s camera locations.&lt;/p&gt; 
&lt;p&gt;The rendering takes game object transformation matrix into account; the official gaussian splat models seem to be all rotated by about -160 degrees around X axis, and mirrored around Z axis, so in the sample scene the object has such a transform set up.&lt;/p&gt; 
&lt;p&gt;Additional documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/render-pipeline-integration.md&quot;&gt;Render Pipeline Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/splat-editing.md&quot;&gt;Editing Splats&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;That&#39;s it!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Write-ups&lt;/h2&gt; 
&lt;p&gt;My own blog posts about all this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aras-p.info/blog/2023/09/05/Gaussian-Splatting-is-pretty-cool/&quot;&gt;Gaussian Splatting is pretty cool!&lt;/a&gt; (2023 Sep 5)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aras-p.info/blog/2023/09/13/Making-Gaussian-Splats-smaller/&quot;&gt;Making Gaussian Splats smaller&lt;/a&gt; (2023 Sep 13)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aras-p.info/blog/2023/09/27/Making-Gaussian-Splats-more-smaller/&quot;&gt;Making Gaussian Splats more smaller&lt;/a&gt; (2023 Sep 27)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aras-p.info/blog/2023/12/08/Gaussian-explosion/&quot;&gt;Gaussian Explosion&lt;/a&gt; (2023 Dec 8)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Performance numbers:&lt;/h2&gt; 
&lt;p&gt;&quot;bicycle&quot; scene from the paper, with 6.1M splats and first camera in there, rendering at 1200x797 resolution, at &quot;Medium&quot; asset quality level (282MB asset file):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows (NVIDIA RTX 3080 Ti): 
  &lt;ul&gt; 
   &lt;li&gt;Official SBIR viewer: 7.4ms (135FPS). 4.8GB VRAM usage.&lt;/li&gt; 
   &lt;li&gt;Unity, DX12 or Vulkan: 6.8ms (147FPS) - 4.5ms rendering, 1.1ms sorting, 0.8ms splat view calc. 1.3GB VRAM usage.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mac (Apple M1 Max): 
  &lt;ul&gt; 
   &lt;li&gt;Unity, Metal: 21.5ms (46FPS).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Besides the gaussian splat asset that is loaded into GPU memory, currently this also needs about 48 bytes of GPU memory per splat (for sorting, caching view dependent data etc.).&lt;/p&gt; 
&lt;h2&gt;License and External Code Used&lt;/h2&gt; 
&lt;p&gt;The code I wrote for this is under MIT license. The project also uses several 3rd party libraries:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zanders3/json&quot;&gt;zanders3/json&lt;/a&gt;, MIT license, (c) 2018 Alex Parker.&lt;/li&gt; 
 &lt;li&gt;&quot;DeviceRadixSort&quot; GPU sorting code contributed by Thomas Smith (&lt;a href=&quot;https://github.com/aras-p/UnityGaussianSplatting/pull/82&quot;&gt;#82&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Virtual Reality fixes contributed by &lt;a href=&quot;https://github.com/ninjamode&quot;&gt;@ninjamode&lt;/a&gt; based on &lt;a href=&quot;https://github.com/ninjamode/Unity-VR-Gaussian-Splatting&quot;&gt;Unity-VR-Gaussian-Splatting&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;However, keep in mind that the &lt;a href=&quot;https://github.com/graphdeco-inria/gaussian-splatting/raw/main/LICENSE.md&quot;&gt;license of the original paper implementation&lt;/a&gt; says that the official &lt;em&gt;training&lt;/em&gt; software for the Gaussian Splats is for educational / academic / non-commercial purpose; commercial usage requires getting license from INRIA. That is: even if this viewer / integration into Unity is just &quot;MIT license&quot;, you need to separately consider &lt;em&gt;how&lt;/em&gt; did you get your Gaussian Splat PLY files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yaobiao131/downkyicore</title>
      <link>https://github.com/yaobiao131/downkyicore</link>
      <description>&lt;p&gt;哔哩下载姬(跨平台版)downkyi，哔哩哔哩网站视频下载工具，支持批量下载，支持8K、HDR、杜比视界，提供工具箱（音视频提取、去水印等）。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;哔哩下载姬(跨平台版)&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yaobiao131/downkyicore/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/yaobiao131/downkyicore&quot; alt=&quot;GitHub Repo stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/network&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/yaobiao131/downkyicore&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/yaobiao131/downkyicore&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/yaobiao131/downkyicore&quot; alt=&quot;LICENSE&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;下载&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/yaobiao131/downkyicore&quot; alt=&quot;GitHub release (latest by date)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/yaobiao131/downkyicore&quot; alt=&quot;GitHub Release Date&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/yaobiao131/downkyicore/total&quot; alt=&quot;GitHub all releases&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yaobiao131/downkyicore/main/CHANGELOG.md&quot;&gt;更新日志&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于&lt;a href=&quot;https://github.com/leiurayer/downkyi&quot;&gt;哔哩下载姬Windows版&lt;/a&gt;和&lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia&quot;&gt;AvaloniaUI&lt;/a&gt;制作的跨平台版本(支持Windows、linux、macOS)。&lt;/li&gt; 
 &lt;li&gt;开发这个版本目的是由于本人日常使用macOS，当我想下载up视频是偶然间发现了&lt;a href=&quot;https://github.com/leiurayer/downkyi&quot;&gt;哔哩下载姬Windows版&lt;/a&gt;，发现很好用，就是不能支持macOS使用，就基于AvaloniaUI重新开发了一个跨平台版本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;使用说明&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件自带.NET6、ffmpeg、aria2运行环境、无需自行安装&lt;/li&gt; 
 &lt;li&gt;默认下载路径: 
  &lt;ul&gt; 
   &lt;li&gt;Windows: 软件运行目录下的Media文件夹&lt;/li&gt; 
   &lt;li&gt;macOS: ~/Library/Application Support/DownKyi/Media&lt;/li&gt; 
   &lt;li&gt;linux: ~/.config/DownKyi/Media&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;免责申明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;本软件只提供视频解析，不提供任何资源上传、存储到服务器的功能。&lt;/li&gt; 
 &lt;li&gt;本软件仅解析来自B站的内容，不会对解析到的音视频进行二次编码，部分视频会进行有限的格式转换、拼接等操作。&lt;/li&gt; 
 &lt;li&gt;本软件解析得到的所有内容均来自B站UP主上传、分享，其版权均归原作者所有。内容提供者、上传者(UP主)应对其提供、上传的内容承担全部责任。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;本软件提供的所有内容，仅可用作学习交流使用，未经原作者授权，禁止用于其他用途。请在下载24小时内删除。为尊重作者版权，请前往资源的原始发布网站观看，支持原创，谢谢。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;因使用本软件产生的版权问题，软件作者概不负责。&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>nilaoda/BBDown</title>
      <link>https://github.com/nilaoda/BBDown</link>
      <description>&lt;p&gt;Bilibili Downloader. 一个命令行式哔哩哔哩下载器.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/nilaoda/BBDown&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/nilaoda/BBDown?label=%E7%82%B9%E8%B5%9E&quot; alt=&quot;img&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nilaoda/BBDown&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/nilaoda/BBDown?label=%E6%9C%80%E8%BF%91%E6%8F%90%E4%BA%A4&quot; alt=&quot;img&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nilaoda/BBDown/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/nilaoda/BBDown?label=%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC&quot; alt=&quot;img&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nilaoda/BBDown&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/nilaoda/BBDown?label=%E8%AE%B8%E5%8F%AF%E8%AF%81&quot; alt=&quot;img&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nilaoda/BBDown/actions/workflows/build_latest.yml&quot;&gt;&lt;img src=&quot;https://github.com/nilaoda/BBDown/actions/workflows/build_latest.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Latest&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本项目仅供个人学习、研究和非商业性用途。用户在使用本工具时，需自行确保遵守相关法律法规，特别是与版权相关的法律条款。开发者不对因使用本工具而产生的任何版权纠纷或法律责任承担责任。请用户在使用时谨慎，确保其行为合法合规，并仅在有合法授权的情况下使用相关内容。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;BBDown&lt;/h1&gt; 
&lt;p&gt;一个命令行式哔哩哔哩下载器. Bilibili Downloader.&lt;/p&gt; 
&lt;h1&gt;注意&lt;/h1&gt; 
&lt;p&gt;本软件混流时需要外部程序：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;普通视频：&lt;a href=&quot;https://www.gyan.dev/ffmpeg/builds/&quot;&gt;ffmpeg&lt;/a&gt; ，或 &lt;a href=&quot;https://gpac.wp.imt.fr/downloads/&quot;&gt;mp4box&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;杜比视界：ffmpeg5.0以上或新版mp4box.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;快速开始&lt;/h1&gt; 
&lt;p&gt;本软件已经以 &lt;a href=&quot;https://www.nuget.org/packages/BBDown/&quot;&gt;Dotnet Tool&lt;/a&gt; 形式发布&lt;/p&gt; 
&lt;p&gt;如果你本地有dotnet环境，使用如下命令即可安装使用&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet tool install --global BBDown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如果需要更新bbdown，使用如下命令&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet tool update --global BBDown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;下载&lt;/h1&gt; 
&lt;p&gt;Release版本：&lt;a href=&quot;https://github.com/nilaoda/BBDown/releases&quot;&gt;https://github.com/nilaoda/BBDown/releases&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;自动构建的测试版本：&lt;a href=&quot;https://github.com/nilaoda/BBDown/actions&quot;&gt;https://github.com/nilaoda/BBDown/actions&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;开始使用&lt;/h1&gt; 
&lt;p&gt;目前命令行参数支持情况&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Description:
  BBDown是一个免费且便捷高效的哔哩哔哩下载/解析软件.

Usage:
  BBDown &amp;lt;url&amp;gt; [command] [options]

Arguments:
  &amp;lt;url&amp;gt;  视频地址 或 av|bv|BV|ep|ss

Options:
  -tv, --use-tv-api                              使用TV端解析模式
  -app, --use-app-api                            使用APP端解析模式
  -intl, --use-intl-api                          使用国际版(东南亚视频)解析模式
  --use-mp4box                                   使用MP4Box来混流
  -e, --encoding-priority &amp;lt;encoding-priority&amp;gt;    视频编码的选择优先级, 用逗号分割 例: &quot;hevc,av1,avc&quot;
  -q, --dfn-priority &amp;lt;dfn-priority&amp;gt;              画质优先级,用逗号分隔 例: &quot;8K 超高清, 1080P 高码率, HDR 真彩, 杜比视界&quot;
  -info, --only-show-info                        仅解析而不进行下载
  --show-all                                     展示所有分P标题
  -aria2, --use-aria2c                           调用aria2c进行下载(你需要自行准备好二进制可执行文件)
  -ia, --interactive                             交互式选择清晰度
  -hs, --hide-streams                            不要显示所有可用音视频流
  -mt, --multi-thread                            使用多线程下载(默认开启)
  --video-only                                   仅下载视频
  --audio-only                                   仅下载音频
  --danmaku-only                                 仅下载弹幕
  --sub-only                                     仅下载字幕
  --cover-only                                   仅下载封面
  --debug                                        输出调试日志
  --skip-mux                                     跳过混流步骤
  --skip-subtitle                                跳过字幕下载
  --skip-cover                                   跳过封面下载
  --force-http                                   下载音视频时强制使用HTTP协议替换HTTPS(默认开启)
  -dd, --download-danmaku                        下载弹幕
  --skip-ai                                      跳过AI字幕下载(默认开启)
  --video-ascending                              视频升序(最小体积优先)
  --audio-ascending                              音频升序(最小体积优先)
  --allow-pcdn                                   不替换PCDN域名, 仅在正常情况与--upos-host均无法下载时使用
  -F, --file-pattern &amp;lt;file-pattern&amp;gt;              使用内置变量自定义单P存储文件名:
  
                                                 &amp;lt;videoTitle&amp;gt;: 视频主标题
                                                 &amp;lt;pageNumber&amp;gt;: 视频分P序号
                                                 &amp;lt;pageNumberWithZero&amp;gt;: 视频分P序号(前缀补零)
                                                 &amp;lt;pageTitle&amp;gt;: 视频分P标题
                                                 &amp;lt;bvid&amp;gt;: 视频BV号
                                                 &amp;lt;aid&amp;gt;: 视频aid
                                                 &amp;lt;cid&amp;gt;: 视频cid
                                                 &amp;lt;dfn&amp;gt;: 视频清晰度
                                                 &amp;lt;res&amp;gt;: 视频分辨率
                                                 &amp;lt;fps&amp;gt;: 视频帧率
                                                 &amp;lt;videoCodecs&amp;gt;: 视频编码
                                                 &amp;lt;videoBandwidth&amp;gt;: 视频码率
                                                 &amp;lt;audioCodecs&amp;gt;: 音频编码
                                                 &amp;lt;audioBandwidth&amp;gt;: 音频码率
                                                 &amp;lt;ownerName&amp;gt;: 上传者名称
                                                 &amp;lt;ownerMid&amp;gt;: 上传者mid
                                                 &amp;lt;publishDate&amp;gt;: 收藏夹/番剧/合集发布时间
                                                 &amp;lt;videoDate&amp;gt;: 视频发布时间(分p视频发布时间与&amp;lt;publishDate&amp;gt;相同)
                                                 &amp;lt;apiType&amp;gt;: API类型(TV/APP/INTL/WEB)
  
                                                 默认为: &amp;lt;videoTitle&amp;gt;
  -M, --multi-file-pattern &amp;lt;multi-file-pattern&amp;gt;  使用内置变量自定义多P存储文件名:
  
                                                 默认为: &amp;lt;videoTitle&amp;gt;/[P&amp;lt;pageNumberWithZero&amp;gt;]&amp;lt;pageTitle&amp;gt;
  -p, --select-page &amp;lt;select-page&amp;gt;                选择指定分p或分p范围: (-p 8 或 -p 1,2 或 -p 3-5 或 -p ALL 或 -p LAST 或 -p 3,5,LATEST)
  --language &amp;lt;language&amp;gt;                          设置混流的音频语言(代码), 如chi, jpn等
  -ua, --user-agent &amp;lt;user-agent&amp;gt;                 指定user-agent, 否则使用随机user-agent
  -c, --cookie &amp;lt;cookie&amp;gt;                          设置字符串cookie用以下载网页接口的会员内容
  -token, --access-token &amp;lt;access-token&amp;gt;          设置access_token用以下载TV/APP接口的会员内容
  --aria2c-args &amp;lt;aria2c-args&amp;gt;                    调用aria2c的附加参数(默认参数包含&quot;-x16 -s16 -j16 -k 5M&quot;, 使用时注意字符串转义)
  --work-dir &amp;lt;work-dir&amp;gt;                          设置程序的工作目录
  --ffmpeg-path &amp;lt;ffmpeg-path&amp;gt;                    设置ffmpeg的路径
  --mp4box-path &amp;lt;mp4box-path&amp;gt;                    设置mp4box的路径
  --aria2c-path &amp;lt;aria2c-path&amp;gt;                    设置aria2c的路径
  --upos-host &amp;lt;upos-host&amp;gt;                        自定义upos服务器
  --force-replace-host                           强制替换下载服务器host(默认开启)
  --save-archives-to-file                        将下载过的视频记录到本地文件中, 用于后续跳过下载同个视频
  --delay-per-page &amp;lt;delay-per-page&amp;gt;              设置下载合集分P之间的下载间隔时间(单位: 秒, 默认无间隔)
  --host &amp;lt;host&amp;gt;                                  指定BiliPlus host(使用BiliPlus需要access_token, 不需要cookie, 解析服务器能够获取你账号的大部分权限!)
  --ep-host &amp;lt;ep-host&amp;gt;                            指定BiliPlus EP host(用于代理api.bilibili.com/pgc/view/web/season, 大部分解析服务器不支持代理该接口)
  --area &amp;lt;area&amp;gt;                                  (hk|tw|th) 使用BiliPlus时必选, 指定BiliPlus area
  --config-file &amp;lt;config-file&amp;gt;                    读取指定的BBDown本地配置文件(默认为: BBDown.config)
  --version                                      Show version information
  -?, -h, --help                                 Show help and usage information


Commands:
  login    通过APP扫描二维码以登录您的WEB账号
  logintv  通过APP扫描二维码以登录您的TV账号
  serve    以服务器模式运行
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;功能&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 番剧下载(Web|TV|App)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 课程下载(Web)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 普通内容下载(Web|TV|App)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 合集/列表/收藏夹/个人空间解析&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 多分P自动下载&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 选择指定分P进行下载&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 选择指定清晰度进行下载&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 下载外挂字幕并转换为srt格式&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 自动合并音频+视频流+字幕流+&lt;strong&gt;章节信息&lt;/strong&gt;&lt;code&gt;(使用ffmpeg或mp4box)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 单独下载视频/音频/字幕&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 二维码登录账号&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 多线程下载&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 支持调用aria2c下载&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 支持AVC/HEVC/AV1编码&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;strong&gt;支持8K/HDR/杜比视界/杜比全景声下载&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; 自定义存储文件名&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;TODO&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 自动刷新cookie&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 支持更多自定义选项&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;使用教程&lt;/h1&gt; 
&lt;details&gt; 
 &lt;summary&gt;配置文件 (NEW)&lt;/summary&gt; 
 &lt;hr&gt; 
 &lt;p&gt;在&lt;code&gt;1.4.9&lt;/code&gt;或更高版本中，BBDown支持读取本地配置文件以简化命令行的手动输入。&lt;/p&gt; 
 &lt;p&gt;如果用户没有指定&lt;code&gt;--config-file&lt;/code&gt;，则默认读取程序同目录下的&lt;code&gt;BBDown.config&lt;/code&gt;文件；若用户指定，则读取特定文件。&lt;/p&gt; 
 &lt;p&gt;一个典型的配置文件:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-config&quot;&gt;#本文件是BBDown程序的配置文件
#以#开头的都会被程序忽略
#然后剩余非空白内容程序逐行读取，对于一个选项，其参数应当在下一行出现

#例如下面将设置输出文件名格式
--file-pattern
&amp;lt;videoTitle&amp;gt;[&amp;lt;dfn&amp;gt;]

--multi-file-pattern
&amp;lt;videoTitle&amp;gt;/[P&amp;lt;pageNumberWithZero&amp;gt;]&amp;lt;pageTitle&amp;gt;[&amp;lt;dfn&amp;gt;]

#下面设置下载多个分P时，每个分P的下载间隔为2秒
--delay-per-page
2

#开启弹幕下载功能
--download-danmaku
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;自定义输出文件名格式 (NEW)&lt;/summary&gt; 
 &lt;hr&gt; 
 &lt;p&gt;在&lt;code&gt;1.4.9&lt;/code&gt;或更高版本中，BBDown支持用户自定义合并时的文件名组成。&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;代码&lt;/th&gt; 
    &lt;th&gt;含义&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;videoTitle&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频主标题&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;pageNumber&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频分P序号&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;pageNumberWithZero&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频分P序号(前缀补零)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;pageTitle&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频分P标题&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;bvid&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频BV号&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;aid&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频aid&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;cid&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频cid&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;dfn&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频清晰度&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;res&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频分辨率&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;fps&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频帧率&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;videoCodecs&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频编码&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;videoBandwidth&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;视频码率&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;audioCodecs&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;音频编码&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;audioBandwidth&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;音频码率&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;ownerName&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;上传者名称(下载番剧时，该值为&quot;&quot;)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;ownerMid&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;上传者mid(下载番剧时，该值为&quot;&quot;)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;publishDate&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;发布时间(yyyy-MM-dd_HH-mm-ss)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;&amp;lt;apiType&amp;gt;&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;API类型（TV/APP/INTL/WEB）&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;WEB/TV鉴权&lt;/summary&gt; 
 &lt;hr&gt; 
 &lt;p&gt;扫码登录网页账号：&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown login
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;然后按照提示操作&lt;/p&gt; 
 &lt;p&gt;扫码登录云视听小电视账号：&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown logintv
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;然后按照提示操作&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;PS: 如果登录报错&lt;code&gt;The type initializer for &#39;Gdip&#39; threw an exception&lt;/code&gt;，请参考 &lt;a href=&quot;https://github.com/nilaoda/BBDown/issues/37&quot;&gt;#37&lt;/a&gt; 解决&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;手动加载网页cookie：&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown -c &quot;SESSDATA=******&quot; &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;手动加载云视听小电视token：&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown -tv -token &quot;******&quot; &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;APP鉴权&lt;/summary&gt; 
 &lt;hr&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;根据 &lt;a href=&quot;https://github.com/nilaoda/BBDown/issues/123#issuecomment-877583825&quot;&gt;#123&lt;/a&gt; ，可以填写TV登录产生的&lt;code&gt;access_token&lt;/code&gt;来给APP接口使用。可复制&lt;code&gt;BBDownTV.data&lt;/code&gt;到&lt;code&gt;BBDownApp.data&lt;/code&gt;使程序自动读取.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;目前程序无法自动获取鉴权信息，推荐通过&lt;strong&gt;抓包&lt;/strong&gt;来获取.&lt;/p&gt; 
 &lt;p&gt;在请求Header中寻找键为&lt;code&gt;authorization&lt;/code&gt;的项，其值形为&lt;code&gt;identify_v1 5227************1&lt;/code&gt;，其中的&lt;code&gt;5227************1&lt;/code&gt;就是token(access_key)&lt;/p&gt; 
 &lt;p&gt;获取后手动通过&lt;code&gt;-token&lt;/code&gt;命令加载, 或写入&lt;code&gt;BBDownApp.data&lt;/code&gt;使程序自动读取.&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown -app -token &quot;******&quot; &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;常用命令&lt;/summary&gt; 
 &lt;hr&gt; 
 &lt;p&gt;下载普通视频：&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;使用TV接口下载(粉丝量大的UP主基本上是无水印片源)：&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown -tv &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;当分P过多时，默认会隐藏展示全部的分P信息，你可以使用如下命令来显示所有每一个分P。&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown --show-all &quot;https://www.bilibili.com/video/BV1At41167aj&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;选择下载某些分P的三种情况：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;单个分P：10&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown &quot;https://www.bilibili.com/video/BV1At41167aj?p=10&quot;
BBDown -p 10 &quot;https://www.bilibili.com/video/BV1At41167aj&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;多个分P：1,2,10&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown -p 1,2,10 &quot;https://www.bilibili.com/video/BV1At41167aj&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;范围分P：1-10&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown -p 1-10 &quot;https://www.bilibili.com/video/BV1At41167aj&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;下载番剧全集：&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;BBDown -p ALL &quot;https://www.bilibili.com/bangumi/play/ss33073&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;API服务器&lt;/summary&gt; 
 &lt;p&gt;启动服务器（自定义监听地址和端口）：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;BBDown serve -l http://0.0.0.0:12450
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;API服务器不支持HTTPS配置，如果有需要请自行使用nginx等反向代理进行配置&lt;/p&gt; 
 &lt;p&gt;API详细请参考&lt;a href=&quot;https://raw.githubusercontent.com/nilaoda/BBDown/master/json-api-doc.md&quot;&gt;json-api-doc.md&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h1&gt;演示&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20772925/88686407-a2001480-d129-11ea-8aac-97a0c71af115.gif&quot; alt=&quot;1&quot;&gt;&lt;/p&gt; 
&lt;p&gt;下载完毕后在当前目录查看MP4文件：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20772925/88478901-5e1cdc00-cf7e-11ea-97c1-154b9226564e.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;致谢&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder&quot;&gt;https://github.com/codebude/QRCoder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/icsharpcode/SharpZipLib&quot;&gt;https://github.com/icsharpcode/SharpZipLib&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/protocolbuffers/protobuf&quot;&gt;https://github.com/protocolbuffers/protobuf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc&quot;&gt;https://github.com/grpc/grpc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/command-line-api&quot;&gt;https://github.com/dotnet/command-line-api&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SocialSisterYi/bilibili-API-collect&quot;&gt;https://github.com/SocialSisterYi/bilibili-API-collect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SeeFlowerX/bilibili-grpc-api&quot;&gt;https://github.com/SeeFlowerX/bilibili-grpc-api&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FFmpeg/FFmpeg&quot;&gt;https://github.com/FFmpeg/FFmpeg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gpac/gpac&quot;&gt;https://github.com/gpac/gpac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aria2/aria2&quot;&gt;https://github.com/aria2/aria2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ShareX/ShareX</title>
      <link>https://github.com/ShareX/ShareX</link>
      <description>&lt;p&gt;ShareX is a free and open source program that lets you capture or record any area of your screen and share it with a single press of a key. It also allows uploading images, text or other types of files to many supported destinations you can choose from.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://getsharex.com&quot;&gt;&lt;img src=&quot;https://getsharex.com/img/ShareX_Banner.png&quot; alt=&quot;ShareX Banner&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Screen capture, file sharing and productivity tool&lt;/h3&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://github.com/ShareX/ShareX/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/ShareX/ShareX/build.yml?branch=develop&amp;amp;label=Build&amp;amp;cacheSeconds=3600&quot; alt=&quot;GitHub Workflow Status&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/ShareX/ShareX/develop/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/ShareX/ShareX?label=License&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/ShareX/ShareX/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ShareX/ShareX?label=Release&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://getsharex.com/downloads&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/ShareX/ShareX/total?label=Downloads&amp;amp;cacheSeconds=3600&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://discord.gg/ShareX&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/194170124859736065?label=Discord&amp;amp;cacheSeconds=3600&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=ShareX&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ShareX?cacheSeconds=3600&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://getsharex.com&quot;&gt;&lt;img src=&quot;https://getsharex.com/img/ShareX_Screenshot.png&quot; alt=&quot;ShareX Screenshot&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;For further information please check our &lt;a href=&quot;https://getsharex.com&quot;&gt;website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Official website: &lt;a href=&quot;https://getsharex.com&quot;&gt;https://getsharex.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/ShareX/ShareX&quot;&gt;https://github.com/ShareX/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Changelog: &lt;a href=&quot;https://getsharex.com/changelog&quot;&gt;https://getsharex.com/changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Privacy policy: &lt;a href=&quot;https://getsharex.com/privacy-policy&quot;&gt;https://getsharex.com/privacy-policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Donate: &lt;a href=&quot;https://getsharex.com/donate&quot;&gt;https://getsharex.com/donate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/ShareX&quot;&gt;https://twitter.com/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href=&quot;https://discord.gg/ShareX&quot;&gt;https://discord.gg/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href=&quot;https://www.reddit.com/r/sharex&quot;&gt;https://www.reddit.com/r/sharex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Steam page: &lt;a href=&quot;https://store.steampowered.com/app/400040/ShareX/&quot;&gt;https://store.steampowered.com/app/400040/ShareX/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft Store page: &lt;a href=&quot;https://apps.microsoft.com/detail/9nblggh4z1sp&quot;&gt;https://apps.microsoft.com/detail/9nblggh4z1sp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image effects: &lt;a href=&quot;https://getsharex.com/image-effects&quot;&gt;https://getsharex.com/image-effects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actions: &lt;a href=&quot;https://getsharex.com/actions&quot;&gt;https://getsharex.com/actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dev builds: &lt;a href=&quot;https://getsharex.com/docs/dev-builds&quot;&gt;https://getsharex.com/docs/dev-builds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Keybinds: &lt;a href=&quot;https://getsharex.com/docs/keybinds&quot;&gt;https://getsharex.com/docs/keybinds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Scrolling screenshot: &lt;a href=&quot;https://getsharex.com/docs/scrolling-screenshot&quot;&gt;https://getsharex.com/docs/scrolling-screenshot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Command line arguments: &lt;a href=&quot;https://getsharex.com/docs/command-line-arguments&quot;&gt;https://getsharex.com/docs/command-line-arguments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Translation: &lt;a href=&quot;https://getsharex.com/docs/translation&quot;&gt;https://getsharex.com/docs/translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OCR: &lt;a href=&quot;https://getsharex.com/docs/ocr&quot;&gt;https://getsharex.com/docs/ocr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Custom uploader: &lt;a href=&quot;https://getsharex.com/docs/custom-uploader&quot;&gt;https://getsharex.com/docs/custom-uploader&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Amazon S3 guide: &lt;a href=&quot;https://getsharex.com/docs/amazon-s3&quot;&gt;https://getsharex.com/docs/amazon-s3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Cloud Storage guide: &lt;a href=&quot;https://getsharex.com/docs/google-cloud-storage&quot;&gt;https://getsharex.com/docs/google-cloud-storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Cloudflare R2 guide: &lt;a href=&quot;https://getsharex.com/docs/cloudflare-r2&quot;&gt;https://getsharex.com/docs/cloudflare-r2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Brand assets: &lt;a href=&quot;https://getsharex.com/brand-assets&quot;&gt;https://getsharex.com/brand-assets&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jellyfin/jellyfin</title>
      <link>https://github.com/jellyfin/jellyfin</link>
      <description>&lt;p&gt;The Free Software Media System - Server Backend &amp; API&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Jellyfin&lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt;The Free Software Media System&lt;/h3&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Logo Banner&quot; src=&quot;https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true&quot;&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/jellyfin/jellyfin&quot;&gt; &lt;img alt=&quot;GPL 2.0 License&quot; src=&quot;https://img.shields.io/github/license/jellyfin/jellyfin.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/jellyfin/jellyfin/releases&quot;&gt; &lt;img alt=&quot;Current Release&quot; src=&quot;https://img.shields.io/github/release/jellyfin/jellyfin.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://translate.jellyfin.org/projects/jellyfin/jellyfin-core/?utm_source=widget&quot;&gt; &lt;img alt=&quot;Translation Status&quot; src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-core/svg-badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/jellyfin/jellyfin&quot;&gt; &lt;img alt=&quot;Docker Pull Count&quot; src=&quot;https://img.shields.io/docker/pulls/jellyfin/jellyfin.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://opencollective.com/jellyfin&quot;&gt; &lt;img alt=&quot;Donate&quot; src=&quot;https://img.shields.io/opencollective/all/jellyfin.svg?label=backers&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://features.jellyfin.org&quot;&gt; &lt;img alt=&quot;Submit Feature Requests&quot; src=&quot;https://img.shields.io/badge/fider-vote%20on%20features-success.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/%23jellyfinorg:matrix.org&quot;&gt; &lt;img alt=&quot;Chat on Matrix&quot; src=&quot;https://img.shields.io/matrix/jellyfinorg:matrix.org.svg?logo=matrix&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/jellyfin/jellyfin/releases.atom&quot;&gt; &lt;img alt=&quot;Release RSS Feed&quot; src=&quot;https://img.shields.io/badge/rss-releases-ffa500?logo=rss&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/jellyfin/jellyfin/commits/master.atom&quot;&gt; &lt;img alt=&quot;Master Commits RSS Feed&quot; src=&quot;https://img.shields.io/badge/rss-commits-ffa500?logo=rss&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby&#39;s 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it. We welcome anyone who is interested in joining us in our quest!&lt;/p&gt; 
&lt;p&gt;For further details, please see &lt;a href=&quot;https://jellyfin.org/docs/&quot;&gt;our documentation page&lt;/a&gt;. To receive the latest updates, get help with Jellyfin, and join the community, please visit &lt;a href=&quot;https://jellyfin.org/docs/general/getting-help&quot;&gt;one of our communication channels&lt;/a&gt;. For more information about the project, please see our &lt;a href=&quot;https://jellyfin.org/docs/general/about&quot;&gt;about page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to get started?&lt;/strong&gt;&lt;br&gt; Check out our &lt;a href=&quot;https://jellyfin.org/downloads&quot;&gt;downloads page&lt;/a&gt; or our &lt;a href=&quot;https://jellyfin.org/docs/general/installation/&quot;&gt;installation guide&lt;/a&gt;, then see our &lt;a href=&quot;https://jellyfin.org/docs/general/quick-start&quot;&gt;quick start guide&lt;/a&gt;. You can also &lt;a href=&quot;https://jellyfin.org/docs/general/installation/source&quot;&gt;build from source&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Something not working right?&lt;/strong&gt;&lt;br&gt; Open an &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/issues&quot;&gt;Issue&lt;/a&gt; on GitHub.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to contribute?&lt;/strong&gt;&lt;br&gt; Check out our &lt;a href=&quot;https://jellyfin.org/contribute&quot;&gt;contributing choose-your-own-adventure&lt;/a&gt; to see where you can help, then see our &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/&quot;&gt;contributing guide&lt;/a&gt; and our &lt;a href=&quot;https://jellyfin.org/docs/general/community-standards&quot;&gt;community standards&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;New idea or improvement?&lt;/strong&gt;&lt;br&gt; Check out our &lt;a href=&quot;https://features.jellyfin.org/?view=most-wanted&quot;&gt;feature request hub&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Don&#39;t see Jellyfin in your language?&lt;/strong&gt;&lt;br&gt; Check out our &lt;a href=&quot;https://translate.jellyfin.org&quot;&gt;Weblate instance&lt;/a&gt; to help translate Jellyfin and its subprojects.&lt;br&gt;&lt;/p&gt; 
&lt;a href=&quot;https://translate.jellyfin.org/engage/jellyfin/?utm_source=widget&quot;&gt; &lt;img src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/multi-auto.svg?sanitize=true&quot; alt=&quot;Detailed Translation Status&quot;&gt; &lt;/a&gt; 
&lt;hr&gt; 
&lt;h2&gt;Jellyfin Server&lt;/h2&gt; 
&lt;p&gt;This repository contains the code for Jellyfin&#39;s backend server. Note that this is only one of many projects under the Jellyfin GitHub &lt;a href=&quot;https://github.com/jellyfin/&quot;&gt;organization&lt;/a&gt; on GitHub. If you want to contribute, you can start by checking out our &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/index.html&quot;&gt;documentation&lt;/a&gt; to see what to work on.&lt;/p&gt; 
&lt;h2&gt;Server Development&lt;/h2&gt; 
&lt;p&gt;These instructions will help you get set up with a local development environment in order to contribute to this repository. Before you start, please be sure to completely read our &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/development.html&quot;&gt;guidelines on development contributions&lt;/a&gt;. Note that this project is supported on all major operating systems except FreeBSD, which is still incompatible.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Before the project can be built, you must first install the &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet&quot;&gt;.NET 9.0 SDK&lt;/a&gt; on your system.&lt;/p&gt; 
&lt;p&gt;Instructions to run this project from the command line are included here, but you will also need to install an IDE if you want to debug the server while it is running. Any IDE that supports .NET 6 development will work, but two options are recent versions of &lt;a href=&quot;https://visualstudio.microsoft.com/downloads/&quot;&gt;Visual Studio&lt;/a&gt; (at least 2022) and &lt;a href=&quot;https://code.visualstudio.com/Download&quot;&gt;Visual Studio Code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jellyfin/jellyfin-ffmpeg&quot;&gt;ffmpeg&lt;/a&gt; will also need to be installed.&lt;/p&gt; 
&lt;h3&gt;Cloning the Repository&lt;/h3&gt; 
&lt;p&gt;After dependencies have been installed you will need to clone a local copy of this repository. If you just want to run the server from source you can clone this repository directly, but if you are intending to contribute code changes to the project, you should &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/development.html#set-up-your-copy-of-the-repo&quot;&gt;set up your own fork&lt;/a&gt; of the repository. The following example shows how you can clone the repository directly over HTTPS.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/jellyfin/jellyfin.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing the Web Client&lt;/h3&gt; 
&lt;p&gt;The server is configured to host the static files required for the &lt;a href=&quot;https://github.com/jellyfin/jellyfin-web&quot;&gt;web client&lt;/a&gt; in addition to serving the backend by default. Before you can run the server, you will need to get a copy of the web client since they are not included in this repository directly.&lt;/p&gt; 
&lt;p&gt;Note that it is also possible to &lt;a href=&quot;https://raw.githubusercontent.com/jellyfin/jellyfin/master/#hosting-the-web-client-separately&quot;&gt;host the web client separately&lt;/a&gt; from the web server with some additional configuration, in which case you can skip this step.&lt;/p&gt; 
&lt;p&gt;There are three options to get the files for the web client.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download one of the finished builds from the &lt;a href=&quot;https://dev.azure.com/jellyfin-project/jellyfin/_build?definitionId=27&quot;&gt;Azure DevOps pipeline&lt;/a&gt;. You can download the build for a specific release by looking at the &lt;a href=&quot;https://dev.azure.com/jellyfin-project/jellyfin/_build?definitionId=27&amp;amp;_a=summary&amp;amp;repositoryFilter=6&amp;amp;view=branches&quot;&gt;branches tab&lt;/a&gt; of the pipelines page.&lt;/li&gt; 
 &lt;li&gt;Build them from source following the instructions on the &lt;a href=&quot;https://github.com/jellyfin/jellyfin-web&quot;&gt;jellyfin-web repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Get the pre-built files from an existing installation of the server. For example, with a Windows server installation the client files are located at &lt;code&gt;C:\Program Files\Jellyfin\Server\jellyfin-web&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Running The Server&lt;/h3&gt; 
&lt;p&gt;The following instructions will help you get the project up and running via the command line, or your preferred IDE.&lt;/p&gt; 
&lt;h4&gt;Running With Visual Studio&lt;/h4&gt; 
&lt;p&gt;To run the project with Visual Studio you can open the Solution (&lt;code&gt;.sln&lt;/code&gt;) file and then press &lt;code&gt;F5&lt;/code&gt; to run the server.&lt;/p&gt; 
&lt;h4&gt;Running With Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;To run the project with Visual Studio Code you will first need to open the repository directory with Visual Studio Code using the &lt;code&gt;Open Folder...&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;Second, you need to &lt;a href=&quot;https://code.visualstudio.com/docs/editor/extension-gallery#_recommended-extensions&quot;&gt;install the recommended extensions for the workspace&lt;/a&gt;. Note that extension recommendations are classified as either &quot;Workspace Recommendations&quot; or &quot;Other Recommendations&quot;, but only the &quot;Workspace Recommendations&quot; are required.&lt;/p&gt; 
&lt;p&gt;After the required extensions are installed, you can run the server by pressing &lt;code&gt;F5&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Running From the Command Line&lt;/h4&gt; 
&lt;p&gt;To run the server from the command line you can use the &lt;code&gt;dotnet run&lt;/code&gt; command. The example below shows how to do this if you have cloned the repository into a directory named &lt;code&gt;jellyfin&lt;/code&gt; (the default directory name) and should work on all operating systems.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd jellyfin                          # Move into the repository directory
dotnet run --project Jellyfin.Server --webdir /absolute/path/to/jellyfin-web/dist # Run the server startup project
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A second option is to build the project and then run the resulting executable file directly. When running the executable directly you can easily add command line options. Add the &lt;code&gt;--help&lt;/code&gt; flag to list details on all the supported command line options.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Build the project&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet build                       # Build the project
cd Jellyfin.Server/bin/Debug/net9.0 # Change into the build output directory
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Execute the build output. On Linux, Mac, etc. use &lt;code&gt;./jellyfin&lt;/code&gt; and on Windows use &lt;code&gt;jellyfin.exe&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Accessing the Hosted Web Client&lt;/h4&gt; 
&lt;p&gt;If the Server is configured to host the Web Client, and the Server is running, the Web Client can be accessed at &lt;code&gt;http://localhost:8096&lt;/code&gt; by default.&lt;/p&gt; 
&lt;p&gt;API documentation can be viewed at &lt;code&gt;http://localhost:8096/api-docs/swagger/index.html&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Running from GitHub Codespaces&lt;/h3&gt; 
&lt;p&gt;As Jellyfin will run on a container on a GitHub hosted server, JF needs to handle some things differently.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Depending on the selected configuration (if you just click &#39;create codespace&#39; it will create a default configuration one) it might take 20-30 seconds to load all extensions and prepare the environment while VS Code is already open. Just give it some time and wait until you see &lt;code&gt;Downloading .NET version(s) 7.0.15~x64 ...... Done!&lt;/code&gt; in the output tab.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you want to access the JF instance from outside, like with a WebClient on another PC, remember to set the &quot;ports&quot; in the lower VS Code window to public.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; When first opening the server instance with any WebUI, you will be sent to the login instead of the setup page. Refresh the login page once and you should be redirected to the Setup.&lt;/p&gt; 
&lt;p&gt;There are two configurations for you to choose from.&lt;/p&gt; 
&lt;h4&gt;Default - Development Jellyfin Server&lt;/h4&gt; 
&lt;p&gt;This creates a container that has everything to run and debug the Jellyfin Media server but does not setup anything else. Each time you create a new container you have to run through the whole setup again. There is also no ffmpeg, webclient or media preloaded. Use the &lt;code&gt;.NET Launch (nowebclient)&lt;/code&gt; launch config to start the server.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Keep in mind that as this has no web client you have to connect to it via an external client. This can be just another codespace container running the WebUI. vuejs does not work from the get-go as it does not support the setup steps.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Development Jellyfin Server ffmpeg&lt;/h4&gt; 
&lt;p&gt;this extends the default server with a default installation of ffmpeg6 though the means described here: &lt;a href=&quot;https://jellyfin.org/docs/general/installation/linux#repository-manual&quot;&gt;https://jellyfin.org/docs/general/installation/linux#repository-manual&lt;/a&gt; If you want to install a specific ffmpeg version, follow the comments embedded in the &lt;code&gt;.devcontainer/Dev - Server Ffmpeg/install.ffmpeg.sh&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;Use the &lt;code&gt;ghcs .NET Launch (nowebclient, ffmpeg)&lt;/code&gt; launch config to run with the jellyfin-ffmpeg enabled.&lt;/p&gt; 
&lt;h3&gt;Running The Tests&lt;/h3&gt; 
&lt;p&gt;This repository also includes unit tests that are used to validate functionality as part of a CI pipeline on Azure. There are several ways to run these tests.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run tests from the command line using &lt;code&gt;dotnet test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run tests in Visual Studio using the &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/test/run-unit-tests-with-test-explorer&quot;&gt;Test Explorer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run individual tests in Visual Studio Code using the associated &lt;a href=&quot;https://github.com/OmniSharp/omnisharp-vscode/wiki/How-to-run-and-debug-unit-tests&quot;&gt;CodeLens annotation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Advanced Configuration&lt;/h3&gt; 
&lt;p&gt;The following sections describe some more advanced scenarios for running the server from source that build upon the standard instructions above.&lt;/p&gt; 
&lt;h4&gt;Hosting The Web Client Separately&lt;/h4&gt; 
&lt;p&gt;It is not necessary to host the frontend web client as part of the backend server. Hosting these two components separately may be useful for frontend developers who would prefer to host the client in a separate webpack development server for a tighter development loop. See the &lt;a href=&quot;https://github.com/jellyfin/jellyfin-web#getting-started&quot;&gt;jellyfin-web&lt;/a&gt; repo for instructions on how to do this.&lt;/p&gt; 
&lt;p&gt;To instruct the server not to host the web content, there is a &lt;code&gt;nowebclient&lt;/code&gt; configuration flag that must be set. This can be specified using the command line switch &lt;code&gt;--nowebclient&lt;/code&gt; or the environment variable &lt;code&gt;JELLYFIN_NOWEBCONTENT=true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Since this is a common scenario, there is also a separate launch profile defined for Visual Studio called &lt;code&gt;Jellyfin.Server (nowebcontent)&lt;/code&gt; that can be selected from the &#39;Start Debugging&#39; dropdown in the main toolbar.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The setup wizard cannot be run if the web client is hosted separately.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; This project is supported by: &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://www.digitalocean.com&quot;&gt;&lt;img src=&quot;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg?sanitize=true&quot; height=&quot;50px&quot; alt=&quot;DigitalOcean&quot;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://www.jetbrains.com&quot;&gt;&lt;img src=&quot;https://gist.githubusercontent.com/anthonylavado/e8b2403deee9581e0b4cb8cd675af7db/raw/fa104b7d73f759d7262794b94569f1b89df41c0b/jetbrains.svg?sanitize=true&quot; height=&quot;50px&quot; alt=&quot;JetBrains logo&quot;&gt;&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dodyg/practical-aspnetcore</title>
      <link>https://github.com/dodyg/practical-aspnetcore</link>
      <description>&lt;p&gt;Practical samples of ASP.NET Core 10 Preview 2, 9, 8.0, 7.0, 6.0, 5.0, 3.1, 2.2, and 2.1,projects you can use. Readme contains explanations on all projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Samples for ASP.NET Core 8.0&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This repository is WIP. I am updating all the previous samples from .NET 6/7 to .NET 8. Check the previous stable branch (&lt;a href=&quot;https://github.com/dodyg/practical-aspnetcore/tree/net6.0/&quot;&gt;6.0&lt;/a&gt;) if you want to browse the existing stable samples that contains also .NET 7/8 samples.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Greetings from Cairo, Egypt. You can &lt;a href=&quot;https://github.com/sponsors/dodyg&quot;&gt;sponsor&lt;/a&gt; this project &lt;a href=&quot;https://github.com/sponsors/dodyg&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;ASP.NET Core 10&lt;/h2&gt; 
&lt;p&gt;You can find samples on new features availabel in ASP.NET Core 10(3) &lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/net10&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;ASP.NET Core 9&lt;/h2&gt; 
&lt;p&gt;You can find samples on new features availabel in ASP.NET Core 9(3) &lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/net9&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Previous versions&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dodyg/practical-aspnetcore/tree/net6.0/&quot;&gt;6.0&lt;/a&gt;, &lt;a href=&quot;https://github.com/dodyg/practical-aspnetcore/tree/net5.0/&quot;&gt;5.0&lt;/a&gt;, &lt;a href=&quot;https://github.com/dodyg/practical-aspnetcore/tree/3.1-LTS/&quot;&gt;3.1 LTS&lt;/a&gt;, &lt;a href=&quot;https://github.com/dodyg/practical-aspnetcore/tree/2.1-LTS&quot;&gt;2.1 LTS&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Samples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For ATProtocol (the underlying open protocol for Bluesky) related samples, you can find them &lt;a href=&quot;https://github.com/dodyg/bluenile&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For Hydro Framework (Razor Pages compatible), you can find them &lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/hydro/&quot;&gt;here&lt;/a&gt;(8).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/aspire-samples&quot;&gt;Official .NET Aspire samples&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For Data Access samples, go to the excellent &lt;a href=&quot;https://github.com/Grauenwolf/DotNet-ORM-Cookbook&quot;&gt;ORM Cookbook&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;.NET team also has &lt;a href=&quot;https://github.com/dotnet/samples&quot;&gt;a sample repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sections&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Section&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/authentication&quot;&gt;Authentication&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/blazor-wasm&quot;&gt;Blazor Client Side (Web Assembly)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;.NET8 (WIP), Components, Data Binding&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/blazor-ss&quot;&gt;Blazor Server&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;Localization&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/blazor-ssr&quot;&gt;Blazor Server Side Render&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/caching&quot;&gt;Caching&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/configurations&quot;&gt;Configurations&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/corewcf&quot;&gt;CoreWCF&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/dependency-injection/&quot;&gt;Dependency Injection&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/diagnostics&quot;&gt;Diagnostics&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/endpoint-routing&quot;&gt;Endpoint Routing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;32&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/mailkit&quot;&gt;Email&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/elsa&quot;&gt;Elsa Workflow&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;.NET8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/exception-handler-middleware/&quot;&gt;Exception Handler Middleware&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/features&quot;&gt;Features&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/generic-host&quot;&gt;Generic Hosting&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/grpc&quot;&gt;gRPC&lt;/a&gt; (including grpc-Web)&lt;/td&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/health-check&quot;&gt;Health Check&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/htmx&quot;&gt;HTMX&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;40&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/httpclientfactory&quot;&gt;IHttpClientFactory&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/ihosted-service&quot;&gt;IHostedService&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/logging&quot;&gt;Logging&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/localization&quot;&gt;Localization and Globalization&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/middleware&quot;&gt;Middleware&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/mini&quot;&gt;Mini Apps&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/minimal-api&quot;&gt;Minimal API&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;36&lt;/td&gt; 
   &lt;td&gt;Routing, Parameter Bindings, etc&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/minimal-hosting&quot;&gt;Minimal Hosting&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/mvc&quot;&gt;MVC&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;47&lt;/td&gt; 
   &lt;td&gt;Localization, Routing, Razor Class Library, Tag Helpers, View Component, etc&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/output-cache-middleware&quot;&gt;Output Cache Middleware&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/open-telemetry/&quot;&gt;Open Telemetry&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/orchard-core&quot;&gt;Orchard Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/path-string&quot;&gt;Path String (HttpContext.Request.Path)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/polly/&quot;&gt;Polly&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/problem-details-middleware/&quot;&gt;Problem Details Middleware&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/razor-pages&quot;&gt;Razor Pages&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;TempData&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/razor-slices&quot;&gt;RazorSlices&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/request&quot;&gt;Request&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;Form, Cookies, Query String, Headers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projets/request-timeouts-middleware&quot;&gt;Request Timeouts Middleware&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/response&quot;&gt;Response&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/signalr&quot;&gt;SignalR&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/security&quot;&gt;Security&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/sfa&quot;&gt;Single File Application&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/file-provider&quot;&gt;Static Files and File Provider&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/json&quot;&gt;System.Text.Json&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/syndications&quot;&gt;Syndications&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/testing&quot;&gt;Testing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/unpoly&quot;&gt;Unpoly&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/rewrite&quot;&gt;URL Redirect/Rewrite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/uri-helper&quot;&gt;Uri Helper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/windows-service&quot;&gt;Windows Service&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/web-sockets&quot;&gt;Web Sockets&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/web-utilities&quot;&gt;Web Utilities&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/orleans&quot;&gt;Orleans&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;.NET.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/xml&quot;&gt;Xml&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/yarp&quot;&gt;YARP&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How to run these samples&lt;/h2&gt; 
&lt;p&gt;To run these samples, simply open your command line console, go to each folder and execute &lt;code&gt;dotnet watch run&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Misc (6)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/application-environment&quot;&gt;Application Environment&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This sample shows how to obtain application environment information (target framework, etc).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/connection-info&quot;&gt;Show Connection info&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Enumerate the connection information of a HTTP request.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/password-hasher&quot;&gt;Password Hasher server&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Give it a string and it will generate a secure hash for you, e.g. &lt;code&gt;localhost:5000?password=mypassword&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/version&quot;&gt;Version info&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Show various version info of the framework your system is running on.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/i-application-lifetime&quot;&gt;IApplicationLifetime&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Responds to application startup and shutdown.&lt;/p&gt; &lt;p&gt;We are using &lt;code&gt;IApplicationLifetime&lt;/code&gt; that trigger events during application startup and shutdown.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/map-short-circuit&quot;&gt;Short Circuit&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;MapShortCircuit&lt;/code&gt; or &lt;code&gt;.ShortCircuit()&lt;/code&gt; to efficiently respond to a request without going through a middleware pipeline run.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Server-Sent Events (1)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/sse&quot;&gt;Forever Server&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This server will send a &#39;hello world&#39; greeting forever.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Markdown (2)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/markdown-server&quot;&gt;Markdown server&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Serve markdown file as html file. You will see how you can create useful app using a few basic facilities in aspnetcore.&lt;/p&gt; &lt;p&gt;We take &lt;code&gt;&quot;Markdig&quot;&lt;/code&gt; as dependency.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/markdown-server-middleware&quot;&gt;Markdown server - implemented as middleware component&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Serve markdown file as html file. It has the same exact functionality as &lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/markdown-server&quot;&gt;Markdown server&lt;/a&gt; but implemented using middleware component.&lt;/p&gt; &lt;p&gt;We take &lt;code&gt;&quot;Markdig&quot;&lt;/code&gt; as dependency.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Utils (3)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/utils/http-status-codes&quot;&gt;Status Codes&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here we contrast between the usage of &lt;code&gt;Microsoft.AspNetCore.Http.StatusCodes&lt;/code&gt; and &lt;code&gt;System.Net.HttpStatusCode&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/utils/media-type-names&quot;&gt;MediaTypeNames&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This class provides convenient constants for some common MIME types. It&#39;s not extensive by any means however &lt;code&gt;MediaTypeNames.Text.Html&lt;/code&gt; and &lt;code&gt;MediaTypeNames.Application.Json&lt;/code&gt; come handy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/utils/media-type-names-2&quot;&gt;MediaTypeNames - 2&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;FileExtensionContentTypeProvider&lt;/code&gt; to obtain the correct MIME type of a filename extension.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Device Detection (1)&lt;/h3&gt; 
&lt;p&gt;The samples in this section rely on &lt;a href=&quot;https://github.com/wangkanai/wangkanai/tree/main/Detection&quot;&gt;Wangkanai.Detection&lt;/a&gt; library.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/device-detection&quot;&gt;Device Detection&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This is the most basic device detection. You will be able to detect whether the client is a desktop or a mobile client.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image Sharp (1)&lt;/h3&gt; 
&lt;p&gt;All these samples require &lt;code&gt;SixLabors.ImageSharp.Web&lt;/code&gt; middleware package. This middleware is an excelent tool to process your day to day image processing need.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dodyg/practical-aspnetcore/net8.0/projects/image-sharp&quot;&gt;Image-Sharp&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This example shows how to enable image resizing functionality to your site. It&#39;s super easy and the middleware takes care of caching, etc.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Misc&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dodyg/practical-aspnetcore/raw/master/CONTRIBUTING.md&quot;&gt;Contributor Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dodyg/practical-aspnetcore/raw/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>lucasg/Dependencies</title>
      <link>https://github.com/lucasg/Dependencies</link>
      <description>&lt;p&gt;A rewrite of the old legacy software &quot;depends.exe&quot; in C# for Windows devs to troubleshoot dll load dependencies issues.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dependencies - An open-source modern Dependency Walker&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://ci.appveyor.com/project/lucasg/dependencies&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/wtr5v8ksndbkkqxg?svg=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.11.1/Dependencies_x64_Release.zip&quot;&gt;Download here&lt;/a&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.11.1/Dependencies_x64_Release_.without.peview.exe.zip&quot;&gt;(If you&#39;re running an AV, use this download instead)&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;NB : due to &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ffkc918h.aspx&quot;&gt;limitations on /clr compilation&lt;/a&gt;, &lt;code&gt;Dependencies&lt;/code&gt; needs &lt;a href=&quot;https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads&quot;&gt;Visual C++ Redistributable&lt;/a&gt; installed to run properly.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Usage Exemple&quot; src=&quot;https://raw.githubusercontent.com/lucasg/Dependencies/master/screenshots/UsageExemple.gif&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Dependencies&lt;/code&gt; is a rewrite of the legacy software &lt;a href=&quot;http://www.dependencywalker.com/&quot;&gt;Dependency Walker&lt;/a&gt; which was shipped along Windows SDKs, but whose development stopped around 2006. &lt;code&gt;Dependencies&lt;/code&gt; can help Windows developers troubleshooting their dll load dependencies issues.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.11.1/Dependencies_x64_Release.zip&quot;&gt;v1.11&lt;/a&gt; : 
  &lt;ul&gt; 
   &lt;li&gt;lots of bugfixes and incremental improvements&lt;/li&gt; 
   &lt;li&gt;covid pandemic&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.10/Dependencies_x64_Release.zip&quot;&gt;v1.10&lt;/a&gt; : 
  &lt;ul&gt; 
   &lt;li&gt;lots of bugfixes and incremental improvements&lt;/li&gt; 
   &lt;li&gt;support of Windows 8.1 apisets parsing&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.9/Dependencies_x64_Release.zip&quot;&gt;v1.9&lt;/a&gt; : 
  &lt;ul&gt; 
   &lt;li&gt;Display imports and exports the way Depends.exe does.&lt;/li&gt; 
   &lt;li&gt;Added user customization for search folders and working directory&lt;/li&gt; 
   &lt;li&gt;Added LLVM demangler to availables symbol demangling&lt;/li&gt; 
   &lt;li&gt;Fixed Wow64 FsRedirection bugs&lt;/li&gt; 
   &lt;li&gt;F5 can now refresh the analysis&lt;/li&gt; 
   &lt;li&gt;Added CLR assembly dependencies enumeration&lt;/li&gt; 
   &lt;li&gt;Added a packaging option without Peview.exe (which triggers some AV).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.8/Dependencies_x64_Release.zip&quot;&gt;v1.8&lt;/a&gt; : 
  &lt;ul&gt; 
   &lt;li&gt;Add x86/x64 variants for Dependencies&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.7/Dependencies.zip&quot;&gt;v1.7&lt;/a&gt; : 
  &lt;ul&gt; 
   &lt;li&gt;Add CLI tool &quot;dependencies.exe&quot;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.6/Dependencies.zip&quot;&gt;v1.6&lt;/a&gt; : 
  &lt;ul&gt; 
   &lt;li&gt;Add appx packaging&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.5/Dependencies.zip&quot;&gt;v1.5&lt;/a&gt; : 
  &lt;ul&gt; 
   &lt;li&gt;Support of Sxs parsing&lt;/li&gt; 
   &lt;li&gt;Support of api set schema parsing&lt;/li&gt; 
   &lt;li&gt;API and Modules list can be filtered&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucasg/Dependencies/releases/download/v1.0/Dependencies.zip&quot;&gt;v1.0&lt;/a&gt; -- Initial release&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation and Usage&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Dependencies&lt;/code&gt; is currently shipped as two binaries (no installer present) : &lt;code&gt;Dependencies.exe&lt;/code&gt; as a CLI tool and &lt;code&gt;DependenciesGui.exe&lt;/code&gt; for its GUI counterpart (see screenshot). Just click on one of the release numbers above (preferably the latest), download and uncompress the archive and run &lt;code&gt;DependenciesGui.exe&lt;/code&gt;. Since the binary is not signed, &lt;code&gt;SmartScreen&lt;/code&gt; might scream at runtime. &lt;code&gt;Dependencies&lt;/code&gt; also bundle &lt;code&gt;ClrPhTester.exe&lt;/code&gt;, a dumpbin-like executable used to test for non-regressions.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Dependencies&lt;/code&gt; currently does not recursively resolve child imports when parsing a new PE since it can be really memory-hungry to do so ( it can over a GB even for &quot;simple&quot; PEs ). This behavior can be overridden (app-wide) via a property located in &quot;Options-&amp;gt;Properties-&amp;gt;Tree build behaviour&quot;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;User options&quot; src=&quot;https://raw.githubusercontent.com/lucasg/Dependencies/master/screenshots/UserOptions.png&quot;&gt; &lt;/p&gt; 
&lt;p&gt;Tree build behaviours available :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ChildOnly&lt;/code&gt; (default) : only process PE child imports and nothing beyond.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RecursiveOnlyOnDirectImports&lt;/code&gt; : do not process delayload dlls.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Recursive&lt;/code&gt; : Full recursive analysis. You better have time and RAM on your hands if you activate this setting :&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Yes that&#39;s 7 GB of RAM being consumed. I&#39;m impressed the application didn&#39;t even crash&quot; src=&quot;https://raw.githubusercontent.com/lucasg/Dependencies/master/screenshots/RamEater.PNG&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Limitations&lt;/h2&gt; 
&lt;p&gt;At the moment, &lt;code&gt;Dependencies&lt;/code&gt; recreates features and &quot;features&quot; of &lt;code&gt;depends.exe&lt;/code&gt;, which means :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Only direct, forwarded and delay load dependencies are supported. Dynamic loading via &lt;code&gt;LoadLibrary&lt;/code&gt; are not supported (and probably won&#39;t ever be).&lt;/li&gt; 
 &lt;li&gt;Support of api set schema redirection since 1.5&lt;/li&gt; 
 &lt;li&gt;Checks between Api Imports and Exports.&lt;/li&gt; 
 &lt;li&gt;Minimal support of sxs private manifests search only.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Building is pretty straightforward. The only caveat is you need to select the &quot;Debug&quot; or &quot;Release&quot; configuration and &quot;x64&quot; or &quot;x86&quot; platform which may not be the default.&lt;/p&gt; 
&lt;h2&gt;Credits and licensing&lt;/h2&gt; 
&lt;p&gt;Special thanks to :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/processhacker2/processhacker&quot;&gt;ProcessHacker2&lt;/a&gt; for : 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;phlib&lt;/code&gt;, which does the heavy lifting for processing PE informations.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;peview&lt;/code&gt;, a powerful and lightweight PE informations viewer.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ButchersBoy/Dragablz&quot;&gt;Dragablz&lt;/a&gt; a C#/XAML library which implement dockable and dragable UI elements, and can recreate the &lt;a href=&quot;https://en.wikipedia.org/wiki/Multiple_document_interface&quot;&gt;MDI programming model&lt;/a&gt; in &lt;code&gt;WPF&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;@aionescu, @zodiacon and Quarkslab for their public infos on ApiSets schema.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thomaslevesque.com&quot;&gt;Thomas levesque&#39;s blog&lt;/a&gt; which pretty much solved all my &lt;code&gt;WPF&lt;/code&gt; programming issues. His &lt;a href=&quot;http://www.thomaslevesque.com/2009/08/04/wpf-automatically-sort-a-gridview-continued/&quot;&gt;&lt;code&gt;AutoGridSort&lt;/code&gt;&lt;/a&gt; is used in this project&lt;/li&gt; 
 &lt;li&gt;Venkatesh Mookkan &lt;a href=&quot;https://www.codeproject.com/Articles/170095/WPF-Custom-Control-FilterControl-for-ListBox-ListV&quot;&gt;for it&#39;s &lt;code&gt;FilterControl&lt;/code&gt; for ListView used in this project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nico/demumble&quot;&gt;demumble&lt;/a&gt; for demangling GCC symbols on Windows&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>bitwarden/server</title>
      <link>https://github.com/bitwarden/server</link>
      <description>&lt;p&gt;Bitwarden infrastructure/backend (API, database, Docker, etc).&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/bitwarden/brand/raw/main/screenshots/apps-combo-logo.png&quot; alt=&quot;Bitwarden&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/bitwarden/server/actions/workflows/build.yml?query=branch:main&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://github.com/bitwarden/server/actions/workflows/build.yml/badge.svg?branch=main&quot; alt=&quot;Github Workflow build on main&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/u/bitwarden/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/docker/pulls/bitwarden/api.svg?sanitize=true&quot; alt=&quot;DockerHub&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://gitter.im/bitwarden/Lobby&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://badges.gitter.im/bitwarden/Lobby.svg?sanitize=true&quot; alt=&quot;gitter chat&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;The Bitwarden Server project contains the APIs, database, and other core infrastructure items needed for the &quot;backend&quot; of all bitwarden client applications.&lt;/p&gt; 
&lt;p&gt;The server project is written in C# using .NET Core with ASP.NET Core. The database is written in T-SQL/SQL Server. The codebase can be developed, built, run, and deployed cross-platform on Windows, macOS, and Linux distributions.&lt;/p&gt; 
&lt;h2&gt;Developer Documentation&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://contributing.bitwarden.com/getting-started/server/guide&quot;&gt;Server Setup Guide&lt;/a&gt; in the &lt;a href=&quot;https://contributing.bitwarden.com/&quot;&gt;Contributing Documentation&lt;/a&gt; for build instructions, recommended tooling, code style tips, and lots of other great information to get you started.&lt;/p&gt; 
&lt;h2&gt;Deploy&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://hub.docker.com/u/bitwarden/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://i.imgur.com/SZc8JnH.png&quot; alt=&quot;docker&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;You can deploy Bitwarden using Docker containers on Windows, macOS, and Linux distributions. Use the provided PowerShell and Bash scripts to get started quickly. Find all of the Bitwarden images on &lt;a href=&quot;https://hub.docker.com/u/bitwarden/&quot;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Full documentation for deploying Bitwarden with Docker can be found in our help center at: &lt;a href=&quot;https://help.bitwarden.com/article/install-on-premise/&quot;&gt;https://help.bitwarden.com/article/install-on-premise/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docker.com/community-edition#/download&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;Docker Compose&lt;/a&gt; (already included with some Docker installations)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;These dependencies are free to use.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Linux &amp;amp; macOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -s -L -o bitwarden.sh \
    &quot;https://func.bitwarden.com/api/dl/?app=self-host&amp;amp;platform=linux&quot; \
    &amp;amp;&amp;amp; chmod +x bitwarden.sh
./bitwarden.sh install
./bitwarden.sh start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;Invoke-RestMethod -OutFile bitwarden.ps1 `
    -Uri &quot;https://func.bitwarden.com/api/dl/?app=self-host&amp;amp;platform=windows&quot;
.\bitwarden.ps1 -install
.\bitwarden.ps1 -start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;We&#39;re Hiring!&lt;/h2&gt; 
&lt;p&gt;Interested in contributing in a big way? Consider joining our team! We&#39;re hiring for many positions. Please take a look at our &lt;a href=&quot;https://bitwarden.com/careers/&quot;&gt;Careers page&lt;/a&gt; to see what opportunities are currently open as well as what it&#39;s like to work at Bitwarden.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Code contributions are welcome! Please commit any pull requests against the &lt;code&gt;main&lt;/code&gt; branch. Learn more about how to contribute by reading the &lt;a href=&quot;https://contributing.bitwarden.com/contributing/&quot;&gt;Contributing Guidelines&lt;/a&gt;. Check out the &lt;a href=&quot;https://contributing.bitwarden.com/&quot;&gt;Contributing Documentation&lt;/a&gt; for how to get started with your first contribution.&lt;/p&gt; 
&lt;p&gt;Security audits and feedback are welcome. Please open an issue or email us privately if the report is sensitive in nature. You can read our security policy in the &lt;a href=&quot;https://raw.githubusercontent.com/bitwarden/server/main/SECURITY.md&quot;&gt;&lt;code&gt;SECURITY.md&lt;/code&gt;&lt;/a&gt; file. We also run a program on &lt;a href=&quot;https://hackerone.com/bitwarden&quot;&gt;HackerOne&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;No grant of any rights in the trademarks, service marks, or logos of Bitwarden is made (except as may be necessary to comply with the notice requirements as applicable), and use of any Bitwarden trademarks must comply with &lt;a href=&quot;https://github.com/bitwarden/server/raw/main/TRADEMARK_GUIDELINES.md&quot;&gt;Bitwarden Trademark Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Dotnet-format&lt;/h3&gt; 
&lt;p&gt;Consider installing our git pre-commit hook for automatic formatting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git config --local core.hooksPath .git-hooks
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>2dust/v2rayN</title>
      <link>https://github.com/2dust/v2rayN</link>
      <description>&lt;p&gt;A GUI client for Windows, Linux and macOS, support Xray and sing-box and others&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2rayN&lt;/h1&gt; 
&lt;p&gt;A GUI client for Windows, Linux and macOS, support &lt;a href=&quot;https://github.com/XTLS/Xray-core&quot;&gt;Xray&lt;/a&gt; and &lt;a href=&quot;https://github.com/SagerNet/sing-box/releases&quot;&gt;sing-box&lt;/a&gt; and &lt;a href=&quot;https://github.com/2dust/v2rayN/wiki/List-of-supported-cores&quot;&gt;others&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/2dust/v2rayN/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/2dust/v2rayN&quot; alt=&quot;GitHub commit activity&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/2dust/v2rayn&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/2dust/v2rayn/badge&quot; alt=&quot;CodeFactor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/2dust/v2rayN/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/2dust/v2rayN/latest/total?logo=github&quot; alt=&quot;GitHub Releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/v2rayn&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Chat%20on-Telegram-brightgreen.svg?sanitize=true&quot; alt=&quot;Chat on Telegram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://github.com/2dust/v2rayN/wiki&quot;&gt;Wiki&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Telegram Channel&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/github_2dust&quot;&gt;github_2dust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/semantic-kernel</title>
      <link>https://github.com/microsoft/semantic-kernel</link>
      <description>&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python &lt;br&gt; &lt;a href=&quot;https://pypi.org/project/semantic-kernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/semantic-kernel&quot; alt=&quot;Python package&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.NET &lt;br&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.SemanticKernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.SemanticKernel&quot; alt=&quot;Nuget package&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/semantic-kernel&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1063152441819942922?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=d82679&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/overview/&quot;&gt;Semantic Kernel&lt;/a&gt; is an SDK that integrates Large Language Models (LLMs) like &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, and &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt; with conventional programming languages like C#, Python, and Java. Semantic Kernel achieves this by allowing you to define &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/plugins&quot;&gt;plugins&lt;/a&gt; that can be chained together in just a &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/chaining-functions?tabs=Csharp#using-the-runasync-method-to-simplify-your-code&quot;&gt;few lines of code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;What makes Semantic Kernel &lt;em&gt;special&lt;/em&gt;, however, is its ability to &lt;em&gt;automatically&lt;/em&gt; orchestrate plugins with AI. With Semantic Kernel &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/planner&quot;&gt;planners&lt;/a&gt;, you can ask an LLM to generate a plan that achieves a user&#39;s unique goal. Afterwards, Semantic Kernel will execute the plan for the user.&lt;/p&gt; 
&lt;p&gt;It provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;abstractions for AI services (such as chat, text to images, audio to text, etc.) and memory stores&lt;/li&gt; 
 &lt;li&gt;implementations of those abstractions for services from &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;, local models, and more, and for a multitude of vector databases, such as those from &lt;a href=&quot;https://docs.trychroma.com/getting-started&quot;&gt;Chroma&lt;/a&gt;, &lt;a href=&quot;https://qdrant.tech/&quot;&gt;Qdrant&lt;/a&gt;, &lt;a href=&quot;https://milvus.io/&quot;&gt;Milvus&lt;/a&gt;, and &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search&quot;&gt;Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;a common representation for &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/plugins&quot;&gt;plugins&lt;/a&gt;, which can then be orchestrated automatically by AI&lt;/li&gt; 
 &lt;li&gt;the ability to create such plugins from a multitude of sources, including from OpenAPI specifications, prompts, and arbitrary code written in the target language&lt;/li&gt; 
 &lt;li&gt;extensible support for prompt management and rendering, including built-in handling of common formats like Handlebars and Liquid&lt;/li&gt; 
 &lt;li&gt;and a wealth of functionality layered on top of these abstractions, such as filters for responsible AI, dependency injection integration, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Semantic Kernel is utilized by enterprises due to its flexibility, modularity and observability. Backed with security enhancing capabilities like telemetry support, and hooks and filters so you’ll feel confident you’re delivering responsible AI solutions at scale. Semantic Kernel was designed to be future proof, easily connecting your code to the latest AI models evolving with the technology as it advances. When new models are released, you’ll simply swap them out without needing to rewrite your entire codebase.&lt;/p&gt; 
&lt;h4&gt;Please star the repo to show your support for this project!&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/enterprise-ready.png&quot; alt=&quot;Enterprise-ready&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started with Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel SDK is available in C#, Python, and Java. To get started, choose your preferred language below. See the &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/supported-languages&quot;&gt;Feature Matrix&lt;/a&gt; for a breakdown of feature parity between our currently supported languages.&lt;/p&gt; 
&lt;table width=&quot;100%&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://user-images.githubusercontent.com/371009/230673036-fad1e8e6-5d48-49b1-a9c1-6f9834e0d165.png&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/README.md&quot;&gt;Using Semantic Kernel in C#&lt;/a&gt; &amp;nbsp;
     &lt;br&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg?sanitize=true&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/README.md&quot;&gt;Using Semantic Kernel in Python&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; height=&quot;52px&quot; src=&quot;https://upload.wikimedia.org/wikipedia/en/3/30/Java_programming_language_logo.svg?sanitize=true&quot; alt=&quot;Java logo&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/README.md&quot;&gt;Using Semantic Kernel in Java&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The quickest way to get started with the basics is to get an API key from either OpenAI or Azure OpenAI and to run one of the C#, Python, and Java console applications/scripts below.&lt;/p&gt; 
&lt;h3&gt;For C#:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-csharp&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;After installing the SDK, we advise you follow the steps and code detailed to write your first console app. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/dotnetmap.png&quot; alt=&quot;dotnetmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Python:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-python&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;You&#39;ll need to ensure that you toggle to Python in the Choose a programming language table at the top of the page. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/pythonmap.png&quot; alt=&quot;pythonmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Java:&lt;/h3&gt; 
&lt;p&gt;The Java code is in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository. See &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/BUILD.md&quot;&gt;semantic-kernel-java build&lt;/a&gt; for instructions on how to build and run the Java code.&lt;/p&gt; 
&lt;p&gt;Please file Java Semantic Kernel-specific issues in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Learning how to use Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The fastest way to learn how to use Semantic Kernel is with our C# and Python Jupyter notebooks. These notebooks demonstrate how to use Semantic Kernel with code snippets that you can run with a push of a button.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/notebooks/00-getting-started.ipynb&quot;&gt;Getting Started with C# notebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/samples/getting_started/00-getting-started.ipynb&quot;&gt;Getting Started with Python notebook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once you&#39;ve finished the getting started notebooks, you can then check out the main walkthroughs on our Learn site. Each sample comes with a completed C# and Python project that you can run locally.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;📖 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔌 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/detailed-samples&quot;&gt;Detailed Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/kernel&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Finally, refer to our API references for more details on the C# and Python APIs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/microsoft.semantickernel?view=semantic-kernel-dotnet&quot;&gt;C# API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/python/api/semantic-kernel/semantic_kernel?view=semantic-kernel-python&quot;&gt;Python API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Java API reference (coming soon)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Visual Studio Code extension: design semantic functions with ease&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel extension for Visual Studio Code makes it easy to design and test semantic functions. The extension provides an interface for designing semantic functions and allows you to test them with the push of a button with your existing models and data.&lt;/p&gt; 
&lt;h2&gt;Join the community&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions and suggestions to the SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; 
&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; 
&lt;p&gt;To learn more and get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Read the &lt;a href=&quot;https://aka.ms/sk/learn&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Learn how to &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/support/contributing&quot;&gt;contribute&lt;/a&gt; to the project&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/discussions&quot;&gt;GitHub discussions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Attend &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/COMMUNITY.md&quot;&gt;regular office hours and SK community events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the team on our &lt;a href=&quot;https://aka.ms/sk/blog&quot;&gt;blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Wall of Fame&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=microsoft/semantic-kernel&quot; alt=&quot;semantic-kernel contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>d2phap/ImageGlass</title>
      <link>https://github.com/d2phap/ImageGlass</link>
      <description>&lt;p&gt;🏞 A lightweight, versatile image viewer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ImageGlass - A lightweight, versatile image viewer&lt;/h1&gt; 
&lt;h3&gt; &lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/1/15/Orange_rectangle.svg?sanitize=true&quot; height=&quot;10&quot; width=&quot;100%&quot;&gt; 📢 Try out &lt;a href=&quot;https://github.com/d2phap/ImageGlass/releases/tag/9.2.1.324-beta&quot;&gt;Version 9.3 Beta 2&lt;/a&gt; and share your feedback! &lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/1/15/Orange_rectangle.svg?sanitize=true&quot; height=&quot;10&quot; width=&quot;100%&quot;&gt; &lt;/h3&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href=&quot;https://imageglass.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/www-imageglass.org-0099BC.svg?maxAge=3600&amp;amp;color=%233097B8&quot; alt=&quot;Website&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/d2phap/ImageGlass/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-GPLv3-green.svg?maxAge=3600&quot; alt=&quot;GPL Licence&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/imageglass&quot;&gt;&lt;img src=&quot;https://d322cqt584bo4o.cloudfront.net/imageglass/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/tWjbynH2X8&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/818852544859209748?label=chat&amp;amp;logo=discord&amp;amp;color=%233097B8&amp;amp;style=social&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/duongdieuphap&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/duongdieuphap?style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ImageGlass is a lightweight software designed for seamless viewing of images in a clean and intuitive interface. With support for over 80 common image formats including &lt;code&gt;WEBP&lt;/code&gt;, &lt;code&gt;GIF&lt;/code&gt;, &lt;code&gt;SVG&lt;/code&gt;, &lt;code&gt;PNG&lt;/code&gt;, &lt;code&gt;JXL&lt;/code&gt;, &lt;code&gt;HEIC&lt;/code&gt;,... ImageGlass also offers advanced features that cater to the needs of both regular users and designers, making it the excellent tool to enhance workflow efficiency.&lt;/p&gt; 
&lt;a href=&quot;https://www.imageglass.org/download&quot; target=&quot;_blank&quot; title=&quot;View screen shots&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/ImageGlass/releases/main/screenshots/v9.0/9.0_b1.webp&quot; alt=&quot;ImageGlass 9&quot; width=&quot;640&quot;&gt; &lt;/a&gt;
&lt;br&gt; 
&lt;h2&gt;📥 Download&lt;/h2&gt; 
&lt;a href=&quot;https://apps.microsoft.com/detail/9N33VZK3C7TH?launch=true&amp;amp;cid=GitHubRelease&amp;amp;mode=full&quot;&gt; &lt;img height=&quot;58&quot; src=&quot;https://github.com/d2phap/ImageGlass/assets/3154213/08a071bb-a6ae-420c-b53b-2317004570d4&quot;&gt; &lt;/a&gt; 
&lt;br&gt; 
&lt;a href=&quot;https://imageglass.org/download&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/d2phap/imageglass/total?color=%232A7C91&amp;amp;label=total%20downloads&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; 
&lt;a href=&quot;https://imageglass.org/download&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/d2phap/imageglass/latest/total?color=%232A7C91&amp;amp;label=latest%20version&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; 
&lt;h3&gt;ImageGlass on Microsoft Store!&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to support the development of ImageGlass, you can purchase ImageGlass from Microsoft Store.&lt;/li&gt; 
 &lt;li&gt;Alternatively, you can use the one-time donation from &lt;a href=&quot;https://github.com/sponsors/d2phap&quot;&gt;♥ GitHub Sponsor&lt;/a&gt;, then drop me a message in &lt;a href=&quot;https://discord.com/channels/818852544859209748/818852544859209751&quot;&gt;ImageGlass Discord&lt;/a&gt; or &lt;a href=&quot;https://imageglass.org/about&quot;&gt;email&lt;/a&gt;, and I will send the code shortly.&lt;/li&gt; 
 &lt;li&gt;ImageGlass Store provides the convenience of fast, easy installation onto all of your Windows devices along with fully automatic, behind-the-scenes updates with all the newest features, improvements, and fixes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Difference Between ImageGlass Classic and Store Release&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;ImageGlass Classic&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://apps.microsoft.com/detail/9N33VZK3C7TH?launch=true&amp;amp;cid=GitHubRelease&amp;amp;mode=full&quot;&gt;ImageGlass Store&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://imageglass.org/docs/features&quot;&gt;All features&lt;/a&gt;, &lt;br&gt;including Explorer sort order&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://imageglass.org/docs/app-configs&quot;&gt;Advanced configs&lt;br&gt;for Power users&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Distribution&lt;/td&gt; 
   &lt;td&gt;🌐&lt;a href=&quot;https://imageglass.org&quot;&gt;ImageGlass.org&lt;/a&gt; and various sources&lt;/td&gt; 
   &lt;td&gt;🛍️&lt;a href=&quot;https://apps.microsoft.com/detail/9N33VZK3C7TH?launch=true&amp;amp;cid=GitHubRelease&amp;amp;mode=full&quot;&gt;Microsoft Store&lt;/a&gt; only&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Price&lt;/td&gt; 
   &lt;td&gt;🆓 Free&lt;/td&gt; 
   &lt;td&gt;🪙Fee, with a 7-day trial&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Commercial use&lt;/td&gt; 
   &lt;td&gt;✅ Recommended to &lt;a href=&quot;https://imageglass.org/license&quot;&gt;register&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Auto-update&lt;/td&gt; 
   &lt;td&gt;❌ User-managed&lt;/td&gt; 
   &lt;td&gt;✅ Seamless auto-updates&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hotfix update&lt;/td&gt; 
   &lt;td&gt;❌ Available in official releases only&lt;/td&gt; 
   &lt;td&gt;✅ Available as soon as they are fixed&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🪁 System Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 10/11 64-bit, version 1809 (build 17763) or later&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&quot;&gt;.NET Desktop Runtime 8 (64-bit)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/webview2/#download-section&quot;&gt;WebView2 Runtime 64-bit v119.0.2151 or later&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;👨‍💻 Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 11&lt;/li&gt; 
 &lt;li&gt;Visual Studio 2022&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch contains the latest commits while the &lt;code&gt;prod&lt;/code&gt; branch is for the final stable release.&lt;/p&gt; 
&lt;h2&gt;🗝️ License&lt;/h2&gt; 
&lt;p&gt;ImageGlass is free for both personal and commercial use, except the Store version. If you intend to use ImageGlass at your place of business or for commercial purposes, it&#39;s recommended but not enforced to register at &lt;a href=&quot;https://imageglass.org/license&quot;&gt;https://imageglass.org/license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📚 Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/supported-formats&quot;&gt;Supported formats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/ui-shortcuts-reference&quot;&gt;Shortcuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/app-configs&quot;&gt;App configs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/command-line-utilities&quot;&gt;Command lines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/license&quot;&gt;EULA&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about ImageGlass, go to &lt;a href=&quot;https://imageglass.org/docs&quot;&gt;ImageGlass Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤼 Community and Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d2phap/ImageGlass/issues&quot;&gt;GitHub issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.io/imageglass&quot;&gt;ImageGlass Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/imageglass&quot;&gt;Google forum&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💖 This project needs your help!&lt;/h2&gt; 
&lt;p&gt;ImageGlass stands as an open-source, ad-free photo viewer, yet its development and upkeep demand resources. Your financial backing not only sustains this project but also fuels my motivation for crafting future releases.&lt;/p&gt; 
&lt;p&gt;Should you opt for &lt;strong&gt;GitHub Sponsor&lt;/strong&gt; or &lt;strong&gt;Patreon&lt;/strong&gt;, be sure to explore the tier-specific benefits on offer.&lt;/p&gt; 
&lt;p&gt;Your support is greatly appreciated!&lt;/p&gt; 
&lt;a href=&quot;https://github.com/sponsors/d2phap&quot; target=&quot;_blank&quot; title=&quot;Become a sponsor&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Github-@d2phap-24292e.svg?maxAge=3600&amp;amp;logo=github&quot; height=&quot;30&quot; alt=&quot;Become a sponsor&quot;&gt; &lt;/a&gt; 
&lt;a href=&quot;https://www.patreon.com/d2phap&quot; target=&quot;_blank&quot; title=&quot;Become a patron&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Patreon-@d2phap%20-e85b46.svg?maxAge=3600&amp;amp;logo=patreon&quot; height=&quot;30&quot; alt=&quot;Become a patron&quot;&gt; &lt;/a&gt; 
&lt;a href=&quot;https://www.paypal.me/d2phap&quot; target=&quot;_blank&quot; title=&quot;Buy me a beer?&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PayPal-Donate%20$10%20-0070ba.svg?maxAge=3600&amp;amp;logo=paypal&quot; height=&quot;30&quot; alt=&quot;Buy me a beer?&quot;&gt; &lt;/a&gt;</description>
    </item>
    
  </channel>
</rss>
